/*!
  * Application : bonziworld
  * Version     : v3.4.61_7700a6b_2021-11-03T17:30:42+00:00
  * Built       : 2021-11-03
  * Environment : production
!*/
var Sentry = (function (exports) {
    var extendStatics = function (d, b) {
        return (extendStatics =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
                function (d, b) {
                    d.__proto__ = b;
                }) ||
            function (d, b) {
                for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
            })(d, b);
    };
    function __extends(d, b) {
        function __() {
            this.constructor = d;
        }
        extendStatics(d, b), (d.prototype = null === b ? Object.create(b) : ((__.prototype = b.prototype), new __()));
    }
    var __assign = function () {
        return (__assign =
            Object.assign ||
            function (t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) for (var p in (s = arguments[i])) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
                return t;
            }).apply(this, arguments);
    };
    function __values(o) {
        var m = "function" == typeof Symbol && o[Symbol.iterator],
            i = 0;
        return m
            ? m.call(o)
            : {
                  next: function () {
                      return o && i >= o.length && (o = void 0), { value: o && o[i++], done: !o };
                  },
              };
    }
    function __read(o, n) {
        var m = "function" == typeof Symbol && o[Symbol.iterator];
        if (!m) return o;
        var r,
            e,
            i = m.call(o),
            ar = [];
        try {
            for (; (void 0 === n || n-- > 0) && !(r = i.next()).done; ) ar.push(r.value);
        } catch (error) {
            e = { error: error };
        } finally {
            try {
                r && !r.done && (m = i.return) && m.call(i);
            } finally {
                if (e) throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    var LogLevel, Severity, SpanStatus, Status;
    !(function (LogLevel) {
        (LogLevel[(LogLevel.None = 0)] = "None"), (LogLevel[(LogLevel.Error = 1)] = "Error"), (LogLevel[(LogLevel.Debug = 2)] = "Debug"), (LogLevel[(LogLevel.Verbose = 3)] = "Verbose");
    })(LogLevel || (LogLevel = {})),
        ((Severity = exports.Severity || (exports.Severity = {})).Fatal = "fatal"),
        (Severity.Error = "error"),
        (Severity.Warning = "warning"),
        (Severity.Log = "log"),
        (Severity.Info = "info"),
        (Severity.Debug = "debug"),
        (Severity.Critical = "critical"),
        (function (Severity) {
            Severity.fromString = function (level) {
                switch (level) {
                    case "debug":
                        return Severity.Debug;
                    case "info":
                        return Severity.Info;
                    case "warn":
                    case "warning":
                        return Severity.Warning;
                    case "error":
                        return Severity.Error;
                    case "fatal":
                        return Severity.Fatal;
                    case "critical":
                        return Severity.Critical;
                    case "log":
                    default:
                        return Severity.Log;
                }
            };
        })(exports.Severity || (exports.Severity = {})),
        (function (SpanStatus) {
            (SpanStatus.Ok = "ok"),
                (SpanStatus.DealineExceeded = "deadline_exceeded"),
                (SpanStatus.Unauthenticated = "unauthenticated"),
                (SpanStatus.PermissionDenied = "permission_denied"),
                (SpanStatus.NotFound = "not_found"),
                (SpanStatus.ResourceExhausted = "resource_exhausted"),
                (SpanStatus.InvalidArgument = "invalid_argument"),
                (SpanStatus.Unimplemented = "unimplemented"),
                (SpanStatus.Unavailable = "unavailable"),
                (SpanStatus.InternalError = "internal_error"),
                (SpanStatus.UnknownError = "unknown_error"),
                (SpanStatus.Cancelled = "cancelled"),
                (SpanStatus.AlreadyExists = "already_exists"),
                (SpanStatus.FailedPrecondition = "failed_precondition"),
                (SpanStatus.Aborted = "aborted"),
                (SpanStatus.OutOfRange = "out_of_range"),
                (SpanStatus.DataLoss = "data_loss");
        })(SpanStatus || (SpanStatus = {})),
        (function (SpanStatus) {
            SpanStatus.fromHttpCode = function (httpStatus) {
                if (httpStatus < 400) return SpanStatus.Ok;
                if (httpStatus >= 400 && httpStatus < 500)
                    switch (httpStatus) {
                        case 401:
                            return SpanStatus.Unauthenticated;
                        case 403:
                            return SpanStatus.PermissionDenied;
                        case 404:
                            return SpanStatus.NotFound;
                        case 409:
                            return SpanStatus.AlreadyExists;
                        case 413:
                            return SpanStatus.FailedPrecondition;
                        case 429:
                            return SpanStatus.ResourceExhausted;
                        default:
                            return SpanStatus.InvalidArgument;
                    }
                if (httpStatus >= 500 && httpStatus < 600)
                    switch (httpStatus) {
                        case 501:
                            return SpanStatus.Unimplemented;
                        case 503:
                            return SpanStatus.Unavailable;
                        case 504:
                            return SpanStatus.DealineExceeded;
                        default:
                            return SpanStatus.InternalError;
                    }
                return SpanStatus.UnknownError;
            };
        })(SpanStatus || (SpanStatus = {})),
        ((Status = exports.Status || (exports.Status = {})).Unknown = "unknown"),
        (Status.Skipped = "skipped"),
        (Status.Success = "success"),
        (Status.RateLimit = "rate_limit"),
        (Status.Invalid = "invalid"),
        (Status.Failed = "failed"),
        (function (Status) {
            Status.fromHttpCode = function (code) {
                return code >= 200 && code < 300 ? Status.Success : 429 === code ? Status.RateLimit : code >= 400 && code < 500 ? Status.Invalid : code >= 500 ? Status.Failed : Status.Unknown;
            };
        })(exports.Status || (exports.Status = {}));
    var setPrototypeOf =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array
            ? function (obj, proto) {
                  return (obj.__proto__ = proto), obj;
              }
            : function (obj, proto) {
                  for (var prop in proto) obj.hasOwnProperty(prop) || (obj[prop] = proto[prop]);
                  return obj;
              });
    var SentryError = (function (_super) {
        function SentryError(message) {
            var _newTarget = this.constructor,
                _this = _super.call(this, message) || this;
            return (_this.message = message), (_this.name = _newTarget.prototype.constructor.name), setPrototypeOf(_this, _newTarget.prototype), _this;
        }
        return __extends(SentryError, _super), SentryError;
    })(Error);
    function isError(wat) {
        switch (Object.prototype.toString.call(wat)) {
            case "[object Error]":
            case "[object Exception]":
            case "[object DOMException]":
                return !0;
            default:
                return isInstanceOf(wat, Error);
        }
    }
    function isErrorEvent(wat) {
        return "[object ErrorEvent]" === Object.prototype.toString.call(wat);
    }
    function isDOMError(wat) {
        return "[object DOMError]" === Object.prototype.toString.call(wat);
    }
    function isString(wat) {
        return "[object String]" === Object.prototype.toString.call(wat);
    }
    function isPrimitive(wat) {
        return null === wat || ("object" != typeof wat && "function" != typeof wat);
    }
    function isPlainObject(wat) {
        return "[object Object]" === Object.prototype.toString.call(wat);
    }
    function isEvent(wat) {
        return "undefined" != typeof Event && isInstanceOf(wat, Event);
    }
    function isElement(wat) {
        return "undefined" != typeof Element && isInstanceOf(wat, Element);
    }
    function isThenable(wat) {
        return Boolean(wat && wat.then && "function" == typeof wat.then);
    }
    function isInstanceOf(wat, base) {
        try {
            return wat instanceof base;
        } catch (_e) {
            return !1;
        }
    }
    function isNodeEnv() {
        return "[object process]" === Object.prototype.toString.call("undefined" != typeof process ? process : 0);
    }
    var fallbackGlobalObject = {};
    function getGlobalObject() {
        return isNodeEnv() ? global : "undefined" != typeof window ? window : "undefined" != typeof self ? self : fallbackGlobalObject;
    }
    function uuid4() {
        var global = getGlobalObject(),
            crypto = global.crypto || global.msCrypto;
        if (void 0 !== crypto && crypto.getRandomValues) {
            var arr = new Uint16Array(8);
            crypto.getRandomValues(arr), (arr[3] = (4095 & arr[3]) | 16384), (arr[4] = (16383 & arr[4]) | 32768);
            var pad = function (num) {
                for (var v = num.toString(16); v.length < 4; ) v = "0" + v;
                return v;
            };
            return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);
        }
        return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function (c) {
            var r = (16 * Math.random()) | 0;
            return ("x" === c ? r : (3 & r) | 8).toString(16);
        });
    }
    function parseUrl(url) {
        if (!url) return {};
        var match = url.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
        if (!match) return {};
        var query = match[6] || "",
            fragment = match[8] || "";
        return { host: match[4], path: match[5], protocol: match[2], relative: match[5] + query + fragment };
    }
    function getEventDescription(event) {
        if (event.message) return event.message;
        if (event.exception && event.exception.values && event.exception.values[0]) {
            var exception = event.exception.values[0];
            return exception.type && exception.value ? exception.type + ": " + exception.value : exception.type || exception.value || event.event_id || "<unknown>";
        }
        return event.event_id || "<unknown>";
    }
    function consoleSandbox(callback) {
        var global = getGlobalObject();
        if (!("console" in global)) return callback();
        var originalConsole = global.console,
            wrappedLevels = {};
        ["debug", "info", "warn", "error", "log", "assert"].forEach(function (level) {
            level in global.console && originalConsole[level].__sentry_original__ && ((wrappedLevels[level] = originalConsole[level]), (originalConsole[level] = originalConsole[level].__sentry_original__));
        });
        var result = callback();
        return (
            Object.keys(wrappedLevels).forEach(function (level) {
                originalConsole[level] = wrappedLevels[level];
            }),
            result
        );
    }
    function addExceptionTypeValue(event, value, type) {
        (event.exception = event.exception || {}),
            (event.exception.values = event.exception.values || []),
            (event.exception.values[0] = event.exception.values[0] || {}),
            (event.exception.values[0].value = event.exception.values[0].value || value || ""),
            (event.exception.values[0].type = event.exception.values[0].type || type || "Error");
    }
    function addExceptionMechanism(event, mechanism) {
        void 0 === mechanism && (mechanism = {});
        try {
            (event.exception.values[0].mechanism = event.exception.values[0].mechanism || {}),
                Object.keys(mechanism).forEach(function (key) {
                    event.exception.values[0].mechanism[key] = mechanism[key];
                });
        } catch (_oO) {}
    }
    function htmlTreeAsString(elem) {
        try {
            for (
                var currentElem = elem, out = [], height = 0, len = 0, sepLength = " > ".length, nextStr = void 0;
                currentElem && height++ < 5 && !("html" === (nextStr = _htmlElementAsString(currentElem)) || (height > 1 && len + out.length * sepLength + nextStr.length >= 80));

            )
                out.push(nextStr), (len += nextStr.length), (currentElem = currentElem.parentNode);
            return out.reverse().join(" > ");
        } catch (_oO) {
            return "<unknown>";
        }
    }
    function _htmlElementAsString(el) {
        var className,
            classes,
            key,
            attr,
            i,
            elem = el,
            out = [];
        if (!elem || !elem.tagName) return "";
        if ((out.push(elem.tagName.toLowerCase()), elem.id && out.push("#" + elem.id), (className = elem.className) && isString(className))) for (classes = className.split(/\s+/), i = 0; i < classes.length; i++) out.push("." + classes[i]);
        var attrWhitelist = ["type", "name", "title", "alt"];
        for (i = 0; i < attrWhitelist.length; i++) (key = attrWhitelist[i]), (attr = elem.getAttribute(key)) && out.push("[" + key + '="' + attr + '"]');
        return out.join("");
    }
    function timestampWithMs() {
        return new Date().getTime() / 1e3;
    }
    var defaultRetryAfter = 6e4;
    function parseRetryAfterHeader(now, header) {
        if (!header) return defaultRetryAfter;
        var headerDelay = parseInt("" + header, 10);
        if (!isNaN(headerDelay)) return 1e3 * headerDelay;
        var headerDate = Date.parse("" + header);
        return isNaN(headerDate) ? defaultRetryAfter : headerDate - now;
    }
    var defaultFunctionName = "<anonymous>";
    function getFunctionName(fn) {
        try {
            return (fn && "function" == typeof fn && fn.name) || defaultFunctionName;
        } catch (e) {
            return defaultFunctionName;
        }
    }
    var global$1 = getGlobalObject(),
        PREFIX = "Sentry Logger ",
        Logger = (function () {
            function Logger() {
                this._enabled = !1;
            }
            return (
                (Logger.prototype.disable = function () {
                    this._enabled = !1;
                }),
                (Logger.prototype.enable = function () {
                    this._enabled = !0;
                }),
                (Logger.prototype.log = function () {
                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    this._enabled &&
                        consoleSandbox(function () {
                            global$1.console.log(PREFIX + "[Log]: " + args.join(" "));
                        });
                }),
                (Logger.prototype.warn = function () {
                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    this._enabled &&
                        consoleSandbox(function () {
                            global$1.console.warn(PREFIX + "[Warn]: " + args.join(" "));
                        });
                }),
                (Logger.prototype.error = function () {
                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    this._enabled &&
                        consoleSandbox(function () {
                            global$1.console.error(PREFIX + "[Error]: " + args.join(" "));
                        });
                }),
                Logger
            );
        })();
    global$1.__SENTRY__ = global$1.__SENTRY__ || {};
    var States,
        logger = global$1.__SENTRY__.logger || (global$1.__SENTRY__.logger = new Logger()),
        Memo = (function () {
            function Memo() {
                (this._hasWeakSet = "function" == typeof WeakSet), (this._inner = this._hasWeakSet ? new WeakSet() : []);
            }
            return (
                (Memo.prototype.memoize = function (obj) {
                    if (this._hasWeakSet) return !!this._inner.has(obj) || (this._inner.add(obj), !1);
                    for (var i = 0; i < this._inner.length; i++) {
                        if (this._inner[i] === obj) return !0;
                    }
                    return this._inner.push(obj), !1;
                }),
                (Memo.prototype.unmemoize = function (obj) {
                    if (this._hasWeakSet) this._inner.delete(obj);
                    else
                        for (var i = 0; i < this._inner.length; i++)
                            if (this._inner[i] === obj) {
                                this._inner.splice(i, 1);
                                break;
                            }
                }),
                Memo
            );
        })();
    function truncate(str, max) {
        return void 0 === max && (max = 0), "string" != typeof str || 0 === max ? str : str.length <= max ? str : str.substr(0, max) + "...";
    }
    function safeJoin(input, delimiter) {
        if (!Array.isArray(input)) return "";
        for (var output = [], i = 0; i < input.length; i++) {
            var value = input[i];
            try {
                output.push(String(value));
            } catch (e) {
                output.push("[value cannot be serialized]");
            }
        }
        return output.join(delimiter);
    }
    function isMatchingPattern(value, pattern) {
        return (wat = pattern), "[object RegExp]" === Object.prototype.toString.call(wat) ? pattern.test(value) : "string" == typeof pattern && -1 !== value.indexOf(pattern);
        var wat;
    }
    function fill(source, name, replacement) {
        if (name in source) {
            var original = source[name],
                wrapped = replacement(original);
            if ("function" == typeof wrapped)
                try {
                    (wrapped.prototype = wrapped.prototype || {}), Object.defineProperties(wrapped, { __sentry_original__: { enumerable: !1, value: original } });
                } catch (_Oo) {}
            source[name] = wrapped;
        }
    }
    function getWalkSource(value) {
        if (isError(value)) {
            var error = value,
                err = { message: error.message, name: error.name, stack: error.stack };
            for (var i in error) Object.prototype.hasOwnProperty.call(error, i) && (err[i] = error[i]);
            return err;
        }
        if (isEvent(value)) {
            var event_1 = value,
                source = {};
            source.type = event_1.type;
            try {
                source.target = isElement(event_1.target) ? htmlTreeAsString(event_1.target) : Object.prototype.toString.call(event_1.target);
            } catch (_oO) {
                source.target = "<unknown>";
            }
            try {
                source.currentTarget = isElement(event_1.currentTarget) ? htmlTreeAsString(event_1.currentTarget) : Object.prototype.toString.call(event_1.currentTarget);
            } catch (_oO) {
                source.currentTarget = "<unknown>";
            }
            for (var i in ("undefined" != typeof CustomEvent && isInstanceOf(value, CustomEvent) && (source.detail = event_1.detail), event_1)) Object.prototype.hasOwnProperty.call(event_1, i) && (source[i] = event_1);
            return source;
        }
        return value;
    }
    function jsonSize(value) {
        return (function (value) {
            return ~-encodeURI(value).split(/%..|./).length;
        })(JSON.stringify(value));
    }
    function normalizeValue(value, key) {
        return "domain" === key && value && "object" == typeof value && value._events
            ? "[Domain]"
            : "domainEmitter" === key
            ? "[DomainEmitter]"
            : "undefined" != typeof global && value === global
            ? "[Global]"
            : "undefined" != typeof window && value === window
            ? "[Window]"
            : "undefined" != typeof document && value === document
            ? "[Document]"
            : isPlainObject((wat = value)) && "nativeEvent" in wat && "preventDefault" in wat && "stopPropagation" in wat
            ? "[SyntheticEvent]"
            : "number" == typeof value && value != value
            ? "[NaN]"
            : void 0 === value
            ? "[undefined]"
            : "function" == typeof value
            ? "[Function: " + getFunctionName(value) + "]"
            : value;
        var wat;
    }
    function walk(key, value, depth, memo) {
        if ((void 0 === depth && (depth = 1 / 0), void 0 === memo && (memo = new Memo()), 0 === depth))
            return (function (value) {
                var type = Object.prototype.toString.call(value);
                if ("string" == typeof value) return value;
                if ("[object Object]" === type) return "[Object]";
                if ("[object Array]" === type) return "[Array]";
                var normalized = normalizeValue(value);
                return isPrimitive(normalized) ? normalized : type;
            })(value);
        if (null !== value && void 0 !== value && "function" == typeof value.toJSON) return value.toJSON();
        var normalized = normalizeValue(value, key);
        if (isPrimitive(normalized)) return normalized;
        var source = getWalkSource(value),
            acc = Array.isArray(value) ? [] : {};
        if (memo.memoize(value)) return "[Circular ~]";
        for (var innerKey in source) Object.prototype.hasOwnProperty.call(source, innerKey) && (acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo));
        return memo.unmemoize(value), acc;
    }
    function normalize(input, depth) {
        try {
            return JSON.parse(
                JSON.stringify(input, function (key, value) {
                    return walk(key, value, depth);
                })
            );
        } catch (_oO) {
            return "**non-serializable**";
        }
    }
    !(function (States) {
        (States.PENDING = "PENDING"), (States.RESOLVED = "RESOLVED"), (States.REJECTED = "REJECTED");
    })(States || (States = {}));
    var SyncPromise = (function () {
            function SyncPromise(executor) {
                var _this = this;
                (this._state = States.PENDING),
                    (this._handlers = []),
                    (this._resolve = function (value) {
                        _this._setResult(States.RESOLVED, value);
                    }),
                    (this._reject = function (reason) {
                        _this._setResult(States.REJECTED, reason);
                    }),
                    (this._setResult = function (state, value) {
                        _this._state === States.PENDING && (isThenable(value) ? value.then(_this._resolve, _this._reject) : ((_this._state = state), (_this._value = value), _this._executeHandlers()));
                    }),
                    (this._attachHandler = function (handler) {
                        (_this._handlers = _this._handlers.concat(handler)), _this._executeHandlers();
                    }),
                    (this._executeHandlers = function () {
                        _this._state !== States.PENDING &&
                            (_this._state === States.REJECTED
                                ? _this._handlers.forEach(function (handler) {
                                      handler.onrejected && handler.onrejected(_this._value);
                                  })
                                : _this._handlers.forEach(function (handler) {
                                      handler.onfulfilled && handler.onfulfilled(_this._value);
                                  }),
                            (_this._handlers = []));
                    });
                try {
                    executor(this._resolve, this._reject);
                } catch (e) {
                    this._reject(e);
                }
            }
            return (
                (SyncPromise.prototype.toString = function () {
                    return "[object SyncPromise]";
                }),
                (SyncPromise.resolve = function (value) {
                    return new SyncPromise(function (resolve) {
                        resolve(value);
                    });
                }),
                (SyncPromise.reject = function (reason) {
                    return new SyncPromise(function (_, reject) {
                        reject(reason);
                    });
                }),
                (SyncPromise.all = function (collection) {
                    return new SyncPromise(function (resolve, reject) {
                        if (Array.isArray(collection))
                            if (0 !== collection.length) {
                                var counter = collection.length,
                                    resolvedCollection = [];
                                collection.forEach(function (item, index) {
                                    SyncPromise.resolve(item)
                                        .then(function (value) {
                                            (resolvedCollection[index] = value), 0 === (counter -= 1) && resolve(resolvedCollection);
                                        })
                                        .then(null, reject);
                                });
                            } else resolve([]);
                        else reject(new TypeError("Promise.all requires an array as input."));
                    });
                }),
                (SyncPromise.prototype.then = function (onfulfilled, onrejected) {
                    var _this = this;
                    return new SyncPromise(function (resolve, reject) {
                        _this._attachHandler({
                            onfulfilled: function (result) {
                                if (onfulfilled)
                                    try {
                                        return void resolve(onfulfilled(result));
                                    } catch (e) {
                                        return void reject(e);
                                    }
                                else resolve(result);
                            },
                            onrejected: function (reason) {
                                if (onrejected)
                                    try {
                                        return void resolve(onrejected(reason));
                                    } catch (e) {
                                        return void reject(e);
                                    }
                                else reject(reason);
                            },
                        });
                    });
                }),
                (SyncPromise.prototype.catch = function (onrejected) {
                    return this.then(function (val) {
                        return val;
                    }, onrejected);
                }),
                (SyncPromise.prototype.finally = function (onfinally) {
                    var _this = this;
                    return new SyncPromise(function (resolve, reject) {
                        var val, isRejected;
                        return _this
                            .then(
                                function (value) {
                                    (isRejected = !1), (val = value), onfinally && onfinally();
                                },
                                function (reason) {
                                    (isRejected = !0), (val = reason), onfinally && onfinally();
                                }
                            )
                            .then(function () {
                                isRejected ? reject(val) : resolve(val);
                            });
                    });
                }),
                SyncPromise
            );
        })(),
        PromiseBuffer = (function () {
            function PromiseBuffer(_limit) {
                (this._limit = _limit), (this._buffer = []);
            }
            return (
                (PromiseBuffer.prototype.isReady = function () {
                    return void 0 === this._limit || this.length() < this._limit;
                }),
                (PromiseBuffer.prototype.add = function (task) {
                    var _this = this;
                    return this.isReady()
                        ? (-1 === this._buffer.indexOf(task) && this._buffer.push(task),
                          task
                              .then(function () {
                                  return _this.remove(task);
                              })
                              .then(null, function () {
                                  return _this.remove(task).then(null, function () {});
                              }),
                          task)
                        : SyncPromise.reject(new SentryError("Not adding Promise due to buffer limit reached."));
                }),
                (PromiseBuffer.prototype.remove = function (task) {
                    return this._buffer.splice(this._buffer.indexOf(task), 1)[0];
                }),
                (PromiseBuffer.prototype.length = function () {
                    return this._buffer.length;
                }),
                (PromiseBuffer.prototype.drain = function (timeout) {
                    var _this = this;
                    return new SyncPromise(function (resolve) {
                        var capturedSetTimeout = setTimeout(function () {
                            timeout && timeout > 0 && resolve(!1);
                        }, timeout);
                        SyncPromise.all(_this._buffer)
                            .then(function () {
                                clearTimeout(capturedSetTimeout), resolve(!0);
                            })
                            .then(null, function () {
                                resolve(!0);
                            });
                    });
                }),
                PromiseBuffer
            );
        })();
    function supportsFetch() {
        if (!("fetch" in getGlobalObject())) return !1;
        try {
            return new Headers(), new Request(""), new Response(), !0;
        } catch (e) {
            return !1;
        }
    }
    function isNativeFetch(func) {
        return func && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(func.toString());
    }
    var lastHref,
        global$2 = getGlobalObject(),
        handlers = {},
        instrumented = {};
    function instrument(type) {
        if (!instrumented[type])
            switch (((instrumented[type] = !0), type)) {
                case "console":
                    !(function () {
                        if (!("console" in global$2)) return;
                        ["debug", "info", "warn", "error", "log", "assert"].forEach(function (level) {
                            level in global$2.console &&
                                fill(global$2.console, level, function (originalConsoleLevel) {
                                    return function () {
                                        for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                        triggerHandlers("console", { args: args, level: level }), originalConsoleLevel && Function.prototype.apply.call(originalConsoleLevel, global$2.console, args);
                                    };
                                });
                        });
                    })();
                    break;
                case "dom":
                    !(function () {
                        if (!("document" in global$2)) return;
                        global$2.document.addEventListener("click", domEventHandler("click", triggerHandlers.bind(null, "dom")), !1),
                            global$2.document.addEventListener("keypress", keypressEventHandler(triggerHandlers.bind(null, "dom")), !1),
                            ["EventTarget", "Node"].forEach(function (target) {
                                var proto = global$2[target] && global$2[target].prototype;
                                proto &&
                                    proto.hasOwnProperty &&
                                    proto.hasOwnProperty("addEventListener") &&
                                    (fill(proto, "addEventListener", function (original) {
                                        return function (eventName, fn, options) {
                                            return (
                                                fn && fn.handleEvent
                                                    ? ("click" === eventName &&
                                                          fill(fn, "handleEvent", function (innerOriginal) {
                                                              return function (event) {
                                                                  return domEventHandler("click", triggerHandlers.bind(null, "dom"))(event), innerOriginal.call(this, event);
                                                              };
                                                          }),
                                                      "keypress" === eventName &&
                                                          fill(fn, "handleEvent", function (innerOriginal) {
                                                              return function (event) {
                                                                  return keypressEventHandler(triggerHandlers.bind(null, "dom"))(event), innerOriginal.call(this, event);
                                                              };
                                                          }))
                                                    : ("click" === eventName && domEventHandler("click", triggerHandlers.bind(null, "dom"), !0)(this),
                                                      "keypress" === eventName && keypressEventHandler(triggerHandlers.bind(null, "dom"))(this)),
                                                original.call(this, eventName, fn, options)
                                            );
                                        };
                                    }),
                                    fill(proto, "removeEventListener", function (original) {
                                        return function (eventName, fn, options) {
                                            var callback = fn;
                                            try {
                                                callback = callback && (callback.__sentry_wrapped__ || callback);
                                            } catch (e) {}
                                            return original.call(this, eventName, callback, options);
                                        };
                                    }));
                            });
                    })();
                    break;
                case "xhr":
                    !(function () {
                        if (!("XMLHttpRequest" in global$2)) return;
                        var xhrproto = XMLHttpRequest.prototype;
                        fill(xhrproto, "open", function (originalOpen) {
                            return function () {
                                for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                var url = args[1];
                                return (
                                    (this.__sentry_xhr__ = { method: isString(args[0]) ? args[0].toUpperCase() : args[0], url: args[1] }),
                                    isString(url) && "POST" === this.__sentry_xhr__.method && url.match(/sentry_key/) && (this.__sentry_own_request__ = !0),
                                    originalOpen.apply(this, args)
                                );
                            };
                        }),
                            fill(xhrproto, "send", function (originalSend) {
                                return function () {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    var xhr = this,
                                        commonHandlerData = { args: args, startTimestamp: Date.now(), xhr: xhr };
                                    function onreadystatechangeHandler() {
                                        if (4 === xhr.readyState) {
                                            try {
                                                xhr.__sentry_xhr__ && (xhr.__sentry_xhr__.status_code = xhr.status);
                                            } catch (e) {}
                                            triggerHandlers("xhr", __assign({}, commonHandlerData, { endTimestamp: Date.now() }));
                                        }
                                    }
                                    return (
                                        triggerHandlers("xhr", __assign({}, commonHandlerData)),
                                        "onreadystatechange" in xhr && "function" == typeof xhr.onreadystatechange
                                            ? fill(xhr, "onreadystatechange", function (original) {
                                                  return function () {
                                                      for (var readyStateArgs = [], _i = 0; _i < arguments.length; _i++) readyStateArgs[_i] = arguments[_i];
                                                      return onreadystatechangeHandler(), original.apply(xhr, readyStateArgs);
                                                  };
                                              })
                                            : (xhr.onreadystatechange = onreadystatechangeHandler),
                                        originalSend.apply(this, args)
                                    );
                                };
                            });
                    })();
                    break;
                case "fetch":
                    !(function () {
                        if (
                            !(function () {
                                if (!supportsFetch()) return !1;
                                var global = getGlobalObject();
                                if (isNativeFetch(global.fetch)) return !0;
                                var result = !1,
                                    doc = global.document;
                                if (doc) {
                                    var sandbox = doc.createElement("iframe");
                                    sandbox.hidden = !0;
                                    try {
                                        doc.head.appendChild(sandbox), sandbox.contentWindow && sandbox.contentWindow.fetch && (result = isNativeFetch(sandbox.contentWindow.fetch)), doc.head.removeChild(sandbox);
                                    } catch (err) {
                                        logger.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", err);
                                    }
                                }
                                return result;
                            })()
                        )
                            return;
                        fill(global$2, "fetch", function (originalFetch) {
                            return function () {
                                for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                var commonHandlerData = {
                                    args: args,
                                    fetchData: {
                                        method: (function (fetchArgs) {
                                            void 0 === fetchArgs && (fetchArgs = []);
                                            if ("Request" in global$2 && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) return String(fetchArgs[0].method).toUpperCase();
                                            if (fetchArgs[1] && fetchArgs[1].method) return String(fetchArgs[1].method).toUpperCase();
                                            return "GET";
                                        })(args),
                                        url: (function (fetchArgs) {
                                            void 0 === fetchArgs && (fetchArgs = []);
                                            if ("string" == typeof fetchArgs[0]) return fetchArgs[0];
                                            if ("Request" in global$2 && isInstanceOf(fetchArgs[0], Request)) return fetchArgs[0].url;
                                            return String(fetchArgs[0]);
                                        })(args),
                                    },
                                    startTimestamp: Date.now(),
                                };
                                return (
                                    triggerHandlers("fetch", __assign({}, commonHandlerData)),
                                    originalFetch.apply(global$2, args).then(
                                        function (response) {
                                            return triggerHandlers("fetch", __assign({}, commonHandlerData, { endTimestamp: Date.now(), response: response })), response;
                                        },
                                        function (error) {
                                            throw (triggerHandlers("fetch", __assign({}, commonHandlerData, { endTimestamp: Date.now(), error: error })), error);
                                        }
                                    )
                                );
                            };
                        });
                    })();
                    break;
                case "history":
                    !(function () {
                        if (
                            ((global = getGlobalObject()),
                            (chrome = global.chrome),
                            (isChromePackagedApp = chrome && chrome.app && chrome.app.runtime),
                            (hasHistoryApi = "history" in global && !!global.history.pushState && !!global.history.replaceState),
                            isChromePackagedApp || !hasHistoryApi)
                        )
                            return;
                        var global, chrome, isChromePackagedApp, hasHistoryApi;
                        var oldOnPopState = global$2.onpopstate;
                        function historyReplacementFunction(originalHistoryFunction) {
                            return function () {
                                for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                var url = args.length > 2 ? args[2] : void 0;
                                if (url) {
                                    var from = lastHref,
                                        to = String(url);
                                    (lastHref = to), triggerHandlers("history", { from: from, to: to });
                                }
                                return originalHistoryFunction.apply(this, args);
                            };
                        }
                        (global$2.onpopstate = function () {
                            for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                            var to = global$2.location.href,
                                from = lastHref;
                            if (((lastHref = to), triggerHandlers("history", { from: from, to: to }), oldOnPopState)) return oldOnPopState.apply(this, args);
                        }),
                            fill(global$2.history, "pushState", historyReplacementFunction),
                            fill(global$2.history, "replaceState", historyReplacementFunction);
                    })();
                    break;
                default:
                    logger.warn("unknown instrumentation type:", type);
            }
    }
    function addInstrumentationHandler(handler) {
        handler && "string" == typeof handler.type && "function" == typeof handler.callback && ((handlers[handler.type] = handlers[handler.type] || []), handlers[handler.type].push(handler.callback), instrument(handler.type));
    }
    function triggerHandlers(type, data) {
        var e_1, _a;
        if (type && handlers[type])
            try {
                for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var handler = _c.value;
                    try {
                        handler(data);
                    } catch (e) {
                        logger.error("Error while triggering instrumentation handler.\nType: " + type + "\nName: " + getFunctionName(handler) + "\nError: " + e);
                    }
                }
            } catch (e_1_1) {
                e_1 = { error: e_1_1 };
            } finally {
                try {
                    _c && !_c.done && (_a = _b.return) && _a.call(_b);
                } finally {
                    if (e_1) throw e_1.error;
                }
            }
    }
    var keypressTimeout,
        lastCapturedEvent,
        debounceDuration = 1e3,
        debounceTimer = 0;
    function domEventHandler(name, handler, debounce) {
        return (
            void 0 === debounce && (debounce = !1),
            function (event) {
                (keypressTimeout = void 0),
                    event &&
                        lastCapturedEvent !== event &&
                        ((lastCapturedEvent = event),
                        debounceTimer && clearTimeout(debounceTimer),
                        debounce
                            ? (debounceTimer = setTimeout(function () {
                                  handler({ event: event, name: name });
                              }))
                            : handler({ event: event, name: name }));
            }
        );
    }
    function keypressEventHandler(handler) {
        return function (event) {
            var target;
            try {
                target = event.target;
            } catch (e) {
                return;
            }
            var tagName = target && target.tagName;
            tagName &&
                ("INPUT" === tagName || "TEXTAREA" === tagName || target.isContentEditable) &&
                (keypressTimeout || domEventHandler("input", handler)(event),
                clearTimeout(keypressTimeout),
                (keypressTimeout = setTimeout(function () {
                    keypressTimeout = void 0;
                }, debounceDuration)));
        };
    }
    var DSN_REGEX = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/,
        Dsn = (function () {
            function Dsn(from) {
                "string" == typeof from ? this._fromString(from) : this._fromComponents(from), this._validate();
            }
            return (
                (Dsn.prototype.toString = function (withPassword) {
                    void 0 === withPassword && (withPassword = !1);
                    var _a = this,
                        host = _a.host,
                        path = _a.path,
                        pass = _a.pass,
                        port = _a.port,
                        projectId = _a.projectId;
                    return _a.protocol + "://" + _a.user + (withPassword && pass ? ":" + pass : "") + "@" + host + (port ? ":" + port : "") + "/" + (path ? path + "/" : path) + projectId;
                }),
                (Dsn.prototype._fromString = function (str) {
                    var match = DSN_REGEX.exec(str);
                    if (!match) throw new SentryError("Invalid Dsn");
                    var _a = __read(match.slice(1), 6),
                        protocol = _a[0],
                        user = _a[1],
                        _b = _a[2],
                        pass = void 0 === _b ? "" : _b,
                        host = _a[3],
                        _c = _a[4],
                        port = void 0 === _c ? "" : _c,
                        path = "",
                        projectId = _a[5],
                        split = projectId.split("/");
                    split.length > 1 && ((path = split.slice(0, -1).join("/")), (projectId = split.pop())), this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });
                }),
                (Dsn.prototype._fromComponents = function (components) {
                    (this.protocol = components.protocol),
                        (this.user = components.user),
                        (this.pass = components.pass || ""),
                        (this.host = components.host),
                        (this.port = components.port || ""),
                        (this.path = components.path || ""),
                        (this.projectId = components.projectId);
                }),
                (Dsn.prototype._validate = function () {
                    var _this = this;
                    if (
                        (["protocol", "user", "host", "projectId"].forEach(function (component) {
                            if (!_this[component]) throw new SentryError("Invalid Dsn");
                        }),
                        "http" !== this.protocol && "https" !== this.protocol)
                    )
                        throw new SentryError("Invalid Dsn");
                    if (this.port && isNaN(parseInt(this.port, 10))) throw new SentryError("Invalid Dsn");
                }),
                Dsn
            );
        })(),
        Scope = (function () {
            function Scope() {
                (this._notifyingListeners = !1), (this._scopeListeners = []), (this._eventProcessors = []), (this._breadcrumbs = []), (this._user = {}), (this._tags = {}), (this._extra = {}), (this._context = {});
            }
            return (
                (Scope.prototype.addScopeListener = function (callback) {
                    this._scopeListeners.push(callback);
                }),
                (Scope.prototype.addEventProcessor = function (callback) {
                    return this._eventProcessors.push(callback), this;
                }),
                (Scope.prototype._notifyScopeListeners = function () {
                    var _this = this;
                    this._notifyingListeners ||
                        ((this._notifyingListeners = !0),
                        setTimeout(function () {
                            _this._scopeListeners.forEach(function (callback) {
                                callback(_this);
                            }),
                                (_this._notifyingListeners = !1);
                        }));
                }),
                (Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {
                    var _this = this;
                    return (
                        void 0 === index && (index = 0),
                        new SyncPromise(function (resolve, reject) {
                            var processor = processors[index];
                            if (null === event || "function" != typeof processor) resolve(event);
                            else {
                                var result = processor(__assign({}, event), hint);
                                isThenable(result)
                                    ? result
                                          .then(function (final) {
                                              return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve);
                                          })
                                          .then(null, reject)
                                    : _this
                                          ._notifyEventProcessors(processors, result, hint, index + 1)
                                          .then(resolve)
                                          .then(null, reject);
                            }
                        })
                    );
                }),
                (Scope.prototype.setUser = function (user) {
                    return (this._user = normalize(user)), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setTags = function (tags) {
                    return (this._tags = __assign({}, this._tags, normalize(tags))), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setTag = function (key, value) {
                    var _a;
                    return (this._tags = __assign({}, this._tags, (((_a = {})[key] = normalize(value)), _a))), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setExtras = function (extra) {
                    return (this._extra = __assign({}, this._extra, normalize(extra))), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setExtra = function (key, extra) {
                    var _a;
                    return (this._extra = __assign({}, this._extra, (((_a = {})[key] = normalize(extra)), _a))), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setFingerprint = function (fingerprint) {
                    return (this._fingerprint = normalize(fingerprint)), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setLevel = function (level) {
                    return (this._level = normalize(level)), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setTransaction = function (transaction) {
                    return (this._transaction = transaction), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setContext = function (name, context) {
                    return (this._context[name] = context ? normalize(context) : void 0), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.setSpan = function (span) {
                    return (this._span = span), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype.getSpan = function () {
                    return this._span;
                }),
                (Scope.clone = function (scope) {
                    var newScope = new Scope();
                    return (
                        scope &&
                            ((newScope._breadcrumbs = __spread(scope._breadcrumbs)),
                            (newScope._tags = __assign({}, scope._tags)),
                            (newScope._extra = __assign({}, scope._extra)),
                            (newScope._context = __assign({}, scope._context)),
                            (newScope._user = scope._user),
                            (newScope._level = scope._level),
                            (newScope._span = scope._span),
                            (newScope._transaction = scope._transaction),
                            (newScope._fingerprint = scope._fingerprint),
                            (newScope._eventProcessors = __spread(scope._eventProcessors))),
                        newScope
                    );
                }),
                (Scope.prototype.clear = function () {
                    return (
                        (this._breadcrumbs = []),
                        (this._tags = {}),
                        (this._extra = {}),
                        (this._user = {}),
                        (this._context = {}),
                        (this._level = void 0),
                        (this._transaction = void 0),
                        (this._fingerprint = void 0),
                        (this._span = void 0),
                        this._notifyScopeListeners(),
                        this
                    );
                }),
                (Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {
                    var timestamp = timestampWithMs(),
                        mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb);
                    return (
                        (this._breadcrumbs = void 0 !== maxBreadcrumbs && maxBreadcrumbs >= 0 ? __spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs) : __spread(this._breadcrumbs, [normalize(mergedBreadcrumb)])),
                        this._notifyScopeListeners(),
                        this
                    );
                }),
                (Scope.prototype.clearBreadcrumbs = function () {
                    return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
                }),
                (Scope.prototype._applyFingerprint = function (event) {
                    (event.fingerprint = event.fingerprint ? (Array.isArray(event.fingerprint) ? event.fingerprint : [event.fingerprint]) : []),
                        this._fingerprint && (event.fingerprint = event.fingerprint.concat(this._fingerprint)),
                        event.fingerprint && !event.fingerprint.length && delete event.fingerprint;
                }),
                (Scope.prototype.applyToEvent = function (event, hint) {
                    return (
                        this._extra && Object.keys(this._extra).length && (event.extra = __assign({}, this._extra, event.extra)),
                        this._tags && Object.keys(this._tags).length && (event.tags = __assign({}, this._tags, event.tags)),
                        this._user && Object.keys(this._user).length && (event.user = __assign({}, this._user, event.user)),
                        this._context && Object.keys(this._context).length && (event.contexts = __assign({}, this._context, event.contexts)),
                        this._level && (event.level = this._level),
                        this._transaction && (event.transaction = this._transaction),
                        this._span && ((event.contexts = event.contexts || {}), (event.contexts.trace = this._span.getTraceContext())),
                        this._applyFingerprint(event),
                        (event.breadcrumbs = __spread(event.breadcrumbs || [], this._breadcrumbs)),
                        (event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : void 0),
                        this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint)
                    );
                }),
                Scope
            );
        })();
    function getGlobalEventProcessors() {
        var global = getGlobalObject();
        return (global.__SENTRY__ = global.__SENTRY__ || {}), (global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || []), global.__SENTRY__.globalEventProcessors;
    }
    function addGlobalEventProcessor(callback) {
        getGlobalEventProcessors().push(callback);
    }
    var API_VERSION = 3,
        Hub = (function () {
            function Hub(client, scope, _version) {
                void 0 === scope && (scope = new Scope()), void 0 === _version && (_version = API_VERSION), (this._version = _version), (this._stack = []), this._stack.push({ client: client, scope: scope });
            }
            return (
                (Hub.prototype._invokeClient = function (method) {
                    for (var _a, args = [], _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                    var top = this.getStackTop();
                    top && top.client && top.client[method] && (_a = top.client)[method].apply(_a, __spread(args, [top.scope]));
                }),
                (Hub.prototype.isOlderThan = function (version) {
                    return this._version < version;
                }),
                (Hub.prototype.bindClient = function (client) {
                    this.getStackTop().client = client;
                }),
                (Hub.prototype.pushScope = function () {
                    var stack = this.getStack(),
                        parentScope = stack.length > 0 ? stack[stack.length - 1].scope : void 0,
                        scope = Scope.clone(parentScope);
                    return this.getStack().push({ client: this.getClient(), scope: scope }), scope;
                }),
                (Hub.prototype.popScope = function () {
                    return void 0 !== this.getStack().pop();
                }),
                (Hub.prototype.withScope = function (callback) {
                    var scope = this.pushScope();
                    try {
                        callback(scope);
                    } finally {
                        this.popScope();
                    }
                }),
                (Hub.prototype.getClient = function () {
                    return this.getStackTop().client;
                }),
                (Hub.prototype.getScope = function () {
                    return this.getStackTop().scope;
                }),
                (Hub.prototype.getStack = function () {
                    return this._stack;
                }),
                (Hub.prototype.getStackTop = function () {
                    return this._stack[this._stack.length - 1];
                }),
                (Hub.prototype.captureException = function (exception, hint) {
                    var eventId = (this._lastEventId = uuid4()),
                        finalHint = hint;
                    if (!hint) {
                        var syntheticException = void 0;
                        try {
                            throw new Error("Sentry syntheticException");
                        } catch (exception) {
                            syntheticException = exception;
                        }
                        finalHint = { originalException: exception, syntheticException: syntheticException };
                    }
                    return this._invokeClient("captureException", exception, __assign({}, finalHint, { event_id: eventId })), eventId;
                }),
                (Hub.prototype.captureMessage = function (message, level, hint) {
                    var eventId = (this._lastEventId = uuid4()),
                        finalHint = hint;
                    if (!hint) {
                        var syntheticException = void 0;
                        try {
                            throw new Error(message);
                        } catch (exception) {
                            syntheticException = exception;
                        }
                        finalHint = { originalException: message, syntheticException: syntheticException };
                    }
                    return this._invokeClient("captureMessage", message, level, __assign({}, finalHint, { event_id: eventId })), eventId;
                }),
                (Hub.prototype.captureEvent = function (event, hint) {
                    var eventId = (this._lastEventId = uuid4());
                    return this._invokeClient("captureEvent", event, __assign({}, hint, { event_id: eventId })), eventId;
                }),
                (Hub.prototype.lastEventId = function () {
                    return this._lastEventId;
                }),
                (Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {
                    var top = this.getStackTop();
                    if (top.scope && top.client) {
                        var _a = (top.client.getOptions && top.client.getOptions()) || {},
                            _b = _a.beforeBreadcrumb,
                            beforeBreadcrumb = void 0 === _b ? null : _b,
                            _c = _a.maxBreadcrumbs,
                            maxBreadcrumbs = void 0 === _c ? 30 : _c;
                        if (!(maxBreadcrumbs <= 0)) {
                            var timestamp = timestampWithMs(),
                                mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb),
                                finalBreadcrumb = beforeBreadcrumb
                                    ? consoleSandbox(function () {
                                          return beforeBreadcrumb(mergedBreadcrumb, hint);
                                      })
                                    : mergedBreadcrumb;
                            null !== finalBreadcrumb && top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, 100));
                        }
                    }
                }),
                (Hub.prototype.setUser = function (user) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setUser(user);
                }),
                (Hub.prototype.setTags = function (tags) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setTags(tags);
                }),
                (Hub.prototype.setExtras = function (extras) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setExtras(extras);
                }),
                (Hub.prototype.setTag = function (key, value) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setTag(key, value);
                }),
                (Hub.prototype.setExtra = function (key, extra) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setExtra(key, extra);
                }),
                (Hub.prototype.setContext = function (name, context) {
                    var top = this.getStackTop();
                    top.scope && top.scope.setContext(name, context);
                }),
                (Hub.prototype.configureScope = function (callback) {
                    var top = this.getStackTop();
                    top.scope && top.client && callback(top.scope);
                }),
                (Hub.prototype.run = function (callback) {
                    var oldHub = makeMain(this);
                    try {
                        callback(this);
                    } finally {
                        makeMain(oldHub);
                    }
                }),
                (Hub.prototype.getIntegration = function (integration) {
                    var client = this.getClient();
                    if (!client) return null;
                    try {
                        return client.getIntegration(integration);
                    } catch (_oO) {
                        return logger.warn("Cannot retrieve integration " + integration.id + " from the current Hub"), null;
                    }
                }),
                (Hub.prototype.startSpan = function (spanOrSpanContext, forceNoChild) {
                    return void 0 === forceNoChild && (forceNoChild = !1), this._callExtensionMethod("startSpan", spanOrSpanContext, forceNoChild);
                }),
                (Hub.prototype.traceHeaders = function () {
                    return this._callExtensionMethod("traceHeaders");
                }),
                (Hub.prototype._callExtensionMethod = function (method) {
                    for (var args = [], _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                    var sentry = getMainCarrier().__SENTRY__;
                    if (sentry && sentry.extensions && "function" == typeof sentry.extensions[method]) return sentry.extensions[method].apply(this, args);
                    logger.warn("Extension method " + method + " couldn't be found, doing nothing.");
                }),
                Hub
            );
        })();
    function getMainCarrier() {
        var carrier = getGlobalObject();
        return (carrier.__SENTRY__ = carrier.__SENTRY__ || { extensions: {}, hub: void 0 }), carrier;
    }
    function makeMain(hub) {
        var registry = getMainCarrier(),
            oldHub = getHubFromCarrier(registry);
        return setHubOnCarrier(registry, hub), oldHub;
    }
    function getCurrentHub() {
        var registry = getMainCarrier();
        return (
            (hasHubOnCarrier(registry) && !getHubFromCarrier(registry).isOlderThan(API_VERSION)) || setHubOnCarrier(registry, new Hub()),
            isNodeEnv()
                ? (function (registry) {
                      try {
                          var domain = ((mod = module), (request = "domain"), mod.require(request)),
                              activeDomain = domain.active;
                          if (!activeDomain) return getHubFromCarrier(registry);
                          if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {
                              var registryHubTopStack = getHubFromCarrier(registry).getStackTop();
                              setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));
                          }
                          return getHubFromCarrier(activeDomain);
                      } catch (_Oo) {
                          return getHubFromCarrier(registry);
                      }
                      var mod, request;
                  })(registry)
                : getHubFromCarrier(registry)
        );
    }
    function hasHubOnCarrier(carrier) {
        return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);
    }
    function getHubFromCarrier(carrier) {
        return carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub ? carrier.__SENTRY__.hub : ((carrier.__SENTRY__ = carrier.__SENTRY__ || {}), (carrier.__SENTRY__.hub = new Hub()), carrier.__SENTRY__.hub);
    }
    function setHubOnCarrier(carrier, hub) {
        return !!carrier && ((carrier.__SENTRY__ = carrier.__SENTRY__ || {}), (carrier.__SENTRY__.hub = hub), !0);
    }
    function callOnHub(method) {
        for (var args = [], _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
        var hub = getCurrentHub();
        if (hub && hub[method]) return hub[method].apply(hub, __spread(args));
        throw new Error("No hub defined or " + method + " was not found on the hub, please open a bug report.");
    }
    function captureException(exception) {
        var syntheticException;
        try {
            throw new Error("Sentry syntheticException");
        } catch (exception) {
            syntheticException = exception;
        }
        return callOnHub("captureException", exception, { originalException: exception, syntheticException: syntheticException });
    }
    function withScope(callback) {
        callOnHub("withScope", callback);
    }
    var API = (function () {
            function API(dsn) {
                (this.dsn = dsn), (this._dsnObject = new Dsn(dsn));
            }
            return (
                (API.prototype.getDsn = function () {
                    return this._dsnObject;
                }),
                (API.prototype.getStoreEndpoint = function () {
                    return "" + this._getBaseUrl() + this.getStoreEndpointPath();
                }),
                (API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {
                    var object,
                        auth = { sentry_key: this._dsnObject.user, sentry_version: "7" };
                    return (
                        this.getStoreEndpoint() +
                        "?" +
                        ((object = auth),
                        Object.keys(object)
                            .map(function (key) {
                                return encodeURIComponent(key) + "=" + encodeURIComponent(object[key]);
                            })
                            .join("&"))
                    );
                }),
                (API.prototype._getBaseUrl = function () {
                    var dsn = this._dsnObject,
                        protocol = dsn.protocol ? dsn.protocol + ":" : "",
                        port = dsn.port ? ":" + dsn.port : "";
                    return protocol + "//" + dsn.host + port;
                }),
                (API.prototype.getStoreEndpointPath = function () {
                    var dsn = this._dsnObject;
                    return (dsn.path ? "/" + dsn.path : "") + "/api/" + dsn.projectId + "/store/";
                }),
                (API.prototype.getRequestHeaders = function (clientName, clientVersion) {
                    var dsn = this._dsnObject,
                        header = ["Sentry sentry_version=7"];
                    return (
                        header.push("sentry_timestamp=" + timestampWithMs()),
                        header.push("sentry_client=" + clientName + "/" + clientVersion),
                        header.push("sentry_key=" + dsn.user),
                        dsn.pass && header.push("sentry_secret=" + dsn.pass),
                        { "Content-Type": "application/json", "X-Sentry-Auth": header.join(", ") }
                    );
                }),
                (API.prototype.getReportDialogEndpoint = function (dialogOptions) {
                    void 0 === dialogOptions && (dialogOptions = {});
                    var dsn = this._dsnObject,
                        endpoint = this._getBaseUrl() + (dsn.path ? "/" + dsn.path : "") + "/api/embed/error-page/",
                        encodedOptions = [];
                    for (var key in (encodedOptions.push("dsn=" + dsn.toString()), dialogOptions))
                        if ("user" === key) {
                            if (!dialogOptions.user) continue;
                            dialogOptions.user.name && encodedOptions.push("name=" + encodeURIComponent(dialogOptions.user.name)), dialogOptions.user.email && encodedOptions.push("email=" + encodeURIComponent(dialogOptions.user.email));
                        } else encodedOptions.push(encodeURIComponent(key) + "=" + encodeURIComponent(dialogOptions[key]));
                    return encodedOptions.length ? endpoint + "?" + encodedOptions.join("&") : endpoint;
                }),
                API
            );
        })(),
        installedIntegrations = [];
    function setupIntegrations(options) {
        var integrations = {};
        return (
            (function (options) {
                var defaultIntegrations = (options.defaultIntegrations && __spread(options.defaultIntegrations)) || [],
                    userIntegrations = options.integrations,
                    integrations = [];
                if (Array.isArray(userIntegrations)) {
                    var userIntegrationsNames_1 = userIntegrations.map(function (i) {
                            return i.name;
                        }),
                        pickedIntegrationsNames_1 = [];
                    defaultIntegrations.forEach(function (defaultIntegration) {
                        -1 === userIntegrationsNames_1.indexOf(defaultIntegration.name) &&
                            -1 === pickedIntegrationsNames_1.indexOf(defaultIntegration.name) &&
                            (integrations.push(defaultIntegration), pickedIntegrationsNames_1.push(defaultIntegration.name));
                    }),
                        userIntegrations.forEach(function (userIntegration) {
                            -1 === pickedIntegrationsNames_1.indexOf(userIntegration.name) && (integrations.push(userIntegration), pickedIntegrationsNames_1.push(userIntegration.name));
                        });
                } else
                    "function" == typeof userIntegrations
                        ? ((integrations = userIntegrations(defaultIntegrations)), (integrations = Array.isArray(integrations) ? integrations : [integrations]))
                        : (integrations = __spread(defaultIntegrations));
                var integrationsNames = integrations.map(function (i) {
                    return i.name;
                });
                return -1 !== integrationsNames.indexOf("Debug") && integrations.push.apply(integrations, __spread(integrations.splice(integrationsNames.indexOf("Debug"), 1))), integrations;
            })(options).forEach(function (integration) {
                (integrations[integration.name] = integration),
                    (function (integration) {
                        -1 === installedIntegrations.indexOf(integration.name) &&
                            (integration.setupOnce(addGlobalEventProcessor, getCurrentHub), installedIntegrations.push(integration.name), logger.log("Integration installed: " + integration.name));
                    })(integration);
            }),
            integrations
        );
    }
    var originalFunctionToString,
        BaseClient = (function () {
            function BaseClient(backendClass, options) {
                (this._integrations = {}),
                    (this._processing = !1),
                    (this._backend = new backendClass(options)),
                    (this._options = options),
                    options.dsn && (this._dsn = new Dsn(options.dsn)),
                    this._isEnabled() && (this._integrations = setupIntegrations(this._options));
            }
            return (
                (BaseClient.prototype.captureException = function (exception, hint, scope) {
                    var _this = this,
                        eventId = hint && hint.event_id;
                    return (
                        (this._processing = !0),
                        this._getBackend()
                            .eventFromException(exception, hint)
                            .then(function (event) {
                                return _this._processEvent(event, hint, scope);
                            })
                            .then(function (finalEvent) {
                                (eventId = finalEvent && finalEvent.event_id), (_this._processing = !1);
                            })
                            .then(null, function (reason) {
                                logger.error(reason), (_this._processing = !1);
                            }),
                        eventId
                    );
                }),
                (BaseClient.prototype.captureMessage = function (message, level, hint, scope) {
                    var _this = this,
                        eventId = hint && hint.event_id;
                    return (
                        (this._processing = !0),
                        (isPrimitive(message) ? this._getBackend().eventFromMessage("" + message, level, hint) : this._getBackend().eventFromException(message, hint))
                            .then(function (event) {
                                return _this._processEvent(event, hint, scope);
                            })
                            .then(function (finalEvent) {
                                (eventId = finalEvent && finalEvent.event_id), (_this._processing = !1);
                            })
                            .then(null, function (reason) {
                                logger.error(reason), (_this._processing = !1);
                            }),
                        eventId
                    );
                }),
                (BaseClient.prototype.captureEvent = function (event, hint, scope) {
                    var _this = this,
                        eventId = hint && hint.event_id;
                    return (
                        (this._processing = !0),
                        this._processEvent(event, hint, scope)
                            .then(function (finalEvent) {
                                (eventId = finalEvent && finalEvent.event_id), (_this._processing = !1);
                            })
                            .then(null, function (reason) {
                                logger.error(reason), (_this._processing = !1);
                            }),
                        eventId
                    );
                }),
                (BaseClient.prototype.getDsn = function () {
                    return this._dsn;
                }),
                (BaseClient.prototype.getOptions = function () {
                    return this._options;
                }),
                (BaseClient.prototype.flush = function (timeout) {
                    var _this = this;
                    return this._isClientProcessing(timeout).then(function (status) {
                        return (
                            clearInterval(status.interval),
                            _this
                                ._getBackend()
                                .getTransport()
                                .close(timeout)
                                .then(function (transportFlushed) {
                                    return status.ready && transportFlushed;
                                })
                        );
                    });
                }),
                (BaseClient.prototype.close = function (timeout) {
                    var _this = this;
                    return this.flush(timeout).then(function (result) {
                        return (_this.getOptions().enabled = !1), result;
                    });
                }),
                (BaseClient.prototype.getIntegrations = function () {
                    return this._integrations || {};
                }),
                (BaseClient.prototype.getIntegration = function (integration) {
                    try {
                        return this._integrations[integration.id] || null;
                    } catch (_oO) {
                        return logger.warn("Cannot retrieve integration " + integration.id + " from the current Client"), null;
                    }
                }),
                (BaseClient.prototype._isClientProcessing = function (timeout) {
                    var _this = this;
                    return new SyncPromise(function (resolve) {
                        var ticked = 0,
                            interval = 0;
                        clearInterval(interval),
                            (interval = setInterval(function () {
                                _this._processing ? timeout && (ticked += 1) >= timeout && resolve({ interval: interval, ready: !1 }) : resolve({ interval: interval, ready: !0 });
                            }, 1));
                    });
                }),
                (BaseClient.prototype._getBackend = function () {
                    return this._backend;
                }),
                (BaseClient.prototype._isEnabled = function () {
                    return !1 !== this.getOptions().enabled && void 0 !== this._dsn;
                }),
                (BaseClient.prototype._prepareEvent = function (event, scope, hint) {
                    var _a = this.getOptions(),
                        environment = _a.environment,
                        release = _a.release,
                        dist = _a.dist,
                        _b = _a.maxValueLength,
                        maxValueLength = void 0 === _b ? 250 : _b,
                        prepared = __assign({}, event);
                    void 0 === prepared.environment && void 0 !== environment && (prepared.environment = environment),
                        void 0 === prepared.release && void 0 !== release && (prepared.release = release),
                        void 0 === prepared.dist && void 0 !== dist && (prepared.dist = dist),
                        prepared.message && (prepared.message = truncate(prepared.message, maxValueLength));
                    var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];
                    exception && exception.value && (exception.value = truncate(exception.value, maxValueLength));
                    var request = prepared.request;
                    request && request.url && (request.url = truncate(request.url, maxValueLength)), void 0 === prepared.event_id && (prepared.event_id = uuid4()), this._addIntegrations(prepared.sdk);
                    var result = SyncPromise.resolve(prepared);
                    return scope && (result = scope.applyToEvent(prepared, hint)), result;
                }),
                (BaseClient.prototype._addIntegrations = function (sdkInfo) {
                    var integrationsArray = Object.keys(this._integrations);
                    sdkInfo && integrationsArray.length > 0 && (sdkInfo.integrations = integrationsArray);
                }),
                (BaseClient.prototype._processEvent = function (event, hint, scope) {
                    var _this = this,
                        _a = this.getOptions(),
                        beforeSend = _a.beforeSend,
                        sampleRate = _a.sampleRate;
                    return this._isEnabled()
                        ? "number" == typeof sampleRate && Math.random() > sampleRate
                            ? SyncPromise.reject("This event has been sampled, will not send event.")
                            : new SyncPromise(function (resolve, reject) {
                                  _this
                                      ._prepareEvent(event, scope, hint)
                                      .then(function (prepared) {
                                          if (null !== prepared) {
                                              var finalEvent = prepared;
                                              try {
                                                  if ((hint && hint.data && !0 === hint.data.__sentry__) || !beforeSend) return _this._getBackend().sendEvent(finalEvent), void resolve(finalEvent);
                                                  var beforeSendResult = beforeSend(prepared, hint);
                                                  if (void 0 === beforeSendResult) logger.error("`beforeSend` method has to return `null` or a valid event.");
                                                  else if (isThenable(beforeSendResult)) _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);
                                                  else {
                                                      if (null === (finalEvent = beforeSendResult)) return logger.log("`beforeSend` returned `null`, will not send event."), void resolve(null);
                                                      _this._getBackend().sendEvent(finalEvent), resolve(finalEvent);
                                                  }
                                              } catch (exception) {
                                                  _this.captureException(exception, { data: { __sentry__: !0 }, originalException: exception }), reject("`beforeSend` threw an error, will not send event.");
                                              }
                                          } else reject("An event processor returned null, will not send event.");
                                      })
                                      .then(null, function () {
                                          reject("`beforeSend` threw an error, will not send event.");
                                      });
                              })
                        : SyncPromise.reject("SDK not enabled, will not send event.");
                }),
                (BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {
                    var _this = this;
                    beforeSend
                        .then(function (processedEvent) {
                            null !== processedEvent ? (_this._getBackend().sendEvent(processedEvent), resolve(processedEvent)) : reject("`beforeSend` returned `null`, will not send event.");
                        })
                        .then(null, function (e) {
                            reject("beforeSend rejected with " + e);
                        });
                }),
                BaseClient
            );
        })(),
        NoopTransport = (function () {
            function NoopTransport() {}
            return (
                (NoopTransport.prototype.sendEvent = function (_) {
                    return SyncPromise.resolve({ reason: "NoopTransport: Event has been skipped because no Dsn is configured.", status: exports.Status.Skipped });
                }),
                (NoopTransport.prototype.close = function (_) {
                    return SyncPromise.resolve(!0);
                }),
                NoopTransport
            );
        })(),
        BaseBackend = (function () {
            function BaseBackend(options) {
                (this._options = options), this._options.dsn || logger.warn("No DSN provided, backend will not do anything."), (this._transport = this._setupTransport());
            }
            return (
                (BaseBackend.prototype._setupTransport = function () {
                    return new NoopTransport();
                }),
                (BaseBackend.prototype.eventFromException = function (_exception, _hint) {
                    throw new SentryError("Backend has to implement `eventFromException` method");
                }),
                (BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {
                    throw new SentryError("Backend has to implement `eventFromMessage` method");
                }),
                (BaseBackend.prototype.sendEvent = function (event) {
                    this._transport.sendEvent(event).then(null, function (reason) {
                        logger.error("Error while sending event: " + reason);
                    });
                }),
                (BaseBackend.prototype.getTransport = function () {
                    return this._transport;
                }),
                BaseBackend
            );
        })();
    var FunctionToString = (function () {
            function FunctionToString() {
                this.name = FunctionToString.id;
            }
            return (
                (FunctionToString.prototype.setupOnce = function () {
                    (originalFunctionToString = Function.prototype.toString),
                        (Function.prototype.toString = function () {
                            for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                            var context = this.__sentry_original__ || this;
                            return originalFunctionToString.apply(context, args);
                        });
                }),
                (FunctionToString.id = "FunctionToString"),
                FunctionToString
            );
        })(),
        DEFAULT_IGNORE_ERRORS = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/],
        InboundFilters = (function () {
            function InboundFilters(_options) {
                void 0 === _options && (_options = {}), (this._options = _options), (this.name = InboundFilters.id);
            }
            return (
                (InboundFilters.prototype.setupOnce = function () {
                    addGlobalEventProcessor(function (event) {
                        var hub = getCurrentHub();
                        if (!hub) return event;
                        var self = hub.getIntegration(InboundFilters);
                        if (self) {
                            var client = hub.getClient(),
                                clientOptions = client ? client.getOptions() : {},
                                options = self._mergeOptions(clientOptions);
                            if (self._shouldDropEvent(event, options)) return null;
                        }
                        return event;
                    });
                }),
                (InboundFilters.prototype._shouldDropEvent = function (event, options) {
                    return this._isSentryError(event, options)
                        ? (logger.warn("Event dropped due to being internal Sentry Error.\nEvent: " + getEventDescription(event)), !0)
                        : this._isIgnoredError(event, options)
                        ? (logger.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: " + getEventDescription(event)), !0)
                        : this._isBlacklistedUrl(event, options)
                        ? (logger.warn("Event dropped due to being matched by `blacklistUrls` option.\nEvent: " + getEventDescription(event) + ".\nUrl: " + this._getEventFilterUrl(event)), !0)
                        : !this._isWhitelistedUrl(event, options) && (logger.warn("Event dropped due to not being matched by `whitelistUrls` option.\nEvent: " + getEventDescription(event) + ".\nUrl: " + this._getEventFilterUrl(event)), !0);
                }),
                (InboundFilters.prototype._isSentryError = function (event, options) {
                    if ((void 0 === options && (options = {}), !options.ignoreInternal)) return !1;
                    try {
                        return (event && event.exception && event.exception.values && event.exception.values[0] && "SentryError" === event.exception.values[0].type) || !1;
                    } catch (_oO) {
                        return !1;
                    }
                }),
                (InboundFilters.prototype._isIgnoredError = function (event, options) {
                    return (
                        void 0 === options && (options = {}),
                        !(!options.ignoreErrors || !options.ignoreErrors.length) &&
                            this._getPossibleEventMessages(event).some(function (message) {
                                return options.ignoreErrors.some(function (pattern) {
                                    return isMatchingPattern(message, pattern);
                                });
                            })
                    );
                }),
                (InboundFilters.prototype._isBlacklistedUrl = function (event, options) {
                    if ((void 0 === options && (options = {}), !options.blacklistUrls || !options.blacklistUrls.length)) return !1;
                    var url = this._getEventFilterUrl(event);
                    return (
                        !!url &&
                        options.blacklistUrls.some(function (pattern) {
                            return isMatchingPattern(url, pattern);
                        })
                    );
                }),
                (InboundFilters.prototype._isWhitelistedUrl = function (event, options) {
                    if ((void 0 === options && (options = {}), !options.whitelistUrls || !options.whitelistUrls.length)) return !0;
                    var url = this._getEventFilterUrl(event);
                    return (
                        !url ||
                        options.whitelistUrls.some(function (pattern) {
                            return isMatchingPattern(url, pattern);
                        })
                    );
                }),
                (InboundFilters.prototype._mergeOptions = function (clientOptions) {
                    return (
                        void 0 === clientOptions && (clientOptions = {}),
                        {
                            blacklistUrls: __spread(this._options.blacklistUrls || [], clientOptions.blacklistUrls || []),
                            ignoreErrors: __spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),
                            ignoreInternal: void 0 === this._options.ignoreInternal || this._options.ignoreInternal,
                            whitelistUrls: __spread(this._options.whitelistUrls || [], clientOptions.whitelistUrls || []),
                        }
                    );
                }),
                (InboundFilters.prototype._getPossibleEventMessages = function (event) {
                    if (event.message) return [event.message];
                    if (event.exception)
                        try {
                            var _a = (event.exception.values && event.exception.values[0]) || {},
                                _b = _a.type,
                                type = void 0 === _b ? "" : _b,
                                _c = _a.value,
                                value = void 0 === _c ? "" : _c;
                            return ["" + value, type + ": " + value];
                        } catch (oO) {
                            return logger.error("Cannot extract message for event " + getEventDescription(event)), [];
                        }
                    return [];
                }),
                (InboundFilters.prototype._getEventFilterUrl = function (event) {
                    try {
                        if (event.stacktrace) {
                            var frames_1 = event.stacktrace.frames;
                            return (frames_1 && frames_1[frames_1.length - 1].filename) || null;
                        }
                        if (event.exception) {
                            var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;
                            return (frames_2 && frames_2[frames_2.length - 1].filename) || null;
                        }
                        return null;
                    } catch (oO) {
                        return logger.error("Cannot extract url for event " + getEventDescription(event)), null;
                    }
                }),
                (InboundFilters.id = "InboundFilters"),
                InboundFilters
            );
        })(),
        CoreIntegrations = Object.freeze({ FunctionToString: FunctionToString, InboundFilters: InboundFilters }),
        UNKNOWN_FUNCTION = "?",
        chrome = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
        gecko = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i,
        winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
        geckoEval = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
        chromeEval = /\((\S*)(?::(\d+))(?::(\d+))\)/;
    function computeStackTrace(ex) {
        var stack = null,
            popSize = ex && ex.framesToPop;
        try {
            if (
                (stack = (function (ex) {
                    if (!ex || !ex.stacktrace) return null;
                    for (
                        var parts,
                            opera10Regex = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,
                            opera11Regex = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i,
                            lines = ex.stacktrace.split("\n"),
                            stack = [],
                            line = 0;
                        line < lines.length;
                        line += 2
                    ) {
                        var element = null;
                        (parts = opera10Regex.exec(lines[line]))
                            ? (element = { url: parts[2], func: parts[3], args: [], line: +parts[1], column: null })
                            : (parts = opera11Regex.exec(lines[line])) && (element = { url: parts[6], func: parts[3] || parts[4], args: parts[5] ? parts[5].split(",") : [], line: +parts[1], column: +parts[2] }),
                            element && (!element.func && element.line && (element.func = UNKNOWN_FUNCTION), stack.push(element));
                    }
                    if (!stack.length) return null;
                    return { message: extractMessage(ex), name: ex.name, stack: stack };
                })(ex))
            )
                return popFrames(stack, popSize);
        } catch (e) {}
        try {
            if (
                (stack = (function (ex) {
                    if (!ex || !ex.stack) return null;
                    for (var submatch, parts, element, stack = [], lines = ex.stack.split("\n"), i = 0; i < lines.length; ++i) {
                        if ((parts = chrome.exec(lines[i]))) {
                            var isNative = parts[2] && 0 === parts[2].indexOf("native");
                            parts[2] && 0 === parts[2].indexOf("eval") && (submatch = chromeEval.exec(parts[2])) && ((parts[2] = submatch[1]), (parts[3] = submatch[2]), (parts[4] = submatch[3])),
                                (element = { url: parts[2], func: parts[1] || UNKNOWN_FUNCTION, args: isNative ? [parts[2]] : [], line: parts[3] ? +parts[3] : null, column: parts[4] ? +parts[4] : null });
                        } else if ((parts = winjs.exec(lines[i]))) element = { url: parts[2], func: parts[1] || UNKNOWN_FUNCTION, args: [], line: +parts[3], column: parts[4] ? +parts[4] : null };
                        else {
                            if (!(parts = gecko.exec(lines[i]))) continue;
                            parts[3] && parts[3].indexOf(" > eval") > -1 && (submatch = geckoEval.exec(parts[3]))
                                ? ((parts[1] = parts[1] || "eval"), (parts[3] = submatch[1]), (parts[4] = submatch[2]), (parts[5] = ""))
                                : 0 !== i || parts[5] || void 0 === ex.columnNumber || (stack[0].column = ex.columnNumber + 1),
                                (element = { url: parts[3], func: parts[1] || UNKNOWN_FUNCTION, args: parts[2] ? parts[2].split(",") : [], line: parts[4] ? +parts[4] : null, column: parts[5] ? +parts[5] : null });
                        }
                        !element.func && element.line && (element.func = UNKNOWN_FUNCTION), stack.push(element);
                    }
                    if (!stack.length) return null;
                    return { message: extractMessage(ex), name: ex.name, stack: stack };
                })(ex))
            )
                return popFrames(stack, popSize);
        } catch (e) {}
        return { message: extractMessage(ex), name: ex && ex.name, stack: [], failed: !0 };
    }
    function popFrames(stacktrace, popSize) {
        try {
            return __assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });
        } catch (e) {
            return stacktrace;
        }
    }
    function extractMessage(ex) {
        var message = ex && ex.message;
        return message ? (message.error && "string" == typeof message.error.message ? message.error.message : message) : "No error message";
    }
    var STACKTRACE_LIMIT = 50;
    function exceptionFromStacktrace(stacktrace) {
        var frames = prepareFramesForEvent(stacktrace.stack),
            exception = { type: stacktrace.name, value: stacktrace.message };
        return frames && frames.length && (exception.stacktrace = { frames: frames }), void 0 === exception.type && "" === exception.value && (exception.value = "Unrecoverable error caught"), exception;
    }
    function eventFromPlainObject(exception, syntheticException, rejection) {
        var event = {
            exception: {
                values: [
                    {
                        type: isEvent(exception) ? exception.constructor.name : rejection ? "UnhandledRejection" : "Error",
                        value:
                            "Non-Error " +
                            (rejection ? "promise rejection" : "exception") +
                            " captured with keys: " +
                            (function (exception, maxLength) {
                                void 0 === maxLength && (maxLength = 40);
                                var keys = Object.keys(getWalkSource(exception));
                                if ((keys.sort(), !keys.length)) return "[object has no keys]";
                                if (keys[0].length >= maxLength) return truncate(keys[0], maxLength);
                                for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {
                                    var serialized = keys.slice(0, includedKeys).join(", ");
                                    if (!(serialized.length > maxLength)) return includedKeys === keys.length ? serialized : truncate(serialized, maxLength);
                                }
                                return "";
                            })(exception),
                    },
                ],
            },
            extra: {
                __serialized__: (function normalizeToSize(object, depth, maxSize) {
                    void 0 === depth && (depth = 3), void 0 === maxSize && (maxSize = 102400);
                    var serialized = normalize(object, depth);
                    return jsonSize(serialized) > maxSize ? normalizeToSize(object, depth - 1, maxSize) : serialized;
                })(exception),
            },
        };
        if (syntheticException) {
            var frames_1 = prepareFramesForEvent(computeStackTrace(syntheticException).stack);
            event.stacktrace = { frames: frames_1 };
        }
        return event;
    }
    function eventFromStacktrace(stacktrace) {
        return { exception: { values: [exceptionFromStacktrace(stacktrace)] } };
    }
    function prepareFramesForEvent(stack) {
        if (!stack || !stack.length) return [];
        var localStack = stack,
            firstFrameFunction = localStack[0].func || "",
            lastFrameFunction = localStack[localStack.length - 1].func || "";
        return (
            (-1 === firstFrameFunction.indexOf("captureMessage") && -1 === firstFrameFunction.indexOf("captureException")) || (localStack = localStack.slice(1)),
            -1 !== lastFrameFunction.indexOf("sentryWrapped") && (localStack = localStack.slice(0, -1)),
            localStack
                .map(function (frame) {
                    return { colno: null === frame.column ? void 0 : frame.column, filename: frame.url || localStack[0].url, function: frame.func || "?", in_app: !0, lineno: null === frame.line ? void 0 : frame.line };
                })
                .slice(0, STACKTRACE_LIMIT)
                .reverse()
        );
    }
    function eventFromUnknownInput(exception, syntheticException, options) {
        var event, wat;
        if ((void 0 === options && (options = {}), isErrorEvent(exception) && exception.error)) return (event = eventFromStacktrace(computeStackTrace((exception = exception.error))));
        if (isDOMError(exception) || ((wat = exception), "[object DOMException]" === Object.prototype.toString.call(wat))) {
            var domException = exception,
                name_1 = domException.name || (isDOMError(domException) ? "DOMError" : "DOMException"),
                message = domException.message ? name_1 + ": " + domException.message : name_1;
            return addExceptionTypeValue((event = eventFromString(message, syntheticException, options)), message), event;
        }
        return isError(exception)
            ? (event = eventFromStacktrace(computeStackTrace(exception)))
            : isPlainObject(exception) || isEvent(exception)
            ? (addExceptionMechanism((event = eventFromPlainObject(exception, syntheticException, options.rejection)), { synthetic: !0 }), event)
            : (addExceptionTypeValue((event = eventFromString(exception, syntheticException, options)), "" + exception, void 0), addExceptionMechanism(event, { synthetic: !0 }), event);
    }
    function eventFromString(input, syntheticException, options) {
        void 0 === options && (options = {});
        var event = { message: input };
        if (options.attachStacktrace && syntheticException) {
            var frames_1 = prepareFramesForEvent(computeStackTrace(syntheticException).stack);
            event.stacktrace = { frames: frames_1 };
        }
        return event;
    }
    var BaseTransport = (function () {
            function BaseTransport(options) {
                (this.options = options), (this._buffer = new PromiseBuffer(30)), (this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth());
            }
            return (
                (BaseTransport.prototype.sendEvent = function (_) {
                    throw new SentryError("Transport Class has to implement `sendEvent` method");
                }),
                (BaseTransport.prototype.close = function (timeout) {
                    return this._buffer.drain(timeout);
                }),
                BaseTransport
            );
        })(),
        global$3 = getGlobalObject(),
        FetchTransport = (function (_super) {
            function FetchTransport() {
                var _this = (null !== _super && _super.apply(this, arguments)) || this;
                return (_this._disabledUntil = new Date(Date.now())), _this;
            }
            return (
                __extends(FetchTransport, _super),
                (FetchTransport.prototype.sendEvent = function (event) {
                    var _this = this;
                    if (new Date(Date.now()) < this._disabledUntil) return Promise.reject({ event: event, reason: "Transport locked till " + this._disabledUntil + " due to too many requests.", status: 429 });
                    var defaultOptions = {
                        body: JSON.stringify(event),
                        method: "POST",
                        referrerPolicy: (function () {
                            if (!supportsFetch()) return !1;
                            try {
                                return new Request("_", { referrerPolicy: "origin" }), !0;
                            } catch (e) {
                                return !1;
                            }
                        })()
                            ? "origin"
                            : "",
                    };
                    return this._buffer.add(
                        new SyncPromise(function (resolve, reject) {
                            global$3
                                .fetch(_this.url, defaultOptions)
                                .then(function (response) {
                                    var status = exports.Status.fromHttpCode(response.status);
                                    if (status !== exports.Status.Success) {
                                        if (status === exports.Status.RateLimit) {
                                            var now = Date.now();
                                            (_this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get("Retry-After")))), logger.warn("Too many requests, backing off till: " + _this._disabledUntil);
                                        }
                                        reject(response);
                                    } else resolve({ status: status });
                                })
                                .catch(reject);
                        })
                    );
                }),
                FetchTransport
            );
        })(BaseTransport),
        XHRTransport = (function (_super) {
            function XHRTransport() {
                var _this = (null !== _super && _super.apply(this, arguments)) || this;
                return (_this._disabledUntil = new Date(Date.now())), _this;
            }
            return (
                __extends(XHRTransport, _super),
                (XHRTransport.prototype.sendEvent = function (event) {
                    var _this = this;
                    return new Date(Date.now()) < this._disabledUntil
                        ? Promise.reject({ event: event, reason: "Transport locked till " + this._disabledUntil + " due to too many requests.", status: 429 })
                        : this._buffer.add(
                              new SyncPromise(function (resolve, reject) {
                                  var request = new XMLHttpRequest();
                                  (request.onreadystatechange = function () {
                                      if (4 === request.readyState) {
                                          var status = exports.Status.fromHttpCode(request.status);
                                          if (status !== exports.Status.Success) {
                                              if (status === exports.Status.RateLimit) {
                                                  var now = Date.now();
                                                  (_this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader("Retry-After")))), logger.warn("Too many requests, backing off till: " + _this._disabledUntil);
                                              }
                                              reject(request);
                                          } else resolve({ status: status });
                                      }
                                  }),
                                      request.open("POST", _this.url),
                                      request.send(JSON.stringify(event));
                              })
                          );
                }),
                XHRTransport
            );
        })(BaseTransport),
        index = Object.freeze({ BaseTransport: BaseTransport, FetchTransport: FetchTransport, XHRTransport: XHRTransport }),
        BrowserBackend = (function (_super) {
            function BrowserBackend() {
                return (null !== _super && _super.apply(this, arguments)) || this;
            }
            return (
                __extends(BrowserBackend, _super),
                (BrowserBackend.prototype._setupTransport = function () {
                    if (!this._options.dsn) return _super.prototype._setupTransport.call(this);
                    var transportOptions = __assign({}, this._options.transportOptions, { dsn: this._options.dsn });
                    return this._options.transport ? new this._options.transport(transportOptions) : supportsFetch() ? new FetchTransport(transportOptions) : new XHRTransport(transportOptions);
                }),
                (BrowserBackend.prototype.eventFromException = function (exception, hint) {
                    var event = eventFromUnknownInput(exception, (hint && hint.syntheticException) || void 0, { attachStacktrace: this._options.attachStacktrace });
                    return addExceptionMechanism(event, { handled: !0, type: "generic" }), (event.level = exports.Severity.Error), hint && hint.event_id && (event.event_id = hint.event_id), SyncPromise.resolve(event);
                }),
                (BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {
                    void 0 === level && (level = exports.Severity.Info);
                    var event = eventFromString(message, (hint && hint.syntheticException) || void 0, { attachStacktrace: this._options.attachStacktrace });
                    return (event.level = level), hint && hint.event_id && (event.event_id = hint.event_id), SyncPromise.resolve(event);
                }),
                BrowserBackend
            );
        })(BaseBackend),
        SDK_NAME = "sentry.javascript.browser",
        BrowserClient = (function (_super) {
            function BrowserClient(options) {
                return void 0 === options && (options = {}), _super.call(this, BrowserBackend, options) || this;
            }
            return (
                __extends(BrowserClient, _super),
                (BrowserClient.prototype._prepareEvent = function (event, scope, hint) {
                    return (
                        (event.platform = event.platform || "javascript"),
                        (event.sdk = __assign({}, event.sdk, { name: SDK_NAME, packages: __spread((event.sdk && event.sdk.packages) || [], [{ name: "npm:@sentry/browser", version: "5.10.2" }]), version: "5.10.2" })),
                        _super.prototype._prepareEvent.call(this, event, scope, hint)
                    );
                }),
                (BrowserClient.prototype.showReportDialog = function (options) {
                    void 0 === options && (options = {});
                    var document = getGlobalObject().document;
                    if (document)
                        if (this._isEnabled()) {
                            var dsn = options.dsn || this.getDsn();
                            if (options.eventId)
                                if (dsn) {
                                    var script = document.createElement("script");
                                    (script.async = !0), (script.src = new API(dsn).getReportDialogEndpoint(options)), options.onLoad && (script.onload = options.onLoad), (document.head || document.body).appendChild(script);
                                } else logger.error("Missing `Dsn` option in showReportDialog call");
                            else logger.error("Missing `eventId` option in showReportDialog call");
                        } else logger.error("Trying to call showReportDialog with Sentry Client is disabled");
                }),
                BrowserClient
            );
        })(BaseClient),
        ignoreOnError = 0;
    function shouldIgnoreOnError() {
        return ignoreOnError > 0;
    }
    function wrap(fn, options, before) {
        if ((void 0 === options && (options = {}), "function" != typeof fn)) return fn;
        try {
            if (fn.__sentry__) return fn;
            if (fn.__sentry_wrapped__) return fn.__sentry_wrapped__;
        } catch (e) {
            return fn;
        }
        var sentryWrapped = function () {
            var args = Array.prototype.slice.call(arguments);
            try {
                before && "function" == typeof before && before.apply(this, arguments);
                var wrappedArguments = args.map(function (arg) {
                    return wrap(arg, options);
                });
                return fn.handleEvent ? fn.handleEvent.apply(this, wrappedArguments) : fn.apply(this, wrappedArguments);
            } catch (ex) {
                throw (
                    ((ignoreOnError += 1),
                    setTimeout(function () {
                        ignoreOnError -= 1;
                    }),
                    withScope(function (scope) {
                        scope.addEventProcessor(function (event) {
                            var processedEvent = __assign({}, event);
                            return (
                                options.mechanism && (addExceptionTypeValue(processedEvent, void 0, void 0), addExceptionMechanism(processedEvent, options.mechanism)),
                                (processedEvent.extra = __assign({}, processedEvent.extra, { arguments: normalize(args, 3) })),
                                processedEvent
                            );
                        }),
                            captureException(ex);
                    }),
                    ex)
                );
            }
        };
        try {
            for (var property in fn) Object.prototype.hasOwnProperty.call(fn, property) && (sentryWrapped[property] = fn[property]);
        } catch (_oO) {}
        (fn.prototype = fn.prototype || {}),
            (sentryWrapped.prototype = fn.prototype),
            Object.defineProperty(fn, "__sentry_wrapped__", { enumerable: !1, value: sentryWrapped }),
            Object.defineProperties(sentryWrapped, { __sentry__: { enumerable: !1, value: !0 }, __sentry_original__: { enumerable: !1, value: fn } });
        try {
            Object.getOwnPropertyDescriptor(sentryWrapped, "name").configurable &&
                Object.defineProperty(sentryWrapped, "name", {
                    get: function () {
                        return fn.name;
                    },
                });
        } catch (_oO) {}
        return sentryWrapped;
    }
    var GlobalHandlers = (function () {
            function GlobalHandlers(options) {
                (this.name = GlobalHandlers.id),
                    (this._global = getGlobalObject()),
                    (this._oldOnErrorHandler = null),
                    (this._oldOnUnhandledRejectionHandler = null),
                    (this._onErrorHandlerInstalled = !1),
                    (this._onUnhandledRejectionHandlerInstalled = !1),
                    (this._options = __assign({ onerror: !0, onunhandledrejection: !0 }, options));
            }
            return (
                (GlobalHandlers.prototype.setupOnce = function () {
                    (Error.stackTraceLimit = 50),
                        this._options.onerror && (logger.log("Global Handler attached: onerror"), this._installGlobalOnErrorHandler()),
                        this._options.onunhandledrejection && (logger.log("Global Handler attached: onunhandledrejection"), this._installGlobalOnUnhandledRejectionHandler());
                }),
                (GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {
                    if (!this._onErrorHandlerInstalled) {
                        var self = this;
                        (this._oldOnErrorHandler = this._global.onerror),
                            (this._global.onerror = function (msg, url, line, column, error) {
                                var currentHub = getCurrentHub(),
                                    hasIntegration = currentHub.getIntegration(GlobalHandlers),
                                    isFailedOwnDelivery = error && !0 === error.__sentry_own_request__;
                                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) return !!self._oldOnErrorHandler && self._oldOnErrorHandler.apply(this, arguments);
                                var client = currentHub.getClient(),
                                    event = isPrimitive(error)
                                        ? self._eventFromIncompleteOnError(msg, url, line, column)
                                        : self._enhanceEventWithInitialFrame(eventFromUnknownInput(error, void 0, { attachStacktrace: client && client.getOptions().attachStacktrace, rejection: !1 }), url, line, column);
                                return (
                                    addExceptionMechanism(event, { handled: !1, type: "onerror" }), currentHub.captureEvent(event, { originalException: error }), !!self._oldOnErrorHandler && self._oldOnErrorHandler.apply(this, arguments)
                                );
                            }),
                            (this._onErrorHandlerInstalled = !0);
                    }
                }),
                (GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {
                    if (!this._onUnhandledRejectionHandlerInstalled) {
                        var self = this;
                        (this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection),
                            (this._global.onunhandledrejection = function (e) {
                                var error = e;
                                try {
                                    error = e && "reason" in e ? e.reason : e;
                                } catch (_oO) {}
                                var currentHub = getCurrentHub(),
                                    hasIntegration = currentHub.getIntegration(GlobalHandlers),
                                    isFailedOwnDelivery = error && !0 === error.__sentry_own_request__;
                                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) return !self._oldOnUnhandledRejectionHandler || self._oldOnUnhandledRejectionHandler.apply(this, arguments);
                                var client = currentHub.getClient(),
                                    event = isPrimitive(error) ? self._eventFromIncompleteRejection(error) : eventFromUnknownInput(error, void 0, { attachStacktrace: client && client.getOptions().attachStacktrace, rejection: !0 });
                                return (
                                    (event.level = exports.Severity.Error),
                                    addExceptionMechanism(event, { handled: !1, type: "onunhandledrejection" }),
                                    currentHub.captureEvent(event, { originalException: error }),
                                    !self._oldOnUnhandledRejectionHandler || self._oldOnUnhandledRejectionHandler.apply(this, arguments)
                                );
                            }),
                            (this._onUnhandledRejectionHandlerInstalled = !0);
                    }
                }),
                (GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {
                    var name,
                        message = isErrorEvent(msg) ? msg.message : msg;
                    if (isString(message)) {
                        var groups = message.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);
                        groups && ((name = groups[1]), (message = groups[2]));
                    }
                    var event = { exception: { values: [{ type: name || "Error", value: message }] } };
                    return this._enhanceEventWithInitialFrame(event, url, line, column);
                }),
                (GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {
                    return { exception: { values: [{ type: "UnhandledRejection", value: "Non-Error promise rejection captured with value: " + error }] } };
                }),
                (GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {
                    (event.exception = event.exception || {}),
                        (event.exception.values = event.exception.values || []),
                        (event.exception.values[0] = event.exception.values[0] || {}),
                        (event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {}),
                        (event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || []);
                    var colno = isNaN(parseInt(column, 10)) ? void 0 : column,
                        lineno = isNaN(parseInt(line, 10)) ? void 0 : line,
                        filename =
                            isString(url) && url.length > 0
                                ? url
                                : (function () {
                                      try {
                                          return document.location.href;
                                      } catch (oO) {
                                          return "";
                                      }
                                  })();
                    return 0 === event.exception.values[0].stacktrace.frames.length && event.exception.values[0].stacktrace.frames.push({ colno: colno, filename: filename, function: "?", in_app: !0, lineno: lineno }), event;
                }),
                (GlobalHandlers.id = "GlobalHandlers"),
                GlobalHandlers
            );
        })(),
        TryCatch = (function () {
            function TryCatch() {
                (this._ignoreOnError = 0), (this.name = TryCatch.id);
            }
            return (
                (TryCatch.prototype._wrapTimeFunction = function (original) {
                    return function () {
                        for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        var originalCallback = args[0];
                        return (args[0] = wrap(originalCallback, { mechanism: { data: { function: getFunctionName(original) }, handled: !0, type: "instrument" } })), original.apply(this, args);
                    };
                }),
                (TryCatch.prototype._wrapRAF = function (original) {
                    return function (callback) {
                        return original(wrap(callback, { mechanism: { data: { function: "requestAnimationFrame", handler: getFunctionName(original) }, handled: !0, type: "instrument" } }));
                    };
                }),
                (TryCatch.prototype._wrapEventTarget = function (target) {
                    var global = getGlobalObject(),
                        proto = global[target] && global[target].prototype;
                    proto &&
                        proto.hasOwnProperty &&
                        proto.hasOwnProperty("addEventListener") &&
                        (fill(proto, "addEventListener", function (original) {
                            return function (eventName, fn, options) {
                                try {
                                    "function" == typeof fn.handleEvent &&
                                        (fn.handleEvent = wrap(fn.handleEvent.bind(fn), { mechanism: { data: { function: "handleEvent", handler: getFunctionName(fn), target: target }, handled: !0, type: "instrument" } }));
                                } catch (err) {}
                                return original.call(this, eventName, wrap(fn, { mechanism: { data: { function: "addEventListener", handler: getFunctionName(fn), target: target }, handled: !0, type: "instrument" } }), options);
                            };
                        }),
                        fill(proto, "removeEventListener", function (original) {
                            return function (eventName, fn, options) {
                                var callback = fn;
                                try {
                                    callback = callback && (callback.__sentry_wrapped__ || callback);
                                } catch (e) {}
                                return original.call(this, eventName, callback, options);
                            };
                        }));
                }),
                (TryCatch.prototype._wrapXHR = function (originalSend) {
                    return function () {
                        for (var _this = this, args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        return (
                            ["onload", "onerror", "onprogress"].forEach(function (prop) {
                                prop in _this &&
                                    "function" == typeof _this[prop] &&
                                    fill(_this, prop, function (original) {
                                        return wrap(original, { mechanism: { data: { function: prop, handler: getFunctionName(original) }, handled: !0, type: "instrument" } });
                                    });
                            }),
                            "onreadystatechange" in this &&
                                "function" == typeof this.onreadystatechange &&
                                fill(this, "onreadystatechange", function (original) {
                                    var wrapOptions = { mechanism: { data: { function: "onreadystatechange", handler: getFunctionName(original) }, handled: !0, type: "instrument" } };
                                    return original.__sentry_original__ && (wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__)), wrap(original, wrapOptions);
                                }),
                            originalSend.apply(this, args)
                        );
                    };
                }),
                (TryCatch.prototype.setupOnce = function () {
                    this._ignoreOnError = this._ignoreOnError;
                    var global = getGlobalObject();
                    fill(global, "setTimeout", this._wrapTimeFunction.bind(this)),
                        fill(global, "setInterval", this._wrapTimeFunction.bind(this)),
                        fill(global, "requestAnimationFrame", this._wrapRAF.bind(this)),
                        "XMLHttpRequest" in global && fill(XMLHttpRequest.prototype, "send", this._wrapXHR.bind(this)),
                        [
                            "EventTarget",
                            "Window",
                            "Node",
                            "ApplicationCache",
                            "AudioTrackList",
                            "ChannelMergerNode",
                            "CryptoOperation",
                            "EventSource",
                            "FileReader",
                            "HTMLUnknownElement",
                            "IDBDatabase",
                            "IDBRequest",
                            "IDBTransaction",
                            "KeyOperation",
                            "MediaController",
                            "MessagePort",
                            "ModalWindow",
                            "Notification",
                            "SVGElementInstance",
                            "Screen",
                            "TextTrack",
                            "TextTrackCue",
                            "TextTrackList",
                            "WebSocket",
                            "WebSocketWorker",
                            "Worker",
                            "XMLHttpRequest",
                            "XMLHttpRequestEventTarget",
                            "XMLHttpRequestUpload",
                        ].forEach(this._wrapEventTarget.bind(this));
                }),
                (TryCatch.id = "TryCatch"),
                TryCatch
            );
        })(),
        Breadcrumbs = (function () {
            function Breadcrumbs(options) {
                (this.name = Breadcrumbs.id), (this._options = __assign({ console: !0, dom: !0, fetch: !0, history: !0, sentry: !0, xhr: !0 }, options));
            }
            return (
                (Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {
                    var breadcrumb = {
                        category: "console",
                        data: { extra: { arguments: normalize(handlerData.args, 3) }, logger: "console" },
                        level: exports.Severity.fromString(handlerData.level),
                        message: safeJoin(handlerData.args, " "),
                    };
                    if ("assert" === handlerData.level) {
                        if (!1 !== handlerData.args[0]) return;
                        (breadcrumb.message = "Assertion failed: " + (safeJoin(handlerData.args.slice(1), " ") || "console.assert")), (breadcrumb.data.extra.arguments = normalize(handlerData.args.slice(1), 3));
                    }
                    getCurrentHub().addBreadcrumb(breadcrumb, { input: handlerData.args, level: handlerData.level });
                }),
                (Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {
                    var target;
                    try {
                        target = handlerData.event.target ? htmlTreeAsString(handlerData.event.target) : htmlTreeAsString(handlerData.event);
                    } catch (e) {
                        target = "<unknown>";
                    }
                    0 !== target.length && getCurrentHub().addBreadcrumb({ category: "ui." + handlerData.name, message: target }, { event: event, name: handlerData.name });
                }),
                (Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {
                    if (handlerData.endTimestamp) {
                        if (handlerData.xhr.__sentry_own_request__) return;
                        getCurrentHub().addBreadcrumb({ category: "xhr", data: handlerData.xhr.__sentry_xhr__, type: "http" }, { xhr: handlerData.xhr });
                    } else handlerData.xhr.__sentry_own_request__ && addSentryBreadcrumb(handlerData.args[0]);
                }),
                (Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {
                    if (handlerData.endTimestamp) {
                        var client = getCurrentHub().getClient(),
                            dsn = client && client.getDsn();
                        if (dsn) {
                            var filterUrl = new API(dsn).getStoreEndpoint();
                            if (filterUrl && -1 !== handlerData.fetchData.url.indexOf(filterUrl) && "POST" === handlerData.fetchData.method && handlerData.args[1] && handlerData.args[1].body)
                                return void addSentryBreadcrumb(handlerData.args[1].body);
                        }
                        handlerData.error
                            ? getCurrentHub().addBreadcrumb(
                                  { category: "fetch", data: __assign({}, handlerData.fetchData, { status_code: handlerData.response.status }), level: exports.Severity.Error, type: "http" },
                                  { data: handlerData.error, input: handlerData.args }
                              )
                            : getCurrentHub().addBreadcrumb(
                                  { category: "fetch", data: __assign({}, handlerData.fetchData, { status_code: handlerData.response.status }), type: "http" },
                                  { input: handlerData.args, response: handlerData.response }
                              );
                    }
                }),
                (Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {
                    var global = getGlobalObject(),
                        from = handlerData.from,
                        to = handlerData.to,
                        parsedLoc = parseUrl(global.location.href),
                        parsedFrom = parseUrl(from),
                        parsedTo = parseUrl(to);
                    parsedFrom.path || (parsedFrom = parsedLoc),
                        parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host && (to = parsedTo.relative),
                        parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host && (from = parsedFrom.relative),
                        getCurrentHub().addBreadcrumb({ category: "navigation", data: { from: from, to: to } });
                }),
                (Breadcrumbs.prototype.setupOnce = function () {
                    var _this = this;
                    this._options.console &&
                        addInstrumentationHandler({
                            callback: function () {
                                for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                _this._consoleBreadcrumb.apply(_this, __spread(args));
                            },
                            type: "console",
                        }),
                        this._options.dom &&
                            addInstrumentationHandler({
                                callback: function () {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    _this._domBreadcrumb.apply(_this, __spread(args));
                                },
                                type: "dom",
                            }),
                        this._options.xhr &&
                            addInstrumentationHandler({
                                callback: function () {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    _this._xhrBreadcrumb.apply(_this, __spread(args));
                                },
                                type: "xhr",
                            }),
                        this._options.fetch &&
                            addInstrumentationHandler({
                                callback: function () {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    _this._fetchBreadcrumb.apply(_this, __spread(args));
                                },
                                type: "fetch",
                            }),
                        this._options.history &&
                            addInstrumentationHandler({
                                callback: function () {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    _this._historyBreadcrumb.apply(_this, __spread(args));
                                },
                                type: "history",
                            });
                }),
                (Breadcrumbs.id = "Breadcrumbs"),
                Breadcrumbs
            );
        })();
    function addSentryBreadcrumb(serializedData) {
        try {
            var event_1 = JSON.parse(serializedData);
            getCurrentHub().addBreadcrumb({ category: "sentry", event_id: event_1.event_id, level: event_1.level || exports.Severity.fromString("error"), message: getEventDescription(event_1) }, { event: event_1 });
        } catch (_oO) {
            logger.error("Error while adding sentry type breadcrumb");
        }
    }
    var DEFAULT_KEY = "cause",
        DEFAULT_LIMIT = 5,
        LinkedErrors = (function () {
            function LinkedErrors(options) {
                void 0 === options && (options = {}), (this.name = LinkedErrors.id), (this._key = options.key || DEFAULT_KEY), (this._limit = options.limit || DEFAULT_LIMIT);
            }
            return (
                (LinkedErrors.prototype.setupOnce = function () {
                    addGlobalEventProcessor(function (event, hint) {
                        var self = getCurrentHub().getIntegration(LinkedErrors);
                        return self ? self._handler(event, hint) : event;
                    });
                }),
                (LinkedErrors.prototype._handler = function (event, hint) {
                    if (!(event.exception && event.exception.values && hint && isInstanceOf(hint.originalException, Error))) return event;
                    var linkedErrors = this._walkErrorTree(hint.originalException, this._key);
                    return (event.exception.values = __spread(linkedErrors, event.exception.values)), event;
                }),
                (LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {
                    if ((void 0 === stack && (stack = []), !isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit)) return stack;
                    var exception = exceptionFromStacktrace(computeStackTrace(error[key]));
                    return this._walkErrorTree(error[key], key, __spread([exception], stack));
                }),
                (LinkedErrors.id = "LinkedErrors"),
                LinkedErrors
            );
        })(),
        global$4 = getGlobalObject(),
        UserAgent = (function () {
            function UserAgent() {
                this.name = UserAgent.id;
            }
            return (
                (UserAgent.prototype.setupOnce = function () {
                    addGlobalEventProcessor(function (event) {
                        if (getCurrentHub().getIntegration(UserAgent)) {
                            if (!global$4.navigator || !global$4.location) return event;
                            var request = event.request || {};
                            return (request.url = request.url || global$4.location.href), (request.headers = request.headers || {}), (request.headers["User-Agent"] = global$4.navigator.userAgent), __assign({}, event, { request: request });
                        }
                        return event;
                    });
                }),
                (UserAgent.id = "UserAgent"),
                UserAgent
            );
        })(),
        BrowserIntegrations = Object.freeze({ GlobalHandlers: GlobalHandlers, TryCatch: TryCatch, Breadcrumbs: Breadcrumbs, LinkedErrors: LinkedErrors, UserAgent: UserAgent }),
        defaultIntegrations = [new InboundFilters(), new FunctionToString(), new TryCatch(), new Breadcrumbs(), new GlobalHandlers(), new LinkedErrors(), new UserAgent()];
    var windowIntegrations = {},
        _window = getGlobalObject();
    _window.Sentry && _window.Sentry.Integrations && (windowIntegrations = _window.Sentry.Integrations);
    var INTEGRATIONS = __assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);
    return (
        (exports.BrowserClient = BrowserClient),
        (exports.Hub = Hub),
        (exports.Integrations = INTEGRATIONS),
        (exports.SDK_NAME = SDK_NAME),
        (exports.SDK_VERSION = "5.10.2"),
        (exports.Scope = Scope),
        (exports.Transports = index),
        (exports.addBreadcrumb = function (breadcrumb) {
            callOnHub("addBreadcrumb", breadcrumb);
        }),
        (exports.addGlobalEventProcessor = addGlobalEventProcessor),
        (exports.captureEvent = function (event) {
            return callOnHub("captureEvent", event);
        }),
        (exports.captureException = captureException),
        (exports.captureMessage = function (message, level) {
            var syntheticException;
            try {
                throw new Error(message);
            } catch (exception) {
                syntheticException = exception;
            }
            return callOnHub("captureMessage", message, level, { originalException: message, syntheticException: syntheticException });
        }),
        (exports.close = function (timeout) {
            var client = getCurrentHub().getClient();
            return client ? client.close(timeout) : SyncPromise.reject(!1);
        }),
        (exports.configureScope = function (callback) {
            callOnHub("configureScope", callback);
        }),
        (exports.defaultIntegrations = defaultIntegrations),
        (exports.flush = function (timeout) {
            var client = getCurrentHub().getClient();
            return client ? client.flush(timeout) : SyncPromise.reject(!1);
        }),
        (exports.forceLoad = function () {}),
        (exports.getCurrentHub = getCurrentHub),
        (exports.getHubFromCarrier = getHubFromCarrier),
        (exports.init = function (options) {
            if ((void 0 === options && (options = {}), void 0 === options.defaultIntegrations && (options.defaultIntegrations = defaultIntegrations), void 0 === options.release)) {
                var window_1 = getGlobalObject();
                window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id && (options.release = window_1.SENTRY_RELEASE.id);
            }
            !(function (clientClass, options) {
                !0 === options.debug && logger.enable(), getCurrentHub().bindClient(new clientClass(options));
            })(BrowserClient, options);
        }),
        (exports.lastEventId = function () {
            return getCurrentHub().lastEventId();
        }),
        (exports.onLoad = function (callback) {
            callback();
        }),
        (exports.setContext = function (name, context) {
            callOnHub("setContext", name, context);
        }),
        (exports.setExtra = function (key, extra) {
            callOnHub("setExtra", key, extra);
        }),
        (exports.setExtras = function (extras) {
            callOnHub("setExtras", extras);
        }),
        (exports.setTag = function (key, value) {
            callOnHub("setTag", key, value);
        }),
        (exports.setTags = function (tags) {
            callOnHub("setTags", tags);
        }),
        (exports.setUser = function (user) {
            callOnHub("setUser", user);
        }),
        (exports.showReportDialog = function (options) {
            void 0 === options && (options = {}), options.eventId || (options.eventId = getCurrentHub().lastEventId());
            var client = getCurrentHub().getClient();
            client && client.showReportDialog(options);
        }),
        (exports.withScope = withScope),
        (exports.wrap = function (fn) {
            return wrap(fn)();
        }),
        exports
    );
})({});
!(function (global, factory) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports
        ? (module.exports = global.document
              ? factory(global, !0)
              : function (w) {
                    if (!w.document) throw new Error("jQuery requires a window with a document");
                    return factory(w);
                })
        : factory(global);
})("undefined" != typeof window ? window : this, function (window, noGlobal) {
    "use strict";
    var arr = [],
        document = window.document,
        getProto = Object.getPrototypeOf,
        slice = arr.slice,
        concat = arr.concat,
        push = arr.push,
        indexOf = arr.indexOf,
        class2type = {},
        toString = class2type.toString,
        hasOwn = class2type.hasOwnProperty,
        fnToString = hasOwn.toString,
        ObjectFunctionString = fnToString.call(Object),
        support = {},
        isFunction = function (obj) {
            return "function" == typeof obj && "number" != typeof obj.nodeType;
        },
        isWindow = function (obj) {
            return null != obj && obj === obj.window;
        },
        preservedScriptAttributes = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function DOMEval(code, node, doc) {
        var i,
            val,
            script = (doc = doc || document).createElement("script");
        if (((script.text = code), node)) for (i in preservedScriptAttributes) (val = node[i] || (node.getAttribute && node.getAttribute(i))) && script.setAttribute(i, val);
        doc.head.appendChild(script).parentNode.removeChild(script);
    }
    function toType(obj) {
        return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj;
    }
    var jQuery = function (selector, context) {
            return new jQuery.fn.init(selector, context);
        },
        rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    function isArrayLike(obj) {
        var length = !!obj && "length" in obj && obj.length,
            type = toType(obj);
        return !isFunction(obj) && !isWindow(obj) && ("array" === type || 0 === length || ("number" == typeof length && length > 0 && length - 1 in obj));
    }
    (jQuery.fn = jQuery.prototype = {
        jquery: "3.4.1",
        constructor: jQuery,
        length: 0,
        toArray: function () {
            return slice.call(this);
        },
        get: function (num) {
            return null == num ? slice.call(this) : num < 0 ? this[num + this.length] : this[num];
        },
        pushStack: function (elems) {
            var ret = jQuery.merge(this.constructor(), elems);
            return (ret.prevObject = this), ret;
        },
        each: function (callback) {
            return jQuery.each(this, callback);
        },
        map: function (callback) {
            return this.pushStack(
                jQuery.map(this, function (elem, i) {
                    return callback.call(elem, i, elem);
                })
            );
        },
        slice: function () {
            return this.pushStack(slice.apply(this, arguments));
        },
        first: function () {
            return this.eq(0);
        },
        last: function () {
            return this.eq(-1);
        },
        eq: function (i) {
            var len = this.length,
                j = +i + (i < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
        },
        end: function () {
            return this.prevObject || this.constructor();
        },
        push: push,
        sort: arr.sort,
        splice: arr.splice,
    }),
        (jQuery.extend = jQuery.fn.extend = function () {
            var options,
                name,
                src,
                copy,
                copyIsArray,
                clone,
                target = arguments[0] || {},
                i = 1,
                length = arguments.length,
                deep = !1;
            for ("boolean" == typeof target && ((deep = target), (target = arguments[i] || {}), i++), "object" == typeof target || isFunction(target) || (target = {}), i === length && ((target = this), i--); i < length; i++)
                if (null != (options = arguments[i]))
                    for (name in options)
                        (copy = options[name]),
                            "__proto__" !== name &&
                                target !== copy &&
                                (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))
                                    ? ((src = target[name]), (clone = copyIsArray && !Array.isArray(src) ? [] : copyIsArray || jQuery.isPlainObject(src) ? src : {}), (copyIsArray = !1), (target[name] = jQuery.extend(deep, clone, copy)))
                                    : void 0 !== copy && (target[name] = copy));
            return target;
        }),
        jQuery.extend({
            expando: "jQuery" + ("3.4.1" + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function (msg) {
                throw new Error(msg);
            },
            noop: function () {},
            isPlainObject: function (obj) {
                var proto, Ctor;
                return (
                    !(!obj || "[object Object]" !== toString.call(obj)) &&
                    (!(proto = getProto(obj)) || ("function" == typeof (Ctor = hasOwn.call(proto, "constructor") && proto.constructor) && fnToString.call(Ctor) === ObjectFunctionString))
                );
            },
            isEmptyObject: function (obj) {
                var name;
                for (name in obj) return !1;
                return !0;
            },
            globalEval: function (code, options) {
                DOMEval(code, { nonce: options && options.nonce });
            },
            each: function (obj, callback) {
                var length,
                    i = 0;
                if (isArrayLike(obj)) for (length = obj.length; i < length && !1 !== callback.call(obj[i], i, obj[i]); i++);
                else for (i in obj) if (!1 === callback.call(obj[i], i, obj[i])) break;
                return obj;
            },
            trim: function (text) {
                return null == text ? "" : (text + "").replace(rtrim, "");
            },
            makeArray: function (arr, results) {
                var ret = results || [];
                return null != arr && (isArrayLike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [arr] : arr) : push.call(ret, arr)), ret;
            },
            inArray: function (elem, arr, i) {
                return null == arr ? -1 : indexOf.call(arr, elem, i);
            },
            merge: function (first, second) {
                for (var len = +second.length, j = 0, i = first.length; j < len; j++) first[i++] = second[j];
                return (first.length = i), first;
            },
            grep: function (elems, callback, invert) {
                for (var matches = [], i = 0, length = elems.length, callbackExpect = !invert; i < length; i++) !callback(elems[i], i) !== callbackExpect && matches.push(elems[i]);
                return matches;
            },
            map: function (elems, callback, arg) {
                var length,
                    value,
                    i = 0,
                    ret = [];
                if (isArrayLike(elems)) for (length = elems.length; i < length; i++) null != (value = callback(elems[i], i, arg)) && ret.push(value);
                else for (i in elems) null != (value = callback(elems[i], i, arg)) && ret.push(value);
                return concat.apply([], ret);
            },
            guid: 1,
            support: support,
        }),
        "function" == typeof Symbol && (jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]),
        jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase();
        });
    var Sizzle = (function (window) {
        var i,
            support,
            Expr,
            getText,
            isXML,
            tokenize,
            compile,
            select,
            outermostContext,
            sortInput,
            hasDuplicate,
            setDocument,
            document,
            docElem,
            documentIsHTML,
            rbuggyQSA,
            rbuggyMatches,
            matches,
            contains,
            expando = "sizzle" + 1 * new Date(),
            preferredDoc = window.document,
            dirruns = 0,
            done = 0,
            classCache = createCache(),
            tokenCache = createCache(),
            compilerCache = createCache(),
            nonnativeSelectorCache = createCache(),
            sortOrder = function (a, b) {
                return a === b && (hasDuplicate = !0), 0;
            },
            hasOwn = {}.hasOwnProperty,
            arr = [],
            pop = arr.pop,
            push_native = arr.push,
            push = arr.push,
            slice = arr.slice,
            indexOf = function (list, elem) {
                for (var i = 0, len = list.length; i < len; i++) if (list[i] === elem) return i;
                return -1;
            },
            booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            whitespace = "[\\x20\\t\\r\\n\\f]",
            identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
            attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
            pseudos = ":(" + identifier + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|.*)\\)|)",
            rwhitespace = new RegExp(whitespace + "+", "g"),
            rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
            rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
            rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
            rdescend = new RegExp(whitespace + "|>"),
            rpseudo = new RegExp(pseudos),
            ridentifier = new RegExp("^" + identifier + "$"),
            matchExpr = {
                ID: new RegExp("^#(" + identifier + ")"),
                CLASS: new RegExp("^\\.(" + identifier + ")"),
                TAG: new RegExp("^(" + identifier + "|[*])"),
                ATTR: new RegExp("^" + attributes),
                PSEUDO: new RegExp("^" + pseudos),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + booleans + ")$", "i"),
                needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i"),
            },
            rhtml = /HTML$/i,
            rinputs = /^(?:input|select|textarea|button)$/i,
            rheader = /^h\d$/i,
            rnative = /^[^{]+\{\s*\[native \w/,
            rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            rsibling = /[+~]/,
            runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
            funescape = function (_, escaped, escapedWhitespace) {
                var high = "0x" + escaped - 65536;
                return high != high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode((high >> 10) | 55296, (1023 & high) | 56320);
            },
            rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
            fcssescape = function (ch, asCodePoint) {
                return asCodePoint ? ("\0" === ch ? "�" : ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ") : "\\" + ch;
            },
            unloadHandler = function () {
                setDocument();
            },
            inDisabledFieldset = addCombinator(
                function (elem) {
                    return !0 === elem.disabled && "fieldset" === elem.nodeName.toLowerCase();
                },
                { dir: "parentNode", next: "legend" }
            );
        try {
            push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes), arr[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
            push = {
                apply: arr.length
                    ? function (target, els) {
                          push_native.apply(target, slice.call(els));
                      }
                    : function (target, els) {
                          for (var j = target.length, i = 0; (target[j++] = els[i++]); );
                          target.length = j - 1;
                      },
            };
        }
        function Sizzle(selector, context, results, seed) {
            var m,
                i,
                elem,
                nid,
                match,
                groups,
                newSelector,
                newContext = context && context.ownerDocument,
                nodeType = context ? context.nodeType : 9;
            if (((results = results || []), "string" != typeof selector || !selector || (1 !== nodeType && 9 !== nodeType && 11 !== nodeType))) return results;
            if (!seed && ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), (context = context || document), documentIsHTML)) {
                if (11 !== nodeType && (match = rquickExpr.exec(selector)))
                    if ((m = match[1])) {
                        if (9 === nodeType) {
                            if (!(elem = context.getElementById(m))) return results;
                            if (elem.id === m) return results.push(elem), results;
                        } else if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), results;
                    } else {
                        if (match[2]) return push.apply(results, context.getElementsByTagName(selector)), results;
                        if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) return push.apply(results, context.getElementsByClassName(m)), results;
                    }
                if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (1 !== nodeType || "object" !== context.nodeName.toLowerCase())) {
                    if (((newSelector = selector), (newContext = context), 1 === nodeType && rdescend.test(selector))) {
                        for ((nid = context.getAttribute("id")) ? (nid = nid.replace(rcssescape, fcssescape)) : context.setAttribute("id", (nid = expando)), i = (groups = tokenize(selector)).length; i--; )
                            groups[i] = "#" + nid + " " + toSelector(groups[i]);
                        (newSelector = groups.join(",")), (newContext = (rsibling.test(selector) && testContext(context.parentNode)) || context);
                    }
                    try {
                        return push.apply(results, newContext.querySelectorAll(newSelector)), results;
                    } catch (qsaError) {
                        nonnativeSelectorCache(selector, !0);
                    } finally {
                        nid === expando && context.removeAttribute("id");
                    }
                }
            }
            return select(selector.replace(rtrim, "$1"), context, results, seed);
        }
        function createCache() {
            var keys = [];
            return function cache(key, value) {
                return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], (cache[key + " "] = value);
            };
        }
        function markFunction(fn) {
            return (fn[expando] = !0), fn;
        }
        function assert(fn) {
            var el = document.createElement("fieldset");
            try {
                return !!fn(el);
            } catch (e) {
                return !1;
            } finally {
                el.parentNode && el.parentNode.removeChild(el), (el = null);
            }
        }
        function addHandle(attrs, handler) {
            for (var arr = attrs.split("|"), i = arr.length; i--; ) Expr.attrHandle[arr[i]] = handler;
        }
        function siblingCheck(a, b) {
            var cur = b && a,
                diff = cur && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
            if (diff) return diff;
            if (cur) for (; (cur = cur.nextSibling); ) if (cur === b) return -1;
            return a ? 1 : -1;
        }
        function createInputPseudo(type) {
            return function (elem) {
                return "input" === elem.nodeName.toLowerCase() && elem.type === type;
            };
        }
        function createButtonPseudo(type) {
            return function (elem) {
                var name = elem.nodeName.toLowerCase();
                return ("input" === name || "button" === name) && elem.type === type;
            };
        }
        function createDisabledPseudo(disabled) {
            return function (elem) {
                return "form" in elem
                    ? elem.parentNode && !1 === elem.disabled
                        ? "label" in elem
                            ? "label" in elem.parentNode
                                ? elem.parentNode.disabled === disabled
                                : elem.disabled === disabled
                            : elem.isDisabled === disabled || (elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled)
                        : elem.disabled === disabled
                    : "label" in elem && elem.disabled === disabled;
            };
        }
        function createPositionalPseudo(fn) {
            return markFunction(function (argument) {
                return (
                    (argument = +argument),
                    markFunction(function (seed, matches) {
                        for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--; ) seed[(j = matchIndexes[i])] && (seed[j] = !(matches[j] = seed[j]));
                    })
                );
            });
        }
        function testContext(context) {
            return context && void 0 !== context.getElementsByTagName && context;
        }
        for (i in ((support = Sizzle.support = {}),
        (isXML = Sizzle.isXML = function (elem) {
            var namespace = elem.namespaceURI,
                docElem = (elem.ownerDocument || elem).documentElement;
            return !rhtml.test(namespace || (docElem && docElem.nodeName) || "HTML");
        }),
        (setDocument = Sizzle.setDocument = function (node) {
            var hasCompare,
                subWindow,
                doc = node ? node.ownerDocument || node : preferredDoc;
            return doc !== document && 9 === doc.nodeType && doc.documentElement
                ? ((docElem = (document = doc).documentElement),
                  (documentIsHTML = !isXML(document)),
                  preferredDoc !== document &&
                      (subWindow = document.defaultView) &&
                      subWindow.top !== subWindow &&
                      (subWindow.addEventListener ? subWindow.addEventListener("unload", unloadHandler, !1) : subWindow.attachEvent && subWindow.attachEvent("onunload", unloadHandler)),
                  (support.attributes = assert(function (el) {
                      return (el.className = "i"), !el.getAttribute("className");
                  })),
                  (support.getElementsByTagName = assert(function (el) {
                      return el.appendChild(document.createComment("")), !el.getElementsByTagName("*").length;
                  })),
                  (support.getElementsByClassName = rnative.test(document.getElementsByClassName)),
                  (support.getById = assert(function (el) {
                      return (docElem.appendChild(el).id = expando), !document.getElementsByName || !document.getElementsByName(expando).length;
                  })),
                  support.getById
                      ? ((Expr.filter.ID = function (id) {
                            var attrId = id.replace(runescape, funescape);
                            return function (elem) {
                                return elem.getAttribute("id") === attrId;
                            };
                        }),
                        (Expr.find.ID = function (id, context) {
                            if (void 0 !== context.getElementById && documentIsHTML) {
                                var elem = context.getElementById(id);
                                return elem ? [elem] : [];
                            }
                        }))
                      : ((Expr.filter.ID = function (id) {
                            var attrId = id.replace(runescape, funescape);
                            return function (elem) {
                                var node = void 0 !== elem.getAttributeNode && elem.getAttributeNode("id");
                                return node && node.value === attrId;
                            };
                        }),
                        (Expr.find.ID = function (id, context) {
                            if (void 0 !== context.getElementById && documentIsHTML) {
                                var node,
                                    i,
                                    elems,
                                    elem = context.getElementById(id);
                                if (elem) {
                                    if ((node = elem.getAttributeNode("id")) && node.value === id) return [elem];
                                    for (elems = context.getElementsByName(id), i = 0; (elem = elems[i++]); ) if ((node = elem.getAttributeNode("id")) && node.value === id) return [elem];
                                }
                                return [];
                            }
                        })),
                  (Expr.find.TAG = support.getElementsByTagName
                      ? function (tag, context) {
                            return void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag) : support.qsa ? context.querySelectorAll(tag) : void 0;
                        }
                      : function (tag, context) {
                            var elem,
                                tmp = [],
                                i = 0,
                                results = context.getElementsByTagName(tag);
                            if ("*" === tag) {
                                for (; (elem = results[i++]); ) 1 === elem.nodeType && tmp.push(elem);
                                return tmp;
                            }
                            return results;
                        }),
                  (Expr.find.CLASS =
                      support.getElementsByClassName &&
                      function (className, context) {
                          if (void 0 !== context.getElementsByClassName && documentIsHTML) return context.getElementsByClassName(className);
                      }),
                  (rbuggyMatches = []),
                  (rbuggyQSA = []),
                  (support.qsa = rnative.test(document.querySelectorAll)) &&
                      (assert(function (el) {
                          (docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a><select id='" + expando + "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                              el.querySelectorAll("[msallowcapture^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"),
                              el.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"),
                              el.querySelectorAll("[id~=" + expando + "-]").length || rbuggyQSA.push("~="),
                              el.querySelectorAll(":checked").length || rbuggyQSA.push(":checked"),
                              el.querySelectorAll("a#" + expando + "+*").length || rbuggyQSA.push(".#.+[+~]");
                      }),
                      assert(function (el) {
                          el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                          var input = document.createElement("input");
                          input.setAttribute("type", "hidden"),
                              el.appendChild(input).setAttribute("name", "D"),
                              el.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="),
                              2 !== el.querySelectorAll(":enabled").length && rbuggyQSA.push(":enabled", ":disabled"),
                              (docElem.appendChild(el).disabled = !0),
                              2 !== el.querySelectorAll(":disabled").length && rbuggyQSA.push(":enabled", ":disabled"),
                              el.querySelectorAll("*,:x"),
                              rbuggyQSA.push(",.*:");
                      })),
                  (support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector))) &&
                      assert(function (el) {
                          (support.disconnectedMatch = matches.call(el, "*")), matches.call(el, "[s!='']:x"), rbuggyMatches.push("!=", pseudos);
                      }),
                  (rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"))),
                  (rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"))),
                  (hasCompare = rnative.test(docElem.compareDocumentPosition)),
                  (contains =
                      hasCompare || rnative.test(docElem.contains)
                          ? function (a, b) {
                                var adown = 9 === a.nodeType ? a.documentElement : a,
                                    bup = b && b.parentNode;
                                return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)));
                            }
                          : function (a, b) {
                                if (b) for (; (b = b.parentNode); ) if (b === a) return !0;
                                return !1;
                            }),
                  (sortOrder = hasCompare
                      ? function (a, b) {
                            if (a === b) return (hasDuplicate = !0), 0;
                            var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                            return (
                                compare ||
                                (1 & (compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1) || (!support.sortDetached && b.compareDocumentPosition(a) === compare)
                                    ? a === document || (a.ownerDocument === preferredDoc && contains(preferredDoc, a))
                                        ? -1
                                        : b === document || (b.ownerDocument === preferredDoc && contains(preferredDoc, b))
                                        ? 1
                                        : sortInput
                                        ? indexOf(sortInput, a) - indexOf(sortInput, b)
                                        : 0
                                    : 4 & compare
                                    ? -1
                                    : 1)
                            );
                        }
                      : function (a, b) {
                            if (a === b) return (hasDuplicate = !0), 0;
                            var cur,
                                i = 0,
                                aup = a.parentNode,
                                bup = b.parentNode,
                                ap = [a],
                                bp = [b];
                            if (!aup || !bup) return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                            if (aup === bup) return siblingCheck(a, b);
                            for (cur = a; (cur = cur.parentNode); ) ap.unshift(cur);
                            for (cur = b; (cur = cur.parentNode); ) bp.unshift(cur);
                            for (; ap[i] === bp[i]; ) i++;
                            return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
                        }),
                  document)
                : document;
        }),
        (Sizzle.matches = function (expr, elements) {
            return Sizzle(expr, null, null, elements);
        }),
        (Sizzle.matchesSelector = function (elem, expr) {
            if (
                ((elem.ownerDocument || elem) !== document && setDocument(elem),
                support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr)))
            )
                try {
                    var ret = matches.call(elem, expr);
                    if (ret || support.disconnectedMatch || (elem.document && 11 !== elem.document.nodeType)) return ret;
                } catch (e) {
                    nonnativeSelectorCache(expr, !0);
                }
            return Sizzle(expr, document, null, [elem]).length > 0;
        }),
        (Sizzle.contains = function (context, elem) {
            return (context.ownerDocument || context) !== document && setDocument(context), contains(context, elem);
        }),
        (Sizzle.attr = function (elem, name) {
            (elem.ownerDocument || elem) !== document && setDocument(elem);
            var fn = Expr.attrHandle[name.toLowerCase()],
                val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
            return void 0 !== val ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }),
        (Sizzle.escape = function (sel) {
            return (sel + "").replace(rcssescape, fcssescape);
        }),
        (Sizzle.error = function (msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        }),
        (Sizzle.uniqueSort = function (results) {
            var elem,
                duplicates = [],
                j = 0,
                i = 0;
            if (((hasDuplicate = !support.detectDuplicates), (sortInput = !support.sortStable && results.slice(0)), results.sort(sortOrder), hasDuplicate)) {
                for (; (elem = results[i++]); ) elem === results[i] && (j = duplicates.push(i));
                for (; j--; ) results.splice(duplicates[j], 1);
            }
            return (sortInput = null), results;
        }),
        (getText = Sizzle.getText = function (elem) {
            var node,
                ret = "",
                i = 0,
                nodeType = elem.nodeType;
            if (nodeType) {
                if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                    if ("string" == typeof elem.textContent) return elem.textContent;
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem);
                } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue;
            } else for (; (node = elem[i++]); ) ret += getText(node);
            return ret;
        }),
        ((Expr = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } },
            preFilter: {
                ATTR: function (match) {
                    return (match[1] = match[1].replace(runescape, funescape)), (match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape)), "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4);
                },
                CHILD: function (match) {
                    return (
                        (match[1] = match[1].toLowerCase()),
                        "nth" === match[1].slice(0, 3)
                            ? (match[3] || Sizzle.error(match[0]), (match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3]))), (match[5] = +(match[7] + match[8] || "odd" === match[3])))
                            : match[3] && Sizzle.error(match[0]),
                        match
                    );
                },
                PSEUDO: function (match) {
                    var excess,
                        unquoted = !match[6] && match[2];
                    return matchExpr.CHILD.test(match[0])
                        ? null
                        : (match[3]
                              ? (match[2] = match[4] || match[5] || "")
                              : unquoted &&
                                rpseudo.test(unquoted) &&
                                (excess = tokenize(unquoted, !0)) &&
                                (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) &&
                                ((match[0] = match[0].slice(0, excess)), (match[2] = unquoted.slice(0, excess))),
                          match.slice(0, 3));
                },
            },
            filter: {
                TAG: function (nodeNameSelector) {
                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                    return "*" === nodeNameSelector
                        ? function () {
                              return !0;
                          }
                        : function (elem) {
                              return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                          };
                },
                CLASS: function (className) {
                    var pattern = classCache[className + " "];
                    return (
                        pattern ||
                        ((pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) &&
                            classCache(className, function (elem) {
                                return pattern.test(("string" == typeof elem.className && elem.className) || (void 0 !== elem.getAttribute && elem.getAttribute("class")) || "");
                            }))
                    );
                },
                ATTR: function (name, operator, check) {
                    return function (elem) {
                        var result = Sizzle.attr(elem, name);
                        return null == result
                            ? "!=" === operator
                            : !operator ||
                                  ((result += ""),
                                  "=" === operator
                                      ? result === check
                                      : "!=" === operator
                                      ? result !== check
                                      : "^=" === operator
                                      ? check && 0 === result.indexOf(check)
                                      : "*=" === operator
                                      ? check && result.indexOf(check) > -1
                                      : "$=" === operator
                                      ? check && result.slice(-check.length) === check
                                      : "~=" === operator
                                      ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1
                                      : "|=" === operator && (result === check || result.slice(0, check.length + 1) === check + "-"));
                    };
                },
                CHILD: function (type, what, argument, first, last) {
                    var simple = "nth" !== type.slice(0, 3),
                        forward = "last" !== type.slice(-4),
                        ofType = "of-type" === what;
                    return 1 === first && 0 === last
                        ? function (elem) {
                              return !!elem.parentNode;
                          }
                        : function (elem, context, xml) {
                              var cache,
                                  uniqueCache,
                                  outerCache,
                                  node,
                                  nodeIndex,
                                  start,
                                  dir = simple !== forward ? "nextSibling" : "previousSibling",
                                  parent = elem.parentNode,
                                  name = ofType && elem.nodeName.toLowerCase(),
                                  useCache = !xml && !ofType,
                                  diff = !1;
                              if (parent) {
                                  if (simple) {
                                      for (; dir; ) {
                                          for (node = elem; (node = node[dir]); ) if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                                          start = dir = "only" === type && !start && "nextSibling";
                                      }
                                      return !0;
                                  }
                                  if (((start = [forward ? parent.firstChild : parent.lastChild]), forward && useCache)) {
                                      for (
                                          diff =
                                              (nodeIndex =
                                                  (cache = (uniqueCache = (outerCache = (node = parent)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1]) &&
                                              cache[2],
                                              node = nodeIndex && parent.childNodes[nodeIndex];
                                          (node = (++nodeIndex && node && node[dir]) || (diff = nodeIndex = 0) || start.pop());

                                      )
                                          if (1 === node.nodeType && ++diff && node === elem) {
                                              uniqueCache[type] = [dirruns, nodeIndex, diff];
                                              break;
                                          }
                                  } else if (
                                      (useCache &&
                                          (diff = nodeIndex =
                                              (cache = (uniqueCache = (outerCache = (node = elem)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1]),
                                      !1 === diff)
                                  )
                                      for (
                                          ;
                                          (node = (++nodeIndex && node && node[dir]) || (diff = nodeIndex = 0) || start.pop()) &&
                                          ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) ||
                                              !++diff ||
                                              (useCache && ((uniqueCache = (outerCache = node[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] = [dirruns, diff]), node !== elem));

                                      );
                                  return (diff -= last) === first || (diff % first == 0 && diff / first >= 0);
                              }
                          };
                },
                PSEUDO: function (pseudo, argument) {
                    var args,
                        fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                    return fn[expando]
                        ? fn(argument)
                        : fn.length > 1
                        ? ((args = [pseudo, pseudo, "", argument]),
                          Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())
                              ? markFunction(function (seed, matches) {
                                    for (var idx, matched = fn(seed, argument), i = matched.length; i--; ) seed[(idx = indexOf(seed, matched[i]))] = !(matches[idx] = matched[i]);
                                })
                              : function (elem) {
                                    return fn(elem, 0, args);
                                })
                        : fn;
                },
            },
            pseudos: {
                not: markFunction(function (selector) {
                    var input = [],
                        results = [],
                        matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando]
                        ? markFunction(function (seed, matches, context, xml) {
                              for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--; ) (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem));
                          })
                        : function (elem, context, xml) {
                              return (input[0] = elem), matcher(input, null, xml, results), (input[0] = null), !results.pop();
                          };
                }),
                has: markFunction(function (selector) {
                    return function (elem) {
                        return Sizzle(selector, elem).length > 0;
                    };
                }),
                contains: markFunction(function (text) {
                    return (
                        (text = text.replace(runescape, funescape)),
                        function (elem) {
                            return (elem.textContent || getText(elem)).indexOf(text) > -1;
                        }
                    );
                }),
                lang: markFunction(function (lang) {
                    return (
                        ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang),
                        (lang = lang.replace(runescape, funescape).toLowerCase()),
                        function (elem) {
                            var elemLang;
                            do {
                                if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) return (elemLang = elemLang.toLowerCase()) === lang || 0 === elemLang.indexOf(lang + "-");
                            } while ((elem = elem.parentNode) && 1 === elem.nodeType);
                            return !1;
                        }
                    );
                }),
                target: function (elem) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                root: function (elem) {
                    return elem === docElem;
                },
                focus: function (elem) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                enabled: createDisabledPseudo(!1),
                disabled: createDisabledPseudo(!0),
                checked: function (elem) {
                    var nodeName = elem.nodeName.toLowerCase();
                    return ("input" === nodeName && !!elem.checked) || ("option" === nodeName && !!elem.selected);
                },
                selected: function (elem) {
                    return elem.parentNode && elem.parentNode.selectedIndex, !0 === elem.selected;
                },
                empty: function (elem) {
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) if (elem.nodeType < 6) return !1;
                    return !0;
                },
                parent: function (elem) {
                    return !Expr.pseudos.empty(elem);
                },
                header: function (elem) {
                    return rheader.test(elem.nodeName);
                },
                input: function (elem) {
                    return rinputs.test(elem.nodeName);
                },
                button: function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return ("input" === name && "button" === elem.type) || "button" === name;
                },
                text: function (elem) {
                    var attr;
                    return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || "text" === attr.toLowerCase());
                },
                first: createPositionalPseudo(function () {
                    return [0];
                }),
                last: createPositionalPseudo(function (matchIndexes, length) {
                    return [length - 1];
                }),
                eq: createPositionalPseudo(function (matchIndexes, length, argument) {
                    return [argument < 0 ? argument + length : argument];
                }),
                even: createPositionalPseudo(function (matchIndexes, length) {
                    for (var i = 0; i < length; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                odd: createPositionalPseudo(function (matchIndexes, length) {
                    for (var i = 1; i < length; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                lt: createPositionalPseudo(function (matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : argument > length ? length : argument; --i >= 0; ) matchIndexes.push(i);
                    return matchIndexes;
                }),
                gt: createPositionalPseudo(function (matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : argument; ++i < length; ) matchIndexes.push(i);
                    return matchIndexes;
                }),
            },
        }).pseudos.nth = Expr.pseudos.eq),
        { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
            Expr.pseudos[i] = createInputPseudo(i);
        for (i in { submit: !0, reset: !0 }) Expr.pseudos[i] = createButtonPseudo(i);
        function setFilters() {}
        function toSelector(tokens) {
            for (var i = 0, len = tokens.length, selector = ""; i < len; i++) selector += tokens[i].value;
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir,
                skip = combinator.next,
                key = skip || dir,
                checkNonElements = base && "parentNode" === key,
                doneName = done++;
            return combinator.first
                ? function (elem, context, xml) {
                      for (; (elem = elem[dir]); ) if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml);
                      return !1;
                  }
                : function (elem, context, xml) {
                      var oldCache,
                          uniqueCache,
                          outerCache,
                          newCache = [dirruns, doneName];
                      if (xml) {
                          for (; (elem = elem[dir]); ) if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0;
                      } else
                          for (; (elem = elem[dir]); )
                              if (1 === elem.nodeType || checkNonElements)
                                  if (((uniqueCache = (outerCache = elem[expando] || (elem[expando] = {}))[elem.uniqueID] || (outerCache[elem.uniqueID] = {})), skip && skip === elem.nodeName.toLowerCase())) elem = elem[dir] || elem;
                                  else {
                                      if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) return (newCache[2] = oldCache[2]);
                                      if (((uniqueCache[key] = newCache), (newCache[2] = matcher(elem, context, xml)))) return !0;
                                  }
                      return !1;
                  };
        }
        function elementMatcher(matchers) {
            return matchers.length > 1
                ? function (elem, context, xml) {
                      for (var i = matchers.length; i--; ) if (!matchers[i](elem, context, xml)) return !1;
                      return !0;
                  }
                : matchers[0];
        }
        function condense(unmatched, map, filter, context, xml) {
            for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; i < len; i++) (elem = unmatched[i]) && ((filter && !filter(elem, context, xml)) || (newUnmatched.push(elem), mapped && map.push(i)));
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            return (
                postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)),
                postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)),
                markFunction(function (seed, results, context, xml) {
                    var temp,
                        i,
                        elem,
                        preMap = [],
                        postMap = [],
                        preexisting = results.length,
                        elems =
                            seed ||
                            (function (selector, contexts, results) {
                                for (var i = 0, len = contexts.length; i < len; i++) Sizzle(selector, contexts[i], results);
                                return results;
                            })(selector || "*", context.nodeType ? [context] : context, []),
                        matcherIn = !preFilter || (!seed && selector) ? elems : condense(elems, preMap, preFilter, context, xml),
                        matcherOut = matcher ? (postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results) : matcherIn;
                    if ((matcher && matcher(matcherIn, matcherOut, context, xml), postFilter))
                        for (temp = condense(matcherOut, postMap), postFilter(temp, [], context, xml), i = temp.length; i--; ) (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                    if (seed) {
                        if (postFinder || preFilter) {
                            if (postFinder) {
                                for (temp = [], i = matcherOut.length; i--; ) (elem = matcherOut[i]) && temp.push((matcherIn[i] = elem));
                                postFinder(null, (matcherOut = []), temp, xml);
                            }
                            for (i = matcherOut.length; i--; ) (elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1 && (seed[temp] = !(results[temp] = elem));
                        }
                    } else (matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut)), postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut);
                })
            );
        }
        function matcherFromTokens(tokens) {
            for (
                var checkContext,
                    matcher,
                    j,
                    len = tokens.length,
                    leadingRelative = Expr.relative[tokens[0].type],
                    implicitRelative = leadingRelative || Expr.relative[" "],
                    i = leadingRelative ? 1 : 0,
                    matchContext = addCombinator(
                        function (elem) {
                            return elem === checkContext;
                        },
                        implicitRelative,
                        !0
                    ),
                    matchAnyContext = addCombinator(
                        function (elem) {
                            return indexOf(checkContext, elem) > -1;
                        },
                        implicitRelative,
                        !0
                    ),
                    matchers = [
                        function (elem, context, xml) {
                            var ret = (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                            return (checkContext = null), ret;
                        },
                    ];
                i < len;
                i++
            )
                if ((matcher = Expr.relative[tokens[i].type])) matchers = [addCombinator(elementMatcher(matchers), matcher)];
                else {
                    if ((matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches))[expando]) {
                        for (j = ++i; j < len && !Expr.relative[tokens[j].type]; j++);
                        return setMatcher(
                            i > 1 && elementMatcher(matchers),
                            i > 1 && toSelector(tokens.slice(0, i - 1).concat({ value: " " === tokens[i - 2].type ? "*" : "" })).replace(rtrim, "$1"),
                            matcher,
                            i < j && matcherFromTokens(tokens.slice(i, j)),
                            j < len && matcherFromTokens((tokens = tokens.slice(j))),
                            j < len && toSelector(tokens)
                        );
                    }
                    matchers.push(matcher);
                }
            return elementMatcher(matchers);
        }
        return (
            (setFilters.prototype = Expr.filters = Expr.pseudos),
            (Expr.setFilters = new setFilters()),
            (tokenize = Sizzle.tokenize = function (selector, parseOnly) {
                var matched,
                    match,
                    tokens,
                    type,
                    soFar,
                    groups,
                    preFilters,
                    cached = tokenCache[selector + " "];
                if (cached) return parseOnly ? 0 : cached.slice(0);
                for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar; ) {
                    for (type in ((matched && !(match = rcomma.exec(soFar))) || (match && (soFar = soFar.slice(match[0].length) || soFar), groups.push((tokens = []))),
                    (matched = !1),
                    (match = rcombinators.exec(soFar)) && ((matched = match.shift()), tokens.push({ value: matched, type: match[0].replace(rtrim, " ") }), (soFar = soFar.slice(matched.length))),
                    Expr.filter))
                        !(match = matchExpr[type].exec(soFar)) ||
                            (preFilters[type] && !(match = preFilters[type](match))) ||
                            ((matched = match.shift()), tokens.push({ value: matched, type: type, matches: match }), (soFar = soFar.slice(matched.length)));
                    if (!matched) break;
                }
                return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
            }),
            (compile = Sizzle.compile = function (selector, match) {
                var i,
                    setMatchers = [],
                    elementMatchers = [],
                    cached = compilerCache[selector + " "];
                if (!cached) {
                    for (match || (match = tokenize(selector)), i = match.length; i--; ) (cached = matcherFromTokens(match[i]))[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
                    (cached = compilerCache(
                        selector,
                        (function (elementMatchers, setMatchers) {
                            var bySet = setMatchers.length > 0,
                                byElement = elementMatchers.length > 0,
                                superMatcher = function (seed, context, xml, results, outermost) {
                                    var elem,
                                        j,
                                        matcher,
                                        matchedCount = 0,
                                        i = "0",
                                        unmatched = seed && [],
                                        setMatched = [],
                                        contextBackup = outermostContext,
                                        elems = seed || (byElement && Expr.find.TAG("*", outermost)),
                                        dirrunsUnique = (dirruns += null == contextBackup ? 1 : Math.random() || 0.1),
                                        len = elems.length;
                                    for (outermost && (outermostContext = context === document || context || outermost); i !== len && null != (elem = elems[i]); i++) {
                                        if (byElement && elem) {
                                            for (j = 0, context || elem.ownerDocument === document || (setDocument(elem), (xml = !documentIsHTML)); (matcher = elementMatchers[j++]); )
                                                if (matcher(elem, context || document, xml)) {
                                                    results.push(elem);
                                                    break;
                                                }
                                            outermost && (dirruns = dirrunsUnique);
                                        }
                                        bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem));
                                    }
                                    if (((matchedCount += i), bySet && i !== matchedCount)) {
                                        for (j = 0; (matcher = setMatchers[j++]); ) matcher(unmatched, setMatched, context, xml);
                                        if (seed) {
                                            if (matchedCount > 0) for (; i--; ) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                                            setMatched = condense(setMatched);
                                        }
                                        push.apply(results, setMatched), outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1 && Sizzle.uniqueSort(results);
                                    }
                                    return outermost && ((dirruns = dirrunsUnique), (outermostContext = contextBackup)), unmatched;
                                };
                            return bySet ? markFunction(superMatcher) : superMatcher;
                        })(elementMatchers, setMatchers)
                    )).selector = selector;
                }
                return cached;
            }),
            (select = Sizzle.select = function (selector, context, results, seed) {
                var i,
                    tokens,
                    token,
                    type,
                    find,
                    compiled = "function" == typeof selector && selector,
                    match = !seed && tokenize((selector = compiled.selector || selector));
                if (((results = results || []), 1 === match.length)) {
                    if ((tokens = match[0] = match[0].slice(0)).length > 2 && "ID" === (token = tokens[0]).type && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
                        if (!(context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0])) return results;
                        compiled && (context = context.parentNode), (selector = selector.slice(tokens.shift().value.length));
                    }
                    for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && ((token = tokens[i]), !Expr.relative[(type = token.type)]); )
                        if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), (rsibling.test(tokens[0].type) && testContext(context.parentNode)) || context))) {
                            if ((tokens.splice(i, 1), !(selector = seed.length && toSelector(tokens)))) return push.apply(results, seed), results;
                            break;
                        }
                }
                return (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || (rsibling.test(selector) && testContext(context.parentNode)) || context), results;
            }),
            (support.sortStable = expando.split("").sort(sortOrder).join("") === expando),
            (support.detectDuplicates = !!hasDuplicate),
            setDocument(),
            (support.sortDetached = assert(function (el) {
                return 1 & el.compareDocumentPosition(document.createElement("fieldset"));
            })),
            assert(function (el) {
                return (el.innerHTML = "<a href='#'></a>"), "#" === el.firstChild.getAttribute("href");
            }) ||
                addHandle("type|href|height|width", function (elem, name, isXML) {
                    if (!isXML) return elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2);
                }),
            (support.attributes &&
                assert(function (el) {
                    return (el.innerHTML = "<input/>"), el.firstChild.setAttribute("value", ""), "" === el.firstChild.getAttribute("value");
                })) ||
                addHandle("value", function (elem, name, isXML) {
                    if (!isXML && "input" === elem.nodeName.toLowerCase()) return elem.defaultValue;
                }),
            assert(function (el) {
                return null == el.getAttribute("disabled");
            }) ||
                addHandle(booleans, function (elem, name, isXML) {
                    var val;
                    if (!isXML) return !0 === elem[name] ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
                }),
            Sizzle
        );
    })(window);
    (jQuery.find = Sizzle),
        (jQuery.expr = Sizzle.selectors),
        (jQuery.expr[":"] = jQuery.expr.pseudos),
        (jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort),
        (jQuery.text = Sizzle.getText),
        (jQuery.isXMLDoc = Sizzle.isXML),
        (jQuery.contains = Sizzle.contains),
        (jQuery.escapeSelector = Sizzle.escape);
    var dir = function (elem, dir, until) {
            for (var matched = [], truncate = void 0 !== until; (elem = elem[dir]) && 9 !== elem.nodeType; )
                if (1 === elem.nodeType) {
                    if (truncate && jQuery(elem).is(until)) break;
                    matched.push(elem);
                }
            return matched;
        },
        siblings = function (n, elem) {
            for (var matched = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && matched.push(n);
            return matched;
        },
        rneedsContext = jQuery.expr.match.needsContext;
    function nodeName(elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    }
    var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function winnow(elements, qualifier, not) {
        return isFunction(qualifier)
            ? jQuery.grep(elements, function (elem, i) {
                  return !!qualifier.call(elem, i, elem) !== not;
              })
            : qualifier.nodeType
            ? jQuery.grep(elements, function (elem) {
                  return (elem === qualifier) !== not;
              })
            : "string" != typeof qualifier
            ? jQuery.grep(elements, function (elem) {
                  return indexOf.call(qualifier, elem) > -1 !== not;
              })
            : jQuery.filter(qualifier, elements, not);
    }
    (jQuery.filter = function (expr, elems, not) {
        var elem = elems[0];
        return (
            not && (expr = ":not(" + expr + ")"),
            1 === elems.length && 1 === elem.nodeType
                ? jQuery.find.matchesSelector(elem, expr)
                    ? [elem]
                    : []
                : jQuery.find.matches(
                      expr,
                      jQuery.grep(elems, function (elem) {
                          return 1 === elem.nodeType;
                      })
                  )
        );
    }),
        jQuery.fn.extend({
            find: function (selector) {
                var i,
                    ret,
                    len = this.length,
                    self = this;
                if ("string" != typeof selector)
                    return this.pushStack(
                        jQuery(selector).filter(function () {
                            for (i = 0; i < len; i++) if (jQuery.contains(self[i], this)) return !0;
                        })
                    );
                for (ret = this.pushStack([]), i = 0; i < len; i++) jQuery.find(selector, self[i], ret);
                return len > 1 ? jQuery.uniqueSort(ret) : ret;
            },
            filter: function (selector) {
                return this.pushStack(winnow(this, selector || [], !1));
            },
            not: function (selector) {
                return this.pushStack(winnow(this, selector || [], !0));
            },
            is: function (selector) {
                return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length;
            },
        });
    var rootjQuery,
        rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    ((jQuery.fn.init = function (selector, context, root) {
        var match, elem;
        if (!selector) return this;
        if (((root = root || rootjQuery), "string" == typeof selector)) {
            if (!(match = "<" === selector[0] && ">" === selector[selector.length - 1] && selector.length >= 3 ? [null, selector, null] : rquickExpr.exec(selector)) || (!match[1] && context))
                return !context || context.jquery ? (context || root).find(selector) : this.constructor(context).find(selector);
            if (match[1]) {
                if (
                    ((context = context instanceof jQuery ? context[0] : context),
                    jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)),
                    rsingleTag.test(match[1]) && jQuery.isPlainObject(context))
                )
                    for (match in context) isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                return this;
            }
            return (elem = document.getElementById(match[2])) && ((this[0] = elem), (this.length = 1)), this;
        }
        return selector.nodeType ? ((this[0] = selector), (this.length = 1), this) : isFunction(selector) ? (void 0 !== root.ready ? root.ready(selector) : selector(jQuery)) : jQuery.makeArray(selector, this);
    }).prototype = jQuery.fn),
        (rootjQuery = jQuery(document));
    var rparentsprev = /^(?:parents|prev(?:Until|All))/,
        guaranteedUnique = { children: !0, contents: !0, next: !0, prev: !0 };
    function sibling(cur, dir) {
        for (; (cur = cur[dir]) && 1 !== cur.nodeType; );
        return cur;
    }
    jQuery.fn.extend({
        has: function (target) {
            var targets = jQuery(target, this),
                l = targets.length;
            return this.filter(function () {
                for (var i = 0; i < l; i++) if (jQuery.contains(this, targets[i])) return !0;
            });
        },
        closest: function (selectors, context) {
            var cur,
                i = 0,
                l = this.length,
                matched = [],
                targets = "string" != typeof selectors && jQuery(selectors);
            if (!rneedsContext.test(selectors))
                for (; i < l; i++)
                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode)
                        if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
                            matched.push(cur);
                            break;
                        }
            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
        },
        index: function (elem) {
            return elem ? ("string" == typeof elem ? indexOf.call(jQuery(elem), this[0]) : indexOf.call(this, elem.jquery ? elem[0] : elem)) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function (selector, context) {
            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
        },
        addBack: function (selector) {
            return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector));
        },
    }),
        jQuery.each(
            {
                parent: function (elem) {
                    var parent = elem.parentNode;
                    return parent && 11 !== parent.nodeType ? parent : null;
                },
                parents: function (elem) {
                    return dir(elem, "parentNode");
                },
                parentsUntil: function (elem, i, until) {
                    return dir(elem, "parentNode", until);
                },
                next: function (elem) {
                    return sibling(elem, "nextSibling");
                },
                prev: function (elem) {
                    return sibling(elem, "previousSibling");
                },
                nextAll: function (elem) {
                    return dir(elem, "nextSibling");
                },
                prevAll: function (elem) {
                    return dir(elem, "previousSibling");
                },
                nextUntil: function (elem, i, until) {
                    return dir(elem, "nextSibling", until);
                },
                prevUntil: function (elem, i, until) {
                    return dir(elem, "previousSibling", until);
                },
                siblings: function (elem) {
                    return siblings((elem.parentNode || {}).firstChild, elem);
                },
                children: function (elem) {
                    return siblings(elem.firstChild);
                },
                contents: function (elem) {
                    return void 0 !== elem.contentDocument ? elem.contentDocument : (nodeName(elem, "template") && (elem = elem.content || elem), jQuery.merge([], elem.childNodes));
                },
            },
            function (name, fn) {
                jQuery.fn[name] = function (until, selector) {
                    var matched = jQuery.map(this, fn, until);
                    return (
                        "Until" !== name.slice(-5) && (selector = until),
                        selector && "string" == typeof selector && (matched = jQuery.filter(selector, matched)),
                        this.length > 1 && (guaranteedUnique[name] || jQuery.uniqueSort(matched), rparentsprev.test(name) && matched.reverse()),
                        this.pushStack(matched)
                    );
                };
            }
        );
    var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
    function Identity(v) {
        return v;
    }
    function Thrower(ex) {
        throw ex;
    }
    function adoptValue(value, resolve, reject, noValue) {
        var method;
        try {
            value && isFunction((method = value.promise)) ? method.call(value).done(resolve).fail(reject) : value && isFunction((method = value.then)) ? method.call(value, resolve, reject) : resolve.apply(void 0, [value].slice(noValue));
        } catch (value) {
            reject.apply(void 0, [value]);
        }
    }
    (jQuery.Callbacks = function (options) {
        options =
            "string" == typeof options
                ? (function (options) {
                      var object = {};
                      return (
                          jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
                              object[flag] = !0;
                          }),
                          object
                      );
                  })(options)
                : jQuery.extend({}, options);
        var firing,
            memory,
            fired,
            locked,
            list = [],
            queue = [],
            firingIndex = -1,
            fire = function () {
                for (locked = locked || options.once, fired = firing = !0; queue.length; firingIndex = -1)
                    for (memory = queue.shift(); ++firingIndex < list.length; ) !1 === list[firingIndex].apply(memory[0], memory[1]) && options.stopOnFalse && ((firingIndex = list.length), (memory = !1));
                options.memory || (memory = !1), (firing = !1), locked && (list = memory ? [] : "");
            },
            self = {
                add: function () {
                    return (
                        list &&
                            (memory && !firing && ((firingIndex = list.length - 1), queue.push(memory)),
                            (function add(args) {
                                jQuery.each(args, function (_, arg) {
                                    isFunction(arg) ? (options.unique && self.has(arg)) || list.push(arg) : arg && arg.length && "string" !== toType(arg) && add(arg);
                                });
                            })(arguments),
                            memory && !firing && fire()),
                        this
                    );
                },
                remove: function () {
                    return (
                        jQuery.each(arguments, function (_, arg) {
                            for (var index; (index = jQuery.inArray(arg, list, index)) > -1; ) list.splice(index, 1), index <= firingIndex && firingIndex--;
                        }),
                        this
                    );
                },
                has: function (fn) {
                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
                },
                empty: function () {
                    return list && (list = []), this;
                },
                disable: function () {
                    return (locked = queue = []), (list = memory = ""), this;
                },
                disabled: function () {
                    return !list;
                },
                lock: function () {
                    return (locked = queue = []), memory || firing || (list = memory = ""), this;
                },
                locked: function () {
                    return !!locked;
                },
                fireWith: function (context, args) {
                    return locked || ((args = [context, (args = args || []).slice ? args.slice() : args]), queue.push(args), firing || fire()), this;
                },
                fire: function () {
                    return self.fireWith(this, arguments), this;
                },
                fired: function () {
                    return !!fired;
                },
            };
        return self;
    }),
        jQuery.extend({
            Deferred: function (func) {
                var tuples = [
                        ["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2],
                        ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"],
                        ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"],
                    ],
                    state = "pending",
                    promise = {
                        state: function () {
                            return state;
                        },
                        always: function () {
                            return deferred.done(arguments).fail(arguments), this;
                        },
                        catch: function (fn) {
                            return promise.then(null, fn);
                        },
                        pipe: function () {
                            var fns = arguments;
                            return jQuery
                                .Deferred(function (newDefer) {
                                    jQuery.each(tuples, function (i, tuple) {
                                        var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                                        deferred[tuple[1]](function () {
                                            var returned = fn && fn.apply(this, arguments);
                                            returned && isFunction(returned.promise)
                                                ? returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject)
                                                : newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
                                        });
                                    }),
                                        (fns = null);
                                })
                                .promise();
                        },
                        then: function (onFulfilled, onRejected, onProgress) {
                            var maxDepth = 0;
                            function resolve(depth, deferred, handler, special) {
                                return function () {
                                    var that = this,
                                        args = arguments,
                                        mightThrow = function () {
                                            var returned, then;
                                            if (!(depth < maxDepth)) {
                                                if ((returned = handler.apply(that, args)) === deferred.promise()) throw new TypeError("Thenable self-resolution");
                                                (then = returned && ("object" == typeof returned || "function" == typeof returned) && returned.then),
                                                    isFunction(then)
                                                        ? special
                                                            ? then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special))
                                                            : (maxDepth++,
                                                              then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith)))
                                                        : (handler !== Identity && ((that = void 0), (args = [returned])), (special || deferred.resolveWith)(that, args));
                                            }
                                        },
                                        process = special
                                            ? mightThrow
                                            : function () {
                                                  try {
                                                      mightThrow();
                                                  } catch (e) {
                                                      jQuery.Deferred.exceptionHook && jQuery.Deferred.exceptionHook(e, process.stackTrace),
                                                          depth + 1 >= maxDepth && (handler !== Thrower && ((that = void 0), (args = [e])), deferred.rejectWith(that, args));
                                                  }
                                              };
                                    depth ? process() : (jQuery.Deferred.getStackHook && (process.stackTrace = jQuery.Deferred.getStackHook()), window.setTimeout(process));
                                };
                            }
                            return jQuery
                                .Deferred(function (newDefer) {
                                    tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)),
                                        tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)),
                                        tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
                                })
                                .promise();
                        },
                        promise: function (obj) {
                            return null != obj ? jQuery.extend(obj, promise) : promise;
                        },
                    },
                    deferred = {};
                return (
                    jQuery.each(tuples, function (i, tuple) {
                        var list = tuple[2],
                            stateString = tuple[5];
                        (promise[tuple[1]] = list.add),
                            stateString &&
                                list.add(
                                    function () {
                                        state = stateString;
                                    },
                                    tuples[3 - i][2].disable,
                                    tuples[3 - i][3].disable,
                                    tuples[0][2].lock,
                                    tuples[0][3].lock
                                ),
                            list.add(tuple[3].fire),
                            (deferred[tuple[0]] = function () {
                                return deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments), this;
                            }),
                            (deferred[tuple[0] + "With"] = list.fireWith);
                    }),
                    promise.promise(deferred),
                    func && func.call(deferred, deferred),
                    deferred
                );
            },
            when: function (singleValue) {
                var remaining = arguments.length,
                    i = remaining,
                    resolveContexts = Array(i),
                    resolveValues = slice.call(arguments),
                    master = jQuery.Deferred(),
                    updateFunc = function (i) {
                        return function (value) {
                            (resolveContexts[i] = this), (resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value), --remaining || master.resolveWith(resolveContexts, resolveValues);
                        };
                    };
                if (remaining <= 1 && (adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining), "pending" === master.state() || isFunction(resolveValues[i] && resolveValues[i].then))) return master.then();
                for (; i--; ) adoptValue(resolveValues[i], updateFunc(i), master.reject);
                return master.promise();
            },
        });
    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (jQuery.Deferred.exceptionHook = function (error, stack) {
        window.console && window.console.warn && error && rerrorNames.test(error.name) && window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    }),
        (jQuery.readyException = function (error) {
            window.setTimeout(function () {
                throw error;
            });
        });
    var readyList = jQuery.Deferred();
    function completed() {
        document.removeEventListener("DOMContentLoaded", completed), window.removeEventListener("load", completed), jQuery.ready();
    }
    (jQuery.fn.ready = function (fn) {
        return (
            readyList.then(fn).catch(function (error) {
                jQuery.readyException(error);
            }),
            this
        );
    }),
        jQuery.extend({
            isReady: !1,
            readyWait: 1,
            ready: function (wait) {
                (!0 === wait ? --jQuery.readyWait : jQuery.isReady) || ((jQuery.isReady = !0), (!0 !== wait && --jQuery.readyWait > 0) || readyList.resolveWith(document, [jQuery]));
            },
        }),
        (jQuery.ready.then = readyList.then),
        "complete" === document.readyState || ("loading" !== document.readyState && !document.documentElement.doScroll)
            ? window.setTimeout(jQuery.ready)
            : (document.addEventListener("DOMContentLoaded", completed), window.addEventListener("load", completed));
    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {
            var i = 0,
                len = elems.length,
                bulk = null == key;
            if ("object" === toType(key)) for (i in ((chainable = !0), key)) access(elems, fn, i, key[i], !0, emptyGet, raw);
            else if (
                void 0 !== value &&
                ((chainable = !0),
                isFunction(value) || (raw = !0),
                bulk &&
                    (raw
                        ? (fn.call(elems, value), (fn = null))
                        : ((bulk = fn),
                          (fn = function (elem, key, value) {
                              return bulk.call(jQuery(elem), value);
                          }))),
                fn)
            )
                for (; i < len; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
            return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
        },
        rmsPrefix = /^-ms-/,
        rdashAlpha = /-([a-z])/g;
    function fcamelCase(all, letter) {
        return letter.toUpperCase();
    }
    function camelCase(string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    }
    var acceptData = function (owner) {
        return 1 === owner.nodeType || 9 === owner.nodeType || !+owner.nodeType;
    };
    function Data() {
        this.expando = jQuery.expando + Data.uid++;
    }
    (Data.uid = 1),
        (Data.prototype = {
            cache: function (owner) {
                var value = owner[this.expando];
                return value || ((value = {}), acceptData(owner) && (owner.nodeType ? (owner[this.expando] = value) : Object.defineProperty(owner, this.expando, { value: value, configurable: !0 }))), value;
            },
            set: function (owner, data, value) {
                var prop,
                    cache = this.cache(owner);
                if ("string" == typeof data) cache[camelCase(data)] = value;
                else for (prop in data) cache[camelCase(prop)] = data[prop];
                return cache;
            },
            get: function (owner, key) {
                return void 0 === key ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];
            },
            access: function (owner, key, value) {
                return void 0 === key || (key && "string" == typeof key && void 0 === value) ? this.get(owner, key) : (this.set(owner, key, value), void 0 !== value ? value : key);
            },
            remove: function (owner, key) {
                var i,
                    cache = owner[this.expando];
                if (void 0 !== cache) {
                    if (void 0 !== key) {
                        i = (key = Array.isArray(key) ? key.map(camelCase) : (key = camelCase(key)) in cache ? [key] : key.match(rnothtmlwhite) || []).length;
                        for (; i--; ) delete cache[key[i]];
                    }
                    (void 0 === key || jQuery.isEmptyObject(cache)) && (owner.nodeType ? (owner[this.expando] = void 0) : delete owner[this.expando]);
                }
            },
            hasData: function (owner) {
                var cache = owner[this.expando];
                return void 0 !== cache && !jQuery.isEmptyObject(cache);
            },
        });
    var dataPriv = new Data(),
        dataUser = new Data(),
        rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        rmultiDash = /[A-Z]/g;
    function dataAttr(elem, key, data) {
        var name;
        if (void 0 === data && 1 === elem.nodeType)
            if (((name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase()), "string" == typeof (data = elem.getAttribute(name)))) {
                try {
                    data = (function (data) {
                        return "true" === data || ("false" !== data && ("null" === data ? null : data === +data + "" ? +data : rbrace.test(data) ? JSON.parse(data) : data));
                    })(data);
                } catch (e) {}
                dataUser.set(elem, key, data);
            } else data = void 0;
        return data;
    }
    jQuery.extend({
        hasData: function (elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
        },
        data: function (elem, name, data) {
            return dataUser.access(elem, name, data);
        },
        removeData: function (elem, name) {
            dataUser.remove(elem, name);
        },
        _data: function (elem, name, data) {
            return dataPriv.access(elem, name, data);
        },
        _removeData: function (elem, name) {
            dataPriv.remove(elem, name);
        },
    }),
        jQuery.fn.extend({
            data: function (key, value) {
                var i,
                    name,
                    data,
                    elem = this[0],
                    attrs = elem && elem.attributes;
                if (void 0 === key) {
                    if (this.length && ((data = dataUser.get(elem)), 1 === elem.nodeType && !dataPriv.get(elem, "hasDataAttrs"))) {
                        for (i = attrs.length; i--; ) attrs[i] && 0 === (name = attrs[i].name).indexOf("data-") && ((name = camelCase(name.slice(5))), dataAttr(elem, name, data[name]));
                        dataPriv.set(elem, "hasDataAttrs", !0);
                    }
                    return data;
                }
                return "object" == typeof key
                    ? this.each(function () {
                          dataUser.set(this, key);
                      })
                    : access(
                          this,
                          function (value) {
                              var data;
                              if (elem && void 0 === value) return void 0 !== (data = dataUser.get(elem, key)) ? data : void 0 !== (data = dataAttr(elem, key)) ? data : void 0;
                              this.each(function () {
                                  dataUser.set(this, key, value);
                              });
                          },
                          null,
                          value,
                          arguments.length > 1,
                          null,
                          !0
                      );
            },
            removeData: function (key) {
                return this.each(function () {
                    dataUser.remove(this, key);
                });
            },
        }),
        jQuery.extend({
            queue: function (elem, type, data) {
                var queue;
                if (elem) return (type = (type || "fx") + "queue"), (queue = dataPriv.get(elem, type)), data && (!queue || Array.isArray(data) ? (queue = dataPriv.access(elem, type, jQuery.makeArray(data))) : queue.push(data)), queue || [];
            },
            dequeue: function (elem, type) {
                type = type || "fx";
                var queue = jQuery.queue(elem, type),
                    startLength = queue.length,
                    fn = queue.shift(),
                    hooks = jQuery._queueHooks(elem, type);
                "inprogress" === fn && ((fn = queue.shift()), startLength--),
                    fn &&
                        ("fx" === type && queue.unshift("inprogress"),
                        delete hooks.stop,
                        fn.call(
                            elem,
                            function () {
                                jQuery.dequeue(elem, type);
                            },
                            hooks
                        )),
                    !startLength && hooks && hooks.empty.fire();
            },
            _queueHooks: function (elem, type) {
                var key = type + "queueHooks";
                return (
                    dataPriv.get(elem, key) ||
                    dataPriv.access(elem, key, {
                        empty: jQuery.Callbacks("once memory").add(function () {
                            dataPriv.remove(elem, [type + "queue", key]);
                        }),
                    })
                );
            },
        }),
        jQuery.fn.extend({
            queue: function (type, data) {
                var setter = 2;
                return (
                    "string" != typeof type && ((data = type), (type = "fx"), setter--),
                    arguments.length < setter
                        ? jQuery.queue(this[0], type)
                        : void 0 === data
                        ? this
                        : this.each(function () {
                              var queue = jQuery.queue(this, type, data);
                              jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type);
                          })
                );
            },
            dequeue: function (type) {
                return this.each(function () {
                    jQuery.dequeue(this, type);
                });
            },
            clearQueue: function (type) {
                return this.queue(type || "fx", []);
            },
            promise: function (type, obj) {
                var tmp,
                    count = 1,
                    defer = jQuery.Deferred(),
                    elements = this,
                    i = this.length,
                    resolve = function () {
                        --count || defer.resolveWith(elements, [elements]);
                    };
                for ("string" != typeof type && ((obj = type), (type = void 0)), type = type || "fx"; i--; ) (tmp = dataPriv.get(elements[i], type + "queueHooks")) && tmp.empty && (count++, tmp.empty.add(resolve));
                return resolve(), defer.promise(obj);
            },
        });
    var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"),
        cssExpand = ["Top", "Right", "Bottom", "Left"],
        documentElement = document.documentElement,
        isAttached = function (elem) {
            return jQuery.contains(elem.ownerDocument, elem);
        },
        composed = { composed: !0 };
    documentElement.getRootNode &&
        (isAttached = function (elem) {
            return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
        });
    var isHiddenWithinTree = function (elem, el) {
            return "none" === (elem = el || elem).style.display || ("" === elem.style.display && isAttached(elem) && "none" === jQuery.css(elem, "display"));
        },
        swap = function (elem, options, callback, args) {
            var ret,
                name,
                old = {};
            for (name in options) (old[name] = elem.style[name]), (elem.style[name] = options[name]);
            for (name in ((ret = callback.apply(elem, args || [])), options)) elem.style[name] = old[name];
            return ret;
        };
    function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted,
            scale,
            maxIterations = 20,
            currentValue = tween
                ? function () {
                      return tween.cur();
                  }
                : function () {
                      return jQuery.css(elem, prop, "");
                  },
            initial = currentValue(),
            unit = (valueParts && valueParts[3]) || (jQuery.cssNumber[prop] ? "" : "px"),
            initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || ("px" !== unit && +initial)) && rcssNum.exec(jQuery.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
            for (initial /= 2, unit = unit || initialInUnit[3], initialInUnit = +initial || 1; maxIterations--; )
                jQuery.style(elem, prop, initialInUnit + unit), (1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0 && (maxIterations = 0), (initialInUnit /= scale);
            (initialInUnit *= 2), jQuery.style(elem, prop, initialInUnit + unit), (valueParts = valueParts || []);
        }
        return (
            valueParts &&
                ((initialInUnit = +initialInUnit || +initial || 0),
                (adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2]),
                tween && ((tween.unit = unit), (tween.start = initialInUnit), (tween.end = adjusted))),
            adjusted
        );
    }
    var defaultDisplayMap = {};
    function getDefaultDisplay(elem) {
        var temp,
            doc = elem.ownerDocument,
            nodeName = elem.nodeName,
            display = defaultDisplayMap[nodeName];
        return (
            display ||
            ((temp = doc.body.appendChild(doc.createElement(nodeName))),
            (display = jQuery.css(temp, "display")),
            temp.parentNode.removeChild(temp),
            "none" === display && (display = "block"),
            (defaultDisplayMap[nodeName] = display),
            display)
        );
    }
    function showHide(elements, show) {
        for (var display, elem, values = [], index = 0, length = elements.length; index < length; index++)
            (elem = elements[index]).style &&
                ((display = elem.style.display),
                show
                    ? ("none" === display && ((values[index] = dataPriv.get(elem, "display") || null), values[index] || (elem.style.display = "")),
                      "" === elem.style.display && isHiddenWithinTree(elem) && (values[index] = getDefaultDisplay(elem)))
                    : "none" !== display && ((values[index] = "none"), dataPriv.set(elem, "display", display)));
        for (index = 0; index < length; index++) null != values[index] && (elements[index].style.display = values[index]);
        return elements;
    }
    jQuery.fn.extend({
        show: function () {
            return showHide(this, !0);
        },
        hide: function () {
            return showHide(this);
        },
        toggle: function (state) {
            return "boolean" == typeof state
                ? state
                    ? this.show()
                    : this.hide()
                : this.each(function () {
                      isHiddenWithinTree(this) ? jQuery(this).show() : jQuery(this).hide();
                  });
        },
    });
    var rcheckableType = /^(?:checkbox|radio)$/i,
        rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
        rscriptType = /^$|^module$|\/(?:java|ecma)script/i,
        wrapMap = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""],
        };
    function getAll(context, tag) {
        var ret;
        return (
            (ret = void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : void 0 !== context.querySelectorAll ? context.querySelectorAll(tag || "*") : []),
            void 0 === tag || (tag && nodeName(context, tag)) ? jQuery.merge([context], ret) : ret
        );
    }
    function setGlobalEval(elems, refElements) {
        for (var i = 0, l = elems.length; i < l; i++) dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
    (wrapMap.optgroup = wrapMap.option), (wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead), (wrapMap.th = wrapMap.td);
    var div,
        input,
        rhtml = /<|&#?\w+;/;
    function buildFragment(elems, context, scripts, selection, ignored) {
        for (var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length; i < l; i++)
            if ((elem = elems[i]) || 0 === elem)
                if ("object" === toType(elem)) jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
                else if (rhtml.test(elem)) {
                    for (
                        tmp = tmp || fragment.appendChild(context.createElement("div")),
                            tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase(),
                            wrap = wrapMap[tag] || wrapMap._default,
                            tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2],
                            j = wrap[0];
                        j--;

                    )
                        tmp = tmp.lastChild;
                    jQuery.merge(nodes, tmp.childNodes), ((tmp = fragment.firstChild).textContent = "");
                } else nodes.push(context.createTextNode(elem));
        for (fragment.textContent = "", i = 0; (elem = nodes[i++]); )
            if (selection && jQuery.inArray(elem, selection) > -1) ignored && ignored.push(elem);
            else if (((attached = isAttached(elem)), (tmp = getAll(fragment.appendChild(elem), "script")), attached && setGlobalEval(tmp), scripts)) for (j = 0; (elem = tmp[j++]); ) rscriptType.test(elem.type || "") && scripts.push(elem);
        return fragment;
    }
    (div = document.createDocumentFragment().appendChild(document.createElement("div"))),
        (input = document.createElement("input")).setAttribute("type", "radio"),
        input.setAttribute("checked", "checked"),
        input.setAttribute("name", "t"),
        div.appendChild(input),
        (support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (div.innerHTML = "<textarea>x</textarea>"),
        (support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue);
    var rkeyEvent = /^key/,
        rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    function returnTrue() {
        return !0;
    }
    function returnFalse() {
        return !1;
    }
    function expectSync(elem, type) {
        return (
            (elem ===
                (function () {
                    try {
                        return document.activeElement;
                    } catch (err) {}
                })()) ==
            ("focus" === type)
        );
    }
    function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        if ("object" == typeof types) {
            for (type in ("string" != typeof selector && ((data = data || selector), (selector = void 0)), types)) on(elem, type, selector, data, types[type], one);
            return elem;
        }
        if ((null == data && null == fn ? ((fn = selector), (data = selector = void 0)) : null == fn && ("string" == typeof selector ? ((fn = data), (data = void 0)) : ((fn = data), (data = selector), (selector = void 0))), !1 === fn))
            fn = returnFalse;
        else if (!fn) return elem;
        return (
            1 === one &&
                ((origFn = fn),
                ((fn = function (event) {
                    return jQuery().off(event), origFn.apply(this, arguments);
                }).guid = origFn.guid || (origFn.guid = jQuery.guid++))),
            elem.each(function () {
                jQuery.event.add(this, types, fn, data, selector);
            })
        );
    }
    function leverageNative(el, type, expectSync) {
        expectSync
            ? (dataPriv.set(el, type, !1),
              jQuery.event.add(el, type, {
                  namespace: !1,
                  handler: function (event) {
                      var notAsync,
                          result,
                          saved = dataPriv.get(this, type);
                      if (1 & event.isTrigger && this[type]) {
                          if (saved.length) (jQuery.event.special[type] || {}).delegateType && event.stopPropagation();
                          else if (
                              ((saved = slice.call(arguments)),
                              dataPriv.set(this, type, saved),
                              (notAsync = expectSync(this, type)),
                              this[type](),
                              saved !== (result = dataPriv.get(this, type)) || notAsync ? dataPriv.set(this, type, !1) : (result = {}),
                              saved !== result)
                          )
                              return event.stopImmediatePropagation(), event.preventDefault(), result.value;
                      } else saved.length && (dataPriv.set(this, type, { value: jQuery.event.trigger(jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this) }), event.stopImmediatePropagation());
                  },
              }))
            : void 0 === dataPriv.get(el, type) && jQuery.event.add(el, type, returnTrue);
    }
    (jQuery.event = {
        global: {},
        add: function (elem, types, handler, data, selector) {
            var handleObjIn,
                eventHandle,
                tmp,
                events,
                t,
                handleObj,
                special,
                handlers,
                type,
                namespaces,
                origType,
                elemData = dataPriv.get(elem);
            if (elemData)
                for (
                    handler.handler && ((handler = (handleObjIn = handler).handler), (selector = handleObjIn.selector)),
                        selector && jQuery.find.matchesSelector(documentElement, selector),
                        handler.guid || (handler.guid = jQuery.guid++),
                        (events = elemData.events) || (events = elemData.events = {}),
                        (eventHandle = elemData.handle) ||
                            (eventHandle = elemData.handle = function (e) {
                                return void 0 !== jQuery && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : void 0;
                            }),
                        t = (types = (types || "").match(rnothtmlwhite) || [""]).length;
                    t--;

                )
                    (type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1]),
                        (namespaces = (tmp[2] || "").split(".").sort()),
                        type &&
                            ((special = jQuery.event.special[type] || {}),
                            (type = (selector ? special.delegateType : special.bindType) || type),
                            (special = jQuery.event.special[type] || {}),
                            (handleObj = jQuery.extend(
                                {
                                    type: type,
                                    origType: origType,
                                    data: data,
                                    handler: handler,
                                    guid: handler.guid,
                                    selector: selector,
                                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                                    namespace: namespaces.join("."),
                                },
                                handleObjIn
                            )),
                            (handlers = events[type]) ||
                                (((handlers = events[type] = []).delegateCount = 0), (special.setup && !1 !== special.setup.call(elem, data, namespaces, eventHandle)) || (elem.addEventListener && elem.addEventListener(type, eventHandle))),
                            special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)),
                            selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj),
                            (jQuery.event.global[type] = !0));
        },
        remove: function (elem, types, handler, selector, mappedTypes) {
            var j,
                origCount,
                tmp,
                events,
                t,
                handleObj,
                special,
                handlers,
                type,
                namespaces,
                origType,
                elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (elemData && (events = elemData.events)) {
                for (t = (types = (types || "").match(rnothtmlwhite) || [""]).length; t--; )
                    if (((type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1]), (namespaces = (tmp[2] || "").split(".").sort()), type)) {
                        for (
                            special = jQuery.event.special[type] || {},
                                handlers = events[(type = (selector ? special.delegateType : special.bindType) || type)] || [],
                                tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                                origCount = j = handlers.length;
                            j--;

                        )
                            (handleObj = handlers[j]),
                                (!mappedTypes && origType !== handleObj.origType) ||
                                    (handler && handler.guid !== handleObj.guid) ||
                                    (tmp && !tmp.test(handleObj.namespace)) ||
                                    (selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector)) ||
                                    (handlers.splice(j, 1), handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                        origCount && !handlers.length && ((special.teardown && !1 !== special.teardown.call(elem, namespaces, elemData.handle)) || jQuery.removeEvent(elem, type, elemData.handle), delete events[type]);
                    } else for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                jQuery.isEmptyObject(events) && dataPriv.remove(elem, "handle events");
            }
        },
        dispatch: function (nativeEvent) {
            var i,
                j,
                ret,
                matched,
                handleObj,
                handlerQueue,
                event = jQuery.event.fix(nativeEvent),
                args = new Array(arguments.length),
                handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
                special = jQuery.event.special[event.type] || {};
            for (args[0] = event, i = 1; i < arguments.length; i++) args[i] = arguments[i];
            if (((event.delegateTarget = this), !special.preDispatch || !1 !== special.preDispatch.call(this, event))) {
                for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped(); )
                    for (event.currentTarget = matched.elem, j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped(); )
                        (event.rnamespace && !1 !== handleObj.namespace && !event.rnamespace.test(handleObj.namespace)) ||
                            ((event.handleObj = handleObj),
                            (event.data = handleObj.data),
                            void 0 !== (ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args)) && !1 === (event.result = ret) && (event.preventDefault(), event.stopPropagation()));
                return special.postDispatch && special.postDispatch.call(this, event), event.result;
            }
        },
        handlers: function (event, handlers) {
            var i,
                handleObj,
                sel,
                matchedHandlers,
                matchedSelectors,
                handlerQueue = [],
                delegateCount = handlers.delegateCount,
                cur = event.target;
            if (delegateCount && cur.nodeType && !("click" === event.type && event.button >= 1))
                for (; cur !== this; cur = cur.parentNode || this)
                    if (1 === cur.nodeType && ("click" !== event.type || !0 !== cur.disabled)) {
                        for (matchedHandlers = [], matchedSelectors = {}, i = 0; i < delegateCount; i++)
                            void 0 === matchedSelectors[(sel = (handleObj = handlers[i]).selector + " ")] && (matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length),
                                matchedSelectors[sel] && matchedHandlers.push(handleObj);
                        matchedHandlers.length && handlerQueue.push({ elem: cur, handlers: matchedHandlers });
                    }
            return (cur = this), delegateCount < handlers.length && handlerQueue.push({ elem: cur, handlers: handlers.slice(delegateCount) }), handlerQueue;
        },
        addProp: function (name, hook) {
            Object.defineProperty(jQuery.Event.prototype, name, {
                enumerable: !0,
                configurable: !0,
                get: isFunction(hook)
                    ? function () {
                          if (this.originalEvent) return hook(this.originalEvent);
                      }
                    : function () {
                          if (this.originalEvent) return this.originalEvent[name];
                      },
                set: function (value) {
                    Object.defineProperty(this, name, { enumerable: !0, configurable: !0, writable: !0, value: value });
                },
            });
        },
        fix: function (originalEvent) {
            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
        },
        special: {
            load: { noBubble: !0 },
            click: {
                setup: function (data) {
                    var el = this || data;
                    return rcheckableType.test(el.type) && el.click && nodeName(el, "input") && leverageNative(el, "click", returnTrue), !1;
                },
                trigger: function (data) {
                    var el = this || data;
                    return rcheckableType.test(el.type) && el.click && nodeName(el, "input") && leverageNative(el, "click"), !0;
                },
                _default: function (event) {
                    var target = event.target;
                    return (rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click")) || nodeName(target, "a");
                },
            },
            beforeunload: {
                postDispatch: function (event) {
                    void 0 !== event.result && event.originalEvent && (event.originalEvent.returnValue = event.result);
                },
            },
        },
    }),
        (jQuery.removeEvent = function (elem, type, handle) {
            elem.removeEventListener && elem.removeEventListener(type, handle);
        }),
        (jQuery.Event = function (src, props) {
            if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
            src && src.type
                ? ((this.originalEvent = src),
                  (this.type = src.type),
                  (this.isDefaultPrevented = src.defaultPrevented || (void 0 === src.defaultPrevented && !1 === src.returnValue) ? returnTrue : returnFalse),
                  (this.target = src.target && 3 === src.target.nodeType ? src.target.parentNode : src.target),
                  (this.currentTarget = src.currentTarget),
                  (this.relatedTarget = src.relatedTarget))
                : (this.type = src),
                props && jQuery.extend(this, props),
                (this.timeStamp = (src && src.timeStamp) || Date.now()),
                (this[jQuery.expando] = !0);
        }),
        (jQuery.Event.prototype = {
            constructor: jQuery.Event,
            isDefaultPrevented: returnFalse,
            isPropagationStopped: returnFalse,
            isImmediatePropagationStopped: returnFalse,
            isSimulated: !1,
            preventDefault: function () {
                var e = this.originalEvent;
                (this.isDefaultPrevented = returnTrue), e && !this.isSimulated && e.preventDefault();
            },
            stopPropagation: function () {
                var e = this.originalEvent;
                (this.isPropagationStopped = returnTrue), e && !this.isSimulated && e.stopPropagation();
            },
            stopImmediatePropagation: function () {
                var e = this.originalEvent;
                (this.isImmediatePropagationStopped = returnTrue), e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation();
            },
        }),
        jQuery.each(
            {
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                char: !0,
                code: !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: function (event) {
                    var button = event.button;
                    return null == event.which && rkeyEvent.test(event.type)
                        ? null != event.charCode
                            ? event.charCode
                            : event.keyCode
                        : !event.which && void 0 !== button && rmouseEvent.test(event.type)
                        ? 1 & button
                            ? 1
                            : 2 & button
                            ? 3
                            : 4 & button
                            ? 2
                            : 0
                        : event.which;
                },
            },
            jQuery.event.addProp
        ),
        jQuery.each({ focus: "focusin", blur: "focusout" }, function (type, delegateType) {
            jQuery.event.special[type] = {
                setup: function () {
                    return leverageNative(this, type, expectSync), !1;
                },
                trigger: function () {
                    return leverageNative(this, type), !0;
                },
                delegateType: delegateType,
            };
        }),
        jQuery.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (orig, fix) {
            jQuery.event.special[orig] = {
                delegateType: fix,
                bindType: fix,
                handle: function (event) {
                    var ret,
                        related = event.relatedTarget,
                        handleObj = event.handleObj;
                    return (related && (related === this || jQuery.contains(this, related))) || ((event.type = handleObj.origType), (ret = handleObj.handler.apply(this, arguments)), (event.type = fix)), ret;
                },
            };
        }),
        jQuery.fn.extend({
            on: function (types, selector, data, fn) {
                return on(this, types, selector, data, fn);
            },
            one: function (types, selector, data, fn) {
                return on(this, types, selector, data, fn, 1);
            },
            off: function (types, selector, fn) {
                var handleObj, type;
                if (types && types.preventDefault && types.handleObj)
                    return (handleObj = types.handleObj), jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), this;
                if ("object" == typeof types) {
                    for (type in types) this.off(type, selector, types[type]);
                    return this;
                }
                return (
                    (!1 !== selector && "function" != typeof selector) || ((fn = selector), (selector = void 0)),
                    !1 === fn && (fn = returnFalse),
                    this.each(function () {
                        jQuery.event.remove(this, types, fn, selector);
                    })
                );
            },
        });
    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
        rnoInnerhtml = /<script|<style|<link/i,
        rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
        rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function manipulationTarget(elem, content) {
        return (nodeName(elem, "table") && nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") && jQuery(elem).children("tbody")[0]) || elem;
    }
    function disableScript(elem) {
        return (elem.type = (null !== elem.getAttribute("type")) + "/" + elem.type), elem;
    }
    function restoreScript(elem) {
        return "true/" === (elem.type || "").slice(0, 5) ? (elem.type = elem.type.slice(5)) : elem.removeAttribute("type"), elem;
    }
    function cloneCopyEvent(src, dest) {
        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
        if (1 === dest.nodeType) {
            if (dataPriv.hasData(src) && ((pdataOld = dataPriv.access(src)), (pdataCur = dataPriv.set(dest, pdataOld)), (events = pdataOld.events)))
                for (type in (delete pdataCur.handle, (pdataCur.events = {}), events)) for (i = 0, l = events[type].length; i < l; i++) jQuery.event.add(dest, type, events[type][i]);
            dataUser.hasData(src) && ((udataOld = dataUser.access(src)), (udataCur = jQuery.extend({}, udataOld)), dataUser.set(dest, udataCur));
        }
    }
    function domManip(collection, args, callback, ignored) {
        args = concat.apply([], args);
        var fragment,
            first,
            scripts,
            hasScripts,
            node,
            doc,
            i = 0,
            l = collection.length,
            iNoClone = l - 1,
            value = args[0],
            valueIsFunction = isFunction(value);
        if (valueIsFunction || (l > 1 && "string" == typeof value && !support.checkClone && rchecked.test(value)))
            return collection.each(function (index) {
                var self = collection.eq(index);
                valueIsFunction && (args[0] = value.call(this, index, self.html())), domManip(self, args, callback, ignored);
            });
        if (l && ((first = (fragment = buildFragment(args, collection[0].ownerDocument, !1, collection, ignored)).firstChild), 1 === fragment.childNodes.length && (fragment = first), first || ignored)) {
            for (hasScripts = (scripts = jQuery.map(getAll(fragment, "script"), disableScript)).length; i < l; i++)
                (node = fragment), i !== iNoClone && ((node = jQuery.clone(node, !0, !0)), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), callback.call(collection[i], node, i);
            if (hasScripts)
                for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), i = 0; i < hasScripts; i++)
                    (node = scripts[i]),
                        rscriptType.test(node.type || "") &&
                            !dataPriv.access(node, "globalEval") &&
                            jQuery.contains(doc, node) &&
                            (node.src && "module" !== (node.type || "").toLowerCase()
                                ? jQuery._evalUrl && !node.noModule && jQuery._evalUrl(node.src, { nonce: node.nonce || node.getAttribute("nonce") })
                                : DOMEval(node.textContent.replace(rcleanScript, ""), node, doc));
        }
        return collection;
    }
    function remove(elem, selector, keepData) {
        for (var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0; null != (node = nodes[i]); i++)
            keepData || 1 !== node.nodeType || jQuery.cleanData(getAll(node)), node.parentNode && (keepData && isAttached(node) && setGlobalEval(getAll(node, "script")), node.parentNode.removeChild(node));
        return elem;
    }
    jQuery.extend({
        htmlPrefilter: function (html) {
            return html.replace(rxhtmlTag, "<$1></$2>");
        },
        clone: function (elem, dataAndEvents, deepDataAndEvents) {
            var i,
                l,
                srcElements,
                destElements,
                src,
                dest,
                nodeName,
                clone = elem.cloneNode(!0),
                inPage = isAttached(elem);
            if (!(support.noCloneChecked || (1 !== elem.nodeType && 11 !== elem.nodeType) || jQuery.isXMLDoc(elem)))
                for (destElements = getAll(clone), i = 0, l = (srcElements = getAll(elem)).length; i < l; i++)
                    (src = srcElements[i]),
                        (dest = destElements[i]),
                        void 0,
                        "input" === (nodeName = dest.nodeName.toLowerCase()) && rcheckableType.test(src.type) ? (dest.checked = src.checked) : ("input" !== nodeName && "textarea" !== nodeName) || (dest.defaultValue = src.defaultValue);
            if (dataAndEvents)
                if (deepDataAndEvents) for (srcElements = srcElements || getAll(elem), destElements = destElements || getAll(clone), i = 0, l = srcElements.length; i < l; i++) cloneCopyEvent(srcElements[i], destElements[i]);
                else cloneCopyEvent(elem, clone);
            return (destElements = getAll(clone, "script")).length > 0 && setGlobalEval(destElements, !inPage && getAll(elem, "script")), clone;
        },
        cleanData: function (elems) {
            for (var data, elem, type, special = jQuery.event.special, i = 0; void 0 !== (elem = elems[i]); i++)
                if (acceptData(elem)) {
                    if ((data = elem[dataPriv.expando])) {
                        if (data.events) for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                        elem[dataPriv.expando] = void 0;
                    }
                    elem[dataUser.expando] && (elem[dataUser.expando] = void 0);
                }
        },
    }),
        jQuery.fn.extend({
            detach: function (selector) {
                return remove(this, selector, !0);
            },
            remove: function (selector) {
                return remove(this, selector);
            },
            text: function (value) {
                return access(
                    this,
                    function (value) {
                        return void 0 === value
                            ? jQuery.text(this)
                            : this.empty().each(function () {
                                  (1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType) || (this.textContent = value);
                              });
                    },
                    null,
                    value,
                    arguments.length
                );
            },
            append: function () {
                return domManip(this, arguments, function (elem) {
                    (1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType) || manipulationTarget(this, elem).appendChild(elem);
                });
            },
            prepend: function () {
                return domManip(this, arguments, function (elem) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var target = manipulationTarget(this, elem);
                        target.insertBefore(elem, target.firstChild);
                    }
                });
            },
            before: function () {
                return domManip(this, arguments, function (elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this);
                });
            },
            after: function () {
                return domManip(this, arguments, function (elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling);
                });
            },
            empty: function () {
                for (var elem, i = 0; null != (elem = this[i]); i++) 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), (elem.textContent = ""));
                return this;
            },
            clone: function (dataAndEvents, deepDataAndEvents) {
                return (
                    (dataAndEvents = null != dataAndEvents && dataAndEvents),
                    (deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents),
                    this.map(function () {
                        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
                    })
                );
            },
            html: function (value) {
                return access(
                    this,
                    function (value) {
                        var elem = this[0] || {},
                            i = 0,
                            l = this.length;
                        if (void 0 === value && 1 === elem.nodeType) return elem.innerHTML;
                        if ("string" == typeof value && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
                            value = jQuery.htmlPrefilter(value);
                            try {
                                for (; i < l; i++) 1 === (elem = this[i] || {}).nodeType && (jQuery.cleanData(getAll(elem, !1)), (elem.innerHTML = value));
                                elem = 0;
                            } catch (e) {}
                        }
                        elem && this.empty().append(value);
                    },
                    null,
                    value,
                    arguments.length
                );
            },
            replaceWith: function () {
                var ignored = [];
                return domManip(
                    this,
                    arguments,
                    function (elem) {
                        var parent = this.parentNode;
                        jQuery.inArray(this, ignored) < 0 && (jQuery.cleanData(getAll(this)), parent && parent.replaceChild(elem, this));
                    },
                    ignored
                );
            },
        }),
        jQuery.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (name, original) {
            jQuery.fn[name] = function (selector) {
                for (var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0; i <= last; i++) (elems = i === last ? this : this.clone(!0)), jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
                return this.pushStack(ret);
            };
        });
    var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i"),
        getStyles = function (elem) {
            var view = elem.ownerDocument.defaultView;
            return (view && view.opener) || (view = window), view.getComputedStyle(elem);
        },
        rboxStyle = new RegExp(cssExpand.join("|"), "i");
    function curCSS(elem, name, computed) {
        var width,
            minWidth,
            maxWidth,
            ret,
            style = elem.style;
        return (
            (computed = computed || getStyles(elem)) &&
                ("" !== (ret = computed.getPropertyValue(name) || computed[name]) || isAttached(elem) || (ret = jQuery.style(elem, name)),
                !support.pixelBoxStyles() &&
                    rnumnonpx.test(ret) &&
                    rboxStyle.test(name) &&
                    ((width = style.width),
                    (minWidth = style.minWidth),
                    (maxWidth = style.maxWidth),
                    (style.minWidth = style.maxWidth = style.width = ret),
                    (ret = computed.width),
                    (style.width = width),
                    (style.minWidth = minWidth),
                    (style.maxWidth = maxWidth))),
            void 0 !== ret ? ret + "" : ret
        );
    }
    function addGetHookIf(conditionFn, hookFn) {
        return {
            get: function () {
                if (!conditionFn()) return (this.get = hookFn).apply(this, arguments);
                delete this.get;
            },
        };
    }
    !(function () {
        function computeStyleTests() {
            if (div) {
                (container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
                    (div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
                    documentElement.appendChild(container).appendChild(div);
                var divStyle = window.getComputedStyle(div);
                (pixelPositionVal = "1%" !== divStyle.top),
                    (reliableMarginLeftVal = 12 === roundPixelMeasures(divStyle.marginLeft)),
                    (div.style.right = "60%"),
                    (pixelBoxStylesVal = 36 === roundPixelMeasures(divStyle.right)),
                    (boxSizingReliableVal = 36 === roundPixelMeasures(divStyle.width)),
                    (div.style.position = "absolute"),
                    (scrollboxSizeVal = 12 === roundPixelMeasures(div.offsetWidth / 3)),
                    documentElement.removeChild(container),
                    (div = null);
            }
        }
        function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
        }
        var pixelPositionVal,
            boxSizingReliableVal,
            scrollboxSizeVal,
            pixelBoxStylesVal,
            reliableMarginLeftVal,
            container = document.createElement("div"),
            div = document.createElement("div");
        div.style &&
            ((div.style.backgroundClip = "content-box"),
            (div.cloneNode(!0).style.backgroundClip = ""),
            (support.clearCloneStyle = "content-box" === div.style.backgroundClip),
            jQuery.extend(support, {
                boxSizingReliable: function () {
                    return computeStyleTests(), boxSizingReliableVal;
                },
                pixelBoxStyles: function () {
                    return computeStyleTests(), pixelBoxStylesVal;
                },
                pixelPosition: function () {
                    return computeStyleTests(), pixelPositionVal;
                },
                reliableMarginLeft: function () {
                    return computeStyleTests(), reliableMarginLeftVal;
                },
                scrollboxSize: function () {
                    return computeStyleTests(), scrollboxSizeVal;
                },
            }));
    })();
    var cssPrefixes = ["Webkit", "Moz", "ms"],
        emptyStyle = document.createElement("div").style,
        vendorProps = {};
    function finalPropName(name) {
        var final = jQuery.cssProps[name] || vendorProps[name];
        return (
            final ||
            (name in emptyStyle
                ? name
                : (vendorProps[name] =
                      (function (name) {
                          for (var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length; i--; ) if ((name = cssPrefixes[i] + capName) in emptyStyle) return name;
                      })(name) || name))
        );
    }
    var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
        rcustomProp = /^--/,
        cssShow = { position: "absolute", visibility: "hidden", display: "block" },
        cssNormalTransform = { letterSpacing: "0", fontWeight: "400" };
    function setPositiveNumber(elem, value, subtract) {
        var matches = rcssNum.exec(value);
        return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
    }
    function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
        var i = "width" === dimension ? 1 : 0,
            extra = 0,
            delta = 0;
        if (box === (isBorderBox ? "border" : "content")) return 0;
        for (; i < 4; i += 2)
            "margin" === box && (delta += jQuery.css(elem, box + cssExpand[i], !0, styles)),
                isBorderBox
                    ? ("content" === box && (delta -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), "margin" !== box && (delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)))
                    : ((delta += jQuery.css(elem, "padding" + cssExpand[i], !0, styles)),
                      "padding" !== box ? (delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)) : (extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)));
        return !isBorderBox && computedVal >= 0 && (delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5)) || 0), delta;
    }
    function getWidthOrHeight(elem, dimension, extra) {
        var styles = getStyles(elem),
            isBorderBox = (!support.boxSizingReliable() || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles),
            valueIsBorderBox = isBorderBox,
            val = curCSS(elem, dimension, styles),
            offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
        if (rnumnonpx.test(val)) {
            if (!extra) return val;
            val = "auto";
        }
        return (
            ((!support.boxSizingReliable() && isBorderBox) || "auto" === val || (!parseFloat(val) && "inline" === jQuery.css(elem, "display", !1, styles))) &&
                elem.getClientRects().length &&
                ((isBorderBox = "border-box" === jQuery.css(elem, "boxSizing", !1, styles)), (valueIsBorderBox = offsetProp in elem) && (val = elem[offsetProp])),
            (val = parseFloat(val) || 0) + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, val) + "px"
        );
    }
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.extend({
        cssHooks: {
            opacity: {
                get: function (elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, "opacity");
                        return "" === ret ? "1" : ret;
                    }
                },
            },
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
        },
        cssProps: {},
        style: function (elem, name, value, extra) {
            if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                var ret,
                    type,
                    hooks,
                    origName = camelCase(name),
                    isCustomProp = rcustomProp.test(name),
                    style = elem.style;
                if ((isCustomProp || (name = finalPropName(origName)), (hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]), void 0 === value))
                    return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
                "string" === (type = typeof value) && (ret = rcssNum.exec(value)) && ret[1] && ((value = adjustCSS(elem, name, ret)), (type = "number")),
                    null != value &&
                        value == value &&
                        ("number" !== type || isCustomProp || (value += (ret && ret[3]) || (jQuery.cssNumber[origName] ? "" : "px")),
                        support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"),
                        (hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra))) || (isCustomProp ? style.setProperty(name, value) : (style[name] = value)));
            }
        },
        css: function (elem, name, extra, styles) {
            var val,
                num,
                hooks,
                origName = camelCase(name);
            return (
                rcustomProp.test(name) || (name = finalPropName(origName)),
                (hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]) && "get" in hooks && (val = hooks.get(elem, !0, extra)),
                void 0 === val && (val = curCSS(elem, name, styles)),
                "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]),
                "" === extra || extra ? ((num = parseFloat(val)), !0 === extra || isFinite(num) ? num || 0 : val) : val
            );
        },
    }),
        jQuery.each(["height", "width"], function (i, dimension) {
            jQuery.cssHooks[dimension] = {
                get: function (elem, computed, extra) {
                    if (computed)
                        return !rdisplayswap.test(jQuery.css(elem, "display")) || (elem.getClientRects().length && elem.getBoundingClientRect().width)
                            ? getWidthOrHeight(elem, dimension, extra)
                            : swap(elem, cssShow, function () {
                                  return getWidthOrHeight(elem, dimension, extra);
                              });
                },
                set: function (elem, value, extra) {
                    var matches,
                        styles = getStyles(elem),
                        scrollboxSizeBuggy = !support.scrollboxSize() && "absolute" === styles.position,
                        isBorderBox = (scrollboxSizeBuggy || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles),
                        subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
                    return (
                        isBorderBox &&
                            scrollboxSizeBuggy &&
                            (subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", !1, styles) - 0.5)),
                        subtract && (matches = rcssNum.exec(value)) && "px" !== (matches[3] || "px") && ((elem.style[dimension] = value), (value = jQuery.css(elem, dimension))),
                        setPositiveNumber(0, value, subtract)
                    );
                },
            };
        }),
        (jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
            if (computed)
                return (
                    (parseFloat(curCSS(elem, "marginLeft")) ||
                        elem.getBoundingClientRect().left -
                            swap(elem, { marginLeft: 0 }, function () {
                                return elem.getBoundingClientRect().left;
                            })) + "px"
                );
        })),
        jQuery.each({ margin: "", padding: "", border: "Width" }, function (prefix, suffix) {
            (jQuery.cssHooks[prefix + suffix] = {
                expand: function (value) {
                    for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [value]; i < 4; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                    return expanded;
                },
            }),
                "margin" !== prefix && (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber);
        }),
        jQuery.fn.extend({
            css: function (name, value) {
                return access(
                    this,
                    function (elem, name, value) {
                        var styles,
                            len,
                            map = {},
                            i = 0;
                        if (Array.isArray(name)) {
                            for (styles = getStyles(elem), len = name.length; i < len; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                            return map;
                        }
                        return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
                    },
                    name,
                    value,
                    arguments.length > 1
                );
            },
        }),
        (jQuery.Tween = Tween),
        (Tween.prototype = {
            constructor: Tween,
            init: function (elem, options, prop, end, easing, unit) {
                (this.elem = elem),
                    (this.prop = prop),
                    (this.easing = easing || jQuery.easing._default),
                    (this.options = options),
                    (this.start = this.now = this.cur()),
                    (this.end = end),
                    (this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px"));
            },
            cur: function () {
                var hooks = Tween.propHooks[this.prop];
                return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
            },
            run: function (percent) {
                var eased,
                    hooks = Tween.propHooks[this.prop];
                return (
                    this.options.duration ? (this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration)) : (this.pos = eased = percent),
                    (this.now = (this.end - this.start) * eased + this.start),
                    this.options.step && this.options.step.call(this.elem, this.now, this),
                    hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this),
                    this
                );
            },
        }),
        (Tween.prototype.init.prototype = Tween.prototype),
        (Tween.propHooks = {
            _default: {
                get: function (tween) {
                    var result;
                    return 1 !== tween.elem.nodeType || (null != tween.elem[tween.prop] && null == tween.elem.style[tween.prop]) ? tween.elem[tween.prop] : (result = jQuery.css(tween.elem, tween.prop, "")) && "auto" !== result ? result : 0;
                },
                set: function (tween) {
                    jQuery.fx.step[tween.prop]
                        ? jQuery.fx.step[tween.prop](tween)
                        : 1 !== tween.elem.nodeType || (!jQuery.cssHooks[tween.prop] && null == tween.elem.style[finalPropName(tween.prop)])
                        ? (tween.elem[tween.prop] = tween.now)
                        : jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                },
            },
        }),
        (Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
            set: function (tween) {
                tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now);
            },
        }),
        (jQuery.easing = {
            linear: function (p) {
                return p;
            },
            swing: function (p) {
                return 0.5 - Math.cos(p * Math.PI) / 2;
            },
            _default: "swing",
        }),
        (jQuery.fx = Tween.prototype.init),
        (jQuery.fx.step = {});
    var fxNow,
        inProgress,
        rfxtypes = /^(?:toggle|show|hide)$/,
        rrun = /queueHooks$/;
    function schedule() {
        inProgress && (!1 === document.hidden && window.requestAnimationFrame ? window.requestAnimationFrame(schedule) : window.setTimeout(schedule, jQuery.fx.interval), jQuery.fx.tick());
    }
    function createFxNow() {
        return (
            window.setTimeout(function () {
                fxNow = void 0;
            }),
            (fxNow = Date.now())
        );
    }
    function genFx(type, includeWidth) {
        var which,
            i = 0,
            attrs = { height: type };
        for (includeWidth = includeWidth ? 1 : 0; i < 4; i += 2 - includeWidth) attrs["margin" + (which = cssExpand[i])] = attrs["padding" + which] = type;
        return includeWidth && (attrs.opacity = attrs.width = type), attrs;
    }
    function createTween(value, prop, animation) {
        for (var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length; index < length; index++)
            if ((tween = collection[index].call(animation, prop, value))) return tween;
    }
    function Animation(elem, properties, options) {
        var result,
            stopped,
            index = 0,
            length = Animation.prefilters.length,
            deferred = jQuery.Deferred().always(function () {
                delete tick.elem;
            }),
            tick = function () {
                if (stopped) return !1;
                for (
                    var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), percent = 1 - (remaining / animation.duration || 0), index = 0, length = animation.tweens.length;
                    index < length;
                    index++
                )
                    animation.tweens[index].run(percent);
                return deferred.notifyWith(elem, [animation, percent, remaining]), percent < 1 && length ? remaining : (length || deferred.notifyWith(elem, [animation, 1, 0]), deferred.resolveWith(elem, [animation]), !1);
            },
            animation = deferred.promise({
                elem: elem,
                props: jQuery.extend({}, properties),
                opts: jQuery.extend(!0, { specialEasing: {}, easing: jQuery.easing._default }, options),
                originalProperties: properties,
                originalOptions: options,
                startTime: fxNow || createFxNow(),
                duration: options.duration,
                tweens: [],
                createTween: function (prop, end) {
                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                    return animation.tweens.push(tween), tween;
                },
                stop: function (gotoEnd) {
                    var index = 0,
                        length = gotoEnd ? animation.tweens.length : 0;
                    if (stopped) return this;
                    for (stopped = !0; index < length; index++) animation.tweens[index].run(1);
                    return gotoEnd ? (deferred.notifyWith(elem, [animation, 1, 0]), deferred.resolveWith(elem, [animation, gotoEnd])) : deferred.rejectWith(elem, [animation, gotoEnd]), this;
                },
            }),
            props = animation.props;
        for (
            !(function (props, specialEasing) {
                var index, name, easing, value, hooks;
                for (index in props)
                    if (
                        ((easing = specialEasing[(name = camelCase(index))]),
                        (value = props[index]),
                        Array.isArray(value) && ((easing = value[1]), (value = props[index] = value[0])),
                        index !== name && ((props[name] = value), delete props[index]),
                        (hooks = jQuery.cssHooks[name]) && ("expand" in hooks))
                    )
                        for (index in ((value = hooks.expand(value)), delete props[name], value)) (index in props) || ((props[index] = value[index]), (specialEasing[index] = easing));
                    else specialEasing[name] = easing;
            })(props, animation.opts.specialEasing);
            index < length;
            index++
        )
            if ((result = Animation.prefilters[index].call(animation, elem, props, animation.opts))) return isFunction(result.stop) && (jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result)), result;
        return (
            jQuery.map(props, createTween, animation),
            isFunction(animation.opts.start) && animation.opts.start.call(elem, animation),
            animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always),
            jQuery.fx.timer(jQuery.extend(tick, { elem: elem, anim: animation, queue: animation.opts.queue })),
            animation
        );
    }
    (jQuery.Animation = jQuery.extend(Animation, {
        tweeners: {
            "*": [
                function (prop, value) {
                    var tween = this.createTween(prop, value);
                    return adjustCSS(tween.elem, prop, rcssNum.exec(value), tween), tween;
                },
            ],
        },
        tweener: function (props, callback) {
            isFunction(props) ? ((callback = props), (props = ["*"])) : (props = props.match(rnothtmlwhite));
            for (var prop, index = 0, length = props.length; index < length; index++) (prop = props[index]), (Animation.tweeners[prop] = Animation.tweeners[prop] || []), Animation.tweeners[prop].unshift(callback);
        },
        prefilters: [
            function (elem, props, opts) {
                var prop,
                    value,
                    toggle,
                    hooks,
                    oldfire,
                    propTween,
                    restoreDisplay,
                    display,
                    isBox = "width" in props || "height" in props,
                    anim = this,
                    orig = {},
                    style = elem.style,
                    hidden = elem.nodeType && isHiddenWithinTree(elem),
                    dataShow = dataPriv.get(elem, "fxshow");
                for (prop in (opts.queue ||
                    (null == (hooks = jQuery._queueHooks(elem, "fx")).unqueued &&
                        ((hooks.unqueued = 0),
                        (oldfire = hooks.empty.fire),
                        (hooks.empty.fire = function () {
                            hooks.unqueued || oldfire();
                        })),
                    hooks.unqueued++,
                    anim.always(function () {
                        anim.always(function () {
                            hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire();
                        });
                    })),
                props))
                    if (((value = props[prop]), rfxtypes.test(value))) {
                        if ((delete props[prop], (toggle = toggle || "toggle" === value), value === (hidden ? "hide" : "show"))) {
                            if ("show" !== value || !dataShow || void 0 === dataShow[prop]) continue;
                            hidden = !0;
                        }
                        orig[prop] = (dataShow && dataShow[prop]) || jQuery.style(elem, prop);
                    }
                if ((propTween = !jQuery.isEmptyObject(props)) || !jQuery.isEmptyObject(orig))
                    for (prop in (isBox &&
                        1 === elem.nodeType &&
                        ((opts.overflow = [style.overflow, style.overflowX, style.overflowY]),
                        null == (restoreDisplay = dataShow && dataShow.display) && (restoreDisplay = dataPriv.get(elem, "display")),
                        "none" === (display = jQuery.css(elem, "display")) &&
                            (restoreDisplay ? (display = restoreDisplay) : (showHide([elem], !0), (restoreDisplay = elem.style.display || restoreDisplay), (display = jQuery.css(elem, "display")), showHide([elem]))),
                        ("inline" === display || ("inline-block" === display && null != restoreDisplay)) &&
                            "none" === jQuery.css(elem, "float") &&
                            (propTween ||
                                (anim.done(function () {
                                    style.display = restoreDisplay;
                                }),
                                null == restoreDisplay && ((display = style.display), (restoreDisplay = "none" === display ? "" : display))),
                            (style.display = "inline-block"))),
                    opts.overflow &&
                        ((style.overflow = "hidden"),
                        anim.always(function () {
                            (style.overflow = opts.overflow[0]), (style.overflowX = opts.overflow[1]), (style.overflowY = opts.overflow[2]);
                        })),
                    (propTween = !1),
                    orig))
                        propTween ||
                            (dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : (dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay })),
                            toggle && (dataShow.hidden = !hidden),
                            hidden && showHide([elem], !0),
                            anim.done(function () {
                                for (prop in (hidden || showHide([elem]), dataPriv.remove(elem, "fxshow"), orig)) jQuery.style(elem, prop, orig[prop]);
                            })),
                            (propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim)),
                            prop in dataShow || ((dataShow[prop] = propTween.start), hidden && ((propTween.end = propTween.start), (propTween.start = 0)));
            },
        ],
        prefilter: function (callback, prepend) {
            prepend ? Animation.prefilters.unshift(callback) : Animation.prefilters.push(callback);
        },
    })),
        (jQuery.speed = function (speed, easing, fn) {
            var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : { complete: fn || (!fn && easing) || (isFunction(speed) && speed), duration: speed, easing: (fn && easing) || (easing && !isFunction(easing) && easing) };
            return (
                jQuery.fx.off ? (opt.duration = 0) : "number" != typeof opt.duration && (opt.duration in jQuery.fx.speeds ? (opt.duration = jQuery.fx.speeds[opt.duration]) : (opt.duration = jQuery.fx.speeds._default)),
                (null != opt.queue && !0 !== opt.queue) || (opt.queue = "fx"),
                (opt.old = opt.complete),
                (opt.complete = function () {
                    isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue);
                }),
                opt
            );
        }),
        jQuery.fn.extend({
            fadeTo: function (speed, to, easing, callback) {
                return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({ opacity: to }, speed, easing, callback);
            },
            animate: function (prop, speed, easing, callback) {
                var empty = jQuery.isEmptyObject(prop),
                    optall = jQuery.speed(speed, easing, callback),
                    doAnimation = function () {
                        var anim = Animation(this, jQuery.extend({}, prop), optall);
                        (empty || dataPriv.get(this, "finish")) && anim.stop(!0);
                    };
                return (doAnimation.finish = doAnimation), empty || !1 === optall.queue ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
            },
            stop: function (type, clearQueue, gotoEnd) {
                var stopQueue = function (hooks) {
                    var stop = hooks.stop;
                    delete hooks.stop, stop(gotoEnd);
                };
                return (
                    "string" != typeof type && ((gotoEnd = clearQueue), (clearQueue = type), (type = void 0)),
                    clearQueue && !1 !== type && this.queue(type || "fx", []),
                    this.each(function () {
                        var dequeue = !0,
                            index = null != type && type + "queueHooks",
                            timers = jQuery.timers,
                            data = dataPriv.get(this);
                        if (index) data[index] && data[index].stop && stopQueue(data[index]);
                        else for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                        for (index = timers.length; index--; ) timers[index].elem !== this || (null != type && timers[index].queue !== type) || (timers[index].anim.stop(gotoEnd), (dequeue = !1), timers.splice(index, 1));
                        (!dequeue && gotoEnd) || jQuery.dequeue(this, type);
                    })
                );
            },
            finish: function (type) {
                return (
                    !1 !== type && (type = type || "fx"),
                    this.each(function () {
                        var index,
                            data = dataPriv.get(this),
                            queue = data[type + "queue"],
                            hooks = data[type + "queueHooks"],
                            timers = jQuery.timers,
                            length = queue ? queue.length : 0;
                        for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), index = timers.length; index--; )
                            timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), timers.splice(index, 1));
                        for (index = 0; index < length; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
                        delete data.finish;
                    })
                );
            },
        }),
        jQuery.each(["toggle", "show", "hide"], function (i, name) {
            var cssFn = jQuery.fn[name];
            jQuery.fn[name] = function (speed, easing, callback) {
                return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback);
            };
        }),
        jQuery.each({ slideDown: genFx("show"), slideUp: genFx("hide"), slideToggle: genFx("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (name, props) {
            jQuery.fn[name] = function (speed, easing, callback) {
                return this.animate(props, speed, easing, callback);
            };
        }),
        (jQuery.timers = []),
        (jQuery.fx.tick = function () {
            var timer,
                i = 0,
                timers = jQuery.timers;
            for (fxNow = Date.now(); i < timers.length; i++) (timer = timers[i])() || timers[i] !== timer || timers.splice(i--, 1);
            timers.length || jQuery.fx.stop(), (fxNow = void 0);
        }),
        (jQuery.fx.timer = function (timer) {
            jQuery.timers.push(timer), jQuery.fx.start();
        }),
        (jQuery.fx.interval = 13),
        (jQuery.fx.start = function () {
            inProgress || ((inProgress = !0), schedule());
        }),
        (jQuery.fx.stop = function () {
            inProgress = null;
        }),
        (jQuery.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
        (jQuery.fn.delay = function (time, type) {
            return (
                (time = (jQuery.fx && jQuery.fx.speeds[time]) || time),
                (type = type || "fx"),
                this.queue(type, function (next, hooks) {
                    var timeout = window.setTimeout(next, time);
                    hooks.stop = function () {
                        window.clearTimeout(timeout);
                    };
                })
            );
        }),
        (function () {
            var input = document.createElement("input"),
                opt = document.createElement("select").appendChild(document.createElement("option"));
            (input.type = "checkbox"),
                (support.checkOn = "" !== input.value),
                (support.optSelected = opt.selected),
                ((input = document.createElement("input")).value = "t"),
                (input.type = "radio"),
                (support.radioValue = "t" === input.value);
        })();
    var boolHook,
        attrHandle = jQuery.expr.attrHandle;
    jQuery.fn.extend({
        attr: function (name, value) {
            return access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function (name) {
            return this.each(function () {
                jQuery.removeAttr(this, name);
            });
        },
    }),
        jQuery.extend({
            attr: function (elem, name, value) {
                var ret,
                    hooks,
                    nType = elem.nodeType;
                if (3 !== nType && 8 !== nType && 2 !== nType)
                    return void 0 === elem.getAttribute
                        ? jQuery.prop(elem, name, value)
                        : ((1 === nType && jQuery.isXMLDoc(elem)) || (hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : void 0)),
                          void 0 !== value
                              ? null === value
                                  ? void jQuery.removeAttr(elem, name)
                                  : hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name))
                                  ? ret
                                  : (elem.setAttribute(name, value + ""), value)
                              : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name))
                              ? ret
                              : null == (ret = jQuery.find.attr(elem, name))
                              ? void 0
                              : ret);
            },
            attrHooks: {
                type: {
                    set: function (elem, value) {
                        if (!support.radioValue && "radio" === value && nodeName(elem, "input")) {
                            var val = elem.value;
                            return elem.setAttribute("type", value), val && (elem.value = val), value;
                        }
                    },
                },
            },
            removeAttr: function (elem, value) {
                var name,
                    i = 0,
                    attrNames = value && value.match(rnothtmlwhite);
                if (attrNames && 1 === elem.nodeType) for (; (name = attrNames[i++]); ) elem.removeAttribute(name);
            },
        }),
        (boolHook = {
            set: function (elem, value, name) {
                return !1 === value ? jQuery.removeAttr(elem, name) : elem.setAttribute(name, name), name;
            },
        }),
        jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
            var getter = attrHandle[name] || jQuery.find.attr;
            attrHandle[name] = function (elem, name, isXML) {
                var ret,
                    handle,
                    lowercaseName = name.toLowerCase();
                return isXML || ((handle = attrHandle[lowercaseName]), (attrHandle[lowercaseName] = ret), (ret = null != getter(elem, name, isXML) ? lowercaseName : null), (attrHandle[lowercaseName] = handle)), ret;
            };
        });
    var rfocusable = /^(?:input|select|textarea|button)$/i,
        rclickable = /^(?:a|area)$/i;
    function stripAndCollapse(value) {
        return (value.match(rnothtmlwhite) || []).join(" ");
    }
    function getClass(elem) {
        return (elem.getAttribute && elem.getAttribute("class")) || "";
    }
    function classesToArray(value) {
        return Array.isArray(value) ? value : ("string" == typeof value && value.match(rnothtmlwhite)) || [];
    }
    jQuery.fn.extend({
        prop: function (name, value) {
            return access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function (name) {
            return this.each(function () {
                delete this[jQuery.propFix[name] || name];
            });
        },
    }),
        jQuery.extend({
            prop: function (elem, name, value) {
                var ret,
                    hooks,
                    nType = elem.nodeType;
                if (3 !== nType && 8 !== nType && 2 !== nType)
                    return (
                        (1 === nType && jQuery.isXMLDoc(elem)) || ((name = jQuery.propFix[name] || name), (hooks = jQuery.propHooks[name])),
                        void 0 !== value ? (hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem[name] = value)) : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name]
                    );
            },
            propHooks: {
                tabIndex: {
                    get: function (elem) {
                        var tabindex = jQuery.find.attr(elem, "tabindex");
                        return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || (rclickable.test(elem.nodeName) && elem.href) ? 0 : -1;
                    },
                },
            },
            propFix: { for: "htmlFor", class: "className" },
        }),
        support.optSelected ||
            (jQuery.propHooks.selected = {
                get: function (elem) {
                    var parent = elem.parentNode;
                    return parent && parent.parentNode && parent.parentNode.selectedIndex, null;
                },
                set: function (elem) {
                    var parent = elem.parentNode;
                    parent && (parent.selectedIndex, parent.parentNode && parent.parentNode.selectedIndex);
                },
            }),
        jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
            jQuery.propFix[this.toLowerCase()] = this;
        }),
        jQuery.fn.extend({
            addClass: function (value) {
                var classes,
                    elem,
                    cur,
                    curValue,
                    clazz,
                    j,
                    finalValue,
                    i = 0;
                if (isFunction(value))
                    return this.each(function (j) {
                        jQuery(this).addClass(value.call(this, j, getClass(this)));
                    });
                if ((classes = classesToArray(value)).length)
                    for (; (elem = this[i++]); )
                        if (((curValue = getClass(elem)), (cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " "))) {
                            for (j = 0; (clazz = classes[j++]); ) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                            curValue !== (finalValue = stripAndCollapse(cur)) && elem.setAttribute("class", finalValue);
                        }
                return this;
            },
            removeClass: function (value) {
                var classes,
                    elem,
                    cur,
                    curValue,
                    clazz,
                    j,
                    finalValue,
                    i = 0;
                if (isFunction(value))
                    return this.each(function (j) {
                        jQuery(this).removeClass(value.call(this, j, getClass(this)));
                    });
                if (!arguments.length) return this.attr("class", "");
                if ((classes = classesToArray(value)).length)
                    for (; (elem = this[i++]); )
                        if (((curValue = getClass(elem)), (cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " "))) {
                            for (j = 0; (clazz = classes[j++]); ) for (; cur.indexOf(" " + clazz + " ") > -1; ) cur = cur.replace(" " + clazz + " ", " ");
                            curValue !== (finalValue = stripAndCollapse(cur)) && elem.setAttribute("class", finalValue);
                        }
                return this;
            },
            toggleClass: function (value, stateVal) {
                var type = typeof value,
                    isValidValue = "string" === type || Array.isArray(value);
                return "boolean" == typeof stateVal && isValidValue
                    ? stateVal
                        ? this.addClass(value)
                        : this.removeClass(value)
                    : isFunction(value)
                    ? this.each(function (i) {
                          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
                      })
                    : this.each(function () {
                          var className, i, self, classNames;
                          if (isValidValue) for (i = 0, self = jQuery(this), classNames = classesToArray(value); (className = classNames[i++]); ) self.hasClass(className) ? self.removeClass(className) : self.addClass(className);
                          else
                              (void 0 !== value && "boolean" !== type) ||
                                  ((className = getClass(this)) && dataPriv.set(this, "__className__", className), this.setAttribute && this.setAttribute("class", className || !1 === value ? "" : dataPriv.get(this, "__className__") || ""));
                      });
            },
            hasClass: function (selector) {
                var className,
                    elem,
                    i = 0;
                for (className = " " + selector + " "; (elem = this[i++]); ) if (1 === elem.nodeType && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) return !0;
                return !1;
            },
        });
    var rreturn = /\r/g;
    jQuery.fn.extend({
        val: function (value) {
            var hooks,
                ret,
                valueIsFunction,
                elem = this[0];
            return arguments.length
                ? ((valueIsFunction = isFunction(value)),
                  this.each(function (i) {
                      var val;
                      1 === this.nodeType &&
                          (null == (val = valueIsFunction ? value.call(this, i, jQuery(this).val()) : value)
                              ? (val = "")
                              : "number" == typeof val
                              ? (val += "")
                              : Array.isArray(val) &&
                                (val = jQuery.map(val, function (value) {
                                    return null == value ? "" : value + "";
                                })),
                          ((hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]) && "set" in hooks && void 0 !== hooks.set(this, val, "value")) || (this.value = val));
                  }))
                : elem
                ? (hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]) && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value"))
                    ? ret
                    : "string" == typeof (ret = elem.value)
                    ? ret.replace(rreturn, "")
                    : null == ret
                    ? ""
                    : ret
                : void 0;
        },
    }),
        jQuery.extend({
            valHooks: {
                option: {
                    get: function (elem) {
                        var val = jQuery.find.attr(elem, "value");
                        return null != val ? val : stripAndCollapse(jQuery.text(elem));
                    },
                },
                select: {
                    get: function (elem) {
                        var value,
                            option,
                            i,
                            options = elem.options,
                            index = elem.selectedIndex,
                            one = "select-one" === elem.type,
                            values = one ? null : [],
                            max = one ? index + 1 : options.length;
                        for (i = index < 0 ? max : one ? index : 0; i < max; i++)
                            if (((option = options[i]).selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                                if (((value = jQuery(option).val()), one)) return value;
                                values.push(value);
                            }
                        return values;
                    },
                    set: function (elem, value) {
                        for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--; )
                            ((option = options[i]).selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) && (optionSet = !0);
                        return optionSet || (elem.selectedIndex = -1), values;
                    },
                },
            },
        }),
        jQuery.each(["radio", "checkbox"], function () {
            (jQuery.valHooks[this] = {
                set: function (elem, value) {
                    if (Array.isArray(value)) return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1);
                },
            }),
                support.checkOn ||
                    (jQuery.valHooks[this].get = function (elem) {
                        return null === elem.getAttribute("value") ? "on" : elem.value;
                    });
        }),
        (support.focusin = "onfocusin" in window);
    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
        stopPropagationCallback = function (e) {
            e.stopPropagation();
        };
    jQuery.extend(jQuery.event, {
        trigger: function (event, data, elem, onlyHandlers) {
            var i,
                cur,
                tmp,
                bubbleType,
                ontype,
                handle,
                special,
                lastElement,
                eventPath = [elem || document],
                type = hasOwn.call(event, "type") ? event.type : event,
                namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
            if (
                ((cur = lastElement = tmp = elem = elem || document),
                3 !== elem.nodeType &&
                    8 !== elem.nodeType &&
                    !rfocusMorph.test(type + jQuery.event.triggered) &&
                    (type.indexOf(".") > -1 && ((type = (namespaces = type.split(".")).shift()), namespaces.sort()),
                    (ontype = type.indexOf(":") < 0 && "on" + type),
                    ((event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event)).isTrigger = onlyHandlers ? 2 : 3),
                    (event.namespace = namespaces.join(".")),
                    (event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null),
                    (event.result = void 0),
                    event.target || (event.target = elem),
                    (data = null == data ? [event] : jQuery.makeArray(data, [event])),
                    (special = jQuery.event.special[type] || {}),
                    onlyHandlers || !special.trigger || !1 !== special.trigger.apply(elem, data)))
            ) {
                if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                    for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), (tmp = cur);
                    tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                }
                for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped(); )
                    (lastElement = cur),
                        (event.type = i > 1 ? bubbleType : special.bindType || type),
                        (handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle")) && handle.apply(cur, data),
                        (handle = ontype && cur[ontype]) && handle.apply && acceptData(cur) && ((event.result = handle.apply(cur, data)), !1 === event.result && event.preventDefault());
                return (
                    (event.type = type),
                    onlyHandlers ||
                        event.isDefaultPrevented() ||
                        (special._default && !1 !== special._default.apply(eventPath.pop(), data)) ||
                        !acceptData(elem) ||
                        (ontype &&
                            isFunction(elem[type]) &&
                            !isWindow(elem) &&
                            ((tmp = elem[ontype]) && (elem[ontype] = null),
                            (jQuery.event.triggered = type),
                            event.isPropagationStopped() && lastElement.addEventListener(type, stopPropagationCallback),
                            elem[type](),
                            event.isPropagationStopped() && lastElement.removeEventListener(type, stopPropagationCallback),
                            (jQuery.event.triggered = void 0),
                            tmp && (elem[ontype] = tmp))),
                    event.result
                );
            }
        },
        simulate: function (type, elem, event) {
            var e = jQuery.extend(new jQuery.Event(), event, { type: type, isSimulated: !0 });
            jQuery.event.trigger(e, null, elem);
        },
    }),
        jQuery.fn.extend({
            trigger: function (type, data) {
                return this.each(function () {
                    jQuery.event.trigger(type, data, this);
                });
            },
            triggerHandler: function (type, data) {
                var elem = this[0];
                if (elem) return jQuery.event.trigger(type, data, elem, !0);
            },
        }),
        support.focusin ||
            jQuery.each({ focus: "focusin", blur: "focusout" }, function (orig, fix) {
                var handler = function (event) {
                    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
                };
                jQuery.event.special[fix] = {
                    setup: function () {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access(doc, fix);
                        attaches || doc.addEventListener(orig, handler, !0), dataPriv.access(doc, fix, (attaches || 0) + 1);
                    },
                    teardown: function () {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access(doc, fix) - 1;
                        attaches ? dataPriv.access(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), dataPriv.remove(doc, fix));
                    },
                };
            });
    var location = window.location,
        nonce = Date.now(),
        rquery = /\?/;
    jQuery.parseXML = function (data) {
        var xml;
        if (!data || "string" != typeof data) return null;
        try {
            xml = new window.DOMParser().parseFromString(data, "text/xml");
        } catch (e) {
            xml = void 0;
        }
        return (xml && !xml.getElementsByTagName("parsererror").length) || jQuery.error("Invalid XML: " + data), xml;
    };
    var rbracket = /\[\]$/,
        rCRLF = /\r?\n/g,
        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
        rsubmittable = /^(?:input|select|textarea|keygen)/i;
    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (Array.isArray(obj))
            jQuery.each(obj, function (i, v) {
                traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v && null != v ? i : "") + "]", v, traditional, add);
            });
        else if (traditional || "object" !== toType(obj)) add(prefix, obj);
        else for (name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
    }
    (jQuery.param = function (a, traditional) {
        var prefix,
            s = [],
            add = function (key, valueOrFunction) {
                var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
                s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(null == value ? "" : value);
            };
        if (null == a) return "";
        if (Array.isArray(a) || (a.jquery && !jQuery.isPlainObject(a)))
            jQuery.each(a, function () {
                add(this.name, this.value);
            });
        else for (prefix in a) buildParams(prefix, a[prefix], traditional, add);
        return s.join("&");
    }),
        jQuery.fn.extend({
            serialize: function () {
                return jQuery.param(this.serializeArray());
            },
            serializeArray: function () {
                return this.map(function () {
                    var elements = jQuery.prop(this, "elements");
                    return elements ? jQuery.makeArray(elements) : this;
                })
                    .filter(function () {
                        var type = this.type;
                        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
                    })
                    .map(function (i, elem) {
                        var val = jQuery(this).val();
                        return null == val
                            ? null
                            : Array.isArray(val)
                            ? jQuery.map(val, function (val) {
                                  return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
                              })
                            : { name: elem.name, value: val.replace(rCRLF, "\r\n") };
                    })
                    .get();
            },
        });
    var r20 = /%20/g,
        rhash = /#.*$/,
        rantiCache = /([?&])_=[^&]*/,
        rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        rnoContent = /^(?:GET|HEAD)$/,
        rprotocol = /^\/\//,
        prefilters = {},
        transports = {},
        allTypes = "*/".concat("*"),
        originAnchor = document.createElement("a");
    function addToPrefiltersOrTransports(structure) {
        return function (dataTypeExpression, func) {
            "string" != typeof dataTypeExpression && ((func = dataTypeExpression), (dataTypeExpression = "*"));
            var dataType,
                i = 0,
                dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func))
                for (; (dataType = dataTypes[i++]); )
                    "+" === dataType[0] ? ((dataType = dataType.slice(1) || "*"), (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func);
        };
    }
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {},
            seekingTransport = structure === transports;
        function inspect(dataType) {
            var selected;
            return (
                (inspected[dataType] = !0),
                jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
                    var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                    return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport]
                        ? seekingTransport
                            ? !(selected = dataTypeOrTransport)
                            : void 0
                        : (options.dataTypes.unshift(dataTypeOrTransport), inspect(dataTypeOrTransport), !1);
                }),
                selected
            );
        }
        return inspect(options.dataTypes[0]) || (!inspected["*"] && inspect("*"));
    }
    function ajaxExtend(target, src) {
        var key,
            deep,
            flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for (key in src) void 0 !== src[key] && ((flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]);
        return deep && jQuery.extend(!0, target, deep), target;
    }
    (originAnchor.href = location.href),
        jQuery.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: location.href,
                type: "GET",
                isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(location.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: { "*": allTypes, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" },
                contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
                responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" },
                converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": jQuery.parseXML },
                flatOptions: { url: !0, context: !0 },
            },
            ajaxSetup: function (target, settings) {
                return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
            },
            ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
            ajaxTransport: addToPrefiltersOrTransports(transports),
            ajax: function (url, options) {
                "object" == typeof url && ((options = url), (url = void 0)), (options = options || {});
                var transport,
                    cacheURL,
                    responseHeadersString,
                    responseHeaders,
                    timeoutTimer,
                    urlAnchor,
                    completed,
                    fireGlobals,
                    i,
                    uncached,
                    s = jQuery.ajaxSetup({}, options),
                    callbackContext = s.context || s,
                    globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
                    deferred = jQuery.Deferred(),
                    completeDeferred = jQuery.Callbacks("once memory"),
                    statusCode = s.statusCode || {},
                    requestHeaders = {},
                    requestHeadersNames = {},
                    strAbort = "canceled",
                    jqXHR = {
                        readyState: 0,
                        getResponseHeader: function (key) {
                            var match;
                            if (completed) {
                                if (!responseHeaders)
                                    for (responseHeaders = {}; (match = rheaders.exec(responseHeadersString)); ) responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                                match = responseHeaders[key.toLowerCase() + " "];
                            }
                            return null == match ? null : match.join(", ");
                        },
                        getAllResponseHeaders: function () {
                            return completed ? responseHeadersString : null;
                        },
                        setRequestHeader: function (name, value) {
                            return null == completed && ((name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name), (requestHeaders[name] = value)), this;
                        },
                        overrideMimeType: function (type) {
                            return null == completed && (s.mimeType = type), this;
                        },
                        statusCode: function (map) {
                            var code;
                            if (map)
                                if (completed) jqXHR.always(map[jqXHR.status]);
                                else for (code in map) statusCode[code] = [statusCode[code], map[code]];
                            return this;
                        },
                        abort: function (statusText) {
                            var finalText = statusText || strAbort;
                            return transport && transport.abort(finalText), done(0, finalText), this;
                        },
                    };
                if (
                    (deferred.promise(jqXHR),
                    (s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//")),
                    (s.type = options.method || options.type || s.method || s.type),
                    (s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]),
                    null == s.crossDomain)
                ) {
                    urlAnchor = document.createElement("a");
                    try {
                        (urlAnchor.href = s.url), (urlAnchor.href = urlAnchor.href), (s.crossDomain = originAnchor.protocol + "//" + originAnchor.host != urlAnchor.protocol + "//" + urlAnchor.host);
                    } catch (e) {
                        s.crossDomain = !0;
                    }
                }
                if ((s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), completed)) return jqXHR;
                for (i in ((fireGlobals = jQuery.event && s.global) && 0 == jQuery.active++ && jQuery.event.trigger("ajaxStart"),
                (s.type = s.type.toUpperCase()),
                (s.hasContent = !rnoContent.test(s.type)),
                (cacheURL = s.url.replace(rhash, "")),
                s.hasContent
                    ? s.data && s.processData && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && (s.data = s.data.replace(r20, "+"))
                    : ((uncached = s.url.slice(cacheURL.length)),
                      s.data && (s.processData || "string" == typeof s.data) && ((cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data), delete s.data),
                      !1 === s.cache && ((cacheURL = cacheURL.replace(rantiCache, "$1")), (uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++ + uncached)),
                      (s.url = cacheURL + uncached)),
                s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])),
                ((s.data && s.hasContent && !1 !== s.contentType) || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType),
                jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]),
                s.headers))
                    jqXHR.setRequestHeader(i, s.headers[i]);
                if (s.beforeSend && (!1 === s.beforeSend.call(callbackContext, jqXHR, s) || completed)) return jqXHR.abort();
                if (((strAbort = "abort"), completeDeferred.add(s.complete), jqXHR.done(s.success), jqXHR.fail(s.error), (transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)))) {
                    if (((jqXHR.readyState = 1), fireGlobals && globalEventContext.trigger("ajaxSend", [jqXHR, s]), completed)) return jqXHR;
                    s.async &&
                        s.timeout > 0 &&
                        (timeoutTimer = window.setTimeout(function () {
                            jqXHR.abort("timeout");
                        }, s.timeout));
                    try {
                        (completed = !1), transport.send(requestHeaders, done);
                    } catch (e) {
                        if (completed) throw e;
                        done(-1, e);
                    }
                } else done(-1, "No Transport");
                function done(status, nativeStatusText, responses, headers) {
                    var isSuccess,
                        success,
                        error,
                        response,
                        modified,
                        statusText = nativeStatusText;
                    completed ||
                        ((completed = !0),
                        timeoutTimer && window.clearTimeout(timeoutTimer),
                        (transport = void 0),
                        (responseHeadersString = headers || ""),
                        (jqXHR.readyState = status > 0 ? 4 : 0),
                        (isSuccess = (status >= 200 && status < 300) || 304 === status),
                        responses &&
                            (response = (function (s, jqXHR, responses) {
                                for (var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes; "*" === dataTypes[0]; )
                                    dataTypes.shift(), void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
                                if (ct)
                                    for (type in contents)
                                        if (contents[type] && contents[type].test(ct)) {
                                            dataTypes.unshift(type);
                                            break;
                                        }
                                if (dataTypes[0] in responses) finalDataType = dataTypes[0];
                                else {
                                    for (type in responses) {
                                        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                                            finalDataType = type;
                                            break;
                                        }
                                        firstDataType || (firstDataType = type);
                                    }
                                    finalDataType = finalDataType || firstDataType;
                                }
                                if (finalDataType) return finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), responses[finalDataType];
                            })(s, jqXHR, responses)),
                        (response = (function (s, response, jqXHR, isSuccess) {
                            var conv2,
                                current,
                                conv,
                                tmp,
                                prev,
                                converters = {},
                                dataTypes = s.dataTypes.slice();
                            if (dataTypes[1]) for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
                            for (current = dataTypes.shift(); current; )
                                if (
                                    (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response),
                                    !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)),
                                    (prev = current),
                                    (current = dataTypes.shift()))
                                )
                                    if ("*" === current) current = prev;
                                    else if ("*" !== prev && prev !== current) {
                                        if (!(conv = converters[prev + " " + current] || converters["* " + current]))
                                            for (conv2 in converters)
                                                if ((tmp = conv2.split(" "))[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                                                    !0 === conv ? (conv = converters[conv2]) : !0 !== converters[conv2] && ((current = tmp[0]), dataTypes.unshift(tmp[1]));
                                                    break;
                                                }
                                        if (!0 !== conv)
                                            if (conv && s.throws) response = conv(response);
                                            else
                                                try {
                                                    response = conv(response);
                                                } catch (e) {
                                                    return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
                                                }
                                    }
                            return { state: "success", data: response };
                        })(s, response, jqXHR, isSuccess)),
                        isSuccess
                            ? (s.ifModified && ((modified = jqXHR.getResponseHeader("Last-Modified")) && (jQuery.lastModified[cacheURL] = modified), (modified = jqXHR.getResponseHeader("etag")) && (jQuery.etag[cacheURL] = modified)),
                              204 === status || "HEAD" === s.type
                                  ? (statusText = "nocontent")
                                  : 304 === status
                                  ? (statusText = "notmodified")
                                  : ((statusText = response.state), (success = response.data), (isSuccess = !(error = response.error))))
                            : ((error = statusText), (!status && statusText) || ((statusText = "error"), status < 0 && (status = 0))),
                        (jqXHR.status = status),
                        (jqXHR.statusText = (nativeStatusText || statusText) + ""),
                        isSuccess ? deferred.resolveWith(callbackContext, [success, statusText, jqXHR]) : deferred.rejectWith(callbackContext, [jqXHR, statusText, error]),
                        jqXHR.statusCode(statusCode),
                        (statusCode = void 0),
                        fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]),
                        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]),
                        fireGlobals && (globalEventContext.trigger("ajaxComplete", [jqXHR, s]), --jQuery.active || jQuery.event.trigger("ajaxStop")));
                }
                return jqXHR;
            },
            getJSON: function (url, data, callback) {
                return jQuery.get(url, data, callback, "json");
            },
            getScript: function (url, callback) {
                return jQuery.get(url, void 0, callback, "script");
            },
        }),
        jQuery.each(["get", "post"], function (i, method) {
            jQuery[method] = function (url, data, callback, type) {
                return (
                    isFunction(data) && ((type = type || callback), (callback = data), (data = void 0)), jQuery.ajax(jQuery.extend({ url: url, type: method, dataType: type, data: data, success: callback }, jQuery.isPlainObject(url) && url))
                );
            };
        }),
        (jQuery._evalUrl = function (url, options) {
            return jQuery.ajax({
                url: url,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                converters: { "text script": function () {} },
                dataFilter: function (response) {
                    jQuery.globalEval(response, options);
                },
            });
        }),
        jQuery.fn.extend({
            wrapAll: function (html) {
                var wrap;
                return (
                    this[0] &&
                        (isFunction(html) && (html = html.call(this[0])),
                        (wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0)),
                        this[0].parentNode && wrap.insertBefore(this[0]),
                        wrap
                            .map(function () {
                                for (var elem = this; elem.firstElementChild; ) elem = elem.firstElementChild;
                                return elem;
                            })
                            .append(this)),
                    this
                );
            },
            wrapInner: function (html) {
                return isFunction(html)
                    ? this.each(function (i) {
                          jQuery(this).wrapInner(html.call(this, i));
                      })
                    : this.each(function () {
                          var self = jQuery(this),
                              contents = self.contents();
                          contents.length ? contents.wrapAll(html) : self.append(html);
                      });
            },
            wrap: function (html) {
                var htmlIsFunction = isFunction(html);
                return this.each(function (i) {
                    jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
                });
            },
            unwrap: function (selector) {
                return (
                    this.parent(selector)
                        .not("body")
                        .each(function () {
                            jQuery(this).replaceWith(this.childNodes);
                        }),
                    this
                );
            },
        }),
        (jQuery.expr.pseudos.hidden = function (elem) {
            return !jQuery.expr.pseudos.visible(elem);
        }),
        (jQuery.expr.pseudos.visible = function (elem) {
            return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
        }),
        (jQuery.ajaxSettings.xhr = function () {
            try {
                return new window.XMLHttpRequest();
            } catch (e) {}
        });
    var xhrSuccessStatus = { 0: 200, 1223: 204 },
        xhrSupported = jQuery.ajaxSettings.xhr();
    (support.cors = !!xhrSupported && "withCredentials" in xhrSupported),
        (support.ajax = xhrSupported = !!xhrSupported),
        jQuery.ajaxTransport(function (options) {
            var callback, errorCallback;
            if (support.cors || (xhrSupported && !options.crossDomain))
                return {
                    send: function (headers, complete) {
                        var i,
                            xhr = options.xhr();
                        if ((xhr.open(options.type, options.url, options.async, options.username, options.password), options.xhrFields)) for (i in options.xhrFields) xhr[i] = options.xhrFields[i];
                        for (i in (options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest"), headers))
                            xhr.setRequestHeader(i, headers[i]);
                        (callback = function (type) {
                            return function () {
                                callback &&
                                    ((callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null),
                                    "abort" === type
                                        ? xhr.abort()
                                        : "error" === type
                                        ? "number" != typeof xhr.status
                                            ? complete(0, "error")
                                            : complete(xhr.status, xhr.statusText)
                                        : complete(
                                              xhrSuccessStatus[xhr.status] || xhr.status,
                                              xhr.statusText,
                                              "text" !== (xhr.responseType || "text") || "string" != typeof xhr.responseText ? { binary: xhr.response } : { text: xhr.responseText },
                                              xhr.getAllResponseHeaders()
                                          ));
                            };
                        }),
                            (xhr.onload = callback()),
                            (errorCallback = xhr.onerror = xhr.ontimeout = callback("error")),
                            void 0 !== xhr.onabort
                                ? (xhr.onabort = errorCallback)
                                : (xhr.onreadystatechange = function () {
                                      4 === xhr.readyState &&
                                          window.setTimeout(function () {
                                              callback && errorCallback();
                                          });
                                  }),
                            (callback = callback("abort"));
                        try {
                            xhr.send((options.hasContent && options.data) || null);
                        } catch (e) {
                            if (callback) throw e;
                        }
                    },
                    abort: function () {
                        callback && callback();
                    },
                };
        }),
        jQuery.ajaxPrefilter(function (s) {
            s.crossDomain && (s.contents.script = !1);
        }),
        jQuery.ajaxSetup({
            accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" },
            contents: { script: /\b(?:java|ecma)script\b/ },
            converters: {
                "text script": function (text) {
                    return jQuery.globalEval(text), text;
                },
            },
        }),
        jQuery.ajaxPrefilter("script", function (s) {
            void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET");
        }),
        jQuery.ajaxTransport("script", function (s) {
            var script, callback;
            if (s.crossDomain || s.scriptAttrs)
                return {
                    send: function (_, complete) {
                        (script = jQuery("<script>")
                            .attr(s.scriptAttrs || {})
                            .prop({ charset: s.scriptCharset, src: s.url })
                            .on(
                                "load error",
                                (callback = function (evt) {
                                    script.remove(), (callback = null), evt && complete("error" === evt.type ? 404 : 200, evt.type);
                                })
                            )),
                            document.head.appendChild(script[0]);
                    },
                    abort: function () {
                        callback && callback();
                    },
                };
        });
    var body,
        oldCallbacks = [],
        rjsonp = /(=)\?(?=&|$)|\?\?/;
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
            return (this[callback] = !0), callback;
        },
    }),
        jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
            var callbackName,
                overwritten,
                responseContainer,
                jsonProp = !1 !== s.jsonp && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
            if (jsonProp || "jsonp" === s.dataTypes[0])
                return (
                    (callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback),
                    jsonProp ? (s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName)) : !1 !== s.jsonp && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName),
                    (s.converters["script json"] = function () {
                        return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0];
                    }),
                    (s.dataTypes[0] = "json"),
                    (overwritten = window[callbackName]),
                    (window[callbackName] = function () {
                        responseContainer = arguments;
                    }),
                    jqXHR.always(function () {
                        void 0 === overwritten ? jQuery(window).removeProp(callbackName) : (window[callbackName] = overwritten),
                            s[callbackName] && ((s.jsonpCallback = originalSettings.jsonpCallback), oldCallbacks.push(callbackName)),
                            responseContainer && isFunction(overwritten) && overwritten(responseContainer[0]),
                            (responseContainer = overwritten = void 0);
                    }),
                    "script"
                );
        }),
        (support.createHTMLDocument = (((body = document.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>"), 2 === body.childNodes.length)),
        (jQuery.parseHTML = function (data, context, keepScripts) {
            return "string" != typeof data
                ? []
                : ("boolean" == typeof context && ((keepScripts = context), (context = !1)),
                  context || (support.createHTMLDocument ? (((base = (context = document.implementation.createHTMLDocument("")).createElement("base")).href = document.location.href), context.head.appendChild(base)) : (context = document)),
                  (parsed = rsingleTag.exec(data)),
                  (scripts = !keepScripts && []),
                  parsed ? [context.createElement(parsed[1])] : ((parsed = buildFragment([data], context, scripts)), scripts && scripts.length && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes)));
            var base, parsed, scripts;
        }),
        (jQuery.fn.load = function (url, params, callback) {
            var selector,
                type,
                response,
                self = this,
                off = url.indexOf(" ");
            return (
                off > -1 && ((selector = stripAndCollapse(url.slice(off))), (url = url.slice(0, off))),
                isFunction(params) ? ((callback = params), (params = void 0)) : params && "object" == typeof params && (type = "POST"),
                self.length > 0 &&
                    jQuery
                        .ajax({ url: url, type: type || "GET", dataType: "html", data: params })
                        .done(function (responseText) {
                            (response = arguments), self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
                        })
                        .always(
                            callback &&
                                function (jqXHR, status) {
                                    self.each(function () {
                                        callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
                                    });
                                }
                        ),
                this
            );
        }),
        jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (i, type) {
            jQuery.fn[type] = function (fn) {
                return this.on(type, fn);
            };
        }),
        (jQuery.expr.pseudos.animated = function (elem) {
            return jQuery.grep(jQuery.timers, function (fn) {
                return elem === fn.elem;
            }).length;
        }),
        (jQuery.offset = {
            setOffset: function (elem, options, i) {
                var curPosition,
                    curLeft,
                    curCSSTop,
                    curTop,
                    curOffset,
                    curCSSLeft,
                    position = jQuery.css(elem, "position"),
                    curElem = jQuery(elem),
                    props = {};
                "static" === position && (elem.style.position = "relative"),
                    (curOffset = curElem.offset()),
                    (curCSSTop = jQuery.css(elem, "top")),
                    (curCSSLeft = jQuery.css(elem, "left")),
                    ("absolute" === position || "fixed" === position) && (curCSSTop + curCSSLeft).indexOf("auto") > -1
                        ? ((curTop = (curPosition = curElem.position()).top), (curLeft = curPosition.left))
                        : ((curTop = parseFloat(curCSSTop) || 0), (curLeft = parseFloat(curCSSLeft) || 0)),
                    isFunction(options) && (options = options.call(elem, i, jQuery.extend({}, curOffset))),
                    null != options.top && (props.top = options.top - curOffset.top + curTop),
                    null != options.left && (props.left = options.left - curOffset.left + curLeft),
                    "using" in options ? options.using.call(elem, props) : curElem.css(props);
            },
        }),
        jQuery.fn.extend({
            offset: function (options) {
                if (arguments.length)
                    return void 0 === options
                        ? this
                        : this.each(function (i) {
                              jQuery.offset.setOffset(this, options, i);
                          });
                var rect,
                    win,
                    elem = this[0];
                return elem
                    ? elem.getClientRects().length
                        ? ((rect = elem.getBoundingClientRect()), (win = elem.ownerDocument.defaultView), { top: rect.top + win.pageYOffset, left: rect.left + win.pageXOffset })
                        : { top: 0, left: 0 }
                    : void 0;
            },
            position: function () {
                if (this[0]) {
                    var offsetParent,
                        offset,
                        doc,
                        elem = this[0],
                        parentOffset = { top: 0, left: 0 };
                    if ("fixed" === jQuery.css(elem, "position")) offset = elem.getBoundingClientRect();
                    else {
                        for (
                            offset = this.offset(), doc = elem.ownerDocument, offsetParent = elem.offsetParent || doc.documentElement;
                            offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && "static" === jQuery.css(offsetParent, "position");

                        )
                            offsetParent = offsetParent.parentNode;
                        offsetParent &&
                            offsetParent !== elem &&
                            1 === offsetParent.nodeType &&
                            (((parentOffset = jQuery(offsetParent).offset()).top += jQuery.css(offsetParent, "borderTopWidth", !0)), (parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", !0)));
                    }
                    return { top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0), left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0) };
                }
            },
            offsetParent: function () {
                return this.map(function () {
                    for (var offsetParent = this.offsetParent; offsetParent && "static" === jQuery.css(offsetParent, "position"); ) offsetParent = offsetParent.offsetParent;
                    return offsetParent || documentElement;
                });
            },
        }),
        jQuery.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (method, prop) {
            var top = "pageYOffset" === prop;
            jQuery.fn[method] = function (val) {
                return access(
                    this,
                    function (elem, method, val) {
                        var win;
                        if ((isWindow(elem) ? (win = elem) : 9 === elem.nodeType && (win = elem.defaultView), void 0 === val)) return win ? win[prop] : elem[method];
                        win ? win.scrollTo(top ? win.pageXOffset : val, top ? val : win.pageYOffset) : (elem[method] = val);
                    },
                    method,
                    val,
                    arguments.length
                );
            };
        }),
        jQuery.each(["top", "left"], function (i, prop) {
            jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
                if (computed) return (computed = curCSS(elem, prop)), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
            });
        }),
        jQuery.each({ Height: "height", Width: "width" }, function (name, type) {
            jQuery.each({ padding: "inner" + name, content: type, "": "outer" + name }, function (defaultExtra, funcName) {
                jQuery.fn[funcName] = function (margin, value) {
                    var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin),
                        extra = defaultExtra || (!0 === margin || !0 === value ? "margin" : "border");
                    return access(
                        this,
                        function (elem, type, value) {
                            var doc;
                            return isWindow(elem)
                                ? 0 === funcName.indexOf("outer")
                                    ? elem["inner" + name]
                                    : elem.document.documentElement["client" + name]
                                : 9 === elem.nodeType
                                ? ((doc = elem.documentElement), Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]))
                                : void 0 === value
                                ? jQuery.css(elem, type, extra)
                                : jQuery.style(elem, type, value, extra);
                        },
                        type,
                        chainable ? margin : void 0,
                        chainable
                    );
                };
            });
        }),
        jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (i, name) {
            jQuery.fn[name] = function (data, fn) {
                return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
            };
        }),
        jQuery.fn.extend({
            hover: function (fnOver, fnOut) {
                return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
            },
        }),
        jQuery.fn.extend({
            bind: function (types, data, fn) {
                return this.on(types, null, data, fn);
            },
            unbind: function (types, fn) {
                return this.off(types, null, fn);
            },
            delegate: function (selector, types, data, fn) {
                return this.on(types, selector, data, fn);
            },
            undelegate: function (selector, types, fn) {
                return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn);
            },
        }),
        (jQuery.proxy = function (fn, context) {
            var tmp, args, proxy;
            if (("string" == typeof context && ((tmp = fn[context]), (context = fn), (fn = tmp)), isFunction(fn)))
                return (
                    (args = slice.call(arguments, 2)),
                    ((proxy = function () {
                        return fn.apply(context || this, args.concat(slice.call(arguments)));
                    }).guid = fn.guid = fn.guid || jQuery.guid++),
                    proxy
                );
        }),
        (jQuery.holdReady = function (hold) {
            hold ? jQuery.readyWait++ : jQuery.ready(!0);
        }),
        (jQuery.isArray = Array.isArray),
        (jQuery.parseJSON = JSON.parse),
        (jQuery.nodeName = nodeName),
        (jQuery.isFunction = isFunction),
        (jQuery.isWindow = isWindow),
        (jQuery.camelCase = camelCase),
        (jQuery.type = toType),
        (jQuery.now = Date.now),
        (jQuery.isNumeric = function (obj) {
            var type = jQuery.type(obj);
            return ("number" === type || "string" === type) && !isNaN(obj - parseFloat(obj));
        }),
        "function" == typeof define &&
            define.amd &&
            define("jquery", [], function () {
                return jQuery;
            });
    var _jQuery = window.jQuery,
        _$ = window.$;
    return (
        (jQuery.noConflict = function (deep) {
            return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), jQuery;
        }),
        noGlobal || (window.jQuery = window.$ = jQuery),
        jQuery
    );
}),
    (function (factory) {
        "function" == typeof define && define.amd ? define(["jquery"], factory) : "object" == typeof exports ? factory(require("jquery")) : factory(jQuery);
    })(function ($) {
        "use strict";
        var orig;
        ($.support.htmlMenuitem = "HTMLMenuItemElement" in window),
            ($.support.htmlCommand = "HTMLCommandElement" in window),
            ($.support.eventSelectstart = "onselectstart" in document.documentElement),
            ($.ui && $.widget) ||
                ($.cleanData =
                    ((orig = $.cleanData),
                    function (elems) {
                        var events, elem, i;
                        for (i = 0; null != elems[i]; i++) {
                            elem = elems[i];
                            try {
                                (events = $._data(elem, "events")) && events.remove && $(elem).triggerHandler("remove");
                            } catch (e) {}
                        }
                        orig(elems);
                    }));
        var $currentTrigger = null,
            initialized = !1,
            $win = $(window),
            counter = 0,
            namespaces = {},
            menus = {},
            types = {},
            defaults = {
                selector: null,
                appendTo: null,
                trigger: "right",
                autoHide: !1,
                delay: 200,
                reposition: !0,
                hideOnSecondTrigger: !1,
                selectableSubMenu: !1,
                classNames: {
                    hover: "context-menu-hover",
                    disabled: "context-menu-disabled",
                    visible: "context-menu-visible",
                    notSelectable: "context-menu-not-selectable",
                    icon: "context-menu-icon",
                    iconEdit: "context-menu-icon-edit",
                    iconCut: "context-menu-icon-cut",
                    iconCopy: "context-menu-icon-copy",
                    iconPaste: "context-menu-icon-paste",
                    iconDelete: "context-menu-icon-delete",
                    iconAdd: "context-menu-icon-add",
                    iconQuit: "context-menu-icon-quit",
                    iconLoadingClass: "context-menu-icon-loading",
                },
                determinePosition: function ($menu) {
                    if ($.ui && $.ui.position) $menu.css("display", "block").position({ my: "center top", at: "center bottom", of: this, offset: "0 5", collision: "fit" }).css("display", "none");
                    else {
                        var offset = this.offset();
                        (offset.top += this.outerHeight()), (offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2), $menu.css(offset);
                    }
                },
                position: function (opt, x, y) {
                    var offset;
                    if (x || y) {
                        if ("maintain" === x && "maintain" === y) offset = opt.$menu.position();
                        else {
                            var offsetParentOffset = opt.$menu.offsetParent().offset();
                            offset = { top: y - offsetParentOffset.top, left: x - offsetParentOffset.left };
                        }
                        var bottom = $win.scrollTop() + $win.height(),
                            right = $win.scrollLeft() + $win.width(),
                            height = opt.$menu.outerHeight(),
                            width = opt.$menu.outerWidth();
                        offset.top + height > bottom && (offset.top -= height), offset.top < 0 && (offset.top = 0), offset.left + width > right && (offset.left -= width), offset.left < 0 && (offset.left = 0), opt.$menu.css(offset);
                    } else opt.determinePosition.call(this, opt.$menu);
                },
                positionSubmenu: function ($menu) {
                    if (void 0 !== $menu)
                        if ($.ui && $.ui.position) $menu.css("display", "block").position({ my: "left top-5", at: "right top", of: this, collision: "flipfit fit" }).css("display", "");
                        else {
                            var offset = { top: -9, left: this.outerWidth() - 5 };
                            $menu.css(offset);
                        }
                },
                zIndex: 1,
                animation: { duration: 50, show: "slideDown", hide: "slideUp" },
                events: { preShow: $.noop, show: $.noop, hide: $.noop, activated: $.noop },
                callback: null,
                items: {},
            },
            hoveract = { timer: null, pageX: null, pageY: null },
            handle = {
                abortevent: function (e) {
                    e.preventDefault(), e.stopImmediatePropagation();
                },
                contextmenu: function (e) {
                    var $this = $(this);
                    if (
                        !1 !== e.data.events.preShow($this, e) &&
                        ("right" === e.data.trigger && (e.preventDefault(), e.stopImmediatePropagation()),
                        !(
                            ("right" !== e.data.trigger && "demand" !== e.data.trigger && e.originalEvent) ||
                            !(void 0 === e.mouseButton || !e.data || ("left" === e.data.trigger && 0 === e.mouseButton) || ("right" === e.data.trigger && 2 === e.mouseButton)) ||
                            $this.hasClass("context-menu-active") ||
                            $this.hasClass("context-menu-disabled")
                        ))
                    ) {
                        if ((($currentTrigger = $this), e.data.build)) {
                            var built = e.data.build($currentTrigger, e);
                            if (!1 === built) return;
                            if (((e.data = $.extend(!0, {}, defaults, e.data, built || {})), !e.data.items || $.isEmptyObject(e.data.items)))
                                throw (window.console && (console.error || console.log).call(console, "No items specified to show in contextMenu"), new Error("No Items specified"));
                            (e.data.$trigger = $currentTrigger), op.create(e.data);
                        }
                        op.show.call($this, e.data, e.pageX, e.pageY);
                    }
                },
                click: function (e) {
                    e.preventDefault(), e.stopImmediatePropagation(), $(this).trigger($.Event("contextmenu", { data: e.data, pageX: e.pageX, pageY: e.pageY }));
                },
                mousedown: function (e) {
                    var $this = $(this);
                    $currentTrigger && $currentTrigger.length && !$currentTrigger.is($this) && $currentTrigger.data("contextMenu").$menu.trigger("contextmenu:hide"), 2 === e.button && ($currentTrigger = $this.data("contextMenuActive", !0));
                },
                mouseup: function (e) {
                    var $this = $(this);
                    $this.data("contextMenuActive") &&
                        $currentTrigger &&
                        $currentTrigger.length &&
                        $currentTrigger.is($this) &&
                        !$this.hasClass("context-menu-disabled") &&
                        (e.preventDefault(), e.stopImmediatePropagation(), ($currentTrigger = $this), $this.trigger($.Event("contextmenu", { data: e.data, pageX: e.pageX, pageY: e.pageY }))),
                        $this.removeData("contextMenuActive");
                },
                mouseenter: function (e) {
                    var $this = $(this),
                        $related = $(e.relatedTarget),
                        $document = $(document);
                    $related.is(".context-menu-list") ||
                        $related.closest(".context-menu-list").length ||
                        ($currentTrigger && $currentTrigger.length) ||
                        ((hoveract.pageX = e.pageX),
                        (hoveract.pageY = e.pageY),
                        (hoveract.data = e.data),
                        $document.on("mousemove.contextMenuShow", handle.mousemove),
                        (hoveract.timer = setTimeout(function () {
                            (hoveract.timer = null), $document.off("mousemove.contextMenuShow"), ($currentTrigger = $this), $this.trigger($.Event("contextmenu", { data: hoveract.data, pageX: hoveract.pageX, pageY: hoveract.pageY }));
                        }, e.data.delay)));
                },
                mousemove: function (e) {
                    (hoveract.pageX = e.pageX), (hoveract.pageY = e.pageY);
                },
                mouseleave: function (e) {
                    var $related = $(e.relatedTarget);
                    if (!$related.is(".context-menu-list") && !$related.closest(".context-menu-list").length) {
                        try {
                            clearTimeout(hoveract.timer);
                        } catch (e) {}
                        hoveract.timer = null;
                    }
                },
                layerClick: function (e) {
                    var target,
                        offset,
                        root = $(this).data("contextMenuRoot"),
                        button = e.button,
                        x = e.pageX,
                        y = e.pageY,
                        fakeClick = void 0 === x;
                    e.preventDefault(),
                        setTimeout(function () {
                            if (fakeClick) null !== root && void 0 !== root && null !== root.$menu && void 0 !== root.$menu && root.$menu.trigger("contextmenu:hide");
                            else {
                                var $window,
                                    triggerAction = ("left" === root.trigger && 0 === button) || ("right" === root.trigger && 2 === button);
                                if (document.elementFromPoint && root.$layer) {
                                    if ((root.$layer.hide(), (target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop())).isContentEditable)) {
                                        var range = document.createRange(),
                                            sel = window.getSelection();
                                        range.selectNode(target), range.collapse(!0), sel.removeAllRanges(), sel.addRange(range);
                                    }
                                    $(target).trigger(e), root.$layer.show();
                                }
                                if (root.hideOnSecondTrigger && triggerAction && null !== root.$menu && void 0 !== root.$menu) root.$menu.trigger("contextmenu:hide");
                                else {
                                    if (root.reposition && triggerAction)
                                        if (document.elementFromPoint) {
                                            if (root.$trigger.is(target)) return void root.position.call(root.$trigger, root, x, y);
                                        } else if (
                                            ((offset = root.$trigger.offset()),
                                            ($window = $(window)),
                                            (offset.top += $window.scrollTop()),
                                            offset.top <= e.pageY &&
                                                ((offset.left += $window.scrollLeft()),
                                                offset.left <= e.pageX &&
                                                    ((offset.bottom = offset.top + root.$trigger.outerHeight()), offset.bottom >= e.pageY && ((offset.right = offset.left + root.$trigger.outerWidth()), offset.right >= e.pageX))))
                                        )
                                            return void root.position.call(root.$trigger, root, x, y);
                                    target &&
                                        triggerAction &&
                                        root.$trigger.one("contextmenu:hidden", function () {
                                            $(target).contextMenu({ x: x, y: y, button: button });
                                        }),
                                        null !== root && void 0 !== root && null !== root.$menu && void 0 !== root.$menu && root.$menu.trigger("contextmenu:hide");
                                }
                            }
                        }, 50);
                },
                keyStop: function (e, opt) {
                    opt.isInput || e.preventDefault(), e.stopPropagation();
                },
                key: function (e) {
                    var opt = {};
                    $currentTrigger && (opt = $currentTrigger.data("contextMenu") || {}), void 0 === opt.zIndex && (opt.zIndex = 0);
                    var targetZIndex = 0,
                        getZIndexOfTriggerTarget = function (target) {
                            "" !== target.style.zIndex
                                ? (targetZIndex = target.style.zIndex)
                                : null !== target.offsetParent && void 0 !== target.offsetParent
                                ? getZIndexOfTriggerTarget(target.offsetParent)
                                : null !== target.parentElement && void 0 !== target.parentElement && getZIndexOfTriggerTarget(target.parentElement);
                        };
                    if ((getZIndexOfTriggerTarget(e.target), !(opt.$menu && parseInt(targetZIndex, 10) > parseInt(opt.$menu.css("zIndex"), 10)))) {
                        switch (e.keyCode) {
                            case 9:
                            case 38:
                                if ((handle.keyStop(e, opt), opt.isInput)) {
                                    if (9 === e.keyCode && e.shiftKey)
                                        return e.preventDefault(), opt.$selected && opt.$selected.find("input, textarea, select").blur(), void (null !== opt.$menu && void 0 !== opt.$menu && opt.$menu.trigger("prevcommand"));
                                    if (38 === e.keyCode && "checkbox" === opt.$selected.find("input, textarea, select").prop("type")) return void e.preventDefault();
                                } else if (9 !== e.keyCode || e.shiftKey) return void (null !== opt.$menu && void 0 !== opt.$menu && opt.$menu.trigger("prevcommand"));
                                break;
                            case 40:
                                if ((handle.keyStop(e, opt), !opt.isInput)) return void (null !== opt.$menu && void 0 !== opt.$menu && opt.$menu.trigger("nextcommand"));
                                if (9 === e.keyCode) return e.preventDefault(), opt.$selected && opt.$selected.find("input, textarea, select").blur(), void (null !== opt.$menu && void 0 !== opt.$menu && opt.$menu.trigger("nextcommand"));
                                if (40 === e.keyCode && "checkbox" === opt.$selected.find("input, textarea, select").prop("type")) return void e.preventDefault();
                                break;
                            case 37:
                                if ((handle.keyStop(e, opt), opt.isInput || !opt.$selected || !opt.$selected.length)) break;
                                if (!opt.$selected.parent().hasClass("context-menu-root")) {
                                    var $parent = opt.$selected.parent().parent();
                                    return opt.$selected.trigger("contextmenu:blur"), void (opt.$selected = $parent);
                                }
                                break;
                            case 39:
                                if ((handle.keyStop(e, opt), opt.isInput || !opt.$selected || !opt.$selected.length)) break;
                                var itemdata = opt.$selected.data("contextMenu") || {};
                                if (itemdata.$menu && opt.$selected.hasClass("context-menu-submenu")) return (opt.$selected = null), (itemdata.$selected = null), void itemdata.$menu.trigger("nextcommand");
                                break;
                            case 35:
                            case 36:
                                return opt.$selected && opt.$selected.find("input, textarea, select").length
                                    ? void 0
                                    : (((opt.$selected && opt.$selected.parent()) || opt.$menu)
                                          .children(":not(." + opt.classNames.disabled + ", ." + opt.classNames.notSelectable + ")")
                                          [36 === e.keyCode ? "first" : "last"]()
                                          .trigger("contextmenu:focus"),
                                      void e.preventDefault());
                            case 13:
                                if ((handle.keyStop(e, opt), opt.isInput)) {
                                    if (opt.$selected && !opt.$selected.is("textarea, select")) return void e.preventDefault();
                                    break;
                                }
                                return void (void 0 !== opt.$selected && null !== opt.$selected && opt.$selected.trigger("mouseup"));
                            case 32:
                            case 33:
                            case 34:
                                return void handle.keyStop(e, opt);
                            case 27:
                                return handle.keyStop(e, opt), void (null !== opt.$menu && void 0 !== opt.$menu && opt.$menu.trigger("contextmenu:hide"));
                            default:
                                var k = String.fromCharCode(e.keyCode).toUpperCase();
                                if (opt.accesskeys && opt.accesskeys[k]) return void opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? "contextmenu:focus" : "mouseup");
                        }
                        e.stopPropagation(), void 0 !== opt.$selected && null !== opt.$selected && opt.$selected.trigger(e);
                    }
                },
                prevItem: function (e) {
                    e.stopPropagation();
                    var opt = $(this).data("contextMenu") || {},
                        root = $(this).data("contextMenuRoot") || {};
                    if (opt.$selected) {
                        var $s = opt.$selected;
                        (opt = opt.$selected.parent().data("contextMenu") || {}).$selected = $s;
                    }
                    for (
                        var $children = opt.$menu.children(), $prev = opt.$selected && opt.$selected.prev().length ? opt.$selected.prev() : $children.last(), $round = $prev;
                        $prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable) || $prev.is(":hidden");

                    )
                        if (($prev = $prev.prev().length ? $prev.prev() : $children.last()).is($round)) return;
                    opt.$selected && handle.itemMouseleave.call(opt.$selected.get(0), e), handle.itemMouseenter.call($prev.get(0), e);
                    var $input = $prev.find("input, textarea, select");
                    $input.length && $input.focus();
                },
                nextItem: function (e) {
                    e.stopPropagation();
                    var opt = $(this).data("contextMenu") || {},
                        root = $(this).data("contextMenuRoot") || {};
                    if (opt.$selected) {
                        var $s = opt.$selected;
                        (opt = opt.$selected.parent().data("contextMenu") || {}).$selected = $s;
                    }
                    for (
                        var $children = opt.$menu.children(), $next = opt.$selected && opt.$selected.next().length ? opt.$selected.next() : $children.first(), $round = $next;
                        $next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable) || $next.is(":hidden");

                    )
                        if (($next = $next.next().length ? $next.next() : $children.first()).is($round)) return;
                    opt.$selected && handle.itemMouseleave.call(opt.$selected.get(0), e), handle.itemMouseenter.call($next.get(0), e);
                    var $input = $next.find("input, textarea, select");
                    $input.length && $input.focus();
                },
                focusInput: function () {
                    var $this = $(this).closest(".context-menu-item"),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot;
                    (root.$selected = opt.$selected = $this), (root.isInput = opt.isInput = !0);
                },
                blurInput: function () {
                    var data = $(this).closest(".context-menu-item").data(),
                        opt = data.contextMenu;
                    data.contextMenuRoot.isInput = opt.isInput = !1;
                },
                menuMouseenter: function () {
                    $(this).data().contextMenuRoot.hovering = !0;
                },
                menuMouseleave: function (e) {
                    var root = $(this).data().contextMenuRoot;
                    root.$layer && root.$layer.is(e.relatedTarget) && (root.hovering = !1);
                },
                itemMouseenter: function (e) {
                    var $this = $(this),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot;
                    (root.hovering = !0),
                        e && root.$layer && root.$layer.is(e.relatedTarget) && (e.preventDefault(), e.stopImmediatePropagation()),
                        (opt.$menu ? opt : root).$menu
                            .children("." + root.classNames.hover)
                            .trigger("contextmenu:blur")
                            .children(".hover")
                            .trigger("contextmenu:blur"),
                        $this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable) ? (opt.$selected = null) : $this.trigger("contextmenu:focus");
                },
                itemMouseleave: function (e) {
                    var $this = $(this),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot;
                    if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget))
                        return void 0 !== root.$selected && null !== root.$selected && root.$selected.trigger("contextmenu:blur"), e.preventDefault(), e.stopImmediatePropagation(), void (root.$selected = opt.$selected = opt.$node);
                    (opt && opt.$menu && opt.$menu.hasClass("context-menu-visible")) || $this.trigger("contextmenu:blur");
                },
                itemClick: function (e) {
                    var callback,
                        $this = $(this),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot,
                        key = data.contextMenuKey;
                    if (!(!opt.items[key] || $this.is("." + root.classNames.disabled + ", .context-menu-separator, ." + root.classNames.notSelectable) || ($this.is(".context-menu-submenu") && !1 === root.selectableSubMenu))) {
                        if ((e.preventDefault(), e.stopImmediatePropagation(), $.isFunction(opt.callbacks[key]) && Object.prototype.hasOwnProperty.call(opt.callbacks, key))) callback = opt.callbacks[key];
                        else {
                            if (!$.isFunction(root.callback)) return;
                            callback = root.callback;
                        }
                        !1 !== callback.call(root.$trigger, key, root, e) ? root.$menu.trigger("contextmenu:hide") : root.$menu.parent().length && op.update.call(root.$trigger, root);
                    }
                },
                inputClick: function (e) {
                    e.stopImmediatePropagation();
                },
                hideMenu: function (e, data) {
                    var root = $(this).data("contextMenuRoot");
                    op.hide.call(root.$trigger, root, data && data.force);
                },
                focusItem: function (e) {
                    e.stopPropagation();
                    var $this = $(this),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot;
                    $this.hasClass(root.classNames.disabled) ||
                        $this.hasClass(root.classNames.notSelectable) ||
                        ($this
                            .addClass([root.classNames.hover, root.classNames.visible].join(" "))
                            .parent()
                            .find(".context-menu-item")
                            .not($this)
                            .removeClass(root.classNames.visible)
                            .filter("." + root.classNames.hover)
                            .trigger("contextmenu:blur"),
                        (opt.$selected = root.$selected = $this),
                        opt && opt.$node && opt.$node.hasClass("context-menu-submenu") && opt.$node.addClass(root.classNames.hover),
                        opt.$node && root.positionSubmenu.call(opt.$node, opt.$menu));
                },
                blurItem: function (e) {
                    e.stopPropagation();
                    var $this = $(this),
                        data = $this.data(),
                        opt = data.contextMenu,
                        root = data.contextMenuRoot;
                    opt.autoHide && $this.removeClass(root.classNames.visible), $this.removeClass(root.classNames.hover), (opt.$selected = null);
                },
            },
            op = {
                show: function (opt, x, y) {
                    var $trigger = $(this),
                        css = {};
                    if (($("#context-menu-layer").trigger("mousedown"), (opt.$trigger = $trigger), !1 !== opt.events.show.call($trigger, opt)))
                        if (!1 !== op.update.call($trigger, opt)) {
                            if ((opt.position.call($trigger, opt, x, y), opt.zIndex)) {
                                var additionalZValue = opt.zIndex;
                                "function" == typeof opt.zIndex && (additionalZValue = opt.zIndex.call($trigger, opt)),
                                    (css.zIndex =
                                        (function ($t) {
                                            for (var zin = 0, $tt = $t; (zin = Math.max(zin, parseInt($tt.css("z-index"), 10) || 0)), ($tt = $tt.parent()) && $tt.length && !("html body".indexOf($tt.prop("nodeName").toLowerCase()) > -1); );
                                            return zin;
                                        })($trigger) + additionalZValue);
                            }
                            op.layer.call(opt.$menu, opt, css.zIndex),
                                opt.$menu.find("ul").css("zIndex", css.zIndex + 1),
                                opt.$menu.css(css)[opt.animation.show](opt.animation.duration, function () {
                                    $trigger.trigger("contextmenu:visible"), op.activated(opt), opt.events.activated(opt);
                                }),
                                $trigger.data("contextMenu", opt).addClass("context-menu-active"),
                                $(document).off("keydown.contextMenu").on("keydown.contextMenu", handle.key),
                                opt.autoHide &&
                                    $(document).on("mousemove.contextMenuAutoHide", function (e) {
                                        var pos = $trigger.offset();
                                        (pos.right = pos.left + $trigger.outerWidth()),
                                            (pos.bottom = pos.top + $trigger.outerHeight()),
                                            !opt.$layer ||
                                                opt.hovering ||
                                                (e.pageX >= pos.left && e.pageX <= pos.right && e.pageY >= pos.top && e.pageY <= pos.bottom) ||
                                                setTimeout(function () {
                                                    opt.hovering || null === opt.$menu || void 0 === opt.$menu || opt.$menu.trigger("contextmenu:hide");
                                                }, 50);
                                    });
                        } else $currentTrigger = null;
                    else $currentTrigger = null;
                },
                hide: function (opt, force) {
                    var $trigger = $(this);
                    if ((opt || (opt = $trigger.data("contextMenu") || {}), force || !opt.events || !1 !== opt.events.hide.call($trigger, opt))) {
                        if (($trigger.removeData("contextMenu").removeClass("context-menu-active"), opt.$layer)) {
                            setTimeout(
                                (($layer = opt.$layer),
                                function () {
                                    $layer.remove();
                                }),
                                10
                            );
                            try {
                                delete opt.$layer;
                            } catch (e) {
                                opt.$layer = null;
                            }
                        }
                        var $layer;
                        ($currentTrigger = null),
                            opt.$menu.find("." + opt.classNames.hover).trigger("contextmenu:blur"),
                            (opt.$selected = null),
                            opt.$menu.find("." + opt.classNames.visible).removeClass(opt.classNames.visible),
                            $(document).off(".contextMenuAutoHide").off("keydown.contextMenu"),
                            opt.$menu &&
                                opt.$menu[opt.animation.hide](opt.animation.duration, function () {
                                    opt.build &&
                                        (opt.$menu.remove(),
                                        $.each(opt, function (key) {
                                            switch (key) {
                                                case "ns":
                                                case "selector":
                                                case "build":
                                                case "trigger":
                                                    return !0;
                                                default:
                                                    opt[key] = void 0;
                                                    try {
                                                        delete opt[key];
                                                    } catch (e) {}
                                                    return !0;
                                            }
                                        })),
                                        setTimeout(function () {
                                            $trigger.trigger("contextmenu:hidden");
                                        }, 10);
                                });
                    }
                },
                create: function (opt, root) {
                    function createNameNode(item) {
                        var $name = $("<span></span>");
                        if (item._accesskey)
                            item._beforeAccesskey && $name.append(document.createTextNode(item._beforeAccesskey)),
                                $("<span></span>").addClass("context-menu-accesskey").text(item._accesskey).appendTo($name),
                                item._afterAccesskey && $name.append(document.createTextNode(item._afterAccesskey));
                        else if (item.isHtmlName) {
                            if (void 0 !== item.accesskey) throw new Error("accesskeys are not compatible with HTML names and cannot be used together in the same item");
                            $name.html(item.name);
                        } else $name.text(item.name);
                        return $name;
                    }
                    void 0 === root && (root = opt),
                        (opt.$menu = $('<ul class="context-menu-list"></ul>')
                            .addClass(opt.className || "")
                            .data({ contextMenu: opt, contextMenuRoot: root })),
                        opt.dataAttr &&
                            $.each(opt.dataAttr, function (key, item) {
                                opt.$menu.attr("data-" + opt.key, item);
                            }),
                        $.each(["callbacks", "commands", "inputs"], function (i, k) {
                            (opt[k] = {}), root[k] || (root[k] = {});
                        }),
                        root.accesskeys || (root.accesskeys = {}),
                        $.each(opt.items, function (key, item) {
                            var $t = $('<li class="context-menu-item"></li>').addClass(item.className || ""),
                                $label = null,
                                $input = null;
                            if (
                                ($t.on("click", $.noop),
                                ("string" != typeof item && "cm_separator" !== item.type) || (item = { type: "cm_seperator" }),
                                (item.$node = $t.data({ contextMenu: opt, contextMenuRoot: root, contextMenuKey: key })),
                                void 0 !== item.accesskey)
                            )
                                for (
                                    var ak,
                                        aks = (function (val) {
                                            for (var k, t = val.split(/\s+/), keys = [], i = 0; (k = t[i]); i++) (k = k.charAt(0).toUpperCase()), keys.push(k);
                                            return keys;
                                        })(item.accesskey),
                                        i = 0;
                                    (ak = aks[i]);
                                    i++
                                )
                                    if (!root.accesskeys[ak]) {
                                        root.accesskeys[ak] = item;
                                        var matched = item.name.match(new RegExp("^(.*?)(" + ak + ")(.*)$", "i"));
                                        matched && ((item._beforeAccesskey = matched[1]), (item._accesskey = matched[2]), (item._afterAccesskey = matched[3]));
                                        break;
                                    }
                            if (item.type && types[item.type])
                                types[item.type].call($t, item, opt, root),
                                    $.each([opt, root], function (i, k) {
                                        (k.commands[key] = item), !$.isFunction(item.callback) || (void 0 !== k.callbacks[key] && void 0 !== opt.type) || (k.callbacks[key] = item.callback);
                                    });
                            else {
                                switch (
                                    ("cm_seperator" === item.type
                                        ? $t.addClass("context-menu-separator " + root.classNames.notSelectable)
                                        : "html" === item.type
                                        ? $t.addClass("context-menu-html " + root.classNames.notSelectable)
                                        : "sub" !== item.type && item.type
                                        ? (($label = $("<label></label>").appendTo($t)),
                                          createNameNode(item).appendTo($label),
                                          $t.addClass("context-menu-input"),
                                          (opt.hasTypes = !0),
                                          $.each([opt, root], function (i, k) {
                                              (k.commands[key] = item), (k.inputs[key] = item);
                                          }))
                                        : item.items && (item.type = "sub"),
                                    item.type)
                                ) {
                                    case "cm_seperator":
                                        break;
                                    case "text":
                                        $input = $('<input type="text" value="1" name="" />')
                                            .attr("name", "context-menu-input-" + key)
                                            .val(item.value || "")
                                            .appendTo($label);
                                        break;
                                    case "textarea":
                                        ($input = $('<textarea name=""></textarea>')
                                            .attr("name", "context-menu-input-" + key)
                                            .val(item.value || "")
                                            .appendTo($label)),
                                            item.height && $input.height(item.height);
                                        break;
                                    case "checkbox":
                                        $input = $('<input type="checkbox" value="1" name="" />')
                                            .attr("name", "context-menu-input-" + key)
                                            .val(item.value || "")
                                            .prop("checked", !!item.selected)
                                            .prependTo($label);
                                        break;
                                    case "radio":
                                        $input = $('<input type="radio" value="1" name="" />')
                                            .attr("name", "context-menu-input-" + item.radio)
                                            .val(item.value || "")
                                            .prop("checked", !!item.selected)
                                            .prependTo($label);
                                        break;
                                    case "select":
                                        ($input = $('<select name=""></select>')
                                            .attr("name", "context-menu-input-" + key)
                                            .appendTo($label)),
                                            item.options &&
                                                ($.each(item.options, function (value, text) {
                                                    $("<option></option>").val(value).text(text).appendTo($input);
                                                }),
                                                $input.val(item.selected));
                                        break;
                                    case "sub":
                                        createNameNode(item).appendTo($t),
                                            (item.appendTo = item.$node),
                                            $t.data("contextMenu", item).addClass("context-menu-submenu"),
                                            (item.callback = null),
                                            "function" == typeof item.items.then ? op.processPromises(item, root, item.items) : op.create(item, root);
                                        break;
                                    case "html":
                                        $(item.html).appendTo($t);
                                        break;
                                    default:
                                        $.each([opt, root], function (i, k) {
                                            (k.commands[key] = item), !$.isFunction(item.callback) || (void 0 !== k.callbacks[key] && void 0 !== opt.type) || (k.callbacks[key] = item.callback);
                                        }),
                                            createNameNode(item).appendTo($t);
                                }
                                item.type && "sub" !== item.type && "html" !== item.type && "cm_seperator" !== item.type && ($input.on("focus", handle.focusInput).on("blur", handle.blurInput), item.events && $input.on(item.events, opt)),
                                    item.icon &&
                                        ($.isFunction(item.icon)
                                            ? (item._icon = item.icon.call(this, this, $t, key, item))
                                            : "string" != typeof item.icon ||
                                              ("fab " !== item.icon.substring(0, 4) &&
                                                  "fas " !== item.icon.substring(0, 4) &&
                                                  "fad " !== item.icon.substring(0, 4) &&
                                                  "far " !== item.icon.substring(0, 4) &&
                                                  "fal " !== item.icon.substring(0, 4))
                                            ? "string" == typeof item.icon && "fa-" === item.icon.substring(0, 3)
                                                ? (item._icon = root.classNames.icon + " " + root.classNames.icon + "--fa fa " + item.icon)
                                                : (item._icon = root.classNames.icon + " " + root.classNames.icon + "-" + item.icon)
                                            : ($t.addClass(root.classNames.icon + " " + root.classNames.icon + "--fa5"), (item._icon = $('<i class="' + item.icon + '"></i>'))),
                                        "string" == typeof item._icon ? $t.addClass(item._icon) : $t.prepend(item._icon));
                            }
                            (item.$input = $input), (item.$label = $label), $t.appendTo(opt.$menu), !opt.hasTypes && $.support.eventSelectstart && $t.on("selectstart.disableTextSelect", handle.abortevent);
                        }),
                        opt.$node || opt.$menu.css("display", "none").addClass("context-menu-root"),
                        opt.$menu.appendTo(opt.appendTo || document.body);
                },
                resize: function ($menu, nested) {
                    var domMenu;
                    $menu.css({ position: "absolute", display: "block" }),
                        $menu.data("width", (domMenu = $menu.get(0)).getBoundingClientRect ? Math.ceil(domMenu.getBoundingClientRect().width) : $menu.outerWidth() + 1),
                        $menu.css({ position: "static", minWidth: "0px", maxWidth: "100000px" }),
                        $menu.find("> li > ul").each(function () {
                            op.resize($(this), !0);
                        }),
                        nested ||
                            $menu
                                .find("ul")
                                .addBack()
                                .css({ position: "", display: "", minWidth: "", maxWidth: "" })
                                .outerWidth(function () {
                                    return $(this).data("width");
                                });
                },
                update: function (opt, root) {
                    var $trigger = this;
                    void 0 === root && ((root = opt), op.resize(opt.$menu));
                    var hasVisibleItems = !1;
                    return (
                        opt.$menu.children().each(function () {
                            var visible,
                                $item = $(this),
                                key = $item.data("contextMenuKey"),
                                item = opt.items[key],
                                disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || !0 === item.disabled;
                            if (
                                ((visible = $.isFunction(item.visible) ? item.visible.call($trigger, key, root) : void 0 === item.visible || !0 === item.visible) && (hasVisibleItems = !0),
                                $item[visible ? "show" : "hide"](),
                                $item[disabled ? "addClass" : "removeClass"](root.classNames.disabled),
                                $.isFunction(item.icon))
                            ) {
                                $item.removeClass(item._icon);
                                var iconResult = item.icon.call(this, $trigger, $item, key, item);
                                "string" == typeof iconResult ? $item.addClass(iconResult) : $item.prepend(iconResult);
                            }
                            if (item.type)
                                switch (($item.find("input, select, textarea").prop("disabled", disabled), item.type)) {
                                    case "text":
                                    case "textarea":
                                        item.$input.val(item.value || "");
                                        break;
                                    case "checkbox":
                                    case "radio":
                                        item.$input.val(item.value || "").prop("checked", !!item.selected);
                                        break;
                                    case "select":
                                        item.$input.val((0 === item.selected ? "0" : item.selected) || "");
                                }
                            item.$menu && op.update.call($trigger, item, root) && (hasVisibleItems = !0);
                        }),
                        hasVisibleItems
                    );
                },
                layer: function (opt, zIndex) {
                    var $layer = (opt.$layer = $('<div id="context-menu-layer"></div>')
                        .css({ height: $win.height(), width: $win.width(), display: "block", position: "fixed", "z-index": zIndex, top: 0, left: 0, opacity: 0, filter: "alpha(opacity=0)", "background-color": "#000" })
                        .data("contextMenuRoot", opt)
                        .insertBefore(this)
                        .on("contextmenu", handle.abortevent)
                        .on("mousedown", handle.layerClick));
                    return void 0 === document.body.style.maxWidth && $layer.css({ position: "absolute", height: $(document).height() }), $layer;
                },
                processPromises: function (opt, root, promise) {
                    function errorPromise(opt, root, errorItem) {
                        void 0 === errorItem
                            ? ((errorItem = { error: { name: "No items and no error item", icon: "context-menu-icon context-menu-icon-quit" } }),
                              window.console && (console.error || console.log).call(console, 'When you reject a promise, provide an "items" object, equal to normal sub-menu items'))
                            : "string" == typeof errorItem && (errorItem = { error: { name: errorItem } }),
                            finishPromiseProcess(opt, root, errorItem);
                    }
                    function finishPromiseProcess(opt, root, items) {
                        void 0 !== root.$menu &&
                            root.$menu.is(":visible") &&
                            (opt.$node.removeClass(root.classNames.iconLoadingClass), (opt.items = items), op.create(opt, root, !0), op.update(opt, root), root.positionSubmenu.call(opt.$node, opt.$menu));
                    }
                    opt.$node.addClass(root.classNames.iconLoadingClass),
                        promise.then(
                            function (opt, root, items) {
                                void 0 === items && errorPromise(void 0), finishPromiseProcess(opt, root, items);
                            }.bind(this, opt, root),
                            errorPromise.bind(this, opt, root)
                        );
                },
                activated: function (opt) {
                    var $menu = opt.$menu,
                        $menuOffset = $menu.offset(),
                        winHeight = $(window).height(),
                        winScrollTop = $(window).scrollTop(),
                        menuHeight = $menu.height();
                    menuHeight > winHeight
                        ? $menu.css({ height: winHeight + "px", "overflow-x": "hidden", "overflow-y": "auto", top: winScrollTop + "px" })
                        : ($menuOffset.top < winScrollTop || $menuOffset.top + menuHeight > winScrollTop + winHeight) && $menu.css({ top: winScrollTop + "px" });
                },
            };
        function inputLabel(node) {
            return (node.id && $('label[for="' + node.id + '"]').val()) || node.name;
        }
        ($.fn.contextMenu = function (operation) {
            var $t = this,
                $o = operation;
            if (this.length > 0)
                if (void 0 === operation) this.first().trigger("contextmenu");
                else if (void 0 !== operation.x && void 0 !== operation.y) this.first().trigger($.Event("contextmenu", { pageX: operation.x, pageY: operation.y, mouseButton: operation.button }));
                else if ("hide" === operation) {
                    var $menu = this.first().data("contextMenu") ? this.first().data("contextMenu").$menu : null;
                    $menu && $menu.trigger("contextmenu:hide");
                } else
                    "destroy" === operation
                        ? $.contextMenu("destroy", { context: this })
                        : $.isPlainObject(operation)
                        ? ((operation.context = this), $.contextMenu("create", operation))
                        : operation
                        ? this.removeClass("context-menu-disabled")
                        : operation || this.addClass("context-menu-disabled");
            else
                $.each(menus, function () {
                    this.selector === $t.selector && (($o.data = this), $.extend($o.data, { trigger: "demand" }));
                }),
                    handle.contextmenu.call($o.target, $o);
            return this;
        }),
            ($.contextMenu = function (operation, options) {
                "string" != typeof operation && ((options = operation), (operation = "create")), "string" == typeof options ? (options = { selector: options }) : void 0 === options && (options = {});
                var o = $.extend(!0, {}, defaults, options || {}),
                    $document = $(document),
                    $context = $document,
                    _hasContext = !1;
                switch ((o.context && o.context.length ? (($context = $(o.context).first()), (o.context = $context.get(0)), (_hasContext = !$(o.context).is(document))) : (o.context = document), operation)) {
                    case "update":
                        if (_hasContext) op.update($context);
                        else for (var menu in menus) menus.hasOwnProperty(menu) && op.update(menus[menu]);
                        break;
                    case "create":
                        if (!o.selector) throw new Error("No selector specified");
                        if (o.selector.match(/.context-menu-(list|item|input)($|\s)/)) throw new Error('Cannot bind to selector "' + o.selector + '" as it contains a reserved className');
                        if (!o.build && (!o.items || $.isEmptyObject(o.items))) throw new Error("No Items specified");
                        if ((counter++, (o.ns = ".contextMenu" + counter), _hasContext || (namespaces[o.selector] = o.ns), (menus[o.ns] = o), o.trigger || (o.trigger = "right"), !initialized)) {
                            var itemClick = "click" === o.itemClickEvent ? "click.contextMenu" : "mouseup.contextMenu",
                                contextMenuItemObj = {
                                    "contextmenu:focus.contextMenu": handle.focusItem,
                                    "contextmenu:blur.contextMenu": handle.blurItem,
                                    "contextmenu.contextMenu": handle.abortevent,
                                    "mouseenter.contextMenu": handle.itemMouseenter,
                                    "mouseleave.contextMenu": handle.itemMouseleave,
                                };
                            (contextMenuItemObj[itemClick] = handle.itemClick),
                                $document
                                    .on(
                                        {
                                            "contextmenu:hide.contextMenu": handle.hideMenu,
                                            "prevcommand.contextMenu": handle.prevItem,
                                            "nextcommand.contextMenu": handle.nextItem,
                                            "contextmenu.contextMenu": handle.abortevent,
                                            "mouseenter.contextMenu": handle.menuMouseenter,
                                            "mouseleave.contextMenu": handle.menuMouseleave,
                                        },
                                        ".context-menu-list"
                                    )
                                    .on("mouseup.contextMenu", ".context-menu-input", handle.inputClick)
                                    .on(contextMenuItemObj, ".context-menu-item"),
                                (initialized = !0);
                        }
                        switch (
                            ($context.on("contextmenu" + o.ns, o.selector, o, handle.contextmenu),
                            _hasContext &&
                                $context.on("remove" + o.ns, function () {
                                    $(this).contextMenu("destroy");
                                }),
                            o.trigger)
                        ) {
                            case "hover":
                                $context.on("mouseenter" + o.ns, o.selector, o, handle.mouseenter).on("mouseleave" + o.ns, o.selector, o, handle.mouseleave);
                                break;
                            case "left":
                                $context.on("click" + o.ns, o.selector, o, handle.click);
                                break;
                            case "touchstart":
                                $context.on("touchstart" + o.ns, o.selector, o, handle.click);
                        }
                        o.build || op.create(o);
                        break;
                    case "destroy":
                        var $visibleMenu;
                        if (_hasContext) {
                            var context = o.context;
                            $.each(menus, function (ns, o) {
                                if (!o) return !0;
                                if (!$(context).is(o.selector)) return !0;
                                ($visibleMenu = $(".context-menu-list").filter(":visible")).length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector)) && $visibleMenu.trigger("contextmenu:hide", { force: !0 });
                                try {
                                    menus[o.ns].$menu && menus[o.ns].$menu.remove(), delete menus[o.ns];
                                } catch (e) {
                                    menus[o.ns] = null;
                                }
                                return $(o.context).off(o.ns), !0;
                            });
                        } else if (o.selector) {
                            if (namespaces[o.selector]) {
                                ($visibleMenu = $(".context-menu-list").filter(":visible")).length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector) && $visibleMenu.trigger("contextmenu:hide", { force: !0 });
                                try {
                                    menus[namespaces[o.selector]].$menu && menus[namespaces[o.selector]].$menu.remove(), delete menus[namespaces[o.selector]];
                                } catch (e) {
                                    menus[namespaces[o.selector]] = null;
                                }
                                $document.off(namespaces[o.selector]);
                            }
                        } else
                            $document.off(".contextMenu .contextMenuAutoHide"),
                                $.each(menus, function (ns, o) {
                                    $(o.context).off(o.ns);
                                }),
                                (namespaces = {}),
                                (menus = {}),
                                (counter = 0),
                                (initialized = !1),
                                $("#context-menu-layer, .context-menu-list").remove();
                        break;
                    case "html5":
                        ((!$.support.htmlCommand && !$.support.htmlMenuitem) || ("boolean" == typeof options && options)) &&
                            $('menu[type="context"]')
                                .each(function () {
                                    this.id && $.contextMenu({ selector: "[contextmenu=" + this.id + "]", items: $.contextMenu.fromMenu(this) });
                                })
                                .css("display", "none");
                        break;
                    default:
                        throw new Error('Unknown operation "' + operation + '"');
                }
                return this;
            }),
            ($.contextMenu.setInputValues = function (opt, data) {
                void 0 === data && (data = {}),
                    $.each(opt.inputs, function (key, item) {
                        switch (item.type) {
                            case "text":
                            case "textarea":
                                item.value = data[key] || "";
                                break;
                            case "checkbox":
                                item.selected = !!data[key];
                                break;
                            case "radio":
                                item.selected = (data[item.radio] || "") === item.value;
                                break;
                            case "select":
                                item.selected = data[key] || "";
                        }
                    });
            }),
            ($.contextMenu.getInputValues = function (opt, data) {
                return (
                    void 0 === data && (data = {}),
                    $.each(opt.inputs, function (key, item) {
                        switch (item.type) {
                            case "text":
                            case "textarea":
                            case "select":
                                data[key] = item.$input.val();
                                break;
                            case "checkbox":
                                data[key] = item.$input.prop("checked");
                                break;
                            case "radio":
                                item.$input.prop("checked") && (data[item.radio] = item.value);
                        }
                    }),
                    data
                );
            }),
            ($.contextMenu.fromMenu = function (element) {
                var items = {};
                return (
                    (function menuChildren(items, $children, counter) {
                        return (
                            counter || (counter = 0),
                            $children.each(function () {
                                var label,
                                    item,
                                    $node = $(this),
                                    node = this,
                                    nodeName = this.nodeName.toLowerCase();
                                switch (("label" === nodeName && $node.find("input, textarea, select").length && ((label = $node.text()), (nodeName = (node = ($node = $node.children().first()).get(0)).nodeName.toLowerCase())), nodeName)) {
                                    case "menu":
                                        (item = { name: $node.attr("label"), items: {} }), (counter = menuChildren(item.items, $node.children(), counter));
                                        break;
                                    case "a":
                                    case "button":
                                        item = {
                                            name: $node.text(),
                                            disabled: !!$node.attr("disabled"),
                                            callback: function () {
                                                $node.get(0).click();
                                            },
                                        };
                                        break;
                                    case "menuitem":
                                    case "command":
                                        switch ($node.attr("type")) {
                                            case void 0:
                                            case "command":
                                            case "menuitem":
                                                item = {
                                                    name: $node.attr("label"),
                                                    disabled: !!$node.attr("disabled"),
                                                    icon: $node.attr("icon"),
                                                    callback: function () {
                                                        $node.get(0).click();
                                                    },
                                                };
                                                break;
                                            case "checkbox":
                                                item = { type: "checkbox", disabled: !!$node.attr("disabled"), name: $node.attr("label"), selected: !!$node.attr("checked") };
                                                break;
                                            case "radio":
                                                item = { type: "radio", disabled: !!$node.attr("disabled"), name: $node.attr("label"), radio: $node.attr("radiogroup"), value: $node.attr("id"), selected: !!$node.attr("checked") };
                                                break;
                                            default:
                                                item = void 0;
                                        }
                                        break;
                                    case "hr":
                                        item = "-------";
                                        break;
                                    case "input":
                                        switch ($node.attr("type")) {
                                            case "text":
                                                item = { type: "text", name: label || inputLabel(node), disabled: !!$node.attr("disabled"), value: $node.val() };
                                                break;
                                            case "checkbox":
                                                item = { type: "checkbox", name: label || inputLabel(node), disabled: !!$node.attr("disabled"), selected: !!$node.attr("checked") };
                                                break;
                                            case "radio":
                                                item = { type: "radio", name: label || inputLabel(node), disabled: !!$node.attr("disabled"), radio: !!$node.attr("name"), value: $node.val(), selected: !!$node.attr("checked") };
                                                break;
                                            default:
                                                item = void 0;
                                        }
                                        break;
                                    case "select":
                                        (item = { type: "select", name: label || inputLabel(node), disabled: !!$node.attr("disabled"), selected: $node.val(), options: {} }),
                                            $node.children().each(function () {
                                                item.options[this.value] = $(this).text();
                                            });
                                        break;
                                    case "textarea":
                                        item = { type: "textarea", name: label || inputLabel(node), disabled: !!$node.attr("disabled"), value: $node.val() };
                                        break;
                                    case "label":
                                        break;
                                    default:
                                        item = { type: "html", html: $node.clone(!0) };
                                }
                                item && (items["key" + ++counter] = item);
                            }),
                            counter
                        );
                    })(items, $(element).children()),
                    items
                );
            }),
            ($.contextMenu.defaults = defaults),
            ($.contextMenu.types = types),
            ($.contextMenu.handle = handle),
            ($.contextMenu.op = op),
            ($.contextMenu.menus = menus);
    }),
    (function (factory) {
        "function" == typeof define && define.amd ? define(["jquery"], factory) : factory(jQuery);
    })(function ($) {
        $.ui = $.ui || {};
        $.ui.version = "1.12.1";
        !(function () {
            var cachedScrollbarWidth,
                max = Math.max,
                abs = Math.abs,
                rhorizontal = /left|center|right/,
                rvertical = /top|center|bottom/,
                roffset = /[\+\-]\d+(\.[\d]+)?%?/,
                rposition = /^\w+/,
                rpercent = /%$/,
                _position = $.fn.position;
            function getOffsets(offsets, width, height) {
                return [parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1), parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1)];
            }
            function parseCss(element, property) {
                return parseInt($.css(element, property), 10) || 0;
            }
            ($.position = {
                scrollbarWidth: function () {
                    if (void 0 !== cachedScrollbarWidth) return cachedScrollbarWidth;
                    var w1,
                        w2,
                        div = $("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                        innerDiv = div.children()[0];
                    return $("body").append(div), (w1 = innerDiv.offsetWidth), div.css("overflow", "scroll"), w1 === (w2 = innerDiv.offsetWidth) && (w2 = div[0].clientWidth), div.remove(), (cachedScrollbarWidth = w1 - w2);
                },
                getScrollInfo: function (within) {
                    var overflowX = within.isWindow || within.isDocument ? "" : within.element.css("overflow-x"),
                        overflowY = within.isWindow || within.isDocument ? "" : within.element.css("overflow-y"),
                        hasOverflowX = "scroll" === overflowX || ("auto" === overflowX && within.width < within.element[0].scrollWidth);
                    return { width: "scroll" === overflowY || ("auto" === overflowY && within.height < within.element[0].scrollHeight) ? $.position.scrollbarWidth() : 0, height: hasOverflowX ? $.position.scrollbarWidth() : 0 };
                },
                getWithinInfo: function (element) {
                    var withinElement = $(element || window),
                        isWindow = $.isWindow(withinElement[0]),
                        isDocument = !!withinElement[0] && 9 === withinElement[0].nodeType;
                    return {
                        element: withinElement,
                        isWindow: isWindow,
                        isDocument: isDocument,
                        offset: !isWindow && !isDocument ? $(element).offset() : { left: 0, top: 0 },
                        scrollLeft: withinElement.scrollLeft(),
                        scrollTop: withinElement.scrollTop(),
                        width: withinElement.outerWidth(),
                        height: withinElement.outerHeight(),
                    };
                },
            }),
                ($.fn.position = function (options) {
                    if (!options || !options.of) return _position.apply(this, arguments);
                    options = $.extend({}, options);
                    var atOffset,
                        targetWidth,
                        targetHeight,
                        targetOffset,
                        basePosition,
                        dimensions,
                        elem,
                        raw,
                        target = $(options.of),
                        within = $.position.getWithinInfo(options.within),
                        scrollInfo = $.position.getScrollInfo(within),
                        collision = (options.collision || "flip").split(" "),
                        offsets = {};
                    return (
                        (dimensions =
                            9 === (raw = (elem = target)[0]).nodeType
                                ? { width: elem.width(), height: elem.height(), offset: { top: 0, left: 0 } }
                                : $.isWindow(raw)
                                ? { width: elem.width(), height: elem.height(), offset: { top: elem.scrollTop(), left: elem.scrollLeft() } }
                                : raw.preventDefault
                                ? { width: 0, height: 0, offset: { top: raw.pageY, left: raw.pageX } }
                                : { width: elem.outerWidth(), height: elem.outerHeight(), offset: elem.offset() }),
                        target[0].preventDefault && (options.at = "left top"),
                        (targetWidth = dimensions.width),
                        (targetHeight = dimensions.height),
                        (targetOffset = dimensions.offset),
                        (basePosition = $.extend({}, targetOffset)),
                        $.each(["my", "at"], function () {
                            var horizontalOffset,
                                verticalOffset,
                                pos = (options[this] || "").split(" ");
                            1 === pos.length && (pos = rhorizontal.test(pos[0]) ? pos.concat(["center"]) : rvertical.test(pos[0]) ? ["center"].concat(pos) : ["center", "center"]),
                                (pos[0] = rhorizontal.test(pos[0]) ? pos[0] : "center"),
                                (pos[1] = rvertical.test(pos[1]) ? pos[1] : "center"),
                                (horizontalOffset = roffset.exec(pos[0])),
                                (verticalOffset = roffset.exec(pos[1])),
                                (offsets[this] = [horizontalOffset ? horizontalOffset[0] : 0, verticalOffset ? verticalOffset[0] : 0]),
                                (options[this] = [rposition.exec(pos[0])[0], rposition.exec(pos[1])[0]]);
                        }),
                        1 === collision.length && (collision[1] = collision[0]),
                        "right" === options.at[0] ? (basePosition.left += targetWidth) : "center" === options.at[0] && (basePosition.left += targetWidth / 2),
                        "bottom" === options.at[1] ? (basePosition.top += targetHeight) : "center" === options.at[1] && (basePosition.top += targetHeight / 2),
                        (atOffset = getOffsets(offsets.at, targetWidth, targetHeight)),
                        (basePosition.left += atOffset[0]),
                        (basePosition.top += atOffset[1]),
                        this.each(function () {
                            var collisionPosition,
                                using,
                                elem = $(this),
                                elemWidth = elem.outerWidth(),
                                elemHeight = elem.outerHeight(),
                                marginLeft = parseCss(this, "marginLeft"),
                                marginTop = parseCss(this, "marginTop"),
                                collisionWidth = elemWidth + marginLeft + parseCss(this, "marginRight") + scrollInfo.width,
                                collisionHeight = elemHeight + marginTop + parseCss(this, "marginBottom") + scrollInfo.height,
                                position = $.extend({}, basePosition),
                                myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());
                            "right" === options.my[0] ? (position.left -= elemWidth) : "center" === options.my[0] && (position.left -= elemWidth / 2),
                                "bottom" === options.my[1] ? (position.top -= elemHeight) : "center" === options.my[1] && (position.top -= elemHeight / 2),
                                (position.left += myOffset[0]),
                                (position.top += myOffset[1]),
                                (collisionPosition = { marginLeft: marginLeft, marginTop: marginTop }),
                                $.each(["left", "top"], function (i, dir) {
                                    $.ui.position[collision[i]] &&
                                        $.ui.position[collision[i]][dir](position, {
                                            targetWidth: targetWidth,
                                            targetHeight: targetHeight,
                                            elemWidth: elemWidth,
                                            elemHeight: elemHeight,
                                            collisionPosition: collisionPosition,
                                            collisionWidth: collisionWidth,
                                            collisionHeight: collisionHeight,
                                            offset: [atOffset[0] + myOffset[0], atOffset[1] + myOffset[1]],
                                            my: options.my,
                                            at: options.at,
                                            within: within,
                                            elem: elem,
                                        });
                                }),
                                options.using &&
                                    (using = function (props) {
                                        var left = targetOffset.left - position.left,
                                            right = left + targetWidth - elemWidth,
                                            top = targetOffset.top - position.top,
                                            bottom = top + targetHeight - elemHeight,
                                            feedback = {
                                                target: { element: target, left: targetOffset.left, top: targetOffset.top, width: targetWidth, height: targetHeight },
                                                element: { element: elem, left: position.left, top: position.top, width: elemWidth, height: elemHeight },
                                                horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
                                                vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle",
                                            };
                                        targetWidth < elemWidth && abs(left + right) < targetWidth && (feedback.horizontal = "center"),
                                            targetHeight < elemHeight && abs(top + bottom) < targetHeight && (feedback.vertical = "middle"),
                                            max(abs(left), abs(right)) > max(abs(top), abs(bottom)) ? (feedback.important = "horizontal") : (feedback.important = "vertical"),
                                            options.using.call(this, props, feedback);
                                    }),
                                elem.offset($.extend(position, { using: using }));
                        })
                    );
                }),
                ($.ui.position = {
                    fit: {
                        left: function (position, data) {
                            var newOverRight,
                                within = data.within,
                                withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
                                outerWidth = within.width,
                                collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                                overLeft = withinOffset - collisionPosLeft,
                                overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset;
                            data.collisionWidth > outerWidth
                                ? overLeft > 0 && overRight <= 0
                                    ? ((newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset), (position.left += overLeft - newOverRight))
                                    : (position.left = overRight > 0 && overLeft <= 0 ? withinOffset : overLeft > overRight ? withinOffset + outerWidth - data.collisionWidth : withinOffset)
                                : overLeft > 0
                                ? (position.left += overLeft)
                                : overRight > 0
                                ? (position.left -= overRight)
                                : (position.left = max(position.left - collisionPosLeft, position.left));
                        },
                        top: function (position, data) {
                            var newOverBottom,
                                within = data.within,
                                withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
                                outerHeight = data.within.height,
                                collisionPosTop = position.top - data.collisionPosition.marginTop,
                                overTop = withinOffset - collisionPosTop,
                                overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset;
                            data.collisionHeight > outerHeight
                                ? overTop > 0 && overBottom <= 0
                                    ? ((newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset), (position.top += overTop - newOverBottom))
                                    : (position.top = overBottom > 0 && overTop <= 0 ? withinOffset : overTop > overBottom ? withinOffset + outerHeight - data.collisionHeight : withinOffset)
                                : overTop > 0
                                ? (position.top += overTop)
                                : overBottom > 0
                                ? (position.top -= overBottom)
                                : (position.top = max(position.top - collisionPosTop, position.top));
                        },
                    },
                    flip: {
                        left: function (position, data) {
                            var newOverRight,
                                newOverLeft,
                                within = data.within,
                                withinOffset = within.offset.left + within.scrollLeft,
                                outerWidth = within.width,
                                offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
                                collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                                overLeft = collisionPosLeft - offsetLeft,
                                overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
                                myOffset = "left" === data.my[0] ? -data.elemWidth : "right" === data.my[0] ? data.elemWidth : 0,
                                atOffset = "left" === data.at[0] ? data.targetWidth : "right" === data.at[0] ? -data.targetWidth : 0,
                                offset = -2 * data.offset[0];
                            overLeft < 0
                                ? ((newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset) < 0 || newOverRight < abs(overLeft)) && (position.left += myOffset + atOffset + offset)
                                : overRight > 0 &&
                                  ((newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft) > 0 || abs(newOverLeft) < overRight) &&
                                  (position.left += myOffset + atOffset + offset);
                        },
                        top: function (position, data) {
                            var newOverTop,
                                newOverBottom,
                                within = data.within,
                                withinOffset = within.offset.top + within.scrollTop,
                                outerHeight = within.height,
                                offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
                                collisionPosTop = position.top - data.collisionPosition.marginTop,
                                overTop = collisionPosTop - offsetTop,
                                overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
                                myOffset = "top" === data.my[1] ? -data.elemHeight : "bottom" === data.my[1] ? data.elemHeight : 0,
                                atOffset = "top" === data.at[1] ? data.targetHeight : "bottom" === data.at[1] ? -data.targetHeight : 0,
                                offset = -2 * data.offset[1];
                            overTop < 0
                                ? ((newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset) < 0 || newOverBottom < abs(overTop)) && (position.top += myOffset + atOffset + offset)
                                : overBottom > 0 &&
                                  ((newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop) > 0 || abs(newOverTop) < overBottom) &&
                                  (position.top += myOffset + atOffset + offset);
                        },
                    },
                    flipfit: {
                        left: function () {
                            $.ui.position.flip.left.apply(this, arguments), $.ui.position.fit.left.apply(this, arguments);
                        },
                        top: function () {
                            $.ui.position.flip.top.apply(this, arguments), $.ui.position.fit.top.apply(this, arguments);
                        },
                    },
                });
        })();
        $.ui.position;
    }),
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? factory(exports) : "function" == typeof define && define.amd ? define(["exports"], factory) : factory((global.async = {}));
    })(this, function (exports) {
        "use strict";
        function apply(fn, ...args) {
            return (...callArgs) => fn(...args, ...callArgs);
        }
        function initialParams(fn) {
            return function (...args) {
                var callback = args.pop();
                return fn.call(this, args, callback);
            };
        }
        var hasSetImmediate = "function" == typeof setImmediate && setImmediate,
            hasNextTick = "object" == typeof process && "function" == typeof process.nextTick;
        function fallback(fn) {
            setTimeout(fn, 0);
        }
        function wrap(defer) {
            return (fn, ...args) => defer(() => fn(...args));
        }
        var setImmediate$1 = wrap(hasSetImmediate ? setImmediate : hasNextTick ? process.nextTick : fallback);
        function asyncify(func) {
            return isAsync(func)
                ? function (...args) {
                      const callback = args.pop();
                      return handlePromise(func.apply(this, args), callback);
                  }
                : initialParams(function (args, callback) {
                      var result;
                      try {
                          result = func.apply(this, args);
                      } catch (e) {
                          return callback(e);
                      }
                      if (result && "function" == typeof result.then) return handlePromise(result, callback);
                      callback(null, result);
                  });
        }
        function handlePromise(promise, callback) {
            return promise.then(
                (value) => {
                    invokeCallback(callback, null, value);
                },
                (err) => {
                    invokeCallback(callback, err && err.message ? err : new Error(err));
                }
            );
        }
        function invokeCallback(callback, error, value) {
            try {
                callback(error, value);
            } catch (err) {
                setImmediate$1((e) => {
                    throw e;
                }, err);
            }
        }
        function isAsync(fn) {
            return "AsyncFunction" === fn[Symbol.toStringTag];
        }
        function wrapAsync(asyncFn) {
            if ("function" != typeof asyncFn) throw new Error("expected a function");
            return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;
        }
        function awaitify(asyncFn, arity = asyncFn.length) {
            if (!arity) throw new Error("arity is undefined");
            function awaitable(...args) {
                return "function" == typeof args[arity - 1]
                    ? asyncFn.apply(this, args)
                    : new Promise((resolve, reject) => {
                          (args[arity - 1] = (err, ...cbArgs) => {
                              if (err) return reject(err);
                              resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);
                          }),
                              asyncFn.apply(this, args);
                      });
            }
            return Object.defineProperty(awaitable, "name", { value: `awaitable(${asyncFn.name})` }), awaitable;
        }
        function applyEach(eachfn) {
            return function (fns, ...callArgs) {
                return awaitify(function (callback) {
                    var that = this;
                    return eachfn(
                        fns,
                        (fn, cb) => {
                            wrapAsync(fn).apply(that, callArgs.concat(cb));
                        },
                        callback
                    );
                });
            };
        }
        function _asyncMap(eachfn, arr, iteratee, callback) {
            arr = arr || [];
            var results = [],
                counter = 0,
                _iteratee = wrapAsync(iteratee);
            return eachfn(
                arr,
                (value, _, iterCb) => {
                    var index = counter++;
                    _iteratee(value, (err, v) => {
                        (results[index] = v), iterCb(err);
                    });
                },
                (err) => {
                    callback(err, results);
                }
            );
        }
        function isArrayLike(value) {
            return value && "number" == typeof value.length && value.length >= 0 && value.length % 1 == 0;
        }
        const breakLoop = {};
        function once(fn) {
            function wrapper(...args) {
                if (null !== fn) {
                    var callFn = fn;
                    (fn = null), callFn.apply(this, args);
                }
            }
            return Object.assign(wrapper, fn), wrapper;
        }
        function createIterator(coll) {
            if (isArrayLike(coll))
                return (function (coll) {
                    var i = -1,
                        len = coll.length;
                    return function () {
                        return ++i < len ? { value: coll[i], key: i } : null;
                    };
                })(coll);
            var obj,
                okeys,
                i,
                len,
                iterator = (function (coll) {
                    return coll[Symbol.iterator] && coll[Symbol.iterator]();
                })(coll);
            return iterator
                ? (function (iterator) {
                      var i = -1;
                      return function () {
                          var item = iterator.next();
                          return item.done ? null : (i++, { value: item.value, key: i });
                      };
                  })(iterator)
                : ((okeys = (obj = coll) ? Object.keys(obj) : []),
                  (i = -1),
                  (len = okeys.length),
                  function () {
                      var key = okeys[++i];
                      return i < len ? { value: obj[key], key: key } : null;
                  });
        }
        function onlyOnce(fn) {
            return function (...args) {
                if (null === fn) throw new Error("Callback was already called.");
                var callFn = fn;
                (fn = null), callFn.apply(this, args);
            };
        }
        function asyncEachOfLimit(generator, limit, iteratee, callback) {
            let done = !1,
                canceled = !1,
                awaiting = !1,
                running = 0,
                idx = 0;
            function replenish() {
                running >= limit ||
                    awaiting ||
                    done ||
                    ((awaiting = !0),
                    generator
                        .next()
                        .then(({ value: value, done: iterDone }) => {
                            if (!canceled && !done) {
                                if (((awaiting = !1), iterDone)) return (done = !0), void (running <= 0 && callback(null));
                                running++, iteratee(value, idx, iterateeCallback), idx++, replenish();
                            }
                        })
                        .catch(handleError));
            }
            function iterateeCallback(err, result) {
                if (((running -= 1), !canceled)) return err ? handleError(err) : !1 === err ? ((done = !0), void (canceled = !0)) : result === breakLoop || (done && running <= 0) ? ((done = !0), callback(null)) : void replenish();
            }
            function handleError(err) {
                canceled || ((awaiting = !1), (done = !0), callback(err));
            }
            replenish();
        }
        var eachOfLimit = (limit) => (obj, iteratee, callback) => {
            if (((callback = once(callback)), limit <= 0)) throw new RangeError("concurrency limit cannot be less than 1");
            if (!obj) return callback(null);
            if ("AsyncGenerator" === obj[Symbol.toStringTag]) return asyncEachOfLimit(obj, limit, iteratee, callback);
            if ("function" == typeof obj[Symbol.asyncIterator]) return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback);
            var nextElem = createIterator(obj),
                done = !1,
                canceled = !1,
                running = 0,
                looping = !1;
            function iterateeCallback(err, value) {
                if (!canceled)
                    if (((running -= 1), err)) (done = !0), callback(err);
                    else if (!1 === err) (done = !0), (canceled = !0);
                    else {
                        if (value === breakLoop || (done && running <= 0)) return (done = !0), callback(null);
                        looping || replenish();
                    }
            }
            function replenish() {
                for (looping = !0; running < limit && !done; ) {
                    var elem = nextElem();
                    if (null === elem) return (done = !0), void (running <= 0 && callback(null));
                    (running += 1), iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));
                }
                looping = !1;
            }
            replenish();
        };
        var eachOfLimit$2 = awaitify(function (coll, limit, iteratee, callback) {
            return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);
        }, 4);
        function eachOfArrayLike(coll, iteratee, callback) {
            callback = once(callback);
            var index = 0,
                completed = 0,
                { length: length } = coll,
                canceled = !1;
            function iteratorCallback(err, value) {
                !1 === err && (canceled = !0), !0 !== canceled && (err ? callback(err) : (++completed !== length && value !== breakLoop) || callback(null));
            }
            for (0 === length && callback(null); index < length; index++) iteratee(coll[index], index, onlyOnce(iteratorCallback));
        }
        function eachOfGeneric(coll, iteratee, callback) {
            return eachOfLimit$2(coll, 1 / 0, iteratee, callback);
        }
        var eachOf$1 = awaitify(function (coll, iteratee, callback) {
            return (isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric)(coll, wrapAsync(iteratee), callback);
        }, 3);
        var map$1 = awaitify(function (coll, iteratee, callback) {
                return _asyncMap(eachOf$1, coll, iteratee, callback);
            }, 3),
            applyEach$1 = applyEach(map$1);
        var eachOfSeries$1 = awaitify(function (coll, iteratee, callback) {
            return eachOfLimit$2(coll, 1, iteratee, callback);
        }, 3);
        var mapSeries$1 = awaitify(function (coll, iteratee, callback) {
                return _asyncMap(eachOfSeries$1, coll, iteratee, callback);
            }, 3),
            applyEachSeries = applyEach(mapSeries$1);
        const PROMISE_SYMBOL = Symbol("promiseCallback");
        function promiseCallback() {
            let resolve, reject;
            function callback(err, ...args) {
                if (err) return reject(err);
                resolve(args.length > 1 ? args : args[0]);
            }
            return (
                (callback[PROMISE_SYMBOL] = new Promise((res, rej) => {
                    (resolve = res), (reject = rej);
                })),
                callback
            );
        }
        function auto(tasks, concurrency, callback) {
            "number" != typeof concurrency && ((callback = concurrency), (concurrency = null)), (callback = once(callback || promiseCallback()));
            var numTasks = Object.keys(tasks).length;
            if (!numTasks) return callback(null);
            concurrency || (concurrency = numTasks);
            var results = {},
                runningTasks = 0,
                canceled = !1,
                hasError = !1,
                listeners = Object.create(null),
                readyTasks = [],
                readyToCheck = [],
                uncheckedDependencies = {};
            function enqueueTask(key, task) {
                readyTasks.push(() =>
                    (function (key, task) {
                        if (hasError) return;
                        var taskCallback = onlyOnce((err, ...result) => {
                            if ((runningTasks--, !1 !== err))
                                if ((result.length < 2 && ([result] = result), err)) {
                                    var safeResults = {};
                                    if (
                                        (Object.keys(results).forEach((rkey) => {
                                            safeResults[rkey] = results[rkey];
                                        }),
                                        (safeResults[key] = result),
                                        (hasError = !0),
                                        (listeners = Object.create(null)),
                                        canceled)
                                    )
                                        return;
                                    callback(err, safeResults);
                                } else (results[key] = result), (listeners[key] || []).forEach((fn) => fn()), processQueue();
                            else canceled = !0;
                        });
                        runningTasks++;
                        var taskFn = wrapAsync(task[task.length - 1]);
                        task.length > 1 ? taskFn(results, taskCallback) : taskFn(taskCallback);
                    })(key, task)
                );
            }
            function processQueue() {
                if (!canceled) {
                    if (0 === readyTasks.length && 0 === runningTasks) return callback(null, results);
                    for (; readyTasks.length && runningTasks < concurrency; ) {
                        readyTasks.shift()();
                    }
                }
            }
            function getDependents(taskName) {
                var result = [];
                return (
                    Object.keys(tasks).forEach((key) => {
                        const task = tasks[key];
                        Array.isArray(task) && task.indexOf(taskName) >= 0 && result.push(key);
                    }),
                    result
                );
            }
            return (
                Object.keys(tasks).forEach((key) => {
                    var task = tasks[key];
                    if (!Array.isArray(task)) return enqueueTask(key, [task]), void readyToCheck.push(key);
                    var dependencies = task.slice(0, task.length - 1),
                        remainingDependencies = dependencies.length;
                    if (0 === remainingDependencies) return enqueueTask(key, task), void readyToCheck.push(key);
                    (uncheckedDependencies[key] = remainingDependencies),
                        dependencies.forEach((dependencyName) => {
                            if (!tasks[dependencyName]) throw new Error("async.auto task `" + key + "` has a non-existent dependency `" + dependencyName + "` in " + dependencies.join(", "));
                            !(function (taskName, fn) {
                                var taskListeners = listeners[taskName];
                                taskListeners || (taskListeners = listeners[taskName] = []);
                                taskListeners.push(fn);
                            })(dependencyName, () => {
                                0 === --remainingDependencies && enqueueTask(key, task);
                            });
                        });
                }),
                (function () {
                    var currentTask,
                        counter = 0;
                    for (; readyToCheck.length; )
                        (currentTask = readyToCheck.pop()),
                            counter++,
                            getDependents(currentTask).forEach((dependent) => {
                                0 == --uncheckedDependencies[dependent] && readyToCheck.push(dependent);
                            });
                    if (counter !== numTasks) throw new Error("async.auto cannot execute tasks due to a recursive dependency");
                })(),
                processQueue(),
                callback[PROMISE_SYMBOL]
            );
        }
        var FN_ARGS = /^(?:async\s+)?(?:function)?\s*\w*\s*\(\s*([^)]+)\s*\)(?:\s*{)/,
            ARROW_FN_ARGS = /^(?:async\s+)?\(?\s*([^)=]+)\s*\)?(?:\s*=>)/,
            FN_ARG_SPLIT = /,/,
            FN_ARG = /(=.+)?(\s*)$/,
            STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;
        function autoInject(tasks, callback) {
            var newTasks = {};
            return (
                Object.keys(tasks).forEach((key) => {
                    var params,
                        taskFn = tasks[key],
                        fnIsAsync = isAsync(taskFn),
                        hasNoDeps = (!fnIsAsync && 1 === taskFn.length) || (fnIsAsync && 0 === taskFn.length);
                    if (Array.isArray(taskFn)) (params = [...taskFn]), (taskFn = params.pop()), (newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn));
                    else if (hasNoDeps) newTasks[key] = taskFn;
                    else {
                        if (
                            ((params = (function (func) {
                                const src = func.toString().replace(STRIP_COMMENTS, "");
                                let match = src.match(FN_ARGS);
                                if ((match || (match = src.match(ARROW_FN_ARGS)), !match)) throw new Error("could not parse args in autoInject\nSource:\n" + src);
                                let [, args] = match;
                                return args
                                    .replace(/\s/g, "")
                                    .split(FN_ARG_SPLIT)
                                    .map((arg) => arg.replace(FN_ARG, "").trim());
                            })(taskFn)),
                            0 === taskFn.length && !fnIsAsync && 0 === params.length)
                        )
                            throw new Error("autoInject task functions require explicit parameters.");
                        fnIsAsync || params.pop(), (newTasks[key] = params.concat(newTask));
                    }
                    function newTask(results, taskCb) {
                        var newArgs = params.map((name) => results[name]);
                        newArgs.push(taskCb), wrapAsync(taskFn)(...newArgs);
                    }
                }),
                auto(newTasks, callback)
            );
        }
        class DLL {
            constructor() {
                (this.head = this.tail = null), (this.length = 0);
            }
            removeLink(node) {
                return node.prev ? (node.prev.next = node.next) : (this.head = node.next), node.next ? (node.next.prev = node.prev) : (this.tail = node.prev), (node.prev = node.next = null), (this.length -= 1), node;
            }
            empty() {
                for (; this.head; ) this.shift();
                return this;
            }
            insertAfter(node, newNode) {
                (newNode.prev = node), (newNode.next = node.next), node.next ? (node.next.prev = newNode) : (this.tail = newNode), (node.next = newNode), (this.length += 1);
            }
            insertBefore(node, newNode) {
                (newNode.prev = node.prev), (newNode.next = node), node.prev ? (node.prev.next = newNode) : (this.head = newNode), (node.prev = newNode), (this.length += 1);
            }
            unshift(node) {
                this.head ? this.insertBefore(this.head, node) : setInitial(this, node);
            }
            push(node) {
                this.tail ? this.insertAfter(this.tail, node) : setInitial(this, node);
            }
            shift() {
                return this.head && this.removeLink(this.head);
            }
            pop() {
                return this.tail && this.removeLink(this.tail);
            }
            toArray() {
                return [...this];
            }
            *[Symbol.iterator]() {
                for (var cur = this.head; cur; ) yield cur.data, (cur = cur.next);
            }
            remove(testFn) {
                for (var curr = this.head; curr; ) {
                    var { next: next } = curr;
                    testFn(curr) && this.removeLink(curr), (curr = next);
                }
                return this;
            }
        }
        function setInitial(dll, node) {
            (dll.length = 1), (dll.head = dll.tail = node);
        }
        function queue(worker, concurrency, payload) {
            if (null == concurrency) concurrency = 1;
            else if (0 === concurrency) throw new RangeError("Concurrency must not be zero");
            var _worker = wrapAsync(worker),
                numRunning = 0,
                workersList = [];
            const events = { error: [], drain: [], saturated: [], unsaturated: [], empty: [] };
            function off(event, handler) {
                return event ? (handler ? void (events[event] = events[event].filter((ev) => ev !== handler)) : (events[event] = [])) : Object.keys(events).forEach((ev) => (events[ev] = []));
            }
            function trigger(event, ...args) {
                events[event].forEach((handler) => handler(...args));
            }
            var processingScheduled = !1;
            function _insert(data, insertAtFront, rejectOnError, callback) {
                if (null != callback && "function" != typeof callback) throw new Error("task callback must be a function");
                var res, rej;
                function promiseCallback(err, ...args) {
                    return err ? (rejectOnError ? rej(err) : res()) : args.length <= 1 ? res(args[0]) : void res(args);
                }
                q.started = !0;
                var item = { data: data, callback: rejectOnError ? promiseCallback : callback || promiseCallback };
                if (
                    (insertAtFront ? q._tasks.unshift(item) : q._tasks.push(item),
                    processingScheduled ||
                        ((processingScheduled = !0),
                        setImmediate$1(() => {
                            (processingScheduled = !1), q.process();
                        })),
                    rejectOnError || !callback)
                )
                    return new Promise((resolve, reject) => {
                        (res = resolve), (rej = reject);
                    });
            }
            function _createCB(tasks) {
                return function (err, ...args) {
                    numRunning -= 1;
                    for (var i = 0, l = tasks.length; i < l; i++) {
                        var task = tasks[i],
                            index = workersList.indexOf(task);
                        0 === index ? workersList.shift() : index > 0 && workersList.splice(index, 1), task.callback(err, ...args), null != err && trigger("error", err, task.data);
                    }
                    numRunning <= q.concurrency - q.buffer && trigger("unsaturated"), q.idle() && trigger("drain"), q.process();
                };
            }
            function _maybeDrain(data) {
                return !(0 !== data.length || !q.idle()) && (setImmediate$1(() => trigger("drain")), !0);
            }
            const eventMethod = (name) => (handler) => {
                if (!handler)
                    return new Promise((resolve, reject) => {
                        !(function (event, handler) {
                            const handleAndRemove = (...args) => {
                                off(event, handleAndRemove), handler(...args);
                            };
                            events[event].push(handleAndRemove);
                        })(name, (err, data) => {
                            if (err) return reject(err);
                            resolve(data);
                        });
                    });
                off(name), (handler = handler), events[name].push(handler);
            };
            var handler,
                isProcessing = !1,
                q = {
                    _tasks: new DLL(),
                    *[Symbol.iterator]() {
                        yield* q._tasks[Symbol.iterator]();
                    },
                    concurrency: concurrency,
                    payload: payload,
                    buffer: concurrency / 4,
                    started: !1,
                    paused: !1,
                    push(data, callback) {
                        if (Array.isArray(data)) {
                            if (_maybeDrain(data)) return;
                            return data.map((datum) => _insert(datum, !1, !1, callback));
                        }
                        return _insert(data, !1, !1, callback);
                    },
                    pushAsync(data, callback) {
                        if (Array.isArray(data)) {
                            if (_maybeDrain(data)) return;
                            return data.map((datum) => _insert(datum, !1, !0, callback));
                        }
                        return _insert(data, !1, !0, callback);
                    },
                    kill() {
                        off(), q._tasks.empty();
                    },
                    unshift(data, callback) {
                        if (Array.isArray(data)) {
                            if (_maybeDrain(data)) return;
                            return data.map((datum) => _insert(datum, !0, !1, callback));
                        }
                        return _insert(data, !0, !1, callback);
                    },
                    unshiftAsync(data, callback) {
                        if (Array.isArray(data)) {
                            if (_maybeDrain(data)) return;
                            return data.map((datum) => _insert(datum, !0, !0, callback));
                        }
                        return _insert(data, !0, !0, callback);
                    },
                    remove(testFn) {
                        q._tasks.remove(testFn);
                    },
                    process() {
                        if (!isProcessing) {
                            for (isProcessing = !0; !q.paused && numRunning < q.concurrency && q._tasks.length; ) {
                                var tasks = [],
                                    data = [],
                                    l = q._tasks.length;
                                q.payload && (l = Math.min(l, q.payload));
                                for (var i = 0; i < l; i++) {
                                    var node = q._tasks.shift();
                                    tasks.push(node), workersList.push(node), data.push(node.data);
                                }
                                (numRunning += 1), 0 === q._tasks.length && trigger("empty"), numRunning === q.concurrency && trigger("saturated");
                                var cb = onlyOnce(_createCB(tasks));
                                _worker(data, cb);
                            }
                            isProcessing = !1;
                        }
                    },
                    length: () => q._tasks.length,
                    running: () => numRunning,
                    workersList: () => workersList,
                    idle: () => q._tasks.length + numRunning === 0,
                    pause() {
                        q.paused = !0;
                    },
                    resume() {
                        !1 !== q.paused && ((q.paused = !1), setImmediate$1(q.process));
                    },
                };
            return (
                Object.defineProperties(q, {
                    saturated: { writable: !1, value: eventMethod("saturated") },
                    unsaturated: { writable: !1, value: eventMethod("unsaturated") },
                    empty: { writable: !1, value: eventMethod("empty") },
                    drain: { writable: !1, value: eventMethod("drain") },
                    error: { writable: !1, value: eventMethod("error") },
                }),
                q
            );
        }
        function cargo(worker, payload) {
            return queue(worker, 1, payload);
        }
        function cargo$1(worker, concurrency, payload) {
            return queue(worker, concurrency, payload);
        }
        var reduce$1 = awaitify(function (coll, memo, iteratee, callback) {
            callback = once(callback);
            var _iteratee = wrapAsync(iteratee);
            return eachOfSeries$1(
                coll,
                (x, i, iterCb) => {
                    _iteratee(memo, x, (err, v) => {
                        (memo = v), iterCb(err);
                    });
                },
                (err) => callback(err, memo)
            );
        }, 4);
        function seq(...functions) {
            var _functions = functions.map(wrapAsync);
            return function (...args) {
                var that = this,
                    cb = args[args.length - 1];
                return (
                    "function" == typeof cb ? args.pop() : (cb = promiseCallback()),
                    reduce$1(
                        _functions,
                        args,
                        (newargs, fn, iterCb) => {
                            fn.apply(
                                that,
                                newargs.concat((err, ...nextargs) => {
                                    iterCb(err, nextargs);
                                })
                            );
                        },
                        (err, results) => cb(err, ...results)
                    ),
                    cb[PROMISE_SYMBOL]
                );
            };
        }
        function compose(...args) {
            return seq(...args.reverse());
        }
        var mapLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return _asyncMap(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var concatLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            var _iteratee = wrapAsync(iteratee);
            return mapLimit$1(
                coll,
                limit,
                (val, iterCb) => {
                    _iteratee(val, (err, ...args) => (err ? iterCb(err) : iterCb(err, args)));
                },
                (err, mapResults) => {
                    for (var result = [], i = 0; i < mapResults.length; i++) mapResults[i] && (result = result.concat(...mapResults[i]));
                    return callback(err, result);
                }
            );
        }, 4);
        var concat$1 = awaitify(function (coll, iteratee, callback) {
            return concatLimit$1(coll, 1 / 0, iteratee, callback);
        }, 3);
        var concatSeries$1 = awaitify(function (coll, iteratee, callback) {
            return concatLimit$1(coll, 1, iteratee, callback);
        }, 3);
        function constant(...args) {
            return function (...ignoredArgs) {
                return ignoredArgs.pop()(null, ...args);
            };
        }
        function _createTester(check, getResult) {
            return (eachfn, arr, _iteratee, cb) => {
                var testResult,
                    testPassed = !1;
                const iteratee = wrapAsync(_iteratee);
                eachfn(
                    arr,
                    (value, _, callback) => {
                        iteratee(value, (err, result) => (err || !1 === err ? callback(err) : check(result) && !testResult ? ((testPassed = !0), (testResult = getResult(!0, value)), callback(null, breakLoop)) : void callback()));
                    },
                    (err) => {
                        if (err) return cb(err);
                        cb(null, testPassed ? testResult : getResult(!1));
                    }
                );
            };
        }
        var detect$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(
                (bool) => bool,
                (res, item) => item
            )(eachOf$1, coll, iteratee, callback);
        }, 3);
        var detectLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return _createTester(
                (bool) => bool,
                (res, item) => item
            )(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var detectSeries$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(
                (bool) => bool,
                (res, item) => item
            )(eachOfLimit(1), coll, iteratee, callback);
        }, 3);
        function consoleFunc(name) {
            return (fn, ...args) =>
                wrapAsync(fn)(...args, (err, ...resultArgs) => {
                    "object" == typeof console && (err ? console.error : console[name] && resultArgs.forEach((x) => void 0));
                });
        }
        var dir = consoleFunc("dir");
        var doWhilst$1 = awaitify(function (iteratee, test, callback) {
            callback = onlyOnce(callback);
            var results,
                _fn = wrapAsync(iteratee),
                _test = wrapAsync(test);
            function next(err, ...args) {
                if (err) return callback(err);
                !1 !== err && ((results = args), _test(...args, check));
            }
            function check(err, truth) {
                return err ? callback(err) : !1 !== err ? (truth ? void _fn(next) : callback(null, ...results)) : void 0;
            }
            return check(null, !0);
        }, 3);
        function doUntil(iteratee, test, callback) {
            const _test = wrapAsync(test);
            return doWhilst$1(
                iteratee,
                (...args) => {
                    const cb = args.pop();
                    _test(...args, (err, truth) => cb(err, !truth));
                },
                callback
            );
        }
        function _withoutIndex(iteratee) {
            return (value, index, callback) => iteratee(value, callback);
        }
        var each = awaitify(function (coll, iteratee, callback) {
            return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);
        }, 3);
        var eachLimit$2 = awaitify(function (coll, limit, iteratee, callback) {
            return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);
        }, 4);
        var eachSeries$1 = awaitify(function (coll, iteratee, callback) {
            return eachLimit$2(coll, 1, iteratee, callback);
        }, 3);
        function ensureAsync(fn) {
            return isAsync(fn)
                ? fn
                : function (...args) {
                      var callback = args.pop(),
                          sync = !0;
                      args.push((...innerArgs) => {
                          sync ? setImmediate$1(() => callback(...innerArgs)) : callback(...innerArgs);
                      }),
                          fn.apply(this, args),
                          (sync = !1);
                  };
        }
        var every$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(
                (bool) => !bool,
                (res) => !res
            )(eachOf$1, coll, iteratee, callback);
        }, 3);
        var everyLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return _createTester(
                (bool) => !bool,
                (res) => !res
            )(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var everySeries$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(
                (bool) => !bool,
                (res) => !res
            )(eachOfSeries$1, coll, iteratee, callback);
        }, 3);
        function filterArray(eachfn, arr, iteratee, callback) {
            var truthValues = new Array(arr.length);
            eachfn(
                arr,
                (x, index, iterCb) => {
                    iteratee(x, (err, v) => {
                        (truthValues[index] = !!v), iterCb(err);
                    });
                },
                (err) => {
                    if (err) return callback(err);
                    for (var results = [], i = 0; i < arr.length; i++) truthValues[i] && results.push(arr[i]);
                    callback(null, results);
                }
            );
        }
        function filterGeneric(eachfn, coll, iteratee, callback) {
            var results = [];
            eachfn(
                coll,
                (x, index, iterCb) => {
                    iteratee(x, (err, v) => {
                        if (err) return iterCb(err);
                        v && results.push({ index: index, value: x }), iterCb(err);
                    });
                },
                (err) => {
                    if (err) return callback(err);
                    callback(
                        null,
                        results.sort((a, b) => a.index - b.index).map((v) => v.value)
                    );
                }
            );
        }
        function _filter(eachfn, coll, iteratee, callback) {
            return (isArrayLike(coll) ? filterArray : filterGeneric)(eachfn, coll, wrapAsync(iteratee), callback);
        }
        var filter$1 = awaitify(function (coll, iteratee, callback) {
            return _filter(eachOf$1, coll, iteratee, callback);
        }, 3);
        var filterLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return _filter(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var filterSeries$1 = awaitify(function (coll, iteratee, callback) {
            return _filter(eachOfSeries$1, coll, iteratee, callback);
        }, 3);
        var forever$1 = awaitify(function (fn, errback) {
            var done = onlyOnce(errback),
                task = wrapAsync(ensureAsync(fn));
            return (function next(err) {
                if (err) return done(err);
                !1 !== err && task(next);
            })();
        }, 2);
        var groupByLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            var _iteratee = wrapAsync(iteratee);
            return mapLimit$1(
                coll,
                limit,
                (val, iterCb) => {
                    _iteratee(val, (err, key) => (err ? iterCb(err) : iterCb(err, { key: key, val: val })));
                },
                (err, mapResults) => {
                    for (var result = {}, { hasOwnProperty: hasOwnProperty } = Object.prototype, i = 0; i < mapResults.length; i++)
                        if (mapResults[i]) {
                            var { key: key } = mapResults[i],
                                { val: val } = mapResults[i];
                            hasOwnProperty.call(result, key) ? result[key].push(val) : (result[key] = [val]);
                        }
                    return callback(err, result);
                }
            );
        }, 4);
        function groupBy(coll, iteratee, callback) {
            return groupByLimit$1(coll, 1 / 0, iteratee, callback);
        }
        function groupBySeries(coll, iteratee, callback) {
            return groupByLimit$1(coll, 1, iteratee, callback);
        }
        var log = consoleFunc("log");
        var mapValuesLimit$1 = awaitify(function (obj, limit, iteratee, callback) {
            callback = once(callback);
            var newObj = {},
                _iteratee = wrapAsync(iteratee);
            return eachOfLimit(limit)(
                obj,
                (val, key, next) => {
                    _iteratee(val, key, (err, result) => {
                        if (err) return next(err);
                        (newObj[key] = result), next(err);
                    });
                },
                (err) => callback(err, newObj)
            );
        }, 4);
        function mapValues(obj, iteratee, callback) {
            return mapValuesLimit$1(obj, 1 / 0, iteratee, callback);
        }
        function mapValuesSeries(obj, iteratee, callback) {
            return mapValuesLimit$1(obj, 1, iteratee, callback);
        }
        function memoize(fn, hasher = (v) => v) {
            var memo = Object.create(null),
                queues = Object.create(null),
                _fn = wrapAsync(fn),
                memoized = initialParams((args, callback) => {
                    var key = hasher(...args);
                    key in memo
                        ? setImmediate$1(() => callback(null, ...memo[key]))
                        : key in queues
                        ? queues[key].push(callback)
                        : ((queues[key] = [callback]),
                          _fn(...args, (err, ...resultArgs) => {
                              err || (memo[key] = resultArgs);
                              var q = queues[key];
                              delete queues[key];
                              for (var i = 0, l = q.length; i < l; i++) q[i](err, ...resultArgs);
                          }));
                });
            return (memoized.memo = memo), (memoized.unmemoized = fn), memoized;
        }
        var nextTick = wrap(hasNextTick ? process.nextTick : hasSetImmediate ? setImmediate : fallback),
            _parallel = awaitify((eachfn, tasks, callback) => {
                var results = isArrayLike(tasks) ? [] : {};
                eachfn(
                    tasks,
                    (task, key, taskCb) => {
                        wrapAsync(task)((err, ...result) => {
                            result.length < 2 && ([result] = result), (results[key] = result), taskCb(err);
                        });
                    },
                    (err) => callback(err, results)
                );
            }, 3);
        function parallel(tasks, callback) {
            return _parallel(eachOf$1, tasks, callback);
        }
        function parallelLimit(tasks, limit, callback) {
            return _parallel(eachOfLimit(limit), tasks, callback);
        }
        function queue$1(worker, concurrency) {
            var _worker = wrapAsync(worker);
            return queue(
                (items, cb) => {
                    _worker(items[0], cb);
                },
                concurrency,
                1
            );
        }
        class Heap {
            constructor() {
                (this.heap = []), (this.pushCount = Number.MIN_SAFE_INTEGER);
            }
            get length() {
                return this.heap.length;
            }
            empty() {
                return (this.heap = []), this;
            }
            percUp(index) {
                let p;
                for (; index > 0 && smaller(this.heap[index], this.heap[(p = parent(index))]); ) {
                    let t = this.heap[index];
                    (this.heap[index] = this.heap[p]), (this.heap[p] = t), (index = p);
                }
            }
            percDown(index) {
                let l;
                for (; (l = 1 + (index << 1)) < this.heap.length && (l + 1 < this.heap.length && smaller(this.heap[l + 1], this.heap[l]) && (l += 1), !smaller(this.heap[index], this.heap[l])); ) {
                    let t = this.heap[index];
                    (this.heap[index] = this.heap[l]), (this.heap[l] = t), (index = l);
                }
            }
            push(node) {
                (node.pushCount = ++this.pushCount), this.heap.push(node), this.percUp(this.heap.length - 1);
            }
            unshift(node) {
                return this.heap.push(node);
            }
            shift() {
                let [top] = this.heap;
                return (this.heap[0] = this.heap[this.heap.length - 1]), this.heap.pop(), this.percDown(0), top;
            }
            toArray() {
                return [...this];
            }
            *[Symbol.iterator]() {
                for (let i = 0; i < this.heap.length; i++) yield this.heap[i].data;
            }
            remove(testFn) {
                let j = 0;
                for (let i = 0; i < this.heap.length; i++) testFn(this.heap[i]) || ((this.heap[j] = this.heap[i]), j++);
                this.heap.splice(j);
                for (let i = parent(this.heap.length - 1); i >= 0; i--) this.percDown(i);
                return this;
            }
        }
        function parent(i) {
            return ((i + 1) >> 1) - 1;
        }
        function smaller(x, y) {
            return x.priority !== y.priority ? x.priority < y.priority : x.pushCount < y.pushCount;
        }
        function priorityQueue(worker, concurrency) {
            var q = queue$1(worker, concurrency);
            return (
                (q._tasks = new Heap()),
                (q.push = function (data, priority = 0, callback = () => {}) {
                    if ("function" != typeof callback) throw new Error("task callback must be a function");
                    if (((q.started = !0), Array.isArray(data) || (data = [data]), 0 === data.length && q.idle())) return setImmediate$1(() => q.drain());
                    for (var i = 0, l = data.length; i < l; i++) {
                        var item = { data: data[i], priority: priority, callback: callback };
                        q._tasks.push(item);
                    }
                    setImmediate$1(q.process);
                }),
                delete q.unshift,
                q
            );
        }
        var race$1 = awaitify(function (tasks, callback) {
            if (((callback = once(callback)), !Array.isArray(tasks))) return callback(new TypeError("First argument to race must be an array of functions"));
            if (!tasks.length) return callback();
            for (var i = 0, l = tasks.length; i < l; i++) wrapAsync(tasks[i])(callback);
        }, 2);
        function reduceRight(array, memo, iteratee, callback) {
            var reversed = [...array].reverse();
            return reduce$1(reversed, memo, iteratee, callback);
        }
        function reflect(fn) {
            var _fn = wrapAsync(fn);
            return initialParams(function (args, reflectCallback) {
                return (
                    args.push((error, ...cbArgs) => {
                        let retVal = {};
                        if ((error && (retVal.error = error), cbArgs.length > 0)) {
                            var value = cbArgs;
                            cbArgs.length <= 1 && ([value] = cbArgs), (retVal.value = value);
                        }
                        reflectCallback(null, retVal);
                    }),
                    _fn.apply(this, args)
                );
            });
        }
        function reflectAll(tasks) {
            var results;
            return (
                Array.isArray(tasks)
                    ? (results = tasks.map(reflect))
                    : ((results = {}),
                      Object.keys(tasks).forEach((key) => {
                          results[key] = reflect.call(this, tasks[key]);
                      })),
                results
            );
        }
        function reject(eachfn, arr, _iteratee, callback) {
            const iteratee = wrapAsync(_iteratee);
            return _filter(
                eachfn,
                arr,
                (value, cb) => {
                    iteratee(value, (err, v) => {
                        cb(err, !v);
                    });
                },
                callback
            );
        }
        var reject$2 = awaitify(function (coll, iteratee, callback) {
            return reject(eachOf$1, coll, iteratee, callback);
        }, 3);
        var rejectLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return reject(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var rejectSeries$1 = awaitify(function (coll, iteratee, callback) {
            return reject(eachOfSeries$1, coll, iteratee, callback);
        }, 3);
        function constant$1(value) {
            return function () {
                return value;
            };
        }
        const DEFAULT_TIMES = 5,
            DEFAULT_INTERVAL = 0;
        function retry(opts, task, callback) {
            var options = { times: DEFAULT_TIMES, intervalFunc: constant$1(DEFAULT_INTERVAL) };
            if (
                (arguments.length < 3 && "function" == typeof opts
                    ? ((callback = task || promiseCallback()), (task = opts))
                    : (!(function (acc, t) {
                          if ("object" == typeof t) (acc.times = +t.times || DEFAULT_TIMES), (acc.intervalFunc = "function" == typeof t.interval ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL)), (acc.errorFilter = t.errorFilter);
                          else {
                              if ("number" != typeof t && "string" != typeof t) throw new Error("Invalid arguments for async.retry");
                              acc.times = +t || DEFAULT_TIMES;
                          }
                      })(options, opts),
                      (callback = callback || promiseCallback())),
                "function" != typeof task)
            )
                throw new Error("Invalid arguments for async.retry");
            var _task = wrapAsync(task),
                attempt = 1;
            return (
                (function retryAttempt() {
                    _task((err, ...args) => {
                        !1 !== err && (err && attempt++ < options.times && ("function" != typeof options.errorFilter || options.errorFilter(err)) ? setTimeout(retryAttempt, options.intervalFunc(attempt - 1)) : callback(err, ...args));
                    });
                })(),
                callback[PROMISE_SYMBOL]
            );
        }
        function retryable(opts, task) {
            task || ((task = opts), (opts = null));
            let arity = (opts && opts.arity) || task.length;
            isAsync(task) && (arity += 1);
            var _task = wrapAsync(task);
            return initialParams((args, callback) => {
                function taskFn(cb) {
                    _task(...args, cb);
                }
                return (args.length < arity - 1 || null == callback) && (args.push(callback), (callback = promiseCallback())), opts ? retry(opts, taskFn, callback) : retry(taskFn, callback), callback[PROMISE_SYMBOL];
            });
        }
        function series(tasks, callback) {
            return _parallel(eachOfSeries$1, tasks, callback);
        }
        var some$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(Boolean, (res) => res)(eachOf$1, coll, iteratee, callback);
        }, 3);
        var someLimit$1 = awaitify(function (coll, limit, iteratee, callback) {
            return _createTester(Boolean, (res) => res)(eachOfLimit(limit), coll, iteratee, callback);
        }, 4);
        var someSeries$1 = awaitify(function (coll, iteratee, callback) {
            return _createTester(Boolean, (res) => res)(eachOfSeries$1, coll, iteratee, callback);
        }, 3);
        var sortBy$1 = awaitify(function (coll, iteratee, callback) {
            var _iteratee = wrapAsync(iteratee);
            return map$1(
                coll,
                (x, iterCb) => {
                    _iteratee(x, (err, criteria) => {
                        if (err) return iterCb(err);
                        iterCb(err, { value: x, criteria: criteria });
                    });
                },
                (err, results) => {
                    if (err) return callback(err);
                    callback(
                        null,
                        results.sort(comparator).map((v) => v.value)
                    );
                }
            );
            function comparator(left, right) {
                var a = left.criteria,
                    b = right.criteria;
                return a < b ? -1 : a > b ? 1 : 0;
            }
        }, 3);
        function timeout(asyncFn, milliseconds, info) {
            var fn = wrapAsync(asyncFn);
            return initialParams((args, callback) => {
                var timer,
                    timedOut = !1;
                args.push((...cbArgs) => {
                    timedOut || (callback(...cbArgs), clearTimeout(timer));
                }),
                    (timer = setTimeout(function () {
                        var name = asyncFn.name || "anonymous",
                            error = new Error('Callback function "' + name + '" timed out.');
                        (error.code = "ETIMEDOUT"), info && (error.info = info), (timedOut = !0), callback(error);
                    }, milliseconds)),
                    fn(...args);
            });
        }
        function timesLimit(count, limit, iteratee, callback) {
            var _iteratee = wrapAsync(iteratee);
            return mapLimit$1(
                (function (size) {
                    for (var result = Array(size); size--; ) result[size] = size;
                    return result;
                })(count),
                limit,
                _iteratee,
                callback
            );
        }
        function times(n, iteratee, callback) {
            return timesLimit(n, 1 / 0, iteratee, callback);
        }
        function timesSeries(n, iteratee, callback) {
            return timesLimit(n, 1, iteratee, callback);
        }
        function transform(coll, accumulator, iteratee, callback) {
            arguments.length <= 3 && "function" == typeof accumulator && ((callback = iteratee), (iteratee = accumulator), (accumulator = Array.isArray(coll) ? [] : {})), (callback = once(callback || promiseCallback()));
            var _iteratee = wrapAsync(iteratee);
            return (
                eachOf$1(
                    coll,
                    (v, k, cb) => {
                        _iteratee(accumulator, v, k, cb);
                    },
                    (err) => callback(err, accumulator)
                ),
                callback[PROMISE_SYMBOL]
            );
        }
        var tryEach$1 = awaitify(function (tasks, callback) {
            var result,
                error = null;
            return eachSeries$1(
                tasks,
                (task, taskCb) => {
                    wrapAsync(task)((err, ...args) => {
                        if (!1 === err) return taskCb(err);
                        args.length < 2 ? ([result] = args) : (result = args), (error = err), taskCb(err ? null : {});
                    });
                },
                () => callback(error, result)
            );
        });
        function unmemoize(fn) {
            return (...args) => (fn.unmemoized || fn)(...args);
        }
        var whilst$1 = awaitify(function (test, iteratee, callback) {
            callback = onlyOnce(callback);
            var _fn = wrapAsync(iteratee),
                _test = wrapAsync(test),
                results = [];
            function next(err, ...rest) {
                if (err) return callback(err);
                (results = rest), !1 !== err && _test(check);
            }
            function check(err, truth) {
                return err ? callback(err) : !1 !== err ? (truth ? void _fn(next) : callback(null, ...results)) : void 0;
            }
            return _test(check);
        }, 3);
        function until(test, iteratee, callback) {
            const _test = wrapAsync(test);
            return whilst$1((cb) => _test((err, truth) => cb(err, !truth)), iteratee, callback);
        }
        var waterfall$1 = awaitify(function (tasks, callback) {
                if (((callback = once(callback)), !Array.isArray(tasks))) return callback(new Error("First argument to waterfall must be an array of functions"));
                if (!tasks.length) return callback();
                var taskIndex = 0;
                function nextTask(args) {
                    wrapAsync(tasks[taskIndex++])(...args, onlyOnce(next));
                }
                function next(err, ...args) {
                    if (!1 !== err) return err || taskIndex === tasks.length ? callback(err, ...args) : void nextTask(args);
                }
                nextTask([]);
            }),
            index = {
                apply: apply,
                applyEach: applyEach$1,
                applyEachSeries: applyEachSeries,
                asyncify: asyncify,
                auto: auto,
                autoInject: autoInject,
                cargo: cargo,
                cargoQueue: cargo$1,
                compose: compose,
                concat: concat$1,
                concatLimit: concatLimit$1,
                concatSeries: concatSeries$1,
                constant: constant,
                detect: detect$1,
                detectLimit: detectLimit$1,
                detectSeries: detectSeries$1,
                dir: dir,
                doUntil: doUntil,
                doWhilst: doWhilst$1,
                each: each,
                eachLimit: eachLimit$2,
                eachOf: eachOf$1,
                eachOfLimit: eachOfLimit$2,
                eachOfSeries: eachOfSeries$1,
                eachSeries: eachSeries$1,
                ensureAsync: ensureAsync,
                every: every$1,
                everyLimit: everyLimit$1,
                everySeries: everySeries$1,
                filter: filter$1,
                filterLimit: filterLimit$1,
                filterSeries: filterSeries$1,
                forever: forever$1,
                groupBy: groupBy,
                groupByLimit: groupByLimit$1,
                groupBySeries: groupBySeries,
                log: log,
                map: map$1,
                mapLimit: mapLimit$1,
                mapSeries: mapSeries$1,
                mapValues: mapValues,
                mapValuesLimit: mapValuesLimit$1,
                mapValuesSeries: mapValuesSeries,
                memoize: memoize,
                nextTick: nextTick,
                parallel: parallel,
                parallelLimit: parallelLimit,
                priorityQueue: priorityQueue,
                queue: queue$1,
                race: race$1,
                reduce: reduce$1,
                reduceRight: reduceRight,
                reflect: reflect,
                reflectAll: reflectAll,
                reject: reject$2,
                rejectLimit: rejectLimit$1,
                rejectSeries: rejectSeries$1,
                retry: retry,
                retryable: retryable,
                seq: seq,
                series: series,
                setImmediate: setImmediate$1,
                some: some$1,
                someLimit: someLimit$1,
                someSeries: someSeries$1,
                sortBy: sortBy$1,
                timeout: timeout,
                times: times,
                timesLimit: timesLimit,
                timesSeries: timesSeries,
                transform: transform,
                tryEach: tryEach$1,
                unmemoize: unmemoize,
                until: until,
                waterfall: waterfall$1,
                whilst: whilst$1,
                all: every$1,
                allLimit: everyLimit$1,
                allSeries: everySeries$1,
                any: some$1,
                anyLimit: someLimit$1,
                anySeries: someSeries$1,
                find: detect$1,
                findLimit: detectLimit$1,
                findSeries: detectSeries$1,
                flatMap: concat$1,
                flatMapLimit: concatLimit$1,
                flatMapSeries: concatSeries$1,
                forEach: each,
                forEachSeries: eachSeries$1,
                forEachLimit: eachLimit$2,
                forEachOf: eachOf$1,
                forEachOfSeries: eachOfSeries$1,
                forEachOfLimit: eachOfLimit$2,
                inject: reduce$1,
                foldl: reduce$1,
                foldr: reduceRight,
                select: filter$1,
                selectLimit: filterLimit$1,
                selectSeries: filterSeries$1,
                wrapSync: asyncify,
                during: whilst$1,
                doDuring: doWhilst$1,
            };
        (exports.default = index),
            (exports.apply = apply),
            (exports.applyEach = applyEach$1),
            (exports.applyEachSeries = applyEachSeries),
            (exports.asyncify = asyncify),
            (exports.auto = auto),
            (exports.autoInject = autoInject),
            (exports.cargo = cargo),
            (exports.cargoQueue = cargo$1),
            (exports.compose = compose),
            (exports.concat = concat$1),
            (exports.concatLimit = concatLimit$1),
            (exports.concatSeries = concatSeries$1),
            (exports.constant = constant),
            (exports.detect = detect$1),
            (exports.detectLimit = detectLimit$1),
            (exports.detectSeries = detectSeries$1),
            (exports.dir = dir),
            (exports.doUntil = doUntil),
            (exports.doWhilst = doWhilst$1),
            (exports.each = each),
            (exports.eachLimit = eachLimit$2),
            (exports.eachOf = eachOf$1),
            (exports.eachOfLimit = eachOfLimit$2),
            (exports.eachOfSeries = eachOfSeries$1),
            (exports.eachSeries = eachSeries$1),
            (exports.ensureAsync = ensureAsync),
            (exports.every = every$1),
            (exports.everyLimit = everyLimit$1),
            (exports.everySeries = everySeries$1),
            (exports.filter = filter$1),
            (exports.filterLimit = filterLimit$1),
            (exports.filterSeries = filterSeries$1),
            (exports.forever = forever$1),
            (exports.groupBy = groupBy),
            (exports.groupByLimit = groupByLimit$1),
            (exports.groupBySeries = groupBySeries),
            (exports.log = log),
            (exports.map = map$1),
            (exports.mapLimit = mapLimit$1),
            (exports.mapSeries = mapSeries$1),
            (exports.mapValues = mapValues),
            (exports.mapValuesLimit = mapValuesLimit$1),
            (exports.mapValuesSeries = mapValuesSeries),
            (exports.memoize = memoize),
            (exports.nextTick = nextTick),
            (exports.parallel = parallel),
            (exports.parallelLimit = parallelLimit),
            (exports.priorityQueue = priorityQueue),
            (exports.queue = queue$1),
            (exports.race = race$1),
            (exports.reduce = reduce$1),
            (exports.reduceRight = reduceRight),
            (exports.reflect = reflect),
            (exports.reflectAll = reflectAll),
            (exports.reject = reject$2),
            (exports.rejectLimit = rejectLimit$1),
            (exports.rejectSeries = rejectSeries$1),
            (exports.retry = retry),
            (exports.retryable = retryable),
            (exports.seq = seq),
            (exports.series = series),
            (exports.setImmediate = setImmediate$1),
            (exports.some = some$1),
            (exports.someLimit = someLimit$1),
            (exports.someSeries = someSeries$1),
            (exports.sortBy = sortBy$1),
            (exports.timeout = timeout),
            (exports.times = times),
            (exports.timesLimit = timesLimit),
            (exports.timesSeries = timesSeries),
            (exports.transform = transform),
            (exports.tryEach = tryEach$1),
            (exports.unmemoize = unmemoize),
            (exports.until = until),
            (exports.waterfall = waterfall$1),
            (exports.whilst = whilst$1),
            (exports.all = every$1),
            (exports.allLimit = everyLimit$1),
            (exports.allSeries = everySeries$1),
            (exports.any = some$1),
            (exports.anyLimit = someLimit$1),
            (exports.anySeries = someSeries$1),
            (exports.find = detect$1),
            (exports.findLimit = detectLimit$1),
            (exports.findSeries = detectSeries$1),
            (exports.flatMap = concat$1),
            (exports.flatMapLimit = concatLimit$1),
            (exports.flatMapSeries = concatSeries$1),
            (exports.forEach = each),
            (exports.forEachSeries = eachSeries$1),
            (exports.forEachLimit = eachLimit$2),
            (exports.forEachOf = eachOf$1),
            (exports.forEachOfSeries = eachOfSeries$1),
            (exports.forEachOfLimit = eachOfLimit$2),
            (exports.inject = reduce$1),
            (exports.foldl = reduce$1),
            (exports.foldr = reduceRight),
            (exports.select = filter$1),
            (exports.selectLimit = filterLimit$1),
            (exports.selectSeries = filterSeries$1),
            (exports.wrapSync = asyncify),
            (exports.during = whilst$1),
            (exports.doDuring = doWhilst$1),
            Object.defineProperty(exports, "__esModule", { value: !0 });
    }),
    function () {
        var undefined,
            LARGE_ARRAY_SIZE = 200,
            CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",
            FUNC_ERROR_TEXT = "Expected a function",
            HASH_UNDEFINED = "__lodash_hash_undefined__",
            MAX_MEMOIZE_SIZE = 500,
            PLACEHOLDER = "__lodash_placeholder__",
            CLONE_DEEP_FLAG = 1,
            CLONE_FLAT_FLAG = 2,
            CLONE_SYMBOLS_FLAG = 4,
            COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2,
            WRAP_BIND_FLAG = 1,
            WRAP_BIND_KEY_FLAG = 2,
            WRAP_CURRY_BOUND_FLAG = 4,
            WRAP_CURRY_FLAG = 8,
            WRAP_CURRY_RIGHT_FLAG = 16,
            WRAP_PARTIAL_FLAG = 32,
            WRAP_PARTIAL_RIGHT_FLAG = 64,
            WRAP_ARY_FLAG = 128,
            WRAP_REARG_FLAG = 256,
            WRAP_FLIP_FLAG = 512,
            DEFAULT_TRUNC_LENGTH = 30,
            DEFAULT_TRUNC_OMISSION = "...",
            HOT_COUNT = 800,
            HOT_SPAN = 16,
            LAZY_FILTER_FLAG = 1,
            LAZY_MAP_FLAG = 2,
            INFINITY = 1 / 0,
            MAX_SAFE_INTEGER = 9007199254740991,
            MAX_INTEGER = 1.7976931348623157e308,
            NAN = NaN,
            MAX_ARRAY_LENGTH = 4294967295,
            MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
            HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1,
            wrapFlags = [
                ["ary", WRAP_ARY_FLAG],
                ["bind", WRAP_BIND_FLAG],
                ["bindKey", WRAP_BIND_KEY_FLAG],
                ["curry", WRAP_CURRY_FLAG],
                ["curryRight", WRAP_CURRY_RIGHT_FLAG],
                ["flip", WRAP_FLIP_FLAG],
                ["partial", WRAP_PARTIAL_FLAG],
                ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
                ["rearg", WRAP_REARG_FLAG],
            ],
            argsTag = "[object Arguments]",
            arrayTag = "[object Array]",
            asyncTag = "[object AsyncFunction]",
            boolTag = "[object Boolean]",
            dateTag = "[object Date]",
            domExcTag = "[object DOMException]",
            errorTag = "[object Error]",
            funcTag = "[object Function]",
            genTag = "[object GeneratorFunction]",
            mapTag = "[object Map]",
            numberTag = "[object Number]",
            nullTag = "[object Null]",
            objectTag = "[object Object]",
            proxyTag = "[object Proxy]",
            regexpTag = "[object RegExp]",
            setTag = "[object Set]",
            stringTag = "[object String]",
            symbolTag = "[object Symbol]",
            undefinedTag = "[object Undefined]",
            weakMapTag = "[object WeakMap]",
            weakSetTag = "[object WeakSet]",
            arrayBufferTag = "[object ArrayBuffer]",
            dataViewTag = "[object DataView]",
            float32Tag = "[object Float32Array]",
            float64Tag = "[object Float64Array]",
            int8Tag = "[object Int8Array]",
            int16Tag = "[object Int16Array]",
            int32Tag = "[object Int32Array]",
            uint8Tag = "[object Uint8Array]",
            uint8ClampedTag = "[object Uint8ClampedArray]",
            uint16Tag = "[object Uint16Array]",
            uint32Tag = "[object Uint32Array]",
            reEmptyStringLeading = /\b__p \+= '';/g,
            reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
            reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
            reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
            reUnescapedHtml = /[&<>"']/g,
            reHasEscapedHtml = RegExp(reEscapedHtml.source),
            reHasUnescapedHtml = RegExp(reUnescapedHtml.source),
            reEscape = /<%-([\s\S]+?)%>/g,
            reEvaluate = /<%([\s\S]+?)%>/g,
            reInterpolate = /<%=([\s\S]+?)%>/g,
            reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            reIsPlainProp = /^\w*$/,
            rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
            reHasRegExpChar = RegExp(reRegExpChar.source),
            reTrim = /^\s+|\s+$/g,
            reTrimStart = /^\s+/,
            reTrimEnd = /\s+$/,
            reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
            reSplitDetails = /,? & /,
            reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
            reEscapeChar = /\\(\\)?/g,
            reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            reFlags = /\w*$/,
            reIsBadHex = /^[-+]0x[0-9a-f]+$/i,
            reIsBinary = /^0b[01]+$/i,
            reIsHostCtor = /^\[object .+?Constructor\]$/,
            reIsOctal = /^0o[0-7]+$/i,
            reIsUint = /^(?:0|[1-9]\d*)$/,
            reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
            reNoMatch = /($^)/,
            reUnescapedString = /['\n\r\u2028\u2029\\]/g,
            rsComboRange = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
            rsBreakRange =
                "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
            rsAstral = "[\\ud800-\\udfff]",
            rsBreak = "[" + rsBreakRange + "]",
            rsCombo = "[" + rsComboRange + "]",
            rsDigits = "\\d+",
            rsDingbat = "[\\u2700-\\u27bf]",
            rsLower = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
            rsMisc = "[^\\ud800-\\udfff" + rsBreakRange + rsDigits + "\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
            rsFitz = "\\ud83c[\\udffb-\\udfff]",
            rsNonAstral = "[^\\ud800-\\udfff]",
            rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
            rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
            rsUpper = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
            rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")",
            rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")",
            reOptMod = "(?:" + rsCombo + "|" + rsFitz + ")" + "?",
            rsSeq = "[\\ufe0e\\ufe0f]?" + reOptMod + ("(?:\\u200d(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")[\\ufe0e\\ufe0f]?" + reOptMod + ")*"),
            rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq,
            rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")",
            reApos = RegExp("['’]", "g"),
            reComboMark = RegExp(rsCombo, "g"),
            reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g"),
            reUnicodeWord = RegExp(
                [
                    rsUpper + "?" + rsLower + "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
                    rsMiscUpper + "+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
                    rsUpper + "?" + rsMiscLower + "+(?:['’](?:d|ll|m|re|s|t|ve))?",
                    rsUpper + "+(?:['’](?:D|LL|M|RE|S|T|VE))?",
                    "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
                    "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
                    rsDigits,
                    rsEmoji,
                ].join("|"),
                "g"
            ),
            reHasUnicode = RegExp("[\\u200d\\ud800-\\udfff" + rsComboRange + "\\ufe0e\\ufe0f]"),
            reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
            contextProps = [
                "Array",
                "Buffer",
                "DataView",
                "Date",
                "Error",
                "Float32Array",
                "Float64Array",
                "Function",
                "Int8Array",
                "Int16Array",
                "Int32Array",
                "Map",
                "Math",
                "Object",
                "Promise",
                "RegExp",
                "Set",
                "String",
                "Symbol",
                "TypeError",
                "Uint8Array",
                "Uint8ClampedArray",
                "Uint16Array",
                "Uint32Array",
                "WeakMap",
                "_",
                "clearTimeout",
                "isFinite",
                "parseInt",
                "setTimeout",
            ],
            templateCounter = -1,
            typedArrayTags = {};
        (typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
            uint16Tag
        ] = typedArrayTags[uint32Tag] = !0),
            (typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[
                funcTag
            ] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = !1);
        var cloneableTags = {};
        (cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[
            float64Tag
        ] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[
            stringTag
        ] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = !0),
            (cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = !1);
        var stringEscapes = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" },
            freeParseFloat = parseFloat,
            freeParseInt = parseInt,
            freeGlobal = "object" == typeof global && global && global.Object === Object && global,
            freeSelf = "object" == typeof self && self && self.Object === Object && self,
            root = freeGlobal || freeSelf || Function("return this")(),
            freeExports = "object" == typeof exports && exports && !exports.nodeType && exports,
            freeModule = freeExports && "object" == typeof module && module && !module.nodeType && module,
            moduleExports = freeModule && freeModule.exports === freeExports,
            freeProcess = moduleExports && freeGlobal.process,
            nodeUtil = (function () {
                try {
                    var types = freeModule && freeModule.require && freeModule.require("util").types;
                    return types || (freeProcess && freeProcess.binding && freeProcess.binding("util"));
                } catch (e) {}
            })(),
            nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
            nodeIsDate = nodeUtil && nodeUtil.isDate,
            nodeIsMap = nodeUtil && nodeUtil.isMap,
            nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
            nodeIsSet = nodeUtil && nodeUtil.isSet,
            nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        function apply(func, thisArg, args) {
            switch (args.length) {
                case 0:
                    return func.call(thisArg);
                case 1:
                    return func.call(thisArg, args[0]);
                case 2:
                    return func.call(thisArg, args[0], args[1]);
                case 3:
                    return func.call(thisArg, args[0], args[1], args[2]);
            }
            return func.apply(thisArg, args);
        }
        function arrayAggregator(array, setter, iteratee, accumulator) {
            for (var index = -1, length = null == array ? 0 : array.length; ++index < length; ) {
                var value = array[index];
                setter(accumulator, value, iteratee(value), array);
            }
            return accumulator;
        }
        function arrayEach(array, iteratee) {
            for (var index = -1, length = null == array ? 0 : array.length; ++index < length && !1 !== iteratee(array[index], index, array); );
            return array;
        }
        function arrayEachRight(array, iteratee) {
            for (var length = null == array ? 0 : array.length; length-- && !1 !== iteratee(array[length], length, array); );
            return array;
        }
        function arrayEvery(array, predicate) {
            for (var index = -1, length = null == array ? 0 : array.length; ++index < length; ) if (!predicate(array[index], index, array)) return !1;
            return !0;
        }
        function arrayFilter(array, predicate) {
            for (var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = []; ++index < length; ) {
                var value = array[index];
                predicate(value, index, array) && (result[resIndex++] = value);
            }
            return result;
        }
        function arrayIncludes(array, value) {
            return !!(null == array ? 0 : array.length) && baseIndexOf(array, value, 0) > -1;
        }
        function arrayIncludesWith(array, value, comparator) {
            for (var index = -1, length = null == array ? 0 : array.length; ++index < length; ) if (comparator(value, array[index])) return !0;
            return !1;
        }
        function arrayMap(array, iteratee) {
            for (var index = -1, length = null == array ? 0 : array.length, result = Array(length); ++index < length; ) result[index] = iteratee(array[index], index, array);
            return result;
        }
        function arrayPush(array, values) {
            for (var index = -1, length = values.length, offset = array.length; ++index < length; ) array[offset + index] = values[index];
            return array;
        }
        function arrayReduce(array, iteratee, accumulator, initAccum) {
            var index = -1,
                length = null == array ? 0 : array.length;
            for (initAccum && length && (accumulator = array[++index]); ++index < length; ) accumulator = iteratee(accumulator, array[index], index, array);
            return accumulator;
        }
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
            var length = null == array ? 0 : array.length;
            for (initAccum && length && (accumulator = array[--length]); length--; ) accumulator = iteratee(accumulator, array[length], length, array);
            return accumulator;
        }
        function arraySome(array, predicate) {
            for (var index = -1, length = null == array ? 0 : array.length; ++index < length; ) if (predicate(array[index], index, array)) return !0;
            return !1;
        }
        var asciiSize = baseProperty("length");
        function baseFindKey(collection, predicate, eachFunc) {
            var result;
            return (
                eachFunc(collection, function (value, key, collection) {
                    if (predicate(value, key, collection)) return (result = key), !1;
                }),
                result
            );
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
            for (var length = array.length, index = fromIndex + (fromRight ? 1 : -1); fromRight ? index-- : ++index < length; ) if (predicate(array[index], index, array)) return index;
            return -1;
        }
        function baseIndexOf(array, value, fromIndex) {
            return value == value
                ? (function (array, value, fromIndex) {
                      var index = fromIndex - 1,
                          length = array.length;
                      for (; ++index < length; ) if (array[index] === value) return index;
                      return -1;
                  })(array, value, fromIndex)
                : baseFindIndex(array, baseIsNaN, fromIndex);
        }
        function baseIndexOfWith(array, value, fromIndex, comparator) {
            for (var index = fromIndex - 1, length = array.length; ++index < length; ) if (comparator(array[index], value)) return index;
            return -1;
        }
        function baseIsNaN(value) {
            return value != value;
        }
        function baseMean(array, iteratee) {
            var length = null == array ? 0 : array.length;
            return length ? baseSum(array, iteratee) / length : NAN;
        }
        function baseProperty(key) {
            return function (object) {
                return null == object ? undefined : object[key];
            };
        }
        function basePropertyOf(object) {
            return function (key) {
                return null == object ? undefined : object[key];
            };
        }
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
            return (
                eachFunc(collection, function (value, index, collection) {
                    accumulator = initAccum ? ((initAccum = !1), value) : iteratee(accumulator, value, index, collection);
                }),
                accumulator
            );
        }
        function baseSum(array, iteratee) {
            for (var result, index = -1, length = array.length; ++index < length; ) {
                var current = iteratee(array[index]);
                current !== undefined && (result = result === undefined ? current : result + current);
            }
            return result;
        }
        function baseTimes(n, iteratee) {
            for (var index = -1, result = Array(n); ++index < n; ) result[index] = iteratee(index);
            return result;
        }
        function baseUnary(func) {
            return function (value) {
                return func(value);
            };
        }
        function baseValues(object, props) {
            return arrayMap(props, function (key) {
                return object[key];
            });
        }
        function cacheHas(cache, key) {
            return cache.has(key);
        }
        function charsStartIndex(strSymbols, chrSymbols) {
            for (var index = -1, length = strSymbols.length; ++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1; );
            return index;
        }
        function charsEndIndex(strSymbols, chrSymbols) {
            for (var index = strSymbols.length; index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1; );
            return index;
        }
        var deburrLetter = basePropertyOf({
                À: "A",
                Á: "A",
                Â: "A",
                Ã: "A",
                Ä: "A",
                Å: "A",
                à: "a",
                á: "a",
                â: "a",
                ã: "a",
                ä: "a",
                å: "a",
                Ç: "C",
                ç: "c",
                Ð: "D",
                ð: "d",
                È: "E",
                É: "E",
                Ê: "E",
                Ë: "E",
                è: "e",
                é: "e",
                ê: "e",
                ë: "e",
                Ì: "I",
                Í: "I",
                Î: "I",
                Ï: "I",
                ì: "i",
                í: "i",
                î: "i",
                ï: "i",
                Ñ: "N",
                ñ: "n",
                Ò: "O",
                Ó: "O",
                Ô: "O",
                Õ: "O",
                Ö: "O",
                Ø: "O",
                ò: "o",
                ó: "o",
                ô: "o",
                õ: "o",
                ö: "o",
                ø: "o",
                Ù: "U",
                Ú: "U",
                Û: "U",
                Ü: "U",
                ù: "u",
                ú: "u",
                û: "u",
                ü: "u",
                Ý: "Y",
                ý: "y",
                ÿ: "y",
                Æ: "Ae",
                æ: "ae",
                Þ: "Th",
                þ: "th",
                ß: "ss",
                Ā: "A",
                Ă: "A",
                Ą: "A",
                ā: "a",
                ă: "a",
                ą: "a",
                Ć: "C",
                Ĉ: "C",
                Ċ: "C",
                Č: "C",
                ć: "c",
                ĉ: "c",
                ċ: "c",
                č: "c",
                Ď: "D",
                Đ: "D",
                ď: "d",
                đ: "d",
                Ē: "E",
                Ĕ: "E",
                Ė: "E",
                Ę: "E",
                Ě: "E",
                ē: "e",
                ĕ: "e",
                ė: "e",
                ę: "e",
                ě: "e",
                Ĝ: "G",
                Ğ: "G",
                Ġ: "G",
                Ģ: "G",
                ĝ: "g",
                ğ: "g",
                ġ: "g",
                ģ: "g",
                Ĥ: "H",
                Ħ: "H",
                ĥ: "h",
                ħ: "h",
                Ĩ: "I",
                Ī: "I",
                Ĭ: "I",
                Į: "I",
                İ: "I",
                ĩ: "i",
                ī: "i",
                ĭ: "i",
                į: "i",
                ı: "i",
                Ĵ: "J",
                ĵ: "j",
                Ķ: "K",
                ķ: "k",
                ĸ: "k",
                Ĺ: "L",
                Ļ: "L",
                Ľ: "L",
                Ŀ: "L",
                Ł: "L",
                ĺ: "l",
                ļ: "l",
                ľ: "l",
                ŀ: "l",
                ł: "l",
                Ń: "N",
                Ņ: "N",
                Ň: "N",
                Ŋ: "N",
                ń: "n",
                ņ: "n",
                ň: "n",
                ŋ: "n",
                Ō: "O",
                Ŏ: "O",
                Ő: "O",
                ō: "o",
                ŏ: "o",
                ő: "o",
                Ŕ: "R",
                Ŗ: "R",
                Ř: "R",
                ŕ: "r",
                ŗ: "r",
                ř: "r",
                Ś: "S",
                Ŝ: "S",
                Ş: "S",
                Š: "S",
                ś: "s",
                ŝ: "s",
                ş: "s",
                š: "s",
                Ţ: "T",
                Ť: "T",
                Ŧ: "T",
                ţ: "t",
                ť: "t",
                ŧ: "t",
                Ũ: "U",
                Ū: "U",
                Ŭ: "U",
                Ů: "U",
                Ű: "U",
                Ų: "U",
                ũ: "u",
                ū: "u",
                ŭ: "u",
                ů: "u",
                ű: "u",
                ų: "u",
                Ŵ: "W",
                ŵ: "w",
                Ŷ: "Y",
                ŷ: "y",
                Ÿ: "Y",
                Ź: "Z",
                Ż: "Z",
                Ž: "Z",
                ź: "z",
                ż: "z",
                ž: "z",
                Ĳ: "IJ",
                ĳ: "ij",
                Œ: "Oe",
                œ: "oe",
                ŉ: "'n",
                ſ: "s",
            }),
            escapeHtmlChar = basePropertyOf({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" });
        function escapeStringChar(chr) {
            return "\\" + stringEscapes[chr];
        }
        function hasUnicode(string) {
            return reHasUnicode.test(string);
        }
        function mapToArray(map) {
            var index = -1,
                result = Array(map.size);
            return (
                map.forEach(function (value, key) {
                    result[++index] = [key, value];
                }),
                result
            );
        }
        function overArg(func, transform) {
            return function (arg) {
                return func(transform(arg));
            };
        }
        function replaceHolders(array, placeholder) {
            for (var index = -1, length = array.length, resIndex = 0, result = []; ++index < length; ) {
                var value = array[index];
                (value !== placeholder && value !== PLACEHOLDER) || ((array[index] = PLACEHOLDER), (result[resIndex++] = index));
            }
            return result;
        }
        function setToArray(set) {
            var index = -1,
                result = Array(set.size);
            return (
                set.forEach(function (value) {
                    result[++index] = value;
                }),
                result
            );
        }
        function setToPairs(set) {
            var index = -1,
                result = Array(set.size);
            return (
                set.forEach(function (value) {
                    result[++index] = [value, value];
                }),
                result
            );
        }
        function stringSize(string) {
            return hasUnicode(string)
                ? (function (string) {
                      var result = (reUnicode.lastIndex = 0);
                      for (; reUnicode.test(string); ) ++result;
                      return result;
                  })(string)
                : asciiSize(string);
        }
        function stringToArray(string) {
            return hasUnicode(string)
                ? (function (string) {
                      return string.match(reUnicode) || [];
                  })(string)
                : (function (string) {
                      return string.split("");
                  })(string);
        }
        var unescapeHtmlChar = basePropertyOf({ "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" });
        var _ = (function runInContext(context) {
            var uid,
                Array = (context = null == context ? root : _.defaults(root.Object(), context, _.pick(root, contextProps))).Array,
                Date = context.Date,
                Error = context.Error,
                Function = context.Function,
                Math = context.Math,
                Object = context.Object,
                RegExp = context.RegExp,
                String = context.String,
                TypeError = context.TypeError,
                arrayProto = Array.prototype,
                funcProto = Function.prototype,
                objectProto = Object.prototype,
                coreJsData = context["__core-js_shared__"],
                funcToString = funcProto.toString,
                hasOwnProperty = objectProto.hasOwnProperty,
                idCounter = 0,
                maskSrcKey = (uid = /[^.]+$/.exec((coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || "")) ? "Symbol(src)_1." + uid : "",
                nativeObjectToString = objectProto.toString,
                objectCtorString = funcToString.call(Object),
                oldDash = root._,
                reIsNative = RegExp(
                    "^" +
                        funcToString
                            .call(hasOwnProperty)
                            .replace(reRegExpChar, "\\$&")
                            .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") +
                        "$"
                ),
                Buffer = moduleExports ? context.Buffer : undefined,
                Symbol = context.Symbol,
                Uint8Array = context.Uint8Array,
                allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
                getPrototype = overArg(Object.getPrototypeOf, Object),
                objectCreate = Object.create,
                propertyIsEnumerable = objectProto.propertyIsEnumerable,
                splice = arrayProto.splice,
                spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
                symIterator = Symbol ? Symbol.iterator : undefined,
                symToStringTag = Symbol ? Symbol.toStringTag : undefined,
                defineProperty = (function () {
                    try {
                        var func = getNative(Object, "defineProperty");
                        return func({}, "", {}), func;
                    } catch (e) {}
                })(),
                ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
                ctxNow = Date && Date.now !== root.Date.now && Date.now,
                ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout,
                nativeCeil = Math.ceil,
                nativeFloor = Math.floor,
                nativeGetSymbols = Object.getOwnPropertySymbols,
                nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
                nativeIsFinite = context.isFinite,
                nativeJoin = arrayProto.join,
                nativeKeys = overArg(Object.keys, Object),
                nativeMax = Math.max,
                nativeMin = Math.min,
                nativeNow = Date.now,
                nativeParseInt = context.parseInt,
                nativeRandom = Math.random,
                nativeReverse = arrayProto.reverse,
                DataView = getNative(context, "DataView"),
                Map = getNative(context, "Map"),
                Promise = getNative(context, "Promise"),
                Set = getNative(context, "Set"),
                WeakMap = getNative(context, "WeakMap"),
                nativeCreate = getNative(Object, "create"),
                metaMap = WeakMap && new WeakMap(),
                realNames = {},
                dataViewCtorString = toSource(DataView),
                mapCtorString = toSource(Map),
                promiseCtorString = toSource(Promise),
                setCtorString = toSource(Set),
                weakMapCtorString = toSource(WeakMap),
                symbolProto = Symbol ? Symbol.prototype : undefined,
                symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
                symbolToString = symbolProto ? symbolProto.toString : undefined;
            function lodash(value) {
                if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                    if (value instanceof LodashWrapper) return value;
                    if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
                }
                return new LodashWrapper(value);
            }
            var baseCreate = (function () {
                function object() {}
                return function (proto) {
                    if (!isObject(proto)) return {};
                    if (objectCreate) return objectCreate(proto);
                    object.prototype = proto;
                    var result = new object();
                    return (object.prototype = undefined), result;
                };
            })();
            function baseLodash() {}
            function LodashWrapper(value, chainAll) {
                (this.__wrapped__ = value), (this.__actions__ = []), (this.__chain__ = !!chainAll), (this.__index__ = 0), (this.__values__ = undefined);
            }
            function LazyWrapper(value) {
                (this.__wrapped__ = value), (this.__actions__ = []), (this.__dir__ = 1), (this.__filtered__ = !1), (this.__iteratees__ = []), (this.__takeCount__ = MAX_ARRAY_LENGTH), (this.__views__ = []);
            }
            function Hash(entries) {
                var index = -1,
                    length = null == entries ? 0 : entries.length;
                for (this.clear(); ++index < length; ) {
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function ListCache(entries) {
                var index = -1,
                    length = null == entries ? 0 : entries.length;
                for (this.clear(); ++index < length; ) {
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function MapCache(entries) {
                var index = -1,
                    length = null == entries ? 0 : entries.length;
                for (this.clear(); ++index < length; ) {
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function SetCache(values) {
                var index = -1,
                    length = null == values ? 0 : values.length;
                for (this.__data__ = new MapCache(); ++index < length; ) this.add(values[index]);
            }
            function Stack(entries) {
                var data = (this.__data__ = new ListCache(entries));
                this.size = data.size;
            }
            function arrayLikeKeys(value, inherited) {
                var isArr = isArray(value),
                    isArg = !isArr && isArguments(value),
                    isBuff = !isArr && !isArg && isBuffer(value),
                    isType = !isArr && !isArg && !isBuff && isTypedArray(value),
                    skipIndexes = isArr || isArg || isBuff || isType,
                    result = skipIndexes ? baseTimes(value.length, String) : [],
                    length = result.length;
                for (var key in value)
                    (!inherited && !hasOwnProperty.call(value, key)) ||
                        (skipIndexes && ("length" == key || (isBuff && ("offset" == key || "parent" == key)) || (isType && ("buffer" == key || "byteLength" == key || "byteOffset" == key)) || isIndex(key, length))) ||
                        result.push(key);
                return result;
            }
            function arraySample(array) {
                var length = array.length;
                return length ? array[baseRandom(0, length - 1)] : undefined;
            }
            function arraySampleSize(array, n) {
                return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
            }
            function arrayShuffle(array) {
                return shuffleSelf(copyArray(array));
            }
            function assignMergeValue(object, key, value) {
                ((value === undefined || eq(object[key], value)) && (value !== undefined || key in object)) || baseAssignValue(object, key, value);
            }
            function assignValue(object, key, value) {
                var objValue = object[key];
                (hasOwnProperty.call(object, key) && eq(objValue, value) && (value !== undefined || key in object)) || baseAssignValue(object, key, value);
            }
            function assocIndexOf(array, key) {
                for (var length = array.length; length--; ) if (eq(array[length][0], key)) return length;
                return -1;
            }
            function baseAggregator(collection, setter, iteratee, accumulator) {
                return (
                    baseEach(collection, function (value, key, collection) {
                        setter(accumulator, value, iteratee(value), collection);
                    }),
                    accumulator
                );
            }
            function baseAssign(object, source) {
                return object && copyObject(source, keys(source), object);
            }
            function baseAssignValue(object, key, value) {
                "__proto__" == key && defineProperty ? defineProperty(object, key, { configurable: !0, enumerable: !0, value: value, writable: !0 }) : (object[key] = value);
            }
            function baseAt(object, paths) {
                for (var index = -1, length = paths.length, result = Array(length), skip = null == object; ++index < length; ) result[index] = skip ? undefined : get(object, paths[index]);
                return result;
            }
            function baseClamp(number, lower, upper) {
                return number == number && (upper !== undefined && (number = number <= upper ? number : upper), lower !== undefined && (number = number >= lower ? number : lower)), number;
            }
            function baseClone(value, bitmask, customizer, key, object, stack) {
                var result,
                    isDeep = bitmask & CLONE_DEEP_FLAG,
                    isFlat = bitmask & CLONE_FLAT_FLAG,
                    isFull = bitmask & CLONE_SYMBOLS_FLAG;
                if ((customizer && (result = object ? customizer(value, key, object, stack) : customizer(value)), result !== undefined)) return result;
                if (!isObject(value)) return value;
                var isArr = isArray(value);
                if (isArr) {
                    if (
                        ((result = (function (array) {
                            var length = array.length,
                                result = new array.constructor(length);
                            return length && "string" == typeof array[0] && hasOwnProperty.call(array, "index") && ((result.index = array.index), (result.input = array.input)), result;
                        })(value)),
                        !isDeep)
                    )
                        return copyArray(value, result);
                } else {
                    var tag = getTag(value),
                        isFunc = tag == funcTag || tag == genTag;
                    if (isBuffer(value)) return cloneBuffer(value, isDeep);
                    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
                        if (((result = isFlat || isFunc ? {} : initCloneObject(value)), !isDeep))
                            return isFlat
                                ? (function (source, object) {
                                      return copyObject(source, getSymbolsIn(source), object);
                                  })(
                                      value,
                                      (function (object, source) {
                                          return object && copyObject(source, keysIn(source), object);
                                      })(result, value)
                                  )
                                : (function (source, object) {
                                      return copyObject(source, getSymbols(source), object);
                                  })(value, baseAssign(result, value));
                    } else {
                        if (!cloneableTags[tag]) return object ? value : {};
                        result = (function (object, tag, isDeep) {
                            var symbol,
                                regexp,
                                result,
                                Ctor = object.constructor;
                            switch (tag) {
                                case arrayBufferTag:
                                    return cloneArrayBuffer(object);
                                case boolTag:
                                case dateTag:
                                    return new Ctor(+object);
                                case dataViewTag:
                                    return (function (dataView, isDeep) {
                                        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
                                        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
                                    })(object, isDeep);
                                case float32Tag:
                                case float64Tag:
                                case int8Tag:
                                case int16Tag:
                                case int32Tag:
                                case uint8Tag:
                                case uint8ClampedTag:
                                case uint16Tag:
                                case uint32Tag:
                                    return cloneTypedArray(object, isDeep);
                                case mapTag:
                                    return new Ctor();
                                case numberTag:
                                case stringTag:
                                    return new Ctor(object);
                                case regexpTag:
                                    return ((result = new (regexp = object).constructor(regexp.source, reFlags.exec(regexp))).lastIndex = regexp.lastIndex), result;
                                case setTag:
                                    return new Ctor();
                                case symbolTag:
                                    return (symbol = object), symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
                            }
                        })(value, tag, isDeep);
                    }
                }
                stack || (stack = new Stack());
                var stacked = stack.get(value);
                if (stacked) return stacked;
                stack.set(value, result),
                    isSet(value)
                        ? value.forEach(function (subValue) {
                              result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                          })
                        : isMap(value) &&
                          value.forEach(function (subValue, key) {
                              result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                          });
                var props = isArr ? undefined : (isFull ? (isFlat ? getAllKeysIn : getAllKeys) : isFlat ? keysIn : keys)(value);
                return (
                    arrayEach(props || value, function (subValue, key) {
                        props && (subValue = value[(key = subValue)]), assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
                    }),
                    result
                );
            }
            function baseConformsTo(object, source, props) {
                var length = props.length;
                if (null == object) return !length;
                for (object = Object(object); length--; ) {
                    var key = props[length],
                        predicate = source[key],
                        value = object[key];
                    if ((value === undefined && !(key in object)) || !predicate(value)) return !1;
                }
                return !0;
            }
            function baseDelay(func, wait, args) {
                if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                return setTimeout(function () {
                    func.apply(undefined, args);
                }, wait);
            }
            function baseDifference(array, values, iteratee, comparator) {
                var index = -1,
                    includes = arrayIncludes,
                    isCommon = !0,
                    length = array.length,
                    result = [],
                    valuesLength = values.length;
                if (!length) return result;
                iteratee && (values = arrayMap(values, baseUnary(iteratee))),
                    comparator ? ((includes = arrayIncludesWith), (isCommon = !1)) : values.length >= LARGE_ARRAY_SIZE && ((includes = cacheHas), (isCommon = !1), (values = new SetCache(values)));
                outer: for (; ++index < length; ) {
                    var value = array[index],
                        computed = null == iteratee ? value : iteratee(value);
                    if (((value = comparator || 0 !== value ? value : 0), isCommon && computed == computed)) {
                        for (var valuesIndex = valuesLength; valuesIndex--; ) if (values[valuesIndex] === computed) continue outer;
                        result.push(value);
                    } else includes(values, computed, comparator) || result.push(value);
                }
                return result;
            }
            (lodash.templateSettings = { escape: reEscape, evaluate: reEvaluate, interpolate: reInterpolate, variable: "", imports: { _: lodash } }),
                (lodash.prototype = baseLodash.prototype),
                (lodash.prototype.constructor = lodash),
                (LodashWrapper.prototype = baseCreate(baseLodash.prototype)),
                (LodashWrapper.prototype.constructor = LodashWrapper),
                (LazyWrapper.prototype = baseCreate(baseLodash.prototype)),
                (LazyWrapper.prototype.constructor = LazyWrapper),
                (Hash.prototype.clear = function () {
                    (this.__data__ = nativeCreate ? nativeCreate(null) : {}), (this.size = 0);
                }),
                (Hash.prototype.delete = function (key) {
                    var result = this.has(key) && delete this.__data__[key];
                    return (this.size -= result ? 1 : 0), result;
                }),
                (Hash.prototype.get = function (key) {
                    var data = this.__data__;
                    if (nativeCreate) {
                        var result = data[key];
                        return result === HASH_UNDEFINED ? undefined : result;
                    }
                    return hasOwnProperty.call(data, key) ? data[key] : undefined;
                }),
                (Hash.prototype.has = function (key) {
                    var data = this.__data__;
                    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
                }),
                (Hash.prototype.set = function (key, value) {
                    var data = this.__data__;
                    return (this.size += this.has(key) ? 0 : 1), (data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value), this;
                }),
                (ListCache.prototype.clear = function () {
                    (this.__data__ = []), (this.size = 0);
                }),
                (ListCache.prototype.delete = function (key) {
                    var data = this.__data__,
                        index = assocIndexOf(data, key);
                    return !(index < 0 || (index == data.length - 1 ? data.pop() : splice.call(data, index, 1), --this.size, 0));
                }),
                (ListCache.prototype.get = function (key) {
                    var data = this.__data__,
                        index = assocIndexOf(data, key);
                    return index < 0 ? undefined : data[index][1];
                }),
                (ListCache.prototype.has = function (key) {
                    return assocIndexOf(this.__data__, key) > -1;
                }),
                (ListCache.prototype.set = function (key, value) {
                    var data = this.__data__,
                        index = assocIndexOf(data, key);
                    return index < 0 ? (++this.size, data.push([key, value])) : (data[index][1] = value), this;
                }),
                (MapCache.prototype.clear = function () {
                    (this.size = 0), (this.__data__ = { hash: new Hash(), map: new (Map || ListCache)(), string: new Hash() });
                }),
                (MapCache.prototype.delete = function (key) {
                    var result = getMapData(this, key).delete(key);
                    return (this.size -= result ? 1 : 0), result;
                }),
                (MapCache.prototype.get = function (key) {
                    return getMapData(this, key).get(key);
                }),
                (MapCache.prototype.has = function (key) {
                    return getMapData(this, key).has(key);
                }),
                (MapCache.prototype.set = function (key, value) {
                    var data = getMapData(this, key),
                        size = data.size;
                    return data.set(key, value), (this.size += data.size == size ? 0 : 1), this;
                }),
                (SetCache.prototype.add = SetCache.prototype.push = function (value) {
                    return this.__data__.set(value, HASH_UNDEFINED), this;
                }),
                (SetCache.prototype.has = function (value) {
                    return this.__data__.has(value);
                }),
                (Stack.prototype.clear = function () {
                    (this.__data__ = new ListCache()), (this.size = 0);
                }),
                (Stack.prototype.delete = function (key) {
                    var data = this.__data__,
                        result = data.delete(key);
                    return (this.size = data.size), result;
                }),
                (Stack.prototype.get = function (key) {
                    return this.__data__.get(key);
                }),
                (Stack.prototype.has = function (key) {
                    return this.__data__.has(key);
                }),
                (Stack.prototype.set = function (key, value) {
                    var data = this.__data__;
                    if (data instanceof ListCache) {
                        var pairs = data.__data__;
                        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) return pairs.push([key, value]), (this.size = ++data.size), this;
                        data = this.__data__ = new MapCache(pairs);
                    }
                    return data.set(key, value), (this.size = data.size), this;
                });
            var baseEach = createBaseEach(baseForOwn),
                baseEachRight = createBaseEach(baseForOwnRight, !0);
            function baseEvery(collection, predicate) {
                var result = !0;
                return (
                    baseEach(collection, function (value, index, collection) {
                        return (result = !!predicate(value, index, collection));
                    }),
                    result
                );
            }
            function baseExtremum(array, iteratee, comparator) {
                for (var index = -1, length = array.length; ++index < length; ) {
                    var value = array[index],
                        current = iteratee(value);
                    if (null != current && (computed === undefined ? current == current && !isSymbol(current) : comparator(current, computed)))
                        var computed = current,
                            result = value;
                }
                return result;
            }
            function baseFilter(collection, predicate) {
                var result = [];
                return (
                    baseEach(collection, function (value, index, collection) {
                        predicate(value, index, collection) && result.push(value);
                    }),
                    result
                );
            }
            function baseFlatten(array, depth, predicate, isStrict, result) {
                var index = -1,
                    length = array.length;
                for (predicate || (predicate = isFlattenable), result || (result = []); ++index < length; ) {
                    var value = array[index];
                    depth > 0 && predicate(value) ? (depth > 1 ? baseFlatten(value, depth - 1, predicate, isStrict, result) : arrayPush(result, value)) : isStrict || (result[result.length] = value);
                }
                return result;
            }
            var baseFor = createBaseFor(),
                baseForRight = createBaseFor(!0);
            function baseForOwn(object, iteratee) {
                return object && baseFor(object, iteratee, keys);
            }
            function baseForOwnRight(object, iteratee) {
                return object && baseForRight(object, iteratee, keys);
            }
            function baseFunctions(object, props) {
                return arrayFilter(props, function (key) {
                    return isFunction(object[key]);
                });
            }
            function baseGet(object, path) {
                for (var index = 0, length = (path = castPath(path, object)).length; null != object && index < length; ) object = object[toKey(path[index++])];
                return index && index == length ? object : undefined;
            }
            function baseGetAllKeys(object, keysFunc, symbolsFunc) {
                var result = keysFunc(object);
                return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
            }
            function baseGetTag(value) {
                return null == value
                    ? value === undefined
                        ? undefinedTag
                        : nullTag
                    : symToStringTag && symToStringTag in Object(value)
                    ? (function (value) {
                          var isOwn = hasOwnProperty.call(value, symToStringTag),
                              tag = value[symToStringTag];
                          try {
                              value[symToStringTag] = undefined;
                              var unmasked = !0;
                          } catch (e) {}
                          var result = nativeObjectToString.call(value);
                          return unmasked && (isOwn ? (value[symToStringTag] = tag) : delete value[symToStringTag]), result;
                      })(value)
                    : (function (value) {
                          return nativeObjectToString.call(value);
                      })(value);
            }
            function baseGt(value, other) {
                return value > other;
            }
            function baseHas(object, key) {
                return null != object && hasOwnProperty.call(object, key);
            }
            function baseHasIn(object, key) {
                return null != object && key in Object(object);
            }
            function baseIntersection(arrays, iteratee, comparator) {
                for (var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = 1 / 0, result = []; othIndex--; ) {
                    var array = arrays[othIndex];
                    othIndex && iteratee && (array = arrayMap(array, baseUnary(iteratee))),
                        (maxLength = nativeMin(array.length, maxLength)),
                        (caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120)) ? new SetCache(othIndex && array) : undefined);
                }
                array = arrays[0];
                var index = -1,
                    seen = caches[0];
                outer: for (; ++index < length && result.length < maxLength; ) {
                    var value = array[index],
                        computed = iteratee ? iteratee(value) : value;
                    if (((value = comparator || 0 !== value ? value : 0), !(seen ? cacheHas(seen, computed) : includes(result, computed, comparator)))) {
                        for (othIndex = othLength; --othIndex; ) {
                            var cache = caches[othIndex];
                            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                        }
                        seen && seen.push(computed), result.push(value);
                    }
                }
                return result;
            }
            function baseInvoke(object, path, args) {
                var func = null == (object = parent(object, (path = castPath(path, object)))) ? object : object[toKey(last(path))];
                return null == func ? undefined : apply(func, object, args);
            }
            function baseIsArguments(value) {
                return isObjectLike(value) && baseGetTag(value) == argsTag;
            }
            function baseIsEqual(value, other, bitmask, customizer, stack) {
                return (
                    value === other ||
                    (null == value || null == other || (!isObjectLike(value) && !isObjectLike(other))
                        ? value != value && other != other
                        : (function (object, other, bitmask, customizer, equalFunc, stack) {
                              var objIsArr = isArray(object),
                                  othIsArr = isArray(other),
                                  objTag = objIsArr ? arrayTag : getTag(object),
                                  othTag = othIsArr ? arrayTag : getTag(other),
                                  objIsObj = (objTag = objTag == argsTag ? objectTag : objTag) == objectTag,
                                  othIsObj = (othTag = othTag == argsTag ? objectTag : othTag) == objectTag,
                                  isSameTag = objTag == othTag;
                              if (isSameTag && isBuffer(object)) {
                                  if (!isBuffer(other)) return !1;
                                  (objIsArr = !0), (objIsObj = !1);
                              }
                              if (isSameTag && !objIsObj)
                                  return (
                                      stack || (stack = new Stack()),
                                      objIsArr || isTypedArray(object)
                                          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                                          : (function (object, other, tag, bitmask, customizer, equalFunc, stack) {
                                                switch (tag) {
                                                    case dataViewTag:
                                                        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return !1;
                                                        (object = object.buffer), (other = other.buffer);
                                                    case arrayBufferTag:
                                                        return !(object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other)));
                                                    case boolTag:
                                                    case dateTag:
                                                    case numberTag:
                                                        return eq(+object, +other);
                                                    case errorTag:
                                                        return object.name == other.name && object.message == other.message;
                                                    case regexpTag:
                                                    case stringTag:
                                                        return object == other + "";
                                                    case mapTag:
                                                        var convert = mapToArray;
                                                    case setTag:
                                                        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                                                        if ((convert || (convert = setToArray), object.size != other.size && !isPartial)) return !1;
                                                        var stacked = stack.get(object);
                                                        if (stacked) return stacked == other;
                                                        (bitmask |= COMPARE_UNORDERED_FLAG), stack.set(object, other);
                                                        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                                                        return stack.delete(object), result;
                                                    case symbolTag:
                                                        if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
                                                }
                                                return !1;
                                            })(object, other, objTag, bitmask, customizer, equalFunc, stack)
                                  );
                              if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                                  var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"),
                                      othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                                  if (objIsWrapped || othIsWrapped) {
                                      var objUnwrapped = objIsWrapped ? object.value() : object,
                                          othUnwrapped = othIsWrapped ? other.value() : other;
                                      return stack || (stack = new Stack()), equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                                  }
                              }
                              return (
                                  !!isSameTag &&
                                  (stack || (stack = new Stack()),
                                  (function (object, other, bitmask, customizer, equalFunc, stack) {
                                      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                                          objProps = getAllKeys(object),
                                          objLength = objProps.length,
                                          othLength = getAllKeys(other).length;
                                      if (objLength != othLength && !isPartial) return !1;
                                      for (var index = objLength; index--; ) {
                                          var key = objProps[index];
                                          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return !1;
                                      }
                                      var stacked = stack.get(object);
                                      if (stacked && stack.get(other)) return stacked == other;
                                      var result = !0;
                                      stack.set(object, other), stack.set(other, object);
                                      for (var skipCtor = isPartial; ++index < objLength; ) {
                                          key = objProps[index];
                                          var objValue = object[key],
                                              othValue = other[key];
                                          if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                                          if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                                              result = !1;
                                              break;
                                          }
                                          skipCtor || (skipCtor = "constructor" == key);
                                      }
                                      if (result && !skipCtor) {
                                          var objCtor = object.constructor,
                                              othCtor = other.constructor;
                                          objCtor != othCtor &&
                                              "constructor" in object &&
                                              "constructor" in other &&
                                              !("function" == typeof objCtor && objCtor instanceof objCtor && "function" == typeof othCtor && othCtor instanceof othCtor) &&
                                              (result = !1);
                                      }
                                      return stack.delete(object), stack.delete(other), result;
                                  })(object, other, bitmask, customizer, equalFunc, stack))
                              );
                          })(value, other, bitmask, customizer, baseIsEqual, stack))
                );
            }
            function baseIsMatch(object, source, matchData, customizer) {
                var index = matchData.length,
                    length = index,
                    noCustomizer = !customizer;
                if (null == object) return !length;
                for (object = Object(object); index--; ) {
                    var data = matchData[index];
                    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return !1;
                }
                for (; ++index < length; ) {
                    var key = (data = matchData[index])[0],
                        objValue = object[key],
                        srcValue = data[1];
                    if (noCustomizer && data[2]) {
                        if (objValue === undefined && !(key in object)) return !1;
                    } else {
                        var stack = new Stack();
                        if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                        if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return !1;
                    }
                }
                return !0;
            }
            function baseIsNative(value) {
                return !(!isObject(value) || (maskSrcKey && maskSrcKey in value)) && (isFunction(value) ? reIsNative : reIsHostCtor).test(toSource(value));
            }
            function baseIteratee(value) {
                return "function" == typeof value ? value : null == value ? identity : "object" == typeof value ? (isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value)) : property(value);
            }
            function baseKeys(object) {
                if (!isPrototype(object)) return nativeKeys(object);
                var result = [];
                for (var key in Object(object)) hasOwnProperty.call(object, key) && "constructor" != key && result.push(key);
                return result;
            }
            function baseKeysIn(object) {
                if (!isObject(object))
                    return (function (object) {
                        var result = [];
                        if (null != object) for (var key in Object(object)) result.push(key);
                        return result;
                    })(object);
                var isProto = isPrototype(object),
                    result = [];
                for (var key in object) ("constructor" != key || (!isProto && hasOwnProperty.call(object, key))) && result.push(key);
                return result;
            }
            function baseLt(value, other) {
                return value < other;
            }
            function baseMap(collection, iteratee) {
                var index = -1,
                    result = isArrayLike(collection) ? Array(collection.length) : [];
                return (
                    baseEach(collection, function (value, key, collection) {
                        result[++index] = iteratee(value, key, collection);
                    }),
                    result
                );
            }
            function baseMatches(source) {
                var matchData = getMatchData(source);
                return 1 == matchData.length && matchData[0][2]
                    ? matchesStrictComparable(matchData[0][0], matchData[0][1])
                    : function (object) {
                          return object === source || baseIsMatch(object, source, matchData);
                      };
            }
            function baseMatchesProperty(path, srcValue) {
                return isKey(path) && isStrictComparable(srcValue)
                    ? matchesStrictComparable(toKey(path), srcValue)
                    : function (object) {
                          var objValue = get(object, path);
                          return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                      };
            }
            function baseMerge(object, source, srcIndex, customizer, stack) {
                object !== source &&
                    baseFor(
                        source,
                        function (srcValue, key) {
                            if ((stack || (stack = new Stack()), isObject(srcValue)))
                                !(function (object, source, key, srcIndex, mergeFunc, customizer, stack) {
                                    var objValue = safeGet(object, key),
                                        srcValue = safeGet(source, key),
                                        stacked = stack.get(srcValue);
                                    if (stacked) assignMergeValue(object, key, stacked);
                                    else {
                                        var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined,
                                            isCommon = newValue === undefined;
                                        if (isCommon) {
                                            var isArr = isArray(srcValue),
                                                isBuff = !isArr && isBuffer(srcValue),
                                                isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                                            (newValue = srcValue),
                                                isArr || isBuff || isTyped
                                                    ? isArray(objValue)
                                                        ? (newValue = objValue)
                                                        : isArrayLikeObject(objValue)
                                                        ? (newValue = copyArray(objValue))
                                                        : isBuff
                                                        ? ((isCommon = !1), (newValue = cloneBuffer(srcValue, !0)))
                                                        : isTyped
                                                        ? ((isCommon = !1), (newValue = cloneTypedArray(srcValue, !0)))
                                                        : (newValue = [])
                                                    : isPlainObject(srcValue) || isArguments(srcValue)
                                                    ? ((newValue = objValue), isArguments(objValue) ? (newValue = toPlainObject(objValue)) : (isObject(objValue) && !isFunction(objValue)) || (newValue = initCloneObject(srcValue)))
                                                    : (isCommon = !1);
                                        }
                                        isCommon && (stack.set(srcValue, newValue), mergeFunc(newValue, srcValue, srcIndex, customizer, stack), stack.delete(srcValue)), assignMergeValue(object, key, newValue);
                                    }
                                })(object, source, key, srcIndex, baseMerge, customizer, stack);
                            else {
                                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined;
                                newValue === undefined && (newValue = srcValue), assignMergeValue(object, key, newValue);
                            }
                        },
                        keysIn
                    );
            }
            function baseNth(array, n) {
                var length = array.length;
                if (length) return isIndex((n += n < 0 ? length : 0), length) ? array[n] : undefined;
            }
            function baseOrderBy(collection, iteratees, orders) {
                var index = -1;
                return (
                    (iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()))),
                    (function (array, comparer) {
                        var length = array.length;
                        for (array.sort(comparer); length--; ) array[length] = array[length].value;
                        return array;
                    })(
                        baseMap(collection, function (value, key, collection) {
                            return {
                                criteria: arrayMap(iteratees, function (iteratee) {
                                    return iteratee(value);
                                }),
                                index: ++index,
                                value: value,
                            };
                        }),
                        function (object, other) {
                            return (function (object, other, orders) {
                                for (var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length; ++index < length; ) {
                                    var result = compareAscending(objCriteria[index], othCriteria[index]);
                                    if (result) {
                                        if (index >= ordersLength) return result;
                                        var order = orders[index];
                                        return result * ("desc" == order ? -1 : 1);
                                    }
                                }
                                return object.index - other.index;
                            })(object, other, orders);
                        }
                    )
                );
            }
            function basePickBy(object, paths, predicate) {
                for (var index = -1, length = paths.length, result = {}; ++index < length; ) {
                    var path = paths[index],
                        value = baseGet(object, path);
                    predicate(value, path) && baseSet(result, castPath(path, object), value);
                }
                return result;
            }
            function basePullAll(array, values, iteratee, comparator) {
                var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
                    index = -1,
                    length = values.length,
                    seen = array;
                for (array === values && (values = copyArray(values)), iteratee && (seen = arrayMap(array, baseUnary(iteratee))); ++index < length; )
                    for (var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value; (fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1; )
                        seen !== array && splice.call(seen, fromIndex, 1), splice.call(array, fromIndex, 1);
                return array;
            }
            function basePullAt(array, indexes) {
                for (var length = array ? indexes.length : 0, lastIndex = length - 1; length--; ) {
                    var index = indexes[length];
                    if (length == lastIndex || index !== previous) {
                        var previous = index;
                        isIndex(index) ? splice.call(array, index, 1) : baseUnset(array, index);
                    }
                }
                return array;
            }
            function baseRandom(lower, upper) {
                return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
            }
            function baseRepeat(string, n) {
                var result = "";
                if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
                do {
                    n % 2 && (result += string), (n = nativeFloor(n / 2)) && (string += string);
                } while (n);
                return result;
            }
            function baseRest(func, start) {
                return setToString(overRest(func, start, identity), func + "");
            }
            function baseSample(collection) {
                return arraySample(values(collection));
            }
            function baseSampleSize(collection, n) {
                var array = values(collection);
                return shuffleSelf(array, baseClamp(n, 0, array.length));
            }
            function baseSet(object, path, value, customizer) {
                if (!isObject(object)) return object;
                for (var index = -1, length = (path = castPath(path, object)).length, lastIndex = length - 1, nested = object; null != nested && ++index < length; ) {
                    var key = toKey(path[index]),
                        newValue = value;
                    if (index != lastIndex) {
                        var objValue = nested[key];
                        (newValue = customizer ? customizer(objValue, key, nested) : undefined) === undefined && (newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {});
                    }
                    assignValue(nested, key, newValue), (nested = nested[key]);
                }
                return object;
            }
            var baseSetData = metaMap
                    ? function (func, data) {
                          return metaMap.set(func, data), func;
                      }
                    : identity,
                baseSetToString = defineProperty
                    ? function (func, string) {
                          return defineProperty(func, "toString", { configurable: !0, enumerable: !1, value: constant(string), writable: !0 });
                      }
                    : identity;
            function baseShuffle(collection) {
                return shuffleSelf(values(collection));
            }
            function baseSlice(array, start, end) {
                var index = -1,
                    length = array.length;
                start < 0 && (start = -start > length ? 0 : length + start), (end = end > length ? length : end) < 0 && (end += length), (length = start > end ? 0 : (end - start) >>> 0), (start >>>= 0);
                for (var result = Array(length); ++index < length; ) result[index] = array[index + start];
                return result;
            }
            function baseSome(collection, predicate) {
                var result;
                return (
                    baseEach(collection, function (value, index, collection) {
                        return !(result = predicate(value, index, collection));
                    }),
                    !!result
                );
            }
            function baseSortedIndex(array, value, retHighest) {
                var low = 0,
                    high = null == array ? low : array.length;
                if ("number" == typeof value && value == value && high <= HALF_MAX_ARRAY_LENGTH) {
                    for (; low < high; ) {
                        var mid = (low + high) >>> 1,
                            computed = array[mid];
                        null !== computed && !isSymbol(computed) && (retHighest ? computed <= value : computed < value) ? (low = mid + 1) : (high = mid);
                    }
                    return high;
                }
                return baseSortedIndexBy(array, value, identity, retHighest);
            }
            function baseSortedIndexBy(array, value, iteratee, retHighest) {
                value = iteratee(value);
                for (var low = 0, high = null == array ? 0 : array.length, valIsNaN = value != value, valIsNull = null === value, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined; low < high; ) {
                    var mid = nativeFloor((low + high) / 2),
                        computed = iteratee(array[mid]),
                        othIsDefined = computed !== undefined,
                        othIsNull = null === computed,
                        othIsReflexive = computed == computed,
                        othIsSymbol = isSymbol(computed);
                    if (valIsNaN) var setLow = retHighest || othIsReflexive;
                    else
                        setLow = valIsUndefined
                            ? othIsReflexive && (retHighest || othIsDefined)
                            : valIsNull
                            ? othIsReflexive && othIsDefined && (retHighest || !othIsNull)
                            : valIsSymbol
                            ? othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol)
                            : !othIsNull && !othIsSymbol && (retHighest ? computed <= value : computed < value);
                    setLow ? (low = mid + 1) : (high = mid);
                }
                return nativeMin(high, MAX_ARRAY_INDEX);
            }
            function baseSortedUniq(array, iteratee) {
                for (var index = -1, length = array.length, resIndex = 0, result = []; ++index < length; ) {
                    var value = array[index],
                        computed = iteratee ? iteratee(value) : value;
                    if (!index || !eq(computed, seen)) {
                        var seen = computed;
                        result[resIndex++] = 0 === value ? 0 : value;
                    }
                }
                return result;
            }
            function baseToNumber(value) {
                return "number" == typeof value ? value : isSymbol(value) ? NAN : +value;
            }
            function baseToString(value) {
                if ("string" == typeof value) return value;
                if (isArray(value)) return arrayMap(value, baseToString) + "";
                if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
                var result = value + "";
                return "0" == result && 1 / value == -INFINITY ? "-0" : result;
            }
            function baseUniq(array, iteratee, comparator) {
                var index = -1,
                    includes = arrayIncludes,
                    length = array.length,
                    isCommon = !0,
                    result = [],
                    seen = result;
                if (comparator) (isCommon = !1), (includes = arrayIncludesWith);
                else if (length >= LARGE_ARRAY_SIZE) {
                    var set = iteratee ? null : createSet(array);
                    if (set) return setToArray(set);
                    (isCommon = !1), (includes = cacheHas), (seen = new SetCache());
                } else seen = iteratee ? [] : result;
                outer: for (; ++index < length; ) {
                    var value = array[index],
                        computed = iteratee ? iteratee(value) : value;
                    if (((value = comparator || 0 !== value ? value : 0), isCommon && computed == computed)) {
                        for (var seenIndex = seen.length; seenIndex--; ) if (seen[seenIndex] === computed) continue outer;
                        iteratee && seen.push(computed), result.push(value);
                    } else includes(seen, computed, comparator) || (seen !== result && seen.push(computed), result.push(value));
                }
                return result;
            }
            function baseUnset(object, path) {
                return null == (object = parent(object, (path = castPath(path, object)))) || delete object[toKey(last(path))];
            }
            function baseUpdate(object, path, updater, customizer) {
                return baseSet(object, path, updater(baseGet(object, path)), customizer);
            }
            function baseWhile(array, predicate, isDrop, fromRight) {
                for (var length = array.length, index = fromRight ? length : -1; (fromRight ? index-- : ++index < length) && predicate(array[index], index, array); );
                return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
            }
            function baseWrapperValue(value, actions) {
                var result = value;
                return (
                    result instanceof LazyWrapper && (result = result.value()),
                    arrayReduce(
                        actions,
                        function (result, action) {
                            return action.func.apply(action.thisArg, arrayPush([result], action.args));
                        },
                        result
                    )
                );
            }
            function baseXor(arrays, iteratee, comparator) {
                var length = arrays.length;
                if (length < 2) return length ? baseUniq(arrays[0]) : [];
                for (var index = -1, result = Array(length); ++index < length; )
                    for (var array = arrays[index], othIndex = -1; ++othIndex < length; ) othIndex != index && (result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator));
                return baseUniq(baseFlatten(result, 1), iteratee, comparator);
            }
            function baseZipObject(props, values, assignFunc) {
                for (var index = -1, length = props.length, valsLength = values.length, result = {}; ++index < length; ) {
                    var value = index < valsLength ? values[index] : undefined;
                    assignFunc(result, props[index], value);
                }
                return result;
            }
            function castArrayLikeObject(value) {
                return isArrayLikeObject(value) ? value : [];
            }
            function castFunction(value) {
                return "function" == typeof value ? value : identity;
            }
            function castPath(value, object) {
                return isArray(value) ? value : isKey(value, object) ? [value] : stringToPath(toString(value));
            }
            var castRest = baseRest;
            function castSlice(array, start, end) {
                var length = array.length;
                return (end = end === undefined ? length : end), !start && end >= length ? array : baseSlice(array, start, end);
            }
            var clearTimeout =
                ctxClearTimeout ||
                function (id) {
                    return root.clearTimeout(id);
                };
            function cloneBuffer(buffer, isDeep) {
                if (isDeep) return buffer.slice();
                var length = buffer.length,
                    result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
                return buffer.copy(result), result;
            }
            function cloneArrayBuffer(arrayBuffer) {
                var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
                return new Uint8Array(result).set(new Uint8Array(arrayBuffer)), result;
            }
            function cloneTypedArray(typedArray, isDeep) {
                var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
                return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
            }
            function compareAscending(value, other) {
                if (value !== other) {
                    var valIsDefined = value !== undefined,
                        valIsNull = null === value,
                        valIsReflexive = value == value,
                        valIsSymbol = isSymbol(value),
                        othIsDefined = other !== undefined,
                        othIsNull = null === other,
                        othIsReflexive = other == other,
                        othIsSymbol = isSymbol(other);
                    if (
                        (!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
                        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
                        (valIsNull && othIsDefined && othIsReflexive) ||
                        (!valIsDefined && othIsReflexive) ||
                        !valIsReflexive
                    )
                        return 1;
                    if (
                        (!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
                        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
                        (othIsNull && valIsDefined && valIsReflexive) ||
                        (!othIsDefined && valIsReflexive) ||
                        !othIsReflexive
                    )
                        return -1;
                }
                return 0;
            }
            function composeArgs(args, partials, holders, isCurried) {
                for (
                    var argsIndex = -1,
                        argsLength = args.length,
                        holdersLength = holders.length,
                        leftIndex = -1,
                        leftLength = partials.length,
                        rangeLength = nativeMax(argsLength - holdersLength, 0),
                        result = Array(leftLength + rangeLength),
                        isUncurried = !isCurried;
                    ++leftIndex < leftLength;

                )
                    result[leftIndex] = partials[leftIndex];
                for (; ++argsIndex < holdersLength; ) (isUncurried || argsIndex < argsLength) && (result[holders[argsIndex]] = args[argsIndex]);
                for (; rangeLength--; ) result[leftIndex++] = args[argsIndex++];
                return result;
            }
            function composeArgsRight(args, partials, holders, isCurried) {
                for (
                    var argsIndex = -1,
                        argsLength = args.length,
                        holdersIndex = -1,
                        holdersLength = holders.length,
                        rightIndex = -1,
                        rightLength = partials.length,
                        rangeLength = nativeMax(argsLength - holdersLength, 0),
                        result = Array(rangeLength + rightLength),
                        isUncurried = !isCurried;
                    ++argsIndex < rangeLength;

                )
                    result[argsIndex] = args[argsIndex];
                for (var offset = argsIndex; ++rightIndex < rightLength; ) result[offset + rightIndex] = partials[rightIndex];
                for (; ++holdersIndex < holdersLength; ) (isUncurried || argsIndex < argsLength) && (result[offset + holders[holdersIndex]] = args[argsIndex++]);
                return result;
            }
            function copyArray(source, array) {
                var index = -1,
                    length = source.length;
                for (array || (array = Array(length)); ++index < length; ) array[index] = source[index];
                return array;
            }
            function copyObject(source, props, object, customizer) {
                var isNew = !object;
                object || (object = {});
                for (var index = -1, length = props.length; ++index < length; ) {
                    var key = props[index],
                        newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                    newValue === undefined && (newValue = source[key]), isNew ? baseAssignValue(object, key, newValue) : assignValue(object, key, newValue);
                }
                return object;
            }
            function createAggregator(setter, initializer) {
                return function (collection, iteratee) {
                    var func = isArray(collection) ? arrayAggregator : baseAggregator,
                        accumulator = initializer ? initializer() : {};
                    return func(collection, setter, getIteratee(iteratee, 2), accumulator);
                };
            }
            function createAssigner(assigner) {
                return baseRest(function (object, sources) {
                    var index = -1,
                        length = sources.length,
                        customizer = length > 1 ? sources[length - 1] : undefined,
                        guard = length > 2 ? sources[2] : undefined;
                    for (
                        customizer = assigner.length > 3 && "function" == typeof customizer ? (length--, customizer) : undefined,
                            guard && isIterateeCall(sources[0], sources[1], guard) && ((customizer = length < 3 ? undefined : customizer), (length = 1)),
                            object = Object(object);
                        ++index < length;

                    ) {
                        var source = sources[index];
                        source && assigner(object, source, index, customizer);
                    }
                    return object;
                });
            }
            function createBaseEach(eachFunc, fromRight) {
                return function (collection, iteratee) {
                    if (null == collection) return collection;
                    if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
                    for (var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection); (fromRight ? index-- : ++index < length) && !1 !== iteratee(iterable[index], index, iterable); );
                    return collection;
                };
            }
            function createBaseFor(fromRight) {
                return function (object, iteratee, keysFunc) {
                    for (var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length; length--; ) {
                        var key = props[fromRight ? length : ++index];
                        if (!1 === iteratee(iterable[key], key, iterable)) break;
                    }
                    return object;
                };
            }
            function createCaseFirst(methodName) {
                return function (string) {
                    var strSymbols = hasUnicode((string = toString(string))) ? stringToArray(string) : undefined,
                        chr = strSymbols ? strSymbols[0] : string.charAt(0),
                        trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
                    return chr[methodName]() + trailing;
                };
            }
            function createCompounder(callback) {
                return function (string) {
                    return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
                };
            }
            function createCtor(Ctor) {
                return function () {
                    var args = arguments;
                    switch (args.length) {
                        case 0:
                            return new Ctor();
                        case 1:
                            return new Ctor(args[0]);
                        case 2:
                            return new Ctor(args[0], args[1]);
                        case 3:
                            return new Ctor(args[0], args[1], args[2]);
                        case 4:
                            return new Ctor(args[0], args[1], args[2], args[3]);
                        case 5:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                        case 6:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                        case 7:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                    }
                    var thisBinding = baseCreate(Ctor.prototype),
                        result = Ctor.apply(thisBinding, args);
                    return isObject(result) ? result : thisBinding;
                };
            }
            function createFind(findIndexFunc) {
                return function (collection, predicate, fromIndex) {
                    var iterable = Object(collection);
                    if (!isArrayLike(collection)) {
                        var iteratee = getIteratee(predicate, 3);
                        (collection = keys(collection)),
                            (predicate = function (key) {
                                return iteratee(iterable[key], key, iterable);
                            });
                    }
                    var index = findIndexFunc(collection, predicate, fromIndex);
                    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
                };
            }
            function createFlow(fromRight) {
                return flatRest(function (funcs) {
                    var length = funcs.length,
                        index = length,
                        prereq = LodashWrapper.prototype.thru;
                    for (fromRight && funcs.reverse(); index--; ) {
                        var func = funcs[index];
                        if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                        if (prereq && !wrapper && "wrapper" == getFuncName(func)) var wrapper = new LodashWrapper([], !0);
                    }
                    for (index = wrapper ? index : length; ++index < length; ) {
                        var funcName = getFuncName((func = funcs[index])),
                            data = "wrapper" == funcName ? getData(func) : undefined;
                        wrapper =
                            data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && 1 == data[9]
                                ? wrapper[getFuncName(data[0])].apply(wrapper, data[3])
                                : 1 == func.length && isLaziable(func)
                                ? wrapper[funcName]()
                                : wrapper.thru(func);
                    }
                    return function () {
                        var args = arguments,
                            value = args[0];
                        if (wrapper && 1 == args.length && isArray(value)) return wrapper.plant(value).value();
                        for (var index = 0, result = length ? funcs[index].apply(this, args) : value; ++index < length; ) result = funcs[index].call(this, result);
                        return result;
                    };
                });
            }
            function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
                var isAry = bitmask & WRAP_ARY_FLAG,
                    isBind = bitmask & WRAP_BIND_FLAG,
                    isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
                    isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
                    isFlip = bitmask & WRAP_FLIP_FLAG,
                    Ctor = isBindKey ? undefined : createCtor(func);
                return function wrapper() {
                    for (var length = arguments.length, args = Array(length), index = length; index--; ) args[index] = arguments[index];
                    if (isCurried)
                        var placeholder = getHolder(wrapper),
                            holdersCount = (function (array, placeholder) {
                                for (var length = array.length, result = 0; length--; ) array[length] === placeholder && ++result;
                                return result;
                            })(args, placeholder);
                    if (
                        (partials && (args = composeArgs(args, partials, holders, isCurried)), partialsRight && (args = composeArgsRight(args, partialsRight, holdersRight, isCurried)), (length -= holdersCount), isCurried && length < arity)
                    ) {
                        var newHolders = replaceHolders(args, placeholder);
                        return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                    }
                    var thisBinding = isBind ? thisArg : this,
                        fn = isBindKey ? thisBinding[func] : func;
                    return (
                        (length = args.length),
                        argPos
                            ? (args = (function (array, indexes) {
                                  for (var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array); length--; ) {
                                      var index = indexes[length];
                                      array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
                                  }
                                  return array;
                              })(args, argPos))
                            : isFlip && length > 1 && args.reverse(),
                        isAry && ary < length && (args.length = ary),
                        this && this !== root && this instanceof wrapper && (fn = Ctor || createCtor(fn)),
                        fn.apply(thisBinding, args)
                    );
                };
            }
            function createInverter(setter, toIteratee) {
                return function (object, iteratee) {
                    return (function (object, setter, iteratee, accumulator) {
                        return (
                            baseForOwn(object, function (value, key, object) {
                                setter(accumulator, iteratee(value), key, object);
                            }),
                            accumulator
                        );
                    })(object, setter, toIteratee(iteratee), {});
                };
            }
            function createMathOperation(operator, defaultValue) {
                return function (value, other) {
                    var result;
                    if (value === undefined && other === undefined) return defaultValue;
                    if ((value !== undefined && (result = value), other !== undefined)) {
                        if (result === undefined) return other;
                        "string" == typeof value || "string" == typeof other ? ((value = baseToString(value)), (other = baseToString(other))) : ((value = baseToNumber(value)), (other = baseToNumber(other))),
                            (result = operator(value, other));
                    }
                    return result;
                };
            }
            function createOver(arrayFunc) {
                return flatRest(function (iteratees) {
                    return (
                        (iteratees = arrayMap(iteratees, baseUnary(getIteratee()))),
                        baseRest(function (args) {
                            var thisArg = this;
                            return arrayFunc(iteratees, function (iteratee) {
                                return apply(iteratee, thisArg, args);
                            });
                        })
                    );
                });
            }
            function createPadding(length, chars) {
                var charsLength = (chars = chars === undefined ? " " : baseToString(chars)).length;
                if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
                var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
                return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
            }
            function createRange(fromRight) {
                return function (start, end, step) {
                    return (
                        step && "number" != typeof step && isIterateeCall(start, end, step) && (end = step = undefined),
                        (start = toFinite(start)),
                        end === undefined ? ((end = start), (start = 0)) : (end = toFinite(end)),
                        (function (start, end, step, fromRight) {
                            for (var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length); length--; ) (result[fromRight ? length : ++index] = start), (start += step);
                            return result;
                        })(start, end, (step = step === undefined ? (start < end ? 1 : -1) : toFinite(step)), fromRight)
                    );
                };
            }
            function createRelationalOperation(operator) {
                return function (value, other) {
                    return ("string" == typeof value && "string" == typeof other) || ((value = toNumber(value)), (other = toNumber(other))), operator(value, other);
                };
            }
            function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
                var isCurry = bitmask & WRAP_CURRY_FLAG;
                (bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG), (bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG)) & WRAP_CURRY_BOUND_FLAG || (bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG));
                var newData = [func, bitmask, thisArg, isCurry ? partials : undefined, isCurry ? holders : undefined, isCurry ? undefined : partials, isCurry ? undefined : holders, argPos, ary, arity],
                    result = wrapFunc.apply(undefined, newData);
                return isLaziable(func) && setData(result, newData), (result.placeholder = placeholder), setWrapToString(result, func, bitmask);
            }
            function createRound(methodName) {
                var func = Math[methodName];
                return function (number, precision) {
                    if (((number = toNumber(number)), (precision = null == precision ? 0 : nativeMin(toInteger(precision), 292)) && nativeIsFinite(number))) {
                        var pair = (toString(number) + "e").split("e");
                        return +((pair = (toString(func(pair[0] + "e" + (+pair[1] + precision))) + "e").split("e"))[0] + "e" + (+pair[1] - precision));
                    }
                    return func(number);
                };
            }
            var createSet =
                Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY
                    ? function (values) {
                          return new Set(values);
                      }
                    : noop;
            function createToPairs(keysFunc) {
                return function (object) {
                    var tag = getTag(object);
                    return tag == mapTag
                        ? mapToArray(object)
                        : tag == setTag
                        ? setToPairs(object)
                        : (function (object, props) {
                              return arrayMap(props, function (key) {
                                  return [key, object[key]];
                              });
                          })(object, keysFunc(object));
                };
            }
            function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
                var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
                if (!isBindKey && "function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                var length = partials ? partials.length : 0;
                if (
                    (length || ((bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG)), (partials = holders = undefined)),
                    (ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0)),
                    (arity = arity === undefined ? arity : toInteger(arity)),
                    (length -= holders ? holders.length : 0),
                    bitmask & WRAP_PARTIAL_RIGHT_FLAG)
                ) {
                    var partialsRight = partials,
                        holdersRight = holders;
                    partials = holders = undefined;
                }
                var data = isBindKey ? undefined : getData(func),
                    newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
                if (
                    (data &&
                        (function (data, source) {
                            var bitmask = data[1],
                                srcBitmask = source[1],
                                newBitmask = bitmask | srcBitmask,
                                isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG),
                                isCombo =
                                    (srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG) ||
                                    (srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8]) ||
                                    (srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG);
                            if (!isCommon && !isCombo) return data;
                            srcBitmask & WRAP_BIND_FLAG && ((data[2] = source[2]), (newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG));
                            var value = source[3];
                            if (value) {
                                var partials = data[3];
                                (data[3] = partials ? composeArgs(partials, value, source[4]) : value), (data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4]);
                            }
                            (value = source[5]) && ((partials = data[5]), (data[5] = partials ? composeArgsRight(partials, value, source[6]) : value), (data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6])),
                                (value = source[7]) && (data[7] = value),
                                srcBitmask & WRAP_ARY_FLAG && (data[8] = null == data[8] ? source[8] : nativeMin(data[8], source[8])),
                                null == data[9] && (data[9] = source[9]),
                                (data[0] = source[0]),
                                (data[1] = newBitmask);
                        })(newData, data),
                    (func = newData[0]),
                    (bitmask = newData[1]),
                    (thisArg = newData[2]),
                    (partials = newData[3]),
                    (holders = newData[4]),
                    !(arity = newData[9] = newData[9] === undefined ? (isBindKey ? 0 : func.length) : nativeMax(newData[9] - length, 0)) &&
                        bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG) &&
                        (bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)),
                    bitmask && bitmask != WRAP_BIND_FLAG)
                )
                    result =
                        bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG
                            ? (function (func, bitmask, arity) {
                                  var Ctor = createCtor(func);
                                  return function wrapper() {
                                      for (var length = arguments.length, args = Array(length), index = length, placeholder = getHolder(wrapper); index--; ) args[index] = arguments[index];
                                      var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                                      return (length -= holders.length) < arity
                                          ? createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length)
                                          : apply(this && this !== root && this instanceof wrapper ? Ctor : func, this, args);
                                  };
                              })(func, bitmask, arity)
                            : (bitmask != WRAP_PARTIAL_FLAG && bitmask != (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) || holders.length
                            ? createHybrid.apply(undefined, newData)
                            : (function (func, bitmask, thisArg, partials) {
                                  var isBind = bitmask & WRAP_BIND_FLAG,
                                      Ctor = createCtor(func);
                                  return function wrapper() {
                                      for (
                                          var argsIndex = -1,
                                              argsLength = arguments.length,
                                              leftIndex = -1,
                                              leftLength = partials.length,
                                              args = Array(leftLength + argsLength),
                                              fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                                          ++leftIndex < leftLength;

                                      )
                                          args[leftIndex] = partials[leftIndex];
                                      for (; argsLength--; ) args[leftIndex++] = arguments[++argsIndex];
                                      return apply(fn, isBind ? thisArg : this, args);
                                  };
                              })(func, bitmask, thisArg, partials);
                else
                    var result = (function (func, bitmask, thisArg) {
                        var isBind = bitmask & WRAP_BIND_FLAG,
                            Ctor = createCtor(func);
                        return function wrapper() {
                            return (this && this !== root && this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, arguments);
                        };
                    })(func, bitmask, thisArg);
                return setWrapToString((data ? baseSetData : setData)(result, newData), func, bitmask);
            }
            function customDefaultsAssignIn(objValue, srcValue, key, object) {
                return objValue === undefined || (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) ? srcValue : objValue;
            }
            function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                return isObject(objValue) && isObject(srcValue) && (stack.set(srcValue, objValue), baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack), stack.delete(srcValue)), objValue;
            }
            function customOmitClone(value) {
                return isPlainObject(value) ? undefined : value;
            }
            function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                    arrLength = array.length,
                    othLength = other.length;
                if (arrLength != othLength && !(isPartial && othLength > arrLength)) return !1;
                var stacked = stack.get(array);
                if (stacked && stack.get(other)) return stacked == other;
                var index = -1,
                    result = !0,
                    seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
                for (stack.set(array, other), stack.set(other, array); ++index < arrLength; ) {
                    var arrValue = array[index],
                        othValue = other[index];
                    if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                    if (compared !== undefined) {
                        if (compared) continue;
                        result = !1;
                        break;
                    }
                    if (seen) {
                        if (
                            !arraySome(other, function (othValue, othIndex) {
                                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                            })
                        ) {
                            result = !1;
                            break;
                        }
                    } else if (arrValue !== othValue && !equalFunc(arrValue, othValue, bitmask, customizer, stack)) {
                        result = !1;
                        break;
                    }
                }
                return stack.delete(array), stack.delete(other), result;
            }
            function flatRest(func) {
                return setToString(overRest(func, undefined, flatten), func + "");
            }
            function getAllKeys(object) {
                return baseGetAllKeys(object, keys, getSymbols);
            }
            function getAllKeysIn(object) {
                return baseGetAllKeys(object, keysIn, getSymbolsIn);
            }
            var getData = metaMap
                ? function (func) {
                      return metaMap.get(func);
                  }
                : noop;
            function getFuncName(func) {
                for (var result = func.name + "", array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0; length--; ) {
                    var data = array[length],
                        otherFunc = data.func;
                    if (null == otherFunc || otherFunc == func) return data.name;
                }
                return result;
            }
            function getHolder(func) {
                return (hasOwnProperty.call(lodash, "placeholder") ? lodash : func).placeholder;
            }
            function getIteratee() {
                var result = lodash.iteratee || iteratee;
                return (result = result === iteratee ? baseIteratee : result), arguments.length ? result(arguments[0], arguments[1]) : result;
            }
            function getMapData(map, key) {
                var value,
                    type,
                    data = map.__data__;
                return ("string" == (type = typeof (value = key)) || "number" == type || "symbol" == type || "boolean" == type ? "__proto__" !== value : null === value) ? data["string" == typeof key ? "string" : "hash"] : data.map;
            }
            function getMatchData(object) {
                for (var result = keys(object), length = result.length; length--; ) {
                    var key = result[length],
                        value = object[key];
                    result[length] = [key, value, isStrictComparable(value)];
                }
                return result;
            }
            function getNative(object, key) {
                var value = (function (object, key) {
                    return null == object ? undefined : object[key];
                })(object, key);
                return baseIsNative(value) ? value : undefined;
            }
            var getSymbols = nativeGetSymbols
                    ? function (object) {
                          return null == object
                              ? []
                              : ((object = Object(object)),
                                arrayFilter(nativeGetSymbols(object), function (symbol) {
                                    return propertyIsEnumerable.call(object, symbol);
                                }));
                      }
                    : stubArray,
                getSymbolsIn = nativeGetSymbols
                    ? function (object) {
                          for (var result = []; object; ) arrayPush(result, getSymbols(object)), (object = getPrototype(object));
                          return result;
                      }
                    : stubArray,
                getTag = baseGetTag;
            function hasPath(object, path, hasFunc) {
                for (var index = -1, length = (path = castPath(path, object)).length, result = !1; ++index < length; ) {
                    var key = toKey(path[index]);
                    if (!(result = null != object && hasFunc(object, key))) break;
                    object = object[key];
                }
                return result || ++index != length ? result : !!(length = null == object ? 0 : object.length) && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
            }
            function initCloneObject(object) {
                return "function" != typeof object.constructor || isPrototype(object) ? {} : baseCreate(getPrototype(object));
            }
            function isFlattenable(value) {
                return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
            }
            function isIndex(value, length) {
                var type = typeof value;
                return !!(length = null == length ? MAX_SAFE_INTEGER : length) && ("number" == type || ("symbol" != type && reIsUint.test(value))) && value > -1 && value % 1 == 0 && value < length;
            }
            function isIterateeCall(value, index, object) {
                if (!isObject(object)) return !1;
                var type = typeof index;
                return !!("number" == type ? isArrayLike(object) && isIndex(index, object.length) : "string" == type && index in object) && eq(object[index], value);
            }
            function isKey(value, object) {
                if (isArray(value)) return !1;
                var type = typeof value;
                return !("number" != type && "symbol" != type && "boolean" != type && null != value && !isSymbol(value)) || reIsPlainProp.test(value) || !reIsDeepProp.test(value) || (null != object && value in Object(object));
            }
            function isLaziable(func) {
                var funcName = getFuncName(func),
                    other = lodash[funcName];
                if ("function" != typeof other || !(funcName in LazyWrapper.prototype)) return !1;
                if (func === other) return !0;
                var data = getData(other);
                return !!data && func === data[0];
            }
            ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
                (Map && getTag(new Map()) != mapTag) ||
                (Promise && "[object Promise]" != getTag(Promise.resolve())) ||
                (Set && getTag(new Set()) != setTag) ||
                (WeakMap && getTag(new WeakMap()) != weakMapTag)) &&
                (getTag = function (value) {
                    var result = baseGetTag(value),
                        Ctor = result == objectTag ? value.constructor : undefined,
                        ctorString = Ctor ? toSource(Ctor) : "";
                    if (ctorString)
                        switch (ctorString) {
                            case dataViewCtorString:
                                return dataViewTag;
                            case mapCtorString:
                                return mapTag;
                            case promiseCtorString:
                                return "[object Promise]";
                            case setCtorString:
                                return setTag;
                            case weakMapCtorString:
                                return weakMapTag;
                        }
                    return result;
                });
            var isMaskable = coreJsData ? isFunction : stubFalse;
            function isPrototype(value) {
                var Ctor = value && value.constructor;
                return value === (("function" == typeof Ctor && Ctor.prototype) || objectProto);
            }
            function isStrictComparable(value) {
                return value == value && !isObject(value);
            }
            function matchesStrictComparable(key, srcValue) {
                return function (object) {
                    return null != object && object[key] === srcValue && (srcValue !== undefined || key in Object(object));
                };
            }
            function overRest(func, start, transform) {
                return (
                    (start = nativeMax(start === undefined ? func.length - 1 : start, 0)),
                    function () {
                        for (var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length); ++index < length; ) array[index] = args[start + index];
                        index = -1;
                        for (var otherArgs = Array(start + 1); ++index < start; ) otherArgs[index] = args[index];
                        return (otherArgs[start] = transform(array)), apply(func, this, otherArgs);
                    }
                );
            }
            function parent(object, path) {
                return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
            }
            function safeGet(object, key) {
                if (("constructor" !== key || "function" != typeof object[key]) && "__proto__" != key) return object[key];
            }
            var setData = shortOut(baseSetData),
                setTimeout =
                    ctxSetTimeout ||
                    function (func, wait) {
                        return root.setTimeout(func, wait);
                    },
                setToString = shortOut(baseSetToString);
            function setWrapToString(wrapper, reference, bitmask) {
                var source = reference + "";
                return setToString(
                    wrapper,
                    (function (source, details) {
                        var length = details.length;
                        if (!length) return source;
                        var lastIndex = length - 1;
                        return (details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex]), (details = details.join(length > 2 ? ", " : " ")), source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
                    })(
                        source,
                        (function (details, bitmask) {
                            return (
                                arrayEach(wrapFlags, function (pair) {
                                    var value = "_." + pair[0];
                                    bitmask & pair[1] && !arrayIncludes(details, value) && details.push(value);
                                }),
                                details.sort()
                            );
                        })(
                            (function (source) {
                                var match = source.match(reWrapDetails);
                                return match ? match[1].split(reSplitDetails) : [];
                            })(source),
                            bitmask
                        )
                    )
                );
            }
            function shortOut(func) {
                var count = 0,
                    lastCalled = 0;
                return function () {
                    var stamp = nativeNow(),
                        remaining = HOT_SPAN - (stamp - lastCalled);
                    if (((lastCalled = stamp), remaining > 0)) {
                        if (++count >= HOT_COUNT) return arguments[0];
                    } else count = 0;
                    return func.apply(undefined, arguments);
                };
            }
            function shuffleSelf(array, size) {
                var index = -1,
                    length = array.length,
                    lastIndex = length - 1;
                for (size = size === undefined ? length : size; ++index < size; ) {
                    var rand = baseRandom(index, lastIndex),
                        value = array[rand];
                    (array[rand] = array[index]), (array[index] = value);
                }
                return (array.length = size), array;
            }
            var stringToPath = (function (func) {
                var result = memoize(func, function (key) {
                        return cache.size === MAX_MEMOIZE_SIZE && cache.clear(), key;
                    }),
                    cache = result.cache;
                return result;
            })(function (string) {
                var result = [];
                return (
                    46 === string.charCodeAt(0) && result.push(""),
                    string.replace(rePropName, function (match, number, quote, subString) {
                        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
                    }),
                    result
                );
            });
            function toKey(value) {
                if ("string" == typeof value || isSymbol(value)) return value;
                var result = value + "";
                return "0" == result && 1 / value == -INFINITY ? "-0" : result;
            }
            function toSource(func) {
                if (null != func) {
                    try {
                        return funcToString.call(func);
                    } catch (e) {}
                    try {
                        return func + "";
                    } catch (e) {}
                }
                return "";
            }
            function wrapperClone(wrapper) {
                if (wrapper instanceof LazyWrapper) return wrapper.clone();
                var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                return (result.__actions__ = copyArray(wrapper.__actions__)), (result.__index__ = wrapper.__index__), (result.__values__ = wrapper.__values__), result;
            }
            var difference = baseRest(function (array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, !0)) : [];
                }),
                differenceBy = baseRest(function (array, values) {
                    var iteratee = last(values);
                    return isArrayLikeObject(iteratee) && (iteratee = undefined), isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, !0), getIteratee(iteratee, 2)) : [];
                }),
                differenceWith = baseRest(function (array, values) {
                    var comparator = last(values);
                    return isArrayLikeObject(comparator) && (comparator = undefined), isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, !0), undefined, comparator) : [];
                });
            function findIndex(array, predicate, fromIndex) {
                var length = null == array ? 0 : array.length;
                if (!length) return -1;
                var index = null == fromIndex ? 0 : toInteger(fromIndex);
                return index < 0 && (index = nativeMax(length + index, 0)), baseFindIndex(array, getIteratee(predicate, 3), index);
            }
            function findLastIndex(array, predicate, fromIndex) {
                var length = null == array ? 0 : array.length;
                if (!length) return -1;
                var index = length - 1;
                return fromIndex !== undefined && ((index = toInteger(fromIndex)), (index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1))), baseFindIndex(array, getIteratee(predicate, 3), index, !0);
            }
            function flatten(array) {
                return null != array && array.length ? baseFlatten(array, 1) : [];
            }
            function head(array) {
                return array && array.length ? array[0] : undefined;
            }
            var intersection = baseRest(function (arrays) {
                    var mapped = arrayMap(arrays, castArrayLikeObject);
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
                }),
                intersectionBy = baseRest(function (arrays) {
                    var iteratee = last(arrays),
                        mapped = arrayMap(arrays, castArrayLikeObject);
                    return iteratee === last(mapped) ? (iteratee = undefined) : mapped.pop(), mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
                }),
                intersectionWith = baseRest(function (arrays) {
                    var comparator = last(arrays),
                        mapped = arrayMap(arrays, castArrayLikeObject);
                    return (comparator = "function" == typeof comparator ? comparator : undefined) && mapped.pop(), mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
                });
            function last(array) {
                var length = null == array ? 0 : array.length;
                return length ? array[length - 1] : undefined;
            }
            var pull = baseRest(pullAll);
            function pullAll(array, values) {
                return array && array.length && values && values.length ? basePullAll(array, values) : array;
            }
            var pullAt = flatRest(function (array, indexes) {
                var length = null == array ? 0 : array.length,
                    result = baseAt(array, indexes);
                return (
                    basePullAt(
                        array,
                        arrayMap(indexes, function (index) {
                            return isIndex(index, length) ? +index : index;
                        }).sort(compareAscending)
                    ),
                    result
                );
            });
            function reverse(array) {
                return null == array ? array : nativeReverse.call(array);
            }
            var union = baseRest(function (arrays) {
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0));
                }),
                unionBy = baseRest(function (arrays) {
                    var iteratee = last(arrays);
                    return isArrayLikeObject(iteratee) && (iteratee = undefined), baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0), getIteratee(iteratee, 2));
                }),
                unionWith = baseRest(function (arrays) {
                    var comparator = last(arrays);
                    return (comparator = "function" == typeof comparator ? comparator : undefined), baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0), undefined, comparator);
                });
            function unzip(array) {
                if (!array || !array.length) return [];
                var length = 0;
                return (
                    (array = arrayFilter(array, function (group) {
                        if (isArrayLikeObject(group)) return (length = nativeMax(group.length, length)), !0;
                    })),
                    baseTimes(length, function (index) {
                        return arrayMap(array, baseProperty(index));
                    })
                );
            }
            function unzipWith(array, iteratee) {
                if (!array || !array.length) return [];
                var result = unzip(array);
                return null == iteratee
                    ? result
                    : arrayMap(result, function (group) {
                          return apply(iteratee, undefined, group);
                      });
            }
            var without = baseRest(function (array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, values) : [];
                }),
                xor = baseRest(function (arrays) {
                    return baseXor(arrayFilter(arrays, isArrayLikeObject));
                }),
                xorBy = baseRest(function (arrays) {
                    var iteratee = last(arrays);
                    return isArrayLikeObject(iteratee) && (iteratee = undefined), baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                }),
                xorWith = baseRest(function (arrays) {
                    var comparator = last(arrays);
                    return (comparator = "function" == typeof comparator ? comparator : undefined), baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
                }),
                zip = baseRest(unzip);
            var zipWith = baseRest(function (arrays) {
                var length = arrays.length,
                    iteratee = length > 1 ? arrays[length - 1] : undefined;
                return unzipWith(arrays, (iteratee = "function" == typeof iteratee ? (arrays.pop(), iteratee) : undefined));
            });
            function chain(value) {
                var result = lodash(value);
                return (result.__chain__ = !0), result;
            }
            function thru(value, interceptor) {
                return interceptor(value);
            }
            var wrapperAt = flatRest(function (paths) {
                var length = paths.length,
                    start = length ? paths[0] : 0,
                    value = this.__wrapped__,
                    interceptor = function (object) {
                        return baseAt(object, paths);
                    };
                return !(length > 1 || this.__actions__.length) && value instanceof LazyWrapper && isIndex(start)
                    ? ((value = value.slice(start, +start + (length ? 1 : 0))).__actions__.push({ func: thru, args: [interceptor], thisArg: undefined }),
                      new LodashWrapper(value, this.__chain__).thru(function (array) {
                          return length && !array.length && array.push(undefined), array;
                      }))
                    : this.thru(interceptor);
            });
            var countBy = createAggregator(function (result, value, key) {
                hasOwnProperty.call(result, key) ? ++result[key] : baseAssignValue(result, key, 1);
            });
            var find = createFind(findIndex),
                findLast = createFind(findLastIndex);
            function forEach(collection, iteratee) {
                return (isArray(collection) ? arrayEach : baseEach)(collection, getIteratee(iteratee, 3));
            }
            function forEachRight(collection, iteratee) {
                return (isArray(collection) ? arrayEachRight : baseEachRight)(collection, getIteratee(iteratee, 3));
            }
            var groupBy = createAggregator(function (result, value, key) {
                hasOwnProperty.call(result, key) ? result[key].push(value) : baseAssignValue(result, key, [value]);
            });
            var invokeMap = baseRest(function (collection, path, args) {
                    var index = -1,
                        isFunc = "function" == typeof path,
                        result = isArrayLike(collection) ? Array(collection.length) : [];
                    return (
                        baseEach(collection, function (value) {
                            result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
                        }),
                        result
                    );
                }),
                keyBy = createAggregator(function (result, value, key) {
                    baseAssignValue(result, key, value);
                });
            function map(collection, iteratee) {
                return (isArray(collection) ? arrayMap : baseMap)(collection, getIteratee(iteratee, 3));
            }
            var partition = createAggregator(
                function (result, value, key) {
                    result[key ? 0 : 1].push(value);
                },
                function () {
                    return [[], []];
                }
            );
            var sortBy = baseRest(function (collection, iteratees) {
                    if (null == collection) return [];
                    var length = iteratees.length;
                    return (
                        length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1]) ? (iteratees = []) : length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2]) && (iteratees = [iteratees[0]]),
                        baseOrderBy(collection, baseFlatten(iteratees, 1), [])
                    );
                }),
                now =
                    ctxNow ||
                    function () {
                        return root.Date.now();
                    };
            function ary(func, n, guard) {
                return (n = guard ? undefined : n), (n = func && null == n ? func.length : n), createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
            }
            function before(n, func) {
                var result;
                if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                return (
                    (n = toInteger(n)),
                    function () {
                        return --n > 0 && (result = func.apply(this, arguments)), n <= 1 && (func = undefined), result;
                    }
                );
            }
            var bind = baseRest(function (func, thisArg, partials) {
                    var bitmask = WRAP_BIND_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bind));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(func, bitmask, thisArg, partials, holders);
                }),
                bindKey = baseRest(function (object, key, partials) {
                    var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bindKey));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(key, bitmask, object, partials, holders);
                });
            function debounce(func, wait, options) {
                var lastArgs,
                    lastThis,
                    maxWait,
                    result,
                    timerId,
                    lastCallTime,
                    lastInvokeTime = 0,
                    leading = !1,
                    maxing = !1,
                    trailing = !0;
                if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                function invokeFunc(time) {
                    var args = lastArgs,
                        thisArg = lastThis;
                    return (lastArgs = lastThis = undefined), (lastInvokeTime = time), (result = func.apply(thisArg, args));
                }
                function shouldInvoke(time) {
                    var timeSinceLastCall = time - lastCallTime;
                    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || (maxing && time - lastInvokeTime >= maxWait);
                }
                function timerExpired() {
                    var time = now();
                    if (shouldInvoke(time)) return trailingEdge(time);
                    timerId = setTimeout(
                        timerExpired,
                        (function (time) {
                            var timeWaiting = wait - (time - lastCallTime);
                            return maxing ? nativeMin(timeWaiting, maxWait - (time - lastInvokeTime)) : timeWaiting;
                        })(time)
                    );
                }
                function trailingEdge(time) {
                    return (timerId = undefined), trailing && lastArgs ? invokeFunc(time) : ((lastArgs = lastThis = undefined), result);
                }
                function debounced() {
                    var time = now(),
                        isInvoking = shouldInvoke(time);
                    if (((lastArgs = arguments), (lastThis = this), (lastCallTime = time), isInvoking)) {
                        if (timerId === undefined)
                            return (function (time) {
                                return (lastInvokeTime = time), (timerId = setTimeout(timerExpired, wait)), leading ? invokeFunc(time) : result;
                            })(lastCallTime);
                        if (maxing) return clearTimeout(timerId), (timerId = setTimeout(timerExpired, wait)), invokeFunc(lastCallTime);
                    }
                    return timerId === undefined && (timerId = setTimeout(timerExpired, wait)), result;
                }
                return (
                    (wait = toNumber(wait) || 0),
                    isObject(options) &&
                        ((leading = !!options.leading), (maxWait = (maxing = "maxWait" in options) ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait), (trailing = "trailing" in options ? !!options.trailing : trailing)),
                    (debounced.cancel = function () {
                        timerId !== undefined && clearTimeout(timerId), (lastInvokeTime = 0), (lastArgs = lastCallTime = lastThis = timerId = undefined);
                    }),
                    (debounced.flush = function () {
                        return timerId === undefined ? result : trailingEdge(now());
                    }),
                    debounced
                );
            }
            var defer = baseRest(function (func, args) {
                    return baseDelay(func, 1, args);
                }),
                delay = baseRest(function (func, wait, args) {
                    return baseDelay(func, toNumber(wait) || 0, args);
                });
            function memoize(func, resolver) {
                if ("function" != typeof func || (null != resolver && "function" != typeof resolver)) throw new TypeError(FUNC_ERROR_TEXT);
                var memoized = function () {
                    var args = arguments,
                        key = resolver ? resolver.apply(this, args) : args[0],
                        cache = memoized.cache;
                    if (cache.has(key)) return cache.get(key);
                    var result = func.apply(this, args);
                    return (memoized.cache = cache.set(key, result) || cache), result;
                };
                return (memoized.cache = new (memoize.Cache || MapCache)()), memoized;
            }
            function negate(predicate) {
                if ("function" != typeof predicate) throw new TypeError(FUNC_ERROR_TEXT);
                return function () {
                    var args = arguments;
                    switch (args.length) {
                        case 0:
                            return !predicate.call(this);
                        case 1:
                            return !predicate.call(this, args[0]);
                        case 2:
                            return !predicate.call(this, args[0], args[1]);
                        case 3:
                            return !predicate.call(this, args[0], args[1], args[2]);
                    }
                    return !predicate.apply(this, args);
                };
            }
            memoize.Cache = MapCache;
            var overArgs = castRest(function (func, transforms) {
                    var funcsLength = (transforms = 1 == transforms.length && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()))).length;
                    return baseRest(function (args) {
                        for (var index = -1, length = nativeMin(args.length, funcsLength); ++index < length; ) args[index] = transforms[index].call(this, args[index]);
                        return apply(func, this, args);
                    });
                }),
                partial = baseRest(function (func, partials) {
                    var holders = replaceHolders(partials, getHolder(partial));
                    return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
                }),
                partialRight = baseRest(function (func, partials) {
                    var holders = replaceHolders(partials, getHolder(partialRight));
                    return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
                }),
                rearg = flatRest(function (func, indexes) {
                    return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
                });
            function eq(value, other) {
                return value === other || (value != value && other != other);
            }
            var gt = createRelationalOperation(baseGt),
                gte = createRelationalOperation(function (value, other) {
                    return value >= other;
                }),
                isArguments = baseIsArguments(
                    (function () {
                        return arguments;
                    })()
                )
                    ? baseIsArguments
                    : function (value) {
                          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
                      },
                isArray = Array.isArray,
                isArrayBuffer = nodeIsArrayBuffer
                    ? baseUnary(nodeIsArrayBuffer)
                    : function (value) {
                          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
                      };
            function isArrayLike(value) {
                return null != value && isLength(value.length) && !isFunction(value);
            }
            function isArrayLikeObject(value) {
                return isObjectLike(value) && isArrayLike(value);
            }
            var isBuffer = nativeIsBuffer || stubFalse,
                isDate = nodeIsDate
                    ? baseUnary(nodeIsDate)
                    : function (value) {
                          return isObjectLike(value) && baseGetTag(value) == dateTag;
                      };
            function isError(value) {
                if (!isObjectLike(value)) return !1;
                var tag = baseGetTag(value);
                return tag == errorTag || tag == domExcTag || ("string" == typeof value.message && "string" == typeof value.name && !isPlainObject(value));
            }
            function isFunction(value) {
                if (!isObject(value)) return !1;
                var tag = baseGetTag(value);
                return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
            }
            function isInteger(value) {
                return "number" == typeof value && value == toInteger(value);
            }
            function isLength(value) {
                return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
            }
            function isObject(value) {
                var type = typeof value;
                return null != value && ("object" == type || "function" == type);
            }
            function isObjectLike(value) {
                return null != value && "object" == typeof value;
            }
            var isMap = nodeIsMap
                ? baseUnary(nodeIsMap)
                : function (value) {
                      return isObjectLike(value) && getTag(value) == mapTag;
                  };
            function isNumber(value) {
                return "number" == typeof value || (isObjectLike(value) && baseGetTag(value) == numberTag);
            }
            function isPlainObject(value) {
                if (!isObjectLike(value) || baseGetTag(value) != objectTag) return !1;
                var proto = getPrototype(value);
                if (null === proto) return !0;
                var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
                return "function" == typeof Ctor && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
            }
            var isRegExp = nodeIsRegExp
                ? baseUnary(nodeIsRegExp)
                : function (value) {
                      return isObjectLike(value) && baseGetTag(value) == regexpTag;
                  };
            var isSet = nodeIsSet
                ? baseUnary(nodeIsSet)
                : function (value) {
                      return isObjectLike(value) && getTag(value) == setTag;
                  };
            function isString(value) {
                return "string" == typeof value || (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
            }
            function isSymbol(value) {
                return "symbol" == typeof value || (isObjectLike(value) && baseGetTag(value) == symbolTag);
            }
            var isTypedArray = nodeIsTypedArray
                ? baseUnary(nodeIsTypedArray)
                : function (value) {
                      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
                  };
            var lt = createRelationalOperation(baseLt),
                lte = createRelationalOperation(function (value, other) {
                    return value <= other;
                });
            function toArray(value) {
                if (!value) return [];
                if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
                if (symIterator && value[symIterator])
                    return (function (iterator) {
                        for (var data, result = []; !(data = iterator.next()).done; ) result.push(data.value);
                        return result;
                    })(value[symIterator]());
                var tag = getTag(value);
                return (tag == mapTag ? mapToArray : tag == setTag ? setToArray : values)(value);
            }
            function toFinite(value) {
                return value ? ((value = toNumber(value)) === INFINITY || value === -INFINITY ? (value < 0 ? -1 : 1) * MAX_INTEGER : value == value ? value : 0) : 0 === value ? value : 0;
            }
            function toInteger(value) {
                var result = toFinite(value),
                    remainder = result % 1;
                return result == result ? (remainder ? result - remainder : result) : 0;
            }
            function toLength(value) {
                return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
            }
            function toNumber(value) {
                if ("number" == typeof value) return value;
                if (isSymbol(value)) return NAN;
                if (isObject(value)) {
                    var other = "function" == typeof value.valueOf ? value.valueOf() : value;
                    value = isObject(other) ? other + "" : other;
                }
                if ("string" != typeof value) return 0 === value ? value : +value;
                value = value.replace(reTrim, "");
                var isBinary = reIsBinary.test(value);
                return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
            }
            function toPlainObject(value) {
                return copyObject(value, keysIn(value));
            }
            function toString(value) {
                return null == value ? "" : baseToString(value);
            }
            var assign = createAssigner(function (object, source) {
                    if (isPrototype(source) || isArrayLike(source)) copyObject(source, keys(source), object);
                    else for (var key in source) hasOwnProperty.call(source, key) && assignValue(object, key, source[key]);
                }),
                assignIn = createAssigner(function (object, source) {
                    copyObject(source, keysIn(source), object);
                }),
                assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
                    copyObject(source, keysIn(source), object, customizer);
                }),
                assignWith = createAssigner(function (object, source, srcIndex, customizer) {
                    copyObject(source, keys(source), object, customizer);
                }),
                at = flatRest(baseAt);
            var defaults = baseRest(function (object, sources) {
                    object = Object(object);
                    var index = -1,
                        length = sources.length,
                        guard = length > 2 ? sources[2] : undefined;
                    for (guard && isIterateeCall(sources[0], sources[1], guard) && (length = 1); ++index < length; )
                        for (var source = sources[index], props = keysIn(source), propsIndex = -1, propsLength = props.length; ++propsIndex < propsLength; ) {
                            var key = props[propsIndex],
                                value = object[key];
                            (value === undefined || (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) && (object[key] = source[key]);
                        }
                    return object;
                }),
                defaultsDeep = baseRest(function (args) {
                    return args.push(undefined, customDefaultsMerge), apply(mergeWith, undefined, args);
                });
            function get(object, path, defaultValue) {
                var result = null == object ? undefined : baseGet(object, path);
                return result === undefined ? defaultValue : result;
            }
            function hasIn(object, path) {
                return null != object && hasPath(object, path, baseHasIn);
            }
            var invert = createInverter(function (result, value, key) {
                    null != value && "function" != typeof value.toString && (value = nativeObjectToString.call(value)), (result[value] = key);
                }, constant(identity)),
                invertBy = createInverter(function (result, value, key) {
                    null != value && "function" != typeof value.toString && (value = nativeObjectToString.call(value)), hasOwnProperty.call(result, value) ? result[value].push(key) : (result[value] = [key]);
                }, getIteratee),
                invoke = baseRest(baseInvoke);
            function keys(object) {
                return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
            }
            function keysIn(object) {
                return isArrayLike(object) ? arrayLikeKeys(object, !0) : baseKeysIn(object);
            }
            var merge = createAssigner(function (object, source, srcIndex) {
                    baseMerge(object, source, srcIndex);
                }),
                mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
                    baseMerge(object, source, srcIndex, customizer);
                }),
                omit = flatRest(function (object, paths) {
                    var result = {};
                    if (null == object) return result;
                    var isDeep = !1;
                    (paths = arrayMap(paths, function (path) {
                        return (path = castPath(path, object)), isDeep || (isDeep = path.length > 1), path;
                    })),
                        copyObject(object, getAllKeysIn(object), result),
                        isDeep && (result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone));
                    for (var length = paths.length; length--; ) baseUnset(result, paths[length]);
                    return result;
                });
            var pick = flatRest(function (object, paths) {
                return null == object
                    ? {}
                    : (function (object, paths) {
                          return basePickBy(object, paths, function (value, path) {
                              return hasIn(object, path);
                          });
                      })(object, paths);
            });
            function pickBy(object, predicate) {
                if (null == object) return {};
                var props = arrayMap(getAllKeysIn(object), function (prop) {
                    return [prop];
                });
                return (
                    (predicate = getIteratee(predicate)),
                    basePickBy(object, props, function (value, path) {
                        return predicate(value, path[0]);
                    })
                );
            }
            var toPairs = createToPairs(keys),
                toPairsIn = createToPairs(keysIn);
            function values(object) {
                return null == object ? [] : baseValues(object, keys(object));
            }
            var camelCase = createCompounder(function (result, word, index) {
                return (word = word.toLowerCase()), result + (index ? capitalize(word) : word);
            });
            function capitalize(string) {
                return upperFirst(toString(string).toLowerCase());
            }
            function deburr(string) {
                return (string = toString(string)) && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
            }
            var kebabCase = createCompounder(function (result, word, index) {
                    return result + (index ? "-" : "") + word.toLowerCase();
                }),
                lowerCase = createCompounder(function (result, word, index) {
                    return result + (index ? " " : "") + word.toLowerCase();
                }),
                lowerFirst = createCaseFirst("toLowerCase");
            var snakeCase = createCompounder(function (result, word, index) {
                return result + (index ? "_" : "") + word.toLowerCase();
            });
            var startCase = createCompounder(function (result, word, index) {
                return result + (index ? " " : "") + upperFirst(word);
            });
            var upperCase = createCompounder(function (result, word, index) {
                    return result + (index ? " " : "") + word.toUpperCase();
                }),
                upperFirst = createCaseFirst("toUpperCase");
            function words(string, pattern, guard) {
                return (
                    (string = toString(string)),
                    (pattern = guard ? undefined : pattern) === undefined
                        ? (function (string) {
                              return reHasUnicodeWord.test(string);
                          })(string)
                            ? (function (string) {
                                  return string.match(reUnicodeWord) || [];
                              })(string)
                            : (function (string) {
                                  return string.match(reAsciiWord) || [];
                              })(string)
                        : string.match(pattern) || []
                );
            }
            var attempt = baseRest(function (func, args) {
                    try {
                        return apply(func, undefined, args);
                    } catch (e) {
                        return isError(e) ? e : new Error(e);
                    }
                }),
                bindAll = flatRest(function (object, methodNames) {
                    return (
                        arrayEach(methodNames, function (key) {
                            (key = toKey(key)), baseAssignValue(object, key, bind(object[key], object));
                        }),
                        object
                    );
                });
            function constant(value) {
                return function () {
                    return value;
                };
            }
            var flow = createFlow(),
                flowRight = createFlow(!0);
            function identity(value) {
                return value;
            }
            function iteratee(func) {
                return baseIteratee("function" == typeof func ? func : baseClone(func, CLONE_DEEP_FLAG));
            }
            var method = baseRest(function (path, args) {
                    return function (object) {
                        return baseInvoke(object, path, args);
                    };
                }),
                methodOf = baseRest(function (object, args) {
                    return function (path) {
                        return baseInvoke(object, path, args);
                    };
                });
            function mixin(object, source, options) {
                var props = keys(source),
                    methodNames = baseFunctions(source, props);
                null != options || (isObject(source) && (methodNames.length || !props.length)) || ((options = source), (source = object), (object = this), (methodNames = baseFunctions(source, keys(source))));
                var chain = !(isObject(options) && "chain" in options && !options.chain),
                    isFunc = isFunction(object);
                return (
                    arrayEach(methodNames, function (methodName) {
                        var func = source[methodName];
                        (object[methodName] = func),
                            isFunc &&
                                (object.prototype[methodName] = function () {
                                    var chainAll = this.__chain__;
                                    if (chain || chainAll) {
                                        var result = object(this.__wrapped__);
                                        return (result.__actions__ = copyArray(this.__actions__)).push({ func: func, args: arguments, thisArg: object }), (result.__chain__ = chainAll), result;
                                    }
                                    return func.apply(object, arrayPush([this.value()], arguments));
                                });
                    }),
                    object
                );
            }
            function noop() {}
            var over = createOver(arrayMap),
                overEvery = createOver(arrayEvery),
                overSome = createOver(arraySome);
            function property(path) {
                return isKey(path)
                    ? baseProperty(toKey(path))
                    : (function (path) {
                          return function (object) {
                              return baseGet(object, path);
                          };
                      })(path);
            }
            var range = createRange(),
                rangeRight = createRange(!0);
            function stubArray() {
                return [];
            }
            function stubFalse() {
                return !1;
            }
            var add = createMathOperation(function (augend, addend) {
                    return augend + addend;
                }, 0),
                ceil = createRound("ceil"),
                divide = createMathOperation(function (dividend, divisor) {
                    return dividend / divisor;
                }, 1),
                floor = createRound("floor");
            var source,
                multiply = createMathOperation(function (multiplier, multiplicand) {
                    return multiplier * multiplicand;
                }, 1),
                round = createRound("round"),
                subtract = createMathOperation(function (minuend, subtrahend) {
                    return minuend - subtrahend;
                }, 0);
            return (
                (lodash.after = function (n, func) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    return (
                        (n = toInteger(n)),
                        function () {
                            if (--n < 1) return func.apply(this, arguments);
                        }
                    );
                }),
                (lodash.ary = ary),
                (lodash.assign = assign),
                (lodash.assignIn = assignIn),
                (lodash.assignInWith = assignInWith),
                (lodash.assignWith = assignWith),
                (lodash.at = at),
                (lodash.before = before),
                (lodash.bind = bind),
                (lodash.bindAll = bindAll),
                (lodash.bindKey = bindKey),
                (lodash.castArray = function () {
                    if (!arguments.length) return [];
                    var value = arguments[0];
                    return isArray(value) ? value : [value];
                }),
                (lodash.chain = chain),
                (lodash.chunk = function (array, size, guard) {
                    size = (guard ? isIterateeCall(array, size, guard) : size === undefined) ? 1 : nativeMax(toInteger(size), 0);
                    var length = null == array ? 0 : array.length;
                    if (!length || size < 1) return [];
                    for (var index = 0, resIndex = 0, result = Array(nativeCeil(length / size)); index < length; ) result[resIndex++] = baseSlice(array, index, (index += size));
                    return result;
                }),
                (lodash.compact = function (array) {
                    for (var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = []; ++index < length; ) {
                        var value = array[index];
                        value && (result[resIndex++] = value);
                    }
                    return result;
                }),
                (lodash.concat = function () {
                    var length = arguments.length;
                    if (!length) return [];
                    for (var args = Array(length - 1), array = arguments[0], index = length; index--; ) args[index - 1] = arguments[index];
                    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
                }),
                (lodash.cond = function (pairs) {
                    var length = null == pairs ? 0 : pairs.length,
                        toIteratee = getIteratee();
                    return (
                        (pairs = length
                            ? arrayMap(pairs, function (pair) {
                                  if ("function" != typeof pair[1]) throw new TypeError(FUNC_ERROR_TEXT);
                                  return [toIteratee(pair[0]), pair[1]];
                              })
                            : []),
                        baseRest(function (args) {
                            for (var index = -1; ++index < length; ) {
                                var pair = pairs[index];
                                if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                            }
                        })
                    );
                }),
                (lodash.conforms = function (source) {
                    return (function (source) {
                        var props = keys(source);
                        return function (object) {
                            return baseConformsTo(object, source, props);
                        };
                    })(baseClone(source, CLONE_DEEP_FLAG));
                }),
                (lodash.constant = constant),
                (lodash.countBy = countBy),
                (lodash.create = function (prototype, properties) {
                    var result = baseCreate(prototype);
                    return null == properties ? result : baseAssign(result, properties);
                }),
                (lodash.curry = function curry(func, arity, guard) {
                    var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, (arity = guard ? undefined : arity));
                    return (result.placeholder = curry.placeholder), result;
                }),
                (lodash.curryRight = function curryRight(func, arity, guard) {
                    var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, (arity = guard ? undefined : arity));
                    return (result.placeholder = curryRight.placeholder), result;
                }),
                (lodash.debounce = debounce),
                (lodash.defaults = defaults),
                (lodash.defaultsDeep = defaultsDeep),
                (lodash.defer = defer),
                (lodash.delay = delay),
                (lodash.difference = difference),
                (lodash.differenceBy = differenceBy),
                (lodash.differenceWith = differenceWith),
                (lodash.drop = function (array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, (n = guard || n === undefined ? 1 : toInteger(n)) < 0 ? 0 : n, length) : [];
                }),
                (lodash.dropRight = function (array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, 0, (n = length - (n = guard || n === undefined ? 1 : toInteger(n))) < 0 ? 0 : n) : [];
                }),
                (lodash.dropRightWhile = function (array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !0, !0) : [];
                }),
                (lodash.dropWhile = function (array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !0) : [];
                }),
                (lodash.fill = function (array, value, start, end) {
                    var length = null == array ? 0 : array.length;
                    return length
                        ? (start && "number" != typeof start && isIterateeCall(array, value, start) && ((start = 0), (end = length)),
                          (function (array, value, start, end) {
                              var length = array.length;
                              for (
                                  (start = toInteger(start)) < 0 && (start = -start > length ? 0 : length + start),
                                      (end = end === undefined || end > length ? length : toInteger(end)) < 0 && (end += length),
                                      end = start > end ? 0 : toLength(end);
                                  start < end;

                              )
                                  array[start++] = value;
                              return array;
                          })(array, value, start, end))
                        : [];
                }),
                (lodash.filter = function (collection, predicate) {
                    return (isArray(collection) ? arrayFilter : baseFilter)(collection, getIteratee(predicate, 3));
                }),
                (lodash.flatMap = function (collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), 1);
                }),
                (lodash.flatMapDeep = function (collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), INFINITY);
                }),
                (lodash.flatMapDepth = function (collection, iteratee, depth) {
                    return (depth = depth === undefined ? 1 : toInteger(depth)), baseFlatten(map(collection, iteratee), depth);
                }),
                (lodash.flatten = flatten),
                (lodash.flattenDeep = function (array) {
                    return null != array && array.length ? baseFlatten(array, INFINITY) : [];
                }),
                (lodash.flattenDepth = function (array, depth) {
                    return null != array && array.length ? baseFlatten(array, (depth = depth === undefined ? 1 : toInteger(depth))) : [];
                }),
                (lodash.flip = function (func) {
                    return createWrap(func, WRAP_FLIP_FLAG);
                }),
                (lodash.flow = flow),
                (lodash.flowRight = flowRight),
                (lodash.fromPairs = function (pairs) {
                    for (var index = -1, length = null == pairs ? 0 : pairs.length, result = {}; ++index < length; ) {
                        var pair = pairs[index];
                        result[pair[0]] = pair[1];
                    }
                    return result;
                }),
                (lodash.functions = function (object) {
                    return null == object ? [] : baseFunctions(object, keys(object));
                }),
                (lodash.functionsIn = function (object) {
                    return null == object ? [] : baseFunctions(object, keysIn(object));
                }),
                (lodash.groupBy = groupBy),
                (lodash.initial = function (array) {
                    return null != array && array.length ? baseSlice(array, 0, -1) : [];
                }),
                (lodash.intersection = intersection),
                (lodash.intersectionBy = intersectionBy),
                (lodash.intersectionWith = intersectionWith),
                (lodash.invert = invert),
                (lodash.invertBy = invertBy),
                (lodash.invokeMap = invokeMap),
                (lodash.iteratee = iteratee),
                (lodash.keyBy = keyBy),
                (lodash.keys = keys),
                (lodash.keysIn = keysIn),
                (lodash.map = map),
                (lodash.mapKeys = function (object, iteratee) {
                    var result = {};
                    return (
                        (iteratee = getIteratee(iteratee, 3)),
                        baseForOwn(object, function (value, key, object) {
                            baseAssignValue(result, iteratee(value, key, object), value);
                        }),
                        result
                    );
                }),
                (lodash.mapValues = function (object, iteratee) {
                    var result = {};
                    return (
                        (iteratee = getIteratee(iteratee, 3)),
                        baseForOwn(object, function (value, key, object) {
                            baseAssignValue(result, key, iteratee(value, key, object));
                        }),
                        result
                    );
                }),
                (lodash.matches = function (source) {
                    return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                }),
                (lodash.matchesProperty = function (path, srcValue) {
                    return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                }),
                (lodash.memoize = memoize),
                (lodash.merge = merge),
                (lodash.mergeWith = mergeWith),
                (lodash.method = method),
                (lodash.methodOf = methodOf),
                (lodash.mixin = mixin),
                (lodash.negate = negate),
                (lodash.nthArg = function (n) {
                    return (
                        (n = toInteger(n)),
                        baseRest(function (args) {
                            return baseNth(args, n);
                        })
                    );
                }),
                (lodash.omit = omit),
                (lodash.omitBy = function (object, predicate) {
                    return pickBy(object, negate(getIteratee(predicate)));
                }),
                (lodash.once = function (func) {
                    return before(2, func);
                }),
                (lodash.orderBy = function (collection, iteratees, orders, guard) {
                    return null == collection
                        ? []
                        : (isArray(iteratees) || (iteratees = null == iteratees ? [] : [iteratees]), isArray((orders = guard ? undefined : orders)) || (orders = null == orders ? [] : [orders]), baseOrderBy(collection, iteratees, orders));
                }),
                (lodash.over = over),
                (lodash.overArgs = overArgs),
                (lodash.overEvery = overEvery),
                (lodash.overSome = overSome),
                (lodash.partial = partial),
                (lodash.partialRight = partialRight),
                (lodash.partition = partition),
                (lodash.pick = pick),
                (lodash.pickBy = pickBy),
                (lodash.property = property),
                (lodash.propertyOf = function (object) {
                    return function (path) {
                        return null == object ? undefined : baseGet(object, path);
                    };
                }),
                (lodash.pull = pull),
                (lodash.pullAll = pullAll),
                (lodash.pullAllBy = function (array, values, iteratee) {
                    return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
                }),
                (lodash.pullAllWith = function (array, values, comparator) {
                    return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
                }),
                (lodash.pullAt = pullAt),
                (lodash.range = range),
                (lodash.rangeRight = rangeRight),
                (lodash.rearg = rearg),
                (lodash.reject = function (collection, predicate) {
                    return (isArray(collection) ? arrayFilter : baseFilter)(collection, negate(getIteratee(predicate, 3)));
                }),
                (lodash.remove = function (array, predicate) {
                    var result = [];
                    if (!array || !array.length) return result;
                    var index = -1,
                        indexes = [],
                        length = array.length;
                    for (predicate = getIteratee(predicate, 3); ++index < length; ) {
                        var value = array[index];
                        predicate(value, index, array) && (result.push(value), indexes.push(index));
                    }
                    return basePullAt(array, indexes), result;
                }),
                (lodash.rest = function (func, start) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    return baseRest(func, (start = start === undefined ? start : toInteger(start)));
                }),
                (lodash.reverse = reverse),
                (lodash.sampleSize = function (collection, n, guard) {
                    return (n = (guard ? isIterateeCall(collection, n, guard) : n === undefined) ? 1 : toInteger(n)), (isArray(collection) ? arraySampleSize : baseSampleSize)(collection, n);
                }),
                (lodash.set = function (object, path, value) {
                    return null == object ? object : baseSet(object, path, value);
                }),
                (lodash.setWith = function (object, path, value, customizer) {
                    return (customizer = "function" == typeof customizer ? customizer : undefined), null == object ? object : baseSet(object, path, value, customizer);
                }),
                (lodash.shuffle = function (collection) {
                    return (isArray(collection) ? arrayShuffle : baseShuffle)(collection);
                }),
                (lodash.slice = function (array, start, end) {
                    var length = null == array ? 0 : array.length;
                    return length
                        ? (end && "number" != typeof end && isIterateeCall(array, start, end) ? ((start = 0), (end = length)) : ((start = null == start ? 0 : toInteger(start)), (end = end === undefined ? length : toInteger(end))),
                          baseSlice(array, start, end))
                        : [];
                }),
                (lodash.sortBy = sortBy),
                (lodash.sortedUniq = function (array) {
                    return array && array.length ? baseSortedUniq(array) : [];
                }),
                (lodash.sortedUniqBy = function (array, iteratee) {
                    return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
                }),
                (lodash.split = function (string, separator, limit) {
                    return (
                        limit && "number" != typeof limit && isIterateeCall(string, separator, limit) && (separator = limit = undefined),
                        (limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0)
                            ? (string = toString(string)) && ("string" == typeof separator || (null != separator && !isRegExp(separator))) && !(separator = baseToString(separator)) && hasUnicode(string)
                                ? castSlice(stringToArray(string), 0, limit)
                                : string.split(separator, limit)
                            : []
                    );
                }),
                (lodash.spread = function (func, start) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    return (
                        (start = null == start ? 0 : nativeMax(toInteger(start), 0)),
                        baseRest(function (args) {
                            var array = args[start],
                                otherArgs = castSlice(args, 0, start);
                            return array && arrayPush(otherArgs, array), apply(func, this, otherArgs);
                        })
                    );
                }),
                (lodash.tail = function (array) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, 1, length) : [];
                }),
                (lodash.take = function (array, n, guard) {
                    return array && array.length ? baseSlice(array, 0, (n = guard || n === undefined ? 1 : toInteger(n)) < 0 ? 0 : n) : [];
                }),
                (lodash.takeRight = function (array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, (n = length - (n = guard || n === undefined ? 1 : toInteger(n))) < 0 ? 0 : n, length) : [];
                }),
                (lodash.takeRightWhile = function (array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !1, !0) : [];
                }),
                (lodash.takeWhile = function (array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
                }),
                (lodash.tap = function (value, interceptor) {
                    return interceptor(value), value;
                }),
                (lodash.throttle = function (func, wait, options) {
                    var leading = !0,
                        trailing = !0;
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    return (
                        isObject(options) && ((leading = "leading" in options ? !!options.leading : leading), (trailing = "trailing" in options ? !!options.trailing : trailing)),
                        debounce(func, wait, { leading: leading, maxWait: wait, trailing: trailing })
                    );
                }),
                (lodash.thru = thru),
                (lodash.toArray = toArray),
                (lodash.toPairs = toPairs),
                (lodash.toPairsIn = toPairsIn),
                (lodash.toPath = function (value) {
                    return isArray(value) ? arrayMap(value, toKey) : isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
                }),
                (lodash.toPlainObject = toPlainObject),
                (lodash.transform = function (object, iteratee, accumulator) {
                    var isArr = isArray(object),
                        isArrLike = isArr || isBuffer(object) || isTypedArray(object);
                    if (((iteratee = getIteratee(iteratee, 4)), null == accumulator)) {
                        var Ctor = object && object.constructor;
                        accumulator = isArrLike ? (isArr ? new Ctor() : []) : isObject(object) && isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                    }
                    return (
                        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
                            return iteratee(accumulator, value, index, object);
                        }),
                        accumulator
                    );
                }),
                (lodash.unary = function (func) {
                    return ary(func, 1);
                }),
                (lodash.union = union),
                (lodash.unionBy = unionBy),
                (lodash.unionWith = unionWith),
                (lodash.uniq = function (array) {
                    return array && array.length ? baseUniq(array) : [];
                }),
                (lodash.uniqBy = function (array, iteratee) {
                    return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
                }),
                (lodash.uniqWith = function (array, comparator) {
                    return (comparator = "function" == typeof comparator ? comparator : undefined), array && array.length ? baseUniq(array, undefined, comparator) : [];
                }),
                (lodash.unset = function (object, path) {
                    return null == object || baseUnset(object, path);
                }),
                (lodash.unzip = unzip),
                (lodash.unzipWith = unzipWith),
                (lodash.update = function (object, path, updater) {
                    return null == object ? object : baseUpdate(object, path, castFunction(updater));
                }),
                (lodash.updateWith = function (object, path, updater, customizer) {
                    return (customizer = "function" == typeof customizer ? customizer : undefined), null == object ? object : baseUpdate(object, path, castFunction(updater), customizer);
                }),
                (lodash.values = values),
                (lodash.valuesIn = function (object) {
                    return null == object ? [] : baseValues(object, keysIn(object));
                }),
                (lodash.without = without),
                (lodash.words = words),
                (lodash.wrap = function (value, wrapper) {
                    return partial(castFunction(wrapper), value);
                }),
                (lodash.xor = xor),
                (lodash.xorBy = xorBy),
                (lodash.xorWith = xorWith),
                (lodash.zip = zip),
                (lodash.zipObject = function (props, values) {
                    return baseZipObject(props || [], values || [], assignValue);
                }),
                (lodash.zipObjectDeep = function (props, values) {
                    return baseZipObject(props || [], values || [], baseSet);
                }),
                (lodash.zipWith = zipWith),
                (lodash.entries = toPairs),
                (lodash.entriesIn = toPairsIn),
                (lodash.extend = assignIn),
                (lodash.extendWith = assignInWith),
                mixin(lodash, lodash),
                (lodash.add = add),
                (lodash.attempt = attempt),
                (lodash.camelCase = camelCase),
                (lodash.capitalize = capitalize),
                (lodash.ceil = ceil),
                (lodash.clamp = function (number, lower, upper) {
                    return (
                        upper === undefined && ((upper = lower), (lower = undefined)),
                        upper !== undefined && (upper = (upper = toNumber(upper)) == upper ? upper : 0),
                        lower !== undefined && (lower = (lower = toNumber(lower)) == lower ? lower : 0),
                        baseClamp(toNumber(number), lower, upper)
                    );
                }),
                (lodash.clone = function (value) {
                    return baseClone(value, CLONE_SYMBOLS_FLAG);
                }),
                (lodash.cloneDeep = function (value) {
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
                }),
                (lodash.cloneDeepWith = function (value, customizer) {
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, (customizer = "function" == typeof customizer ? customizer : undefined));
                }),
                (lodash.cloneWith = function (value, customizer) {
                    return baseClone(value, CLONE_SYMBOLS_FLAG, (customizer = "function" == typeof customizer ? customizer : undefined));
                }),
                (lodash.conformsTo = function (object, source) {
                    return null == source || baseConformsTo(object, source, keys(source));
                }),
                (lodash.deburr = deburr),
                (lodash.defaultTo = function (value, defaultValue) {
                    return null == value || value != value ? defaultValue : value;
                }),
                (lodash.divide = divide),
                (lodash.endsWith = function (string, target, position) {
                    (string = toString(string)), (target = baseToString(target));
                    var length = string.length,
                        end = (position = position === undefined ? length : baseClamp(toInteger(position), 0, length));
                    return (position -= target.length) >= 0 && string.slice(position, end) == target;
                }),
                (lodash.eq = eq),
                (lodash.escape = function (string) {
                    return (string = toString(string)) && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
                }),
                (lodash.escapeRegExp = function (string) {
                    return (string = toString(string)) && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
                }),
                (lodash.every = function (collection, predicate, guard) {
                    var func = isArray(collection) ? arrayEvery : baseEvery;
                    return guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined), func(collection, getIteratee(predicate, 3));
                }),
                (lodash.find = find),
                (lodash.findIndex = findIndex),
                (lodash.findKey = function (object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
                }),
                (lodash.findLast = findLast),
                (lodash.findLastIndex = findLastIndex),
                (lodash.findLastKey = function (object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
                }),
                (lodash.floor = floor),
                (lodash.forEach = forEach),
                (lodash.forEachRight = forEachRight),
                (lodash.forIn = function (object, iteratee) {
                    return null == object ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
                }),
                (lodash.forInRight = function (object, iteratee) {
                    return null == object ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
                }),
                (lodash.forOwn = function (object, iteratee) {
                    return object && baseForOwn(object, getIteratee(iteratee, 3));
                }),
                (lodash.forOwnRight = function (object, iteratee) {
                    return object && baseForOwnRight(object, getIteratee(iteratee, 3));
                }),
                (lodash.get = get),
                (lodash.gt = gt),
                (lodash.gte = gte),
                (lodash.has = function (object, path) {
                    return null != object && hasPath(object, path, baseHas);
                }),
                (lodash.hasIn = hasIn),
                (lodash.head = head),
                (lodash.identity = identity),
                (lodash.includes = function (collection, value, fromIndex, guard) {
                    (collection = isArrayLike(collection) ? collection : values(collection)), (fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0);
                    var length = collection.length;
                    return (
                        fromIndex < 0 && (fromIndex = nativeMax(length + fromIndex, 0)), isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1
                    );
                }),
                (lodash.indexOf = function (array, value, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = null == fromIndex ? 0 : toInteger(fromIndex);
                    return index < 0 && (index = nativeMax(length + index, 0)), baseIndexOf(array, value, index);
                }),
                (lodash.inRange = function (number, start, end) {
                    return (
                        (start = toFinite(start)),
                        end === undefined ? ((end = start), (start = 0)) : (end = toFinite(end)),
                        (function (number, start, end) {
                            return number >= nativeMin(start, end) && number < nativeMax(start, end);
                        })((number = toNumber(number)), start, end)
                    );
                }),
                (lodash.invoke = invoke),
                (lodash.isArguments = isArguments),
                (lodash.isArray = isArray),
                (lodash.isArrayBuffer = isArrayBuffer),
                (lodash.isArrayLike = isArrayLike),
                (lodash.isArrayLikeObject = isArrayLikeObject),
                (lodash.isBoolean = function (value) {
                    return !0 === value || !1 === value || (isObjectLike(value) && baseGetTag(value) == boolTag);
                }),
                (lodash.isBuffer = isBuffer),
                (lodash.isDate = isDate),
                (lodash.isElement = function (value) {
                    return isObjectLike(value) && 1 === value.nodeType && !isPlainObject(value);
                }),
                (lodash.isEmpty = function (value) {
                    if (null == value) return !0;
                    if (isArrayLike(value) && (isArray(value) || "string" == typeof value || "function" == typeof value.splice || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
                    var tag = getTag(value);
                    if (tag == mapTag || tag == setTag) return !value.size;
                    if (isPrototype(value)) return !baseKeys(value).length;
                    for (var key in value) if (hasOwnProperty.call(value, key)) return !1;
                    return !0;
                }),
                (lodash.isEqual = function (value, other) {
                    return baseIsEqual(value, other);
                }),
                (lodash.isEqualWith = function (value, other, customizer) {
                    var result = (customizer = "function" == typeof customizer ? customizer : undefined) ? customizer(value, other) : undefined;
                    return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
                }),
                (lodash.isError = isError),
                (lodash.isFinite = function (value) {
                    return "number" == typeof value && nativeIsFinite(value);
                }),
                (lodash.isFunction = isFunction),
                (lodash.isInteger = isInteger),
                (lodash.isLength = isLength),
                (lodash.isMap = isMap),
                (lodash.isMatch = function (object, source) {
                    return object === source || baseIsMatch(object, source, getMatchData(source));
                }),
                (lodash.isMatchWith = function (object, source, customizer) {
                    return (customizer = "function" == typeof customizer ? customizer : undefined), baseIsMatch(object, source, getMatchData(source), customizer);
                }),
                (lodash.isNaN = function (value) {
                    return isNumber(value) && value != +value;
                }),
                (lodash.isNative = function (value) {
                    if (isMaskable(value)) throw new Error(CORE_ERROR_TEXT);
                    return baseIsNative(value);
                }),
                (lodash.isNil = function (value) {
                    return null == value;
                }),
                (lodash.isNull = function (value) {
                    return null === value;
                }),
                (lodash.isNumber = isNumber),
                (lodash.isObject = isObject),
                (lodash.isObjectLike = isObjectLike),
                (lodash.isPlainObject = isPlainObject),
                (lodash.isRegExp = isRegExp),
                (lodash.isSafeInteger = function (value) {
                    return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
                }),
                (lodash.isSet = isSet),
                (lodash.isString = isString),
                (lodash.isSymbol = isSymbol),
                (lodash.isTypedArray = isTypedArray),
                (lodash.isUndefined = function (value) {
                    return value === undefined;
                }),
                (lodash.isWeakMap = function (value) {
                    return isObjectLike(value) && getTag(value) == weakMapTag;
                }),
                (lodash.isWeakSet = function (value) {
                    return isObjectLike(value) && baseGetTag(value) == weakSetTag;
                }),
                (lodash.join = function (array, separator) {
                    return null == array ? "" : nativeJoin.call(array, separator);
                }),
                (lodash.kebabCase = kebabCase),
                (lodash.last = last),
                (lodash.lastIndexOf = function (array, value, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = length;
                    return (
                        fromIndex !== undefined && (index = (index = toInteger(fromIndex)) < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)),
                        value == value
                            ? (function (array, value, fromIndex) {
                                  for (var index = fromIndex + 1; index--; ) if (array[index] === value) return index;
                                  return index;
                              })(array, value, index)
                            : baseFindIndex(array, baseIsNaN, index, !0)
                    );
                }),
                (lodash.lowerCase = lowerCase),
                (lodash.lowerFirst = lowerFirst),
                (lodash.lt = lt),
                (lodash.lte = lte),
                (lodash.max = function (array) {
                    return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
                }),
                (lodash.maxBy = function (array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
                }),
                (lodash.mean = function (array) {
                    return baseMean(array, identity);
                }),
                (lodash.meanBy = function (array, iteratee) {
                    return baseMean(array, getIteratee(iteratee, 2));
                }),
                (lodash.min = function (array) {
                    return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
                }),
                (lodash.minBy = function (array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
                }),
                (lodash.stubArray = stubArray),
                (lodash.stubFalse = stubFalse),
                (lodash.stubObject = function () {
                    return {};
                }),
                (lodash.stubString = function () {
                    return "";
                }),
                (lodash.stubTrue = function () {
                    return !0;
                }),
                (lodash.multiply = multiply),
                (lodash.nth = function (array, n) {
                    return array && array.length ? baseNth(array, toInteger(n)) : undefined;
                }),
                (lodash.noConflict = function () {
                    return root._ === this && (root._ = oldDash), this;
                }),
                (lodash.noop = noop),
                (lodash.now = now),
                (lodash.pad = function (string, length, chars) {
                    string = toString(string);
                    var strLength = (length = toInteger(length)) ? stringSize(string) : 0;
                    if (!length || strLength >= length) return string;
                    var mid = (length - strLength) / 2;
                    return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
                }),
                (lodash.padEnd = function (string, length, chars) {
                    string = toString(string);
                    var strLength = (length = toInteger(length)) ? stringSize(string) : 0;
                    return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
                }),
                (lodash.padStart = function (string, length, chars) {
                    string = toString(string);
                    var strLength = (length = toInteger(length)) ? stringSize(string) : 0;
                    return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
                }),
                (lodash.parseInt = function (string, radix, guard) {
                    return guard || null == radix ? (radix = 0) : radix && (radix = +radix), nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
                }),
                (lodash.random = function (lower, upper, floating) {
                    if (
                        (floating && "boolean" != typeof floating && isIterateeCall(lower, upper, floating) && (upper = floating = undefined),
                        floating === undefined && ("boolean" == typeof upper ? ((floating = upper), (upper = undefined)) : "boolean" == typeof lower && ((floating = lower), (lower = undefined))),
                        lower === undefined && upper === undefined ? ((lower = 0), (upper = 1)) : ((lower = toFinite(lower)), upper === undefined ? ((upper = lower), (lower = 0)) : (upper = toFinite(upper))),
                        lower > upper)
                    ) {
                        var temp = lower;
                        (lower = upper), (upper = temp);
                    }
                    if (floating || lower % 1 || upper % 1) {
                        var rand = nativeRandom();
                        return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
                    }
                    return baseRandom(lower, upper);
                }),
                (lodash.reduce = function (collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduce : baseReduce,
                        initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
                }),
                (lodash.reduceRight = function (collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduceRight : baseReduce,
                        initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
                }),
                (lodash.repeat = function (string, n, guard) {
                    return (n = (guard ? isIterateeCall(string, n, guard) : n === undefined) ? 1 : toInteger(n)), baseRepeat(toString(string), n);
                }),
                (lodash.replace = function () {
                    var args = arguments,
                        string = toString(args[0]);
                    return args.length < 3 ? string : string.replace(args[1], args[2]);
                }),
                (lodash.result = function (object, path, defaultValue) {
                    var index = -1,
                        length = (path = castPath(path, object)).length;
                    for (length || ((length = 1), (object = undefined)); ++index < length; ) {
                        var value = null == object ? undefined : object[toKey(path[index])];
                        value === undefined && ((index = length), (value = defaultValue)), (object = isFunction(value) ? value.call(object) : value);
                    }
                    return object;
                }),
                (lodash.round = round),
                (lodash.runInContext = runInContext),
                (lodash.sample = function (collection) {
                    return (isArray(collection) ? arraySample : baseSample)(collection);
                }),
                (lodash.size = function (collection) {
                    if (null == collection) return 0;
                    if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
                    var tag = getTag(collection);
                    return tag == mapTag || tag == setTag ? collection.size : baseKeys(collection).length;
                }),
                (lodash.snakeCase = snakeCase),
                (lodash.some = function (collection, predicate, guard) {
                    var func = isArray(collection) ? arraySome : baseSome;
                    return guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined), func(collection, getIteratee(predicate, 3));
                }),
                (lodash.sortedIndex = function (array, value) {
                    return baseSortedIndex(array, value);
                }),
                (lodash.sortedIndexBy = function (array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
                }),
                (lodash.sortedIndexOf = function (array, value) {
                    var length = null == array ? 0 : array.length;
                    if (length) {
                        var index = baseSortedIndex(array, value);
                        if (index < length && eq(array[index], value)) return index;
                    }
                    return -1;
                }),
                (lodash.sortedLastIndex = function (array, value) {
                    return baseSortedIndex(array, value, !0);
                }),
                (lodash.sortedLastIndexBy = function (array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), !0);
                }),
                (lodash.sortedLastIndexOf = function (array, value) {
                    if (null != array && array.length) {
                        var index = baseSortedIndex(array, value, !0) - 1;
                        if (eq(array[index], value)) return index;
                    }
                    return -1;
                }),
                (lodash.startCase = startCase),
                (lodash.startsWith = function (string, target, position) {
                    return (string = toString(string)), (position = null == position ? 0 : baseClamp(toInteger(position), 0, string.length)), (target = baseToString(target)), string.slice(position, position + target.length) == target;
                }),
                (lodash.subtract = subtract),
                (lodash.sum = function (array) {
                    return array && array.length ? baseSum(array, identity) : 0;
                }),
                (lodash.sumBy = function (array, iteratee) {
                    return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
                }),
                (lodash.template = function (string, options, guard) {
                    var settings = lodash.templateSettings;
                    guard && isIterateeCall(string, options, guard) && (options = undefined), (string = toString(string)), (options = assignInWith({}, options, settings, customDefaultsAssignIn));
                    var isEscaping,
                        isEvaluating,
                        imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
                        importsKeys = keys(imports),
                        importsValues = baseValues(imports, importsKeys),
                        index = 0,
                        interpolate = options.interpolate || reNoMatch,
                        source = "__p += '",
                        reDelimiters = RegExp(
                            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
                            "g"
                        ),
                        sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/[\r\n]/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
                    string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                        return (
                            interpolateValue || (interpolateValue = esTemplateValue),
                            (source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar)),
                            escapeValue && ((isEscaping = !0), (source += "' +\n__e(" + escapeValue + ") +\n'")),
                            evaluateValue && ((isEvaluating = !0), (source += "';\n" + evaluateValue + ";\n__p += '")),
                            interpolateValue && (source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'"),
                            (index = offset + match.length),
                            match
                        );
                    }),
                        (source += "';\n");
                    var variable = hasOwnProperty.call(options, "variable") && options.variable;
                    variable || (source = "with (obj) {\n" + source + "\n}\n"),
                        (source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;")),
                        (source =
                            "function(" +
                            (variable || "obj") +
                            ") {\n" +
                            (variable ? "" : "obj || (obj = {});\n") +
                            "var __t, __p = ''" +
                            (isEscaping ? ", __e = _.escape" : "") +
                            (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") +
                            source +
                            "return __p\n}");
                    var result = attempt(function () {
                        return Function(importsKeys, sourceURL + "return " + source).apply(undefined, importsValues);
                    });
                    if (((result.source = source), isError(result))) throw result;
                    return result;
                }),
                (lodash.times = function (n, iteratee) {
                    if ((n = toInteger(n)) < 1 || n > MAX_SAFE_INTEGER) return [];
                    var index = MAX_ARRAY_LENGTH,
                        length = nativeMin(n, MAX_ARRAY_LENGTH);
                    (iteratee = getIteratee(iteratee)), (n -= MAX_ARRAY_LENGTH);
                    for (var result = baseTimes(length, iteratee); ++index < n; ) iteratee(index);
                    return result;
                }),
                (lodash.toFinite = toFinite),
                (lodash.toInteger = toInteger),
                (lodash.toLength = toLength),
                (lodash.toLower = function (value) {
                    return toString(value).toLowerCase();
                }),
                (lodash.toNumber = toNumber),
                (lodash.toSafeInteger = function (value) {
                    return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : 0 === value ? value : 0;
                }),
                (lodash.toString = toString),
                (lodash.toUpper = function (value) {
                    return toString(value).toUpperCase();
                }),
                (lodash.trim = function (string, chars, guard) {
                    if ((string = toString(string)) && (guard || chars === undefined)) return string.replace(reTrim, "");
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string),
                        chrSymbols = stringToArray(chars);
                    return castSlice(strSymbols, charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1).join("");
                }),
                (lodash.trimEnd = function (string, chars, guard) {
                    if ((string = toString(string)) && (guard || chars === undefined)) return string.replace(reTrimEnd, "");
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string);
                    return castSlice(strSymbols, 0, charsEndIndex(strSymbols, stringToArray(chars)) + 1).join("");
                }),
                (lodash.trimStart = function (string, chars, guard) {
                    if ((string = toString(string)) && (guard || chars === undefined)) return string.replace(reTrimStart, "");
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string);
                    return castSlice(strSymbols, charsStartIndex(strSymbols, stringToArray(chars))).join("");
                }),
                (lodash.truncate = function (string, options) {
                    var length = DEFAULT_TRUNC_LENGTH,
                        omission = DEFAULT_TRUNC_OMISSION;
                    if (isObject(options)) {
                        var separator = "separator" in options ? options.separator : separator;
                        (length = "length" in options ? toInteger(options.length) : length), (omission = "omission" in options ? baseToString(options.omission) : omission);
                    }
                    var strLength = (string = toString(string)).length;
                    if (hasUnicode(string)) {
                        var strSymbols = stringToArray(string);
                        strLength = strSymbols.length;
                    }
                    if (length >= strLength) return string;
                    var end = length - stringSize(omission);
                    if (end < 1) return omission;
                    var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
                    if (separator === undefined) return result + omission;
                    if ((strSymbols && (end += result.length - end), isRegExp(separator))) {
                        if (string.slice(end).search(separator)) {
                            var match,
                                substring = result;
                            for (separator.global || (separator = RegExp(separator.source, toString(reFlags.exec(separator)) + "g")), separator.lastIndex = 0; (match = separator.exec(substring)); ) var newEnd = match.index;
                            result = result.slice(0, newEnd === undefined ? end : newEnd);
                        }
                    } else if (string.indexOf(baseToString(separator), end) != end) {
                        var index = result.lastIndexOf(separator);
                        index > -1 && (result = result.slice(0, index));
                    }
                    return result + omission;
                }),
                (lodash.unescape = function (string) {
                    return (string = toString(string)) && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
                }),
                (lodash.uniqueId = function (prefix) {
                    var id = ++idCounter;
                    return toString(prefix) + id;
                }),
                (lodash.upperCase = upperCase),
                (lodash.upperFirst = upperFirst),
                (lodash.each = forEach),
                (lodash.eachRight = forEachRight),
                (lodash.first = head),
                mixin(
                    lodash,
                    ((source = {}),
                    baseForOwn(lodash, function (func, methodName) {
                        hasOwnProperty.call(lodash.prototype, methodName) || (source[methodName] = func);
                    }),
                    source),
                    { chain: !1 }
                ),
                (lodash.VERSION = "4.17.15"),
                arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (methodName) {
                    lodash[methodName].placeholder = lodash;
                }),
                arrayEach(["drop", "take"], function (methodName, index) {
                    (LazyWrapper.prototype[methodName] = function (n) {
                        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                        var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                        return (
                            result.__filtered__ ? (result.__takeCount__ = nativeMin(n, result.__takeCount__)) : result.__views__.push({ size: nativeMin(n, MAX_ARRAY_LENGTH), type: methodName + (result.__dir__ < 0 ? "Right" : "") }), result
                        );
                    }),
                        (LazyWrapper.prototype[methodName + "Right"] = function (n) {
                            return this.reverse()[methodName](n).reverse();
                        });
                }),
                arrayEach(["filter", "map", "takeWhile"], function (methodName, index) {
                    var type = index + 1,
                        isFilter = type == LAZY_FILTER_FLAG || 3 == type;
                    LazyWrapper.prototype[methodName] = function (iteratee) {
                        var result = this.clone();
                        return result.__iteratees__.push({ iteratee: getIteratee(iteratee, 3), type: type }), (result.__filtered__ = result.__filtered__ || isFilter), result;
                    };
                }),
                arrayEach(["head", "last"], function (methodName, index) {
                    var takeName = "take" + (index ? "Right" : "");
                    LazyWrapper.prototype[methodName] = function () {
                        return this[takeName](1).value()[0];
                    };
                }),
                arrayEach(["initial", "tail"], function (methodName, index) {
                    var dropName = "drop" + (index ? "" : "Right");
                    LazyWrapper.prototype[methodName] = function () {
                        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
                    };
                }),
                (LazyWrapper.prototype.compact = function () {
                    return this.filter(identity);
                }),
                (LazyWrapper.prototype.find = function (predicate) {
                    return this.filter(predicate).head();
                }),
                (LazyWrapper.prototype.findLast = function (predicate) {
                    return this.reverse().find(predicate);
                }),
                (LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
                    return "function" == typeof path
                        ? new LazyWrapper(this)
                        : this.map(function (value) {
                              return baseInvoke(value, path, args);
                          });
                })),
                (LazyWrapper.prototype.reject = function (predicate) {
                    return this.filter(negate(getIteratee(predicate)));
                }),
                (LazyWrapper.prototype.slice = function (start, end) {
                    start = toInteger(start);
                    var result = this;
                    return result.__filtered__ && (start > 0 || end < 0)
                        ? new LazyWrapper(result)
                        : (start < 0 ? (result = result.takeRight(-start)) : start && (result = result.drop(start)), end !== undefined && (result = (end = toInteger(end)) < 0 ? result.dropRight(-end) : result.take(end - start)), result);
                }),
                (LazyWrapper.prototype.takeRightWhile = function (predicate) {
                    return this.reverse().takeWhile(predicate).reverse();
                }),
                (LazyWrapper.prototype.toArray = function () {
                    return this.take(MAX_ARRAY_LENGTH);
                }),
                baseForOwn(LazyWrapper.prototype, function (func, methodName) {
                    var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
                        isTaker = /^(?:head|last)$/.test(methodName),
                        lodashFunc = lodash[isTaker ? "take" + ("last" == methodName ? "Right" : "") : methodName],
                        retUnwrapped = isTaker || /^find/.test(methodName);
                    lodashFunc &&
                        (lodash.prototype[methodName] = function () {
                            var value = this.__wrapped__,
                                args = isTaker ? [1] : arguments,
                                isLazy = value instanceof LazyWrapper,
                                iteratee = args[0],
                                useLazy = isLazy || isArray(value),
                                interceptor = function (value) {
                                    var result = lodashFunc.apply(lodash, arrayPush([value], args));
                                    return isTaker && chainAll ? result[0] : result;
                                };
                            useLazy && checkIteratee && "function" == typeof iteratee && 1 != iteratee.length && (isLazy = useLazy = !1);
                            var chainAll = this.__chain__,
                                isHybrid = !!this.__actions__.length,
                                isUnwrapped = retUnwrapped && !chainAll,
                                onlyLazy = isLazy && !isHybrid;
                            if (!retUnwrapped && useLazy) {
                                value = onlyLazy ? value : new LazyWrapper(this);
                                var result = func.apply(value, args);
                                return result.__actions__.push({ func: thru, args: [interceptor], thisArg: undefined }), new LodashWrapper(result, chainAll);
                            }
                            return isUnwrapped && onlyLazy ? func.apply(this, args) : ((result = this.thru(interceptor)), isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result);
                        });
                }),
                arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function (methodName) {
                    var func = arrayProto[methodName],
                        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru",
                        retUnwrapped = /^(?:pop|shift)$/.test(methodName);
                    lodash.prototype[methodName] = function () {
                        var args = arguments;
                        if (retUnwrapped && !this.__chain__) {
                            var value = this.value();
                            return func.apply(isArray(value) ? value : [], args);
                        }
                        return this[chainName](function (value) {
                            return func.apply(isArray(value) ? value : [], args);
                        });
                    };
                }),
                baseForOwn(LazyWrapper.prototype, function (func, methodName) {
                    var lodashFunc = lodash[methodName];
                    if (lodashFunc) {
                        var key = lodashFunc.name + "";
                        hasOwnProperty.call(realNames, key) || (realNames[key] = []), realNames[key].push({ name: methodName, func: lodashFunc });
                    }
                }),
                (realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{ name: "wrapper", func: undefined }]),
                (LazyWrapper.prototype.clone = function () {
                    var result = new LazyWrapper(this.__wrapped__);
                    return (
                        (result.__actions__ = copyArray(this.__actions__)),
                        (result.__dir__ = this.__dir__),
                        (result.__filtered__ = this.__filtered__),
                        (result.__iteratees__ = copyArray(this.__iteratees__)),
                        (result.__takeCount__ = this.__takeCount__),
                        (result.__views__ = copyArray(this.__views__)),
                        result
                    );
                }),
                (LazyWrapper.prototype.reverse = function () {
                    if (this.__filtered__) {
                        var result = new LazyWrapper(this);
                        (result.__dir__ = -1), (result.__filtered__ = !0);
                    } else (result = this.clone()).__dir__ *= -1;
                    return result;
                }),
                (LazyWrapper.prototype.value = function () {
                    var array = this.__wrapped__.value(),
                        dir = this.__dir__,
                        isArr = isArray(array),
                        isRight = dir < 0,
                        arrLength = isArr ? array.length : 0,
                        view = (function (start, end, transforms) {
                            for (var index = -1, length = transforms.length; ++index < length; ) {
                                var data = transforms[index],
                                    size = data.size;
                                switch (data.type) {
                                    case "drop":
                                        start += size;
                                        break;
                                    case "dropRight":
                                        end -= size;
                                        break;
                                    case "take":
                                        end = nativeMin(end, start + size);
                                        break;
                                    case "takeRight":
                                        start = nativeMax(start, end - size);
                                }
                            }
                            return { start: start, end: end };
                        })(0, arrLength, this.__views__),
                        start = view.start,
                        end = view.end,
                        length = end - start,
                        index = isRight ? end : start - 1,
                        iteratees = this.__iteratees__,
                        iterLength = iteratees.length,
                        resIndex = 0,
                        takeCount = nativeMin(length, this.__takeCount__);
                    if (!isArr || (!isRight && arrLength == length && takeCount == length)) return baseWrapperValue(array, this.__actions__);
                    var result = [];
                    outer: for (; length-- && resIndex < takeCount; ) {
                        for (var iterIndex = -1, value = array[(index += dir)]; ++iterIndex < iterLength; ) {
                            var data = iteratees[iterIndex],
                                iteratee = data.iteratee,
                                type = data.type,
                                computed = iteratee(value);
                            if (type == LAZY_MAP_FLAG) value = computed;
                            else if (!computed) {
                                if (type == LAZY_FILTER_FLAG) continue outer;
                                break outer;
                            }
                        }
                        result[resIndex++] = value;
                    }
                    return result;
                }),
                (lodash.prototype.at = wrapperAt),
                (lodash.prototype.chain = function () {
                    return chain(this);
                }),
                (lodash.prototype.commit = function () {
                    return new LodashWrapper(this.value(), this.__chain__);
                }),
                (lodash.prototype.next = function () {
                    this.__values__ === undefined && (this.__values__ = toArray(this.value()));
                    var done = this.__index__ >= this.__values__.length;
                    return { done: done, value: done ? undefined : this.__values__[this.__index__++] };
                }),
                (lodash.prototype.plant = function (value) {
                    for (var result, parent = this; parent instanceof baseLodash; ) {
                        var clone = wrapperClone(parent);
                        (clone.__index__ = 0), (clone.__values__ = undefined), result ? (previous.__wrapped__ = clone) : (result = clone);
                        var previous = clone;
                        parent = parent.__wrapped__;
                    }
                    return (previous.__wrapped__ = value), result;
                }),
                (lodash.prototype.reverse = function () {
                    var value = this.__wrapped__;
                    if (value instanceof LazyWrapper) {
                        var wrapped = value;
                        return this.__actions__.length && (wrapped = new LazyWrapper(this)), (wrapped = wrapped.reverse()).__actions__.push({ func: thru, args: [reverse], thisArg: undefined }), new LodashWrapper(wrapped, this.__chain__);
                    }
                    return this.thru(reverse);
                }),
                (lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = function () {
                    return baseWrapperValue(this.__wrapped__, this.__actions__);
                }),
                (lodash.prototype.first = lodash.prototype.head),
                symIterator &&
                    (lodash.prototype[symIterator] = function () {
                        return this;
                    }),
                lodash
            );
        })();
        "function" == typeof define && "object" == typeof define.amd && define.amd
            ? ((root._ = _),
              define(function () {
                  return _;
              }))
            : freeModule
            ? (((freeModule.exports = _)._ = _), (freeExports._ = _))
            : (root._ = _);
    }.call(this),
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? (module.exports = factory()) : "function" == typeof define && define.amd ? define(factory) : (global.moment = factory());
    })(this, function () {
        "use strict";
        var hookCallback, some;
        function hooks() {
            return hookCallback.apply(null, arguments);
        }
        function isArray(input) {
            return input instanceof Array || "[object Array]" === Object.prototype.toString.call(input);
        }
        function isObject(input) {
            return null != input && "[object Object]" === Object.prototype.toString.call(input);
        }
        function isUndefined(input) {
            return void 0 === input;
        }
        function isNumber(input) {
            return "number" == typeof input || "[object Number]" === Object.prototype.toString.call(input);
        }
        function isDate(input) {
            return input instanceof Date || "[object Date]" === Object.prototype.toString.call(input);
        }
        function map(arr, fn) {
            var i,
                res = [];
            for (i = 0; i < arr.length; ++i) res.push(fn(arr[i], i));
            return res;
        }
        function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
        }
        function extend(a, b) {
            for (var i in b) hasOwnProp(b, i) && (a[i] = b[i]);
            return hasOwnProp(b, "toString") && (a.toString = b.toString), hasOwnProp(b, "valueOf") && (a.valueOf = b.valueOf), a;
        }
        function createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, !0).utc();
        }
        function getParsingFlags(m) {
            return (
                null == m._pf &&
                    (m._pf = {
                        empty: !1,
                        unusedTokens: [],
                        unusedInput: [],
                        overflow: -2,
                        charsLeftOver: 0,
                        nullInput: !1,
                        invalidMonth: null,
                        invalidFormat: !1,
                        userInvalidated: !1,
                        iso: !1,
                        parsedDateParts: [],
                        meridiem: null,
                        rfc2822: !1,
                        weekdayMismatch: !1,
                    }),
                m._pf
            );
        }
        function isValid(m) {
            if (null == m._isValid) {
                var flags = getParsingFlags(m),
                    parsedParts = some.call(flags.parsedDateParts, function (i) {
                        return null != i;
                    }),
                    isNowValid =
                        !isNaN(m._d.getTime()) &&
                        flags.overflow < 0 &&
                        !flags.empty &&
                        !flags.invalidMonth &&
                        !flags.invalidWeekday &&
                        !flags.weekdayMismatch &&
                        !flags.nullInput &&
                        !flags.invalidFormat &&
                        !flags.userInvalidated &&
                        (!flags.meridiem || (flags.meridiem && parsedParts));
                if ((m._strict && (isNowValid = isNowValid && 0 === flags.charsLeftOver && 0 === flags.unusedTokens.length && void 0 === flags.bigHour), null != Object.isFrozen && Object.isFrozen(m))) return isNowValid;
                m._isValid = isNowValid;
            }
            return m._isValid;
        }
        function createInvalid(flags) {
            var m = createUTC(NaN);
            return null != flags ? extend(getParsingFlags(m), flags) : (getParsingFlags(m).userInvalidated = !0), m;
        }
        some = Array.prototype.some
            ? Array.prototype.some
            : function (fun) {
                  for (var t = Object(this), len = t.length >>> 0, i = 0; i < len; i++) if (i in t && fun.call(this, t[i], i, t)) return !0;
                  return !1;
              };
        var momentProperties = (hooks.momentProperties = []);
        function copyConfig(to, from) {
            var i, prop, val;
            if (
                (isUndefined(from._isAMomentObject) || (to._isAMomentObject = from._isAMomentObject),
                isUndefined(from._i) || (to._i = from._i),
                isUndefined(from._f) || (to._f = from._f),
                isUndefined(from._l) || (to._l = from._l),
                isUndefined(from._strict) || (to._strict = from._strict),
                isUndefined(from._tzm) || (to._tzm = from._tzm),
                isUndefined(from._isUTC) || (to._isUTC = from._isUTC),
                isUndefined(from._offset) || (to._offset = from._offset),
                isUndefined(from._pf) || (to._pf = getParsingFlags(from)),
                isUndefined(from._locale) || (to._locale = from._locale),
                momentProperties.length > 0)
            )
                for (i = 0; i < momentProperties.length; i++) isUndefined((val = from[(prop = momentProperties[i])])) || (to[prop] = val);
            return to;
        }
        var updateInProgress = !1;
        function Moment(config) {
            copyConfig(this, config),
                (this._d = new Date(null != config._d ? config._d.getTime() : NaN)),
                this.isValid() || (this._d = new Date(NaN)),
                !1 === updateInProgress && ((updateInProgress = !0), hooks.updateOffset(this), (updateInProgress = !1));
        }
        function isMoment(obj) {
            return obj instanceof Moment || (null != obj && null != obj._isAMomentObject);
        }
        function absFloor(number) {
            return number < 0 ? Math.ceil(number) || 0 : Math.floor(number);
        }
        function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
                value = 0;
            return 0 !== coercedNumber && isFinite(coercedNumber) && (value = absFloor(coercedNumber)), value;
        }
        function compareArrays(array1, array2, dontConvert) {
            var i,
                len = Math.min(array1.length, array2.length),
                lengthDiff = Math.abs(array1.length - array2.length),
                diffs = 0;
            for (i = 0; i < len; i++) ((dontConvert && array1[i] !== array2[i]) || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) && diffs++;
            return diffs + lengthDiff;
        }
        function warn(msg) {
            !1 === hooks.suppressDeprecationWarnings && "undefined" != typeof console && console.warn;
        }
        function deprecate(msg, fn) {
            var firstTime = !0;
            return extend(function () {
                if ((null != hooks.deprecationHandler && hooks.deprecationHandler(null, msg), firstTime)) {
                    for (var arg, args = [], i = 0; i < arguments.length; i++) {
                        if (((arg = ""), "object" == typeof arguments[i])) {
                            for (var key in ((arg += "\n[" + i + "] "), arguments[0])) arg += key + ": " + arguments[0][key] + ", ";
                            arg = arg.slice(0, -2);
                        } else arg = arguments[i];
                        args.push(arg);
                    }
                    warn((Array.prototype.slice.call(args).join(""), new Error().stack)), (firstTime = !1);
                }
                return fn.apply(this, arguments);
            }, fn);
        }
        var keys,
            deprecations = {};
        function deprecateSimple(name, msg) {
            null != hooks.deprecationHandler && hooks.deprecationHandler(name, msg), deprecations[name] || (warn(), (deprecations[name] = !0));
        }
        function isFunction(input) {
            return input instanceof Function || "[object Function]" === Object.prototype.toString.call(input);
        }
        function mergeConfigs(parentConfig, childConfig) {
            var prop,
                res = extend({}, parentConfig);
            for (prop in childConfig)
                hasOwnProp(childConfig, prop) &&
                    (isObject(parentConfig[prop]) && isObject(childConfig[prop])
                        ? ((res[prop] = {}), extend(res[prop], parentConfig[prop]), extend(res[prop], childConfig[prop]))
                        : null != childConfig[prop]
                        ? (res[prop] = childConfig[prop])
                        : delete res[prop]);
            for (prop in parentConfig) hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop]) && (res[prop] = extend({}, res[prop]));
            return res;
        }
        function Locale(config) {
            null != config && this.set(config);
        }
        (hooks.suppressDeprecationWarnings = !1),
            (hooks.deprecationHandler = null),
            (keys = Object.keys
                ? Object.keys
                : function (obj) {
                      var i,
                          res = [];
                      for (i in obj) hasOwnProp(obj, i) && res.push(i);
                      return res;
                  });
        var aliases = {};
        function addUnitAlias(unit, shorthand) {
            var lowerCase = unit.toLowerCase();
            aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit;
        }
        function normalizeUnits(units) {
            return "string" == typeof units ? aliases[units] || aliases[units.toLowerCase()] : void 0;
        }
        function normalizeObjectUnits(inputObject) {
            var normalizedProp,
                prop,
                normalizedInput = {};
            for (prop in inputObject) hasOwnProp(inputObject, prop) && (normalizedProp = normalizeUnits(prop)) && (normalizedInput[normalizedProp] = inputObject[prop]);
            return normalizedInput;
        }
        var priorities = {};
        function addUnitPriority(unit, priority) {
            priorities[unit] = priority;
        }
        function zeroFill(number, targetLength, forceSign) {
            var absNumber = "" + Math.abs(number),
                zerosToFill = targetLength - absNumber.length;
            return (number >= 0 ? (forceSign ? "+" : "") : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
        }
        var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
            localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
            formatFunctions = {},
            formatTokenFunctions = {};
        function addFormatToken(token, padded, ordinal, callback) {
            var func = callback;
            "string" == typeof callback &&
                (func = function () {
                    return this[callback]();
                }),
                token && (formatTokenFunctions[token] = func),
                padded &&
                    (formatTokenFunctions[padded[0]] = function () {
                        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
                    }),
                ordinal &&
                    (formatTokenFunctions[ordinal] = function () {
                        return this.localeData().ordinal(func.apply(this, arguments), token);
                    });
        }
        function formatMoment(m, format) {
            return m.isValid()
                ? ((format = expandFormat(format, m.localeData())),
                  (formatFunctions[format] =
                      formatFunctions[format] ||
                      (function (format) {
                          var i,
                              length,
                              input,
                              array = format.match(formattingTokens);
                          for (i = 0, length = array.length; i < length; i++)
                              formatTokenFunctions[array[i]] ? (array[i] = formatTokenFunctions[array[i]]) : (array[i] = (input = array[i]).match(/\[[\s\S]/) ? input.replace(/^\[|\]$/g, "") : input.replace(/\\/g, ""));
                          return function (mom) {
                              var i,
                                  output = "";
                              for (i = 0; i < length; i++) output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
                              return output;
                          };
                      })(format)),
                  formatFunctions[format](m))
                : m.localeData().invalidDate();
        }
        function expandFormat(format, locale) {
            var i = 5;
            function replaceLongDateFormatTokens(input) {
                return locale.longDateFormat(input) || input;
            }
            for (localFormattingTokens.lastIndex = 0; i >= 0 && localFormattingTokens.test(format); ) (format = format.replace(localFormattingTokens, replaceLongDateFormatTokens)), (localFormattingTokens.lastIndex = 0), (i -= 1);
            return format;
        }
        var match1 = /\d/,
            match2 = /\d\d/,
            match3 = /\d{3}/,
            match4 = /\d{4}/,
            match6 = /[+-]?\d{6}/,
            match1to2 = /\d\d?/,
            match3to4 = /\d\d\d\d?/,
            match5to6 = /\d\d\d\d\d\d?/,
            match1to3 = /\d{1,3}/,
            match1to4 = /\d{1,4}/,
            match1to6 = /[+-]?\d{1,6}/,
            matchUnsigned = /\d+/,
            matchSigned = /[+-]?\d+/,
            matchOffset = /Z|[+-]\d\d:?\d\d/gi,
            matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi,
            matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
            regexes = {};
        function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex)
                ? regex
                : function (isStrict, localeData) {
                      return isStrict && strictRegex ? strictRegex : regex;
                  };
        }
        function getParseRegexForToken(token, config) {
            return hasOwnProp(regexes, token)
                ? regexes[token](config._strict, config._locale)
                : new RegExp(
                      regexEscape(
                          token.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
                              return p1 || p2 || p3 || p4;
                          })
                      )
                  );
        }
        function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
        }
        var tokens = {};
        function addParseToken(token, callback) {
            var i,
                func = callback;
            for (
                "string" == typeof token && (token = [token]),
                    isNumber(callback) &&
                        (func = function (input, array) {
                            array[callback] = toInt(input);
                        }),
                    i = 0;
                i < token.length;
                i++
            )
                tokens[token[i]] = func;
        }
        function addWeekParseToken(token, callback) {
            addParseToken(token, function (input, array, config, token) {
                (config._w = config._w || {}), callback(input, config._w, config, token);
            });
        }
        function addTimeToArrayFromToken(token, input, config) {
            null != input && hasOwnProp(tokens, token) && tokens[token](input, config._a, config, token);
        }
        var YEAR = 0,
            MONTH = 1,
            DATE = 2,
            HOUR = 3,
            MINUTE = 4,
            SECOND = 5,
            MILLISECOND = 6,
            WEEK = 7,
            WEEKDAY = 8;
        function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
        }
        function isLeapYear(year) {
            return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;
        }
        addFormatToken("Y", 0, 0, function () {
            var y = this.year();
            return y <= 9999 ? "" + y : "+" + y;
        }),
            addFormatToken(0, ["YY", 2], 0, function () {
                return this.year() % 100;
            }),
            addFormatToken(0, ["YYYY", 4], 0, "year"),
            addFormatToken(0, ["YYYYY", 5], 0, "year"),
            addFormatToken(0, ["YYYYYY", 6, !0], 0, "year"),
            addUnitAlias("year", "y"),
            addUnitPriority("year", 1),
            addRegexToken("Y", matchSigned),
            addRegexToken("YY", match1to2, match2),
            addRegexToken("YYYY", match1to4, match4),
            addRegexToken("YYYYY", match1to6, match6),
            addRegexToken("YYYYYY", match1to6, match6),
            addParseToken(["YYYYY", "YYYYYY"], YEAR),
            addParseToken("YYYY", function (input, array) {
                array[YEAR] = 2 === input.length ? hooks.parseTwoDigitYear(input) : toInt(input);
            }),
            addParseToken("YY", function (input, array) {
                array[YEAR] = hooks.parseTwoDigitYear(input);
            }),
            addParseToken("Y", function (input, array) {
                array[YEAR] = parseInt(input, 10);
            }),
            (hooks.parseTwoDigitYear = function (input) {
                return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
            });
        var indexOf,
            getSetYear = makeGetSet("FullYear", !0);
        function makeGetSet(unit, keepTime) {
            return function (value) {
                return null != value ? (set$1(this, unit, value), hooks.updateOffset(this, keepTime), this) : get(this, unit);
            };
        }
        function get(mom, unit) {
            return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
        }
        function set$1(mom, unit, value) {
            mom.isValid() &&
                !isNaN(value) &&
                ("FullYear" === unit && isLeapYear(mom.year()) && 1 === mom.month() && 29 === mom.date()
                    ? mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value, mom.month(), daysInMonth(value, mom.month()))
                    : mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value));
        }
        function daysInMonth(year, month) {
            if (isNaN(year) || isNaN(month)) return NaN;
            var x,
                modMonth = ((month % (x = 12)) + x) % x;
            return (year += (month - modMonth) / 12), 1 === modMonth ? (isLeapYear(year) ? 29 : 28) : 31 - ((modMonth % 7) % 2);
        }
        (indexOf = Array.prototype.indexOf
            ? Array.prototype.indexOf
            : function (o) {
                  var i;
                  for (i = 0; i < this.length; ++i) if (this[i] === o) return i;
                  return -1;
              }),
            addFormatToken("M", ["MM", 2], "Mo", function () {
                return this.month() + 1;
            }),
            addFormatToken("MMM", 0, 0, function (format) {
                return this.localeData().monthsShort(this, format);
            }),
            addFormatToken("MMMM", 0, 0, function (format) {
                return this.localeData().months(this, format);
            }),
            addUnitAlias("month", "M"),
            addUnitPriority("month", 8),
            addRegexToken("M", match1to2),
            addRegexToken("MM", match1to2, match2),
            addRegexToken("MMM", function (isStrict, locale) {
                return locale.monthsShortRegex(isStrict);
            }),
            addRegexToken("MMMM", function (isStrict, locale) {
                return locale.monthsRegex(isStrict);
            }),
            addParseToken(["M", "MM"], function (input, array) {
                array[MONTH] = toInt(input) - 1;
            }),
            addParseToken(["MMM", "MMMM"], function (input, array, config, token) {
                var month = config._locale.monthsParse(input, token, config._strict);
                null != month ? (array[MONTH] = month) : (getParsingFlags(config).invalidMonth = input);
            });
        var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
            defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
        var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
        function setMonth(mom, value) {
            var dayOfMonth;
            if (!mom.isValid()) return mom;
            if ("string" == typeof value)
                if (/^\d+$/.test(value)) value = toInt(value);
                else if (!isNumber((value = mom.localeData().monthsParse(value)))) return mom;
            return (dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value))), mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth), mom;
        }
        function getSetMonth(value) {
            return null != value ? (setMonth(this, value), hooks.updateOffset(this, !0), this) : get(this, "Month");
        }
        var defaultMonthsShortRegex = matchWord;
        var defaultMonthsRegex = matchWord;
        function computeMonthsParse() {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
            var i,
                mom,
                shortPieces = [],
                longPieces = [],
                mixedPieces = [];
            for (i = 0; i < 12; i++) (mom = createUTC([2e3, i])), shortPieces.push(this.monthsShort(mom, "")), longPieces.push(this.months(mom, "")), mixedPieces.push(this.months(mom, "")), mixedPieces.push(this.monthsShort(mom, ""));
            for (shortPieces.sort(cmpLenRev), longPieces.sort(cmpLenRev), mixedPieces.sort(cmpLenRev), i = 0; i < 12; i++) (shortPieces[i] = regexEscape(shortPieces[i])), (longPieces[i] = regexEscape(longPieces[i]));
            for (i = 0; i < 24; i++) mixedPieces[i] = regexEscape(mixedPieces[i]);
            (this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i")),
                (this._monthsShortRegex = this._monthsRegex),
                (this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i")),
                (this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i"));
        }
        function createUTCDate(y) {
            var date;
            if (y < 100 && y >= 0) {
                var args = Array.prototype.slice.call(arguments);
                (args[0] = y + 400), (date = new Date(Date.UTC.apply(null, args))), isFinite(date.getUTCFullYear()) && date.setUTCFullYear(y);
            } else date = new Date(Date.UTC.apply(null, arguments));
            return date;
        }
        function firstWeekOffset(year, dow, doy) {
            var fwd = 7 + dow - doy;
            return -((7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7) + fwd - 1;
        }
        function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var resYear,
                resDayOfYear,
                dayOfYear = 1 + 7 * (week - 1) + ((7 + weekday - dow) % 7) + firstWeekOffset(year, dow, doy);
            return (
                dayOfYear <= 0
                    ? (resDayOfYear = daysInYear((resYear = year - 1)) + dayOfYear)
                    : dayOfYear > daysInYear(year)
                    ? ((resYear = year + 1), (resDayOfYear = dayOfYear - daysInYear(year)))
                    : ((resYear = year), (resDayOfYear = dayOfYear)),
                { year: resYear, dayOfYear: resDayOfYear }
            );
        }
        function weekOfYear(mom, dow, doy) {
            var resWeek,
                resYear,
                weekOffset = firstWeekOffset(mom.year(), dow, doy),
                week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1;
            return (
                week < 1
                    ? (resWeek = week + weeksInYear((resYear = mom.year() - 1), dow, doy))
                    : week > weeksInYear(mom.year(), dow, doy)
                    ? ((resWeek = week - weeksInYear(mom.year(), dow, doy)), (resYear = mom.year() + 1))
                    : ((resYear = mom.year()), (resWeek = week)),
                { week: resWeek, year: resYear }
            );
        }
        function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
                weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
        }
        addFormatToken("w", ["ww", 2], "wo", "week"),
            addFormatToken("W", ["WW", 2], "Wo", "isoWeek"),
            addUnitAlias("week", "w"),
            addUnitAlias("isoWeek", "W"),
            addUnitPriority("week", 5),
            addUnitPriority("isoWeek", 5),
            addRegexToken("w", match1to2),
            addRegexToken("ww", match1to2, match2),
            addRegexToken("W", match1to2),
            addRegexToken("WW", match1to2, match2),
            addWeekParseToken(["w", "ww", "W", "WW"], function (input, week, config, token) {
                week[token.substr(0, 1)] = toInt(input);
            });
        function shiftWeekdays(ws, n) {
            return ws.slice(n, 7).concat(ws.slice(0, n));
        }
        addFormatToken("d", 0, "do", "day"),
            addFormatToken("dd", 0, 0, function (format) {
                return this.localeData().weekdaysMin(this, format);
            }),
            addFormatToken("ddd", 0, 0, function (format) {
                return this.localeData().weekdaysShort(this, format);
            }),
            addFormatToken("dddd", 0, 0, function (format) {
                return this.localeData().weekdays(this, format);
            }),
            addFormatToken("e", 0, 0, "weekday"),
            addFormatToken("E", 0, 0, "isoWeekday"),
            addUnitAlias("day", "d"),
            addUnitAlias("weekday", "e"),
            addUnitAlias("isoWeekday", "E"),
            addUnitPriority("day", 11),
            addUnitPriority("weekday", 11),
            addUnitPriority("isoWeekday", 11),
            addRegexToken("d", match1to2),
            addRegexToken("e", match1to2),
            addRegexToken("E", match1to2),
            addRegexToken("dd", function (isStrict, locale) {
                return locale.weekdaysMinRegex(isStrict);
            }),
            addRegexToken("ddd", function (isStrict, locale) {
                return locale.weekdaysShortRegex(isStrict);
            }),
            addRegexToken("dddd", function (isStrict, locale) {
                return locale.weekdaysRegex(isStrict);
            }),
            addWeekParseToken(["dd", "ddd", "dddd"], function (input, week, config, token) {
                var weekday = config._locale.weekdaysParse(input, token, config._strict);
                null != weekday ? (week.d = weekday) : (getParsingFlags(config).invalidWeekday = input);
            }),
            addWeekParseToken(["d", "e", "E"], function (input, week, config, token) {
                week[token] = toInt(input);
            });
        var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
        var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
        var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
        var defaultWeekdaysRegex = matchWord;
        var defaultWeekdaysShortRegex = matchWord;
        var defaultWeekdaysMinRegex = matchWord;
        function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
            var i,
                mom,
                minp,
                shortp,
                longp,
                minPieces = [],
                shortPieces = [],
                longPieces = [],
                mixedPieces = [];
            for (i = 0; i < 7; i++)
                (mom = createUTC([2e3, 1]).day(i)),
                    (minp = this.weekdaysMin(mom, "")),
                    (shortp = this.weekdaysShort(mom, "")),
                    (longp = this.weekdays(mom, "")),
                    minPieces.push(minp),
                    shortPieces.push(shortp),
                    longPieces.push(longp),
                    mixedPieces.push(minp),
                    mixedPieces.push(shortp),
                    mixedPieces.push(longp);
            for (minPieces.sort(cmpLenRev), shortPieces.sort(cmpLenRev), longPieces.sort(cmpLenRev), mixedPieces.sort(cmpLenRev), i = 0; i < 7; i++)
                (shortPieces[i] = regexEscape(shortPieces[i])), (longPieces[i] = regexEscape(longPieces[i])), (mixedPieces[i] = regexEscape(mixedPieces[i]));
            (this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i")),
                (this._weekdaysShortRegex = this._weekdaysRegex),
                (this._weekdaysMinRegex = this._weekdaysRegex),
                (this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i")),
                (this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i")),
                (this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i"));
        }
        function hFormat() {
            return this.hours() % 12 || 12;
        }
        function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
            });
        }
        function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse;
        }
        addFormatToken("H", ["HH", 2], 0, "hour"),
            addFormatToken("h", ["hh", 2], 0, hFormat),
            addFormatToken("k", ["kk", 2], 0, function () {
                return this.hours() || 24;
            }),
            addFormatToken("hmm", 0, 0, function () {
                return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
            }),
            addFormatToken("hmmss", 0, 0, function () {
                return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
            }),
            addFormatToken("Hmm", 0, 0, function () {
                return "" + this.hours() + zeroFill(this.minutes(), 2);
            }),
            addFormatToken("Hmmss", 0, 0, function () {
                return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
            }),
            meridiem("a", !0),
            meridiem("A", !1),
            addUnitAlias("hour", "h"),
            addUnitPriority("hour", 13),
            addRegexToken("a", matchMeridiem),
            addRegexToken("A", matchMeridiem),
            addRegexToken("H", match1to2),
            addRegexToken("h", match1to2),
            addRegexToken("k", match1to2),
            addRegexToken("HH", match1to2, match2),
            addRegexToken("hh", match1to2, match2),
            addRegexToken("kk", match1to2, match2),
            addRegexToken("hmm", match3to4),
            addRegexToken("hmmss", match5to6),
            addRegexToken("Hmm", match3to4),
            addRegexToken("Hmmss", match5to6),
            addParseToken(["H", "HH"], HOUR),
            addParseToken(["k", "kk"], function (input, array, config) {
                var kInput = toInt(input);
                array[HOUR] = 24 === kInput ? 0 : kInput;
            }),
            addParseToken(["a", "A"], function (input, array, config) {
                (config._isPm = config._locale.isPM(input)), (config._meridiem = input);
            }),
            addParseToken(["h", "hh"], function (input, array, config) {
                (array[HOUR] = toInt(input)), (getParsingFlags(config).bigHour = !0);
            }),
            addParseToken("hmm", function (input, array, config) {
                var pos = input.length - 2;
                (array[HOUR] = toInt(input.substr(0, pos))), (array[MINUTE] = toInt(input.substr(pos))), (getParsingFlags(config).bigHour = !0);
            }),
            addParseToken("hmmss", function (input, array, config) {
                var pos1 = input.length - 4,
                    pos2 = input.length - 2;
                (array[HOUR] = toInt(input.substr(0, pos1))), (array[MINUTE] = toInt(input.substr(pos1, 2))), (array[SECOND] = toInt(input.substr(pos2))), (getParsingFlags(config).bigHour = !0);
            }),
            addParseToken("Hmm", function (input, array, config) {
                var pos = input.length - 2;
                (array[HOUR] = toInt(input.substr(0, pos))), (array[MINUTE] = toInt(input.substr(pos)));
            }),
            addParseToken("Hmmss", function (input, array, config) {
                var pos1 = input.length - 4,
                    pos2 = input.length - 2;
                (array[HOUR] = toInt(input.substr(0, pos1))), (array[MINUTE] = toInt(input.substr(pos1, 2))), (array[SECOND] = toInt(input.substr(pos2)));
            });
        var globalLocale,
            getSetHour = makeGetSet("Hours", !0),
            baseConfig = {
                calendar: { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" },
                longDateFormat: { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" },
                invalidDate: "Invalid date",
                ordinal: "%d",
                dayOfMonthOrdinalParse: /\d{1,2}/,
                relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    ss: "%d seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years",
                },
                months: defaultLocaleMonths,
                monthsShort: defaultLocaleMonthsShort,
                week: { dow: 0, doy: 6 },
                weekdays: defaultLocaleWeekdays,
                weekdaysMin: defaultLocaleWeekdaysMin,
                weekdaysShort: defaultLocaleWeekdaysShort,
                meridiemParse: /[ap]\.?m?\.?/i,
            },
            locales = {},
            localeFamilies = {};
        function normalizeLocale(key) {
            return key ? key.toLowerCase().replace("_", "-") : key;
        }
        function loadLocale(name) {
            var oldLocale = null;
            if (!locales[name] && "undefined" != typeof module && module && module.exports)
                try {
                    (oldLocale = globalLocale._abbr), require("./locale/" + name), getSetGlobalLocale(oldLocale);
                } catch (e) {}
            return locales[name];
        }
        function getSetGlobalLocale(key, values) {
            var data;
            return key && ((data = isUndefined(values) ? getLocale(key) : defineLocale(key, values)) ? (globalLocale = data) : "undefined" != typeof console && console.warn), globalLocale._abbr;
        }
        function defineLocale(name, config) {
            if (null !== config) {
                var locale,
                    parentConfig = baseConfig;
                if (((config.abbr = name), null != locales[name]))
                    deprecateSimple(
                        "defineLocaleOverride",
                        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
                    ),
                        (parentConfig = locales[name]._config);
                else if (null != config.parentLocale)
                    if (null != locales[config.parentLocale]) parentConfig = locales[config.parentLocale]._config;
                    else {
                        if (null == (locale = loadLocale(config.parentLocale)))
                            return localeFamilies[config.parentLocale] || (localeFamilies[config.parentLocale] = []), localeFamilies[config.parentLocale].push({ name: name, config: config }), null;
                        parentConfig = locale._config;
                    }
                return (
                    (locales[name] = new Locale(mergeConfigs(parentConfig, config))),
                    localeFamilies[name] &&
                        localeFamilies[name].forEach(function (x) {
                            defineLocale(x.name, x.config);
                        }),
                    getSetGlobalLocale(name),
                    locales[name]
                );
            }
            return delete locales[name], null;
        }
        function getLocale(key) {
            var locale;
            if ((key && key._locale && key._locale._abbr && (key = key._locale._abbr), !key)) return globalLocale;
            if (!isArray(key)) {
                if ((locale = loadLocale(key))) return locale;
                key = [key];
            }
            return (function (names) {
                for (var j, next, locale, split, i = 0; i < names.length; ) {
                    for (j = (split = normalizeLocale(names[i]).split("-")).length, next = (next = normalizeLocale(names[i + 1])) ? next.split("-") : null; j > 0; ) {
                        if ((locale = loadLocale(split.slice(0, j).join("-")))) return locale;
                        if (next && next.length >= j && compareArrays(split, next, !0) >= j - 1) break;
                        j--;
                    }
                    i++;
                }
                return globalLocale;
            })(key);
        }
        function checkOverflow(m) {
            var overflow,
                a = m._a;
            return (
                a &&
                    -2 === getParsingFlags(m).overflow &&
                    ((overflow =
                        a[MONTH] < 0 || a[MONTH] > 11
                            ? MONTH
                            : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                            ? DATE
                            : a[HOUR] < 0 || a[HOUR] > 24 || (24 === a[HOUR] && (0 !== a[MINUTE] || 0 !== a[SECOND] || 0 !== a[MILLISECOND]))
                            ? HOUR
                            : a[MINUTE] < 0 || a[MINUTE] > 59
                            ? MINUTE
                            : a[SECOND] < 0 || a[SECOND] > 59
                            ? SECOND
                            : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                            ? MILLISECOND
                            : -1),
                    getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE) && (overflow = DATE),
                    getParsingFlags(m)._overflowWeeks && -1 === overflow && (overflow = WEEK),
                    getParsingFlags(m)._overflowWeekday && -1 === overflow && (overflow = WEEKDAY),
                    (getParsingFlags(m).overflow = overflow)),
                m
            );
        }
        function defaults(a, b, c) {
            return null != a ? a : null != b ? b : c;
        }
        function configFromArray(config) {
            var i,
                date,
                currentDate,
                expectedWeekday,
                yearToUse,
                input = [];
            if (!config._d) {
                for (
                    currentDate = (function (config) {
                        var nowValue = new Date(hooks.now());
                        return config._useUTC ? [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()] : [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
                    })(config),
                        config._w &&
                            null == config._a[DATE] &&
                            null == config._a[MONTH] &&
                            (function (config) {
                                var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
                                if (null != (w = config._w).GG || null != w.W || null != w.E)
                                    (dow = 1),
                                        (doy = 4),
                                        (weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year)),
                                        (week = defaults(w.W, 1)),
                                        ((weekday = defaults(w.E, 1)) < 1 || weekday > 7) && (weekdayOverflow = !0);
                                else {
                                    (dow = config._locale._week.dow), (doy = config._locale._week.doy);
                                    var curWeek = weekOfYear(createLocal(), dow, doy);
                                    (weekYear = defaults(w.gg, config._a[YEAR], curWeek.year)),
                                        (week = defaults(w.w, curWeek.week)),
                                        null != w.d ? ((weekday = w.d) < 0 || weekday > 6) && (weekdayOverflow = !0) : null != w.e ? ((weekday = w.e + dow), (w.e < 0 || w.e > 6) && (weekdayOverflow = !0)) : (weekday = dow);
                                }
                                week < 1 || week > weeksInYear(weekYear, dow, doy)
                                    ? (getParsingFlags(config)._overflowWeeks = !0)
                                    : null != weekdayOverflow
                                    ? (getParsingFlags(config)._overflowWeekday = !0)
                                    : ((temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy)), (config._a[YEAR] = temp.year), (config._dayOfYear = temp.dayOfYear));
                            })(config),
                        null != config._dayOfYear &&
                            ((yearToUse = defaults(config._a[YEAR], currentDate[YEAR])),
                            (config._dayOfYear > daysInYear(yearToUse) || 0 === config._dayOfYear) && (getParsingFlags(config)._overflowDayOfYear = !0),
                            (date = createUTCDate(yearToUse, 0, config._dayOfYear)),
                            (config._a[MONTH] = date.getUTCMonth()),
                            (config._a[DATE] = date.getUTCDate())),
                        i = 0;
                    i < 3 && null == config._a[i];
                    ++i
                )
                    config._a[i] = input[i] = currentDate[i];
                for (; i < 7; i++) config._a[i] = input[i] = null == config._a[i] ? (2 === i ? 1 : 0) : config._a[i];
                24 === config._a[HOUR] && 0 === config._a[MINUTE] && 0 === config._a[SECOND] && 0 === config._a[MILLISECOND] && ((config._nextDay = !0), (config._a[HOUR] = 0)),
                    (config._d = (config._useUTC
                        ? createUTCDate
                        : function (y, m, d, h, M, s, ms) {
                              var date;
                              return y < 100 && y >= 0 ? ((date = new Date(y + 400, m, d, h, M, s, ms)), isFinite(date.getFullYear()) && date.setFullYear(y)) : (date = new Date(y, m, d, h, M, s, ms)), date;
                          }
                    ).apply(null, input)),
                    (expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay()),
                    null != config._tzm && config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm),
                    config._nextDay && (config._a[HOUR] = 24),
                    config._w && void 0 !== config._w.d && config._w.d !== expectedWeekday && (getParsingFlags(config).weekdayMismatch = !0);
            }
        }
        var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
            isoDates = [
                ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
                ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
                ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
                ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
                ["YYYY-DDD", /\d{4}-\d{3}/],
                ["YYYY-MM", /\d{4}-\d\d/, !1],
                ["YYYYYYMMDD", /[+-]\d{10}/],
                ["YYYYMMDD", /\d{8}/],
                ["GGGG[W]WWE", /\d{4}W\d{3}/],
                ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
                ["YYYYDDD", /\d{7}/],
            ],
            isoTimes = [
                ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
                ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
                ["HH:mm:ss", /\d\d:\d\d:\d\d/],
                ["HH:mm", /\d\d:\d\d/],
                ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
                ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
                ["HHmmss", /\d\d\d\d\d\d/],
                ["HHmm", /\d\d\d\d/],
                ["HH", /\d\d/],
            ],
            aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
        function configFromISO(config) {
            var i,
                l,
                allowTime,
                dateFormat,
                timeFormat,
                tzFormat,
                string = config._i,
                match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string);
            if (match) {
                for (getParsingFlags(config).iso = !0, i = 0, l = isoDates.length; i < l; i++)
                    if (isoDates[i][1].exec(match[1])) {
                        (dateFormat = isoDates[i][0]), (allowTime = !1 !== isoDates[i][2]);
                        break;
                    }
                if (null == dateFormat) return void (config._isValid = !1);
                if (match[3]) {
                    for (i = 0, l = isoTimes.length; i < l; i++)
                        if (isoTimes[i][1].exec(match[3])) {
                            timeFormat = (match[2] || " ") + isoTimes[i][0];
                            break;
                        }
                    if (null == timeFormat) return void (config._isValid = !1);
                }
                if (!allowTime && null != timeFormat) return void (config._isValid = !1);
                if (match[4]) {
                    if (!tzRegex.exec(match[4])) return void (config._isValid = !1);
                    tzFormat = "Z";
                }
                (config._f = dateFormat + (timeFormat || "") + (tzFormat || "")), configFromStringAndFormat(config);
            } else config._isValid = !1;
        }
        var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
        function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
            var result = [
                (function (yearStr) {
                    var year = parseInt(yearStr, 10);
                    if (year <= 49) return 2e3 + year;
                    if (year <= 999) return 1900 + year;
                    return year;
                })(yearStr),
                defaultLocaleMonthsShort.indexOf(monthStr),
                parseInt(dayStr, 10),
                parseInt(hourStr, 10),
                parseInt(minuteStr, 10),
            ];
            return secondStr && result.push(parseInt(secondStr, 10)), result;
        }
        var obsOffsets = { UT: 0, GMT: 0, EDT: -240, EST: -300, CDT: -300, CST: -360, MDT: -360, MST: -420, PDT: -420, PST: -480 };
        function configFromRFC2822(config) {
            var match = rfc2822.exec(
                config._i
                    .replace(/\([^)]*\)|[\n\t]/g, " ")
                    .replace(/(\s\s+)/g, " ")
                    .replace(/^\s\s*/, "")
                    .replace(/\s\s*$/, "")
            );
            if (match) {
                var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
                if (
                    !(function (weekdayStr, parsedInput, config) {
                        return (
                            !weekdayStr || defaultLocaleWeekdaysShort.indexOf(weekdayStr) === new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay() || ((getParsingFlags(config).weekdayMismatch = !0), (config._isValid = !1), !1)
                        );
                    })(match[1], parsedArray, config)
                )
                    return;
                (config._a = parsedArray),
                    (config._tzm = (function (obsOffset, militaryOffset, numOffset) {
                        if (obsOffset) return obsOffsets[obsOffset];
                        if (militaryOffset) return 0;
                        var hm = parseInt(numOffset, 10),
                            m = hm % 100;
                        return ((hm - m) / 100) * 60 + m;
                    })(match[8], match[9], match[10])),
                    (config._d = createUTCDate.apply(null, config._a)),
                    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm),
                    (getParsingFlags(config).rfc2822 = !0);
            } else config._isValid = !1;
        }
        function configFromStringAndFormat(config) {
            if (config._f !== hooks.ISO_8601)
                if (config._f !== hooks.RFC_2822) {
                    (config._a = []), (getParsingFlags(config).empty = !0);
                    var i,
                        parsedInput,
                        tokens,
                        token,
                        skipped,
                        string = "" + config._i,
                        stringLength = string.length,
                        totalParsedInputLength = 0;
                    for (tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [], i = 0; i < tokens.length; i++)
                        (token = tokens[i]),
                            (parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]) &&
                                ((skipped = string.substr(0, string.indexOf(parsedInput))).length > 0 && getParsingFlags(config).unusedInput.push(skipped),
                                (string = string.slice(string.indexOf(parsedInput) + parsedInput.length)),
                                (totalParsedInputLength += parsedInput.length)),
                            formatTokenFunctions[token]
                                ? (parsedInput ? (getParsingFlags(config).empty = !1) : getParsingFlags(config).unusedTokens.push(token), addTimeToArrayFromToken(token, parsedInput, config))
                                : config._strict && !parsedInput && getParsingFlags(config).unusedTokens.push(token);
                    (getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength),
                        string.length > 0 && getParsingFlags(config).unusedInput.push(string),
                        config._a[HOUR] <= 12 && !0 === getParsingFlags(config).bigHour && config._a[HOUR] > 0 && (getParsingFlags(config).bigHour = void 0),
                        (getParsingFlags(config).parsedDateParts = config._a.slice(0)),
                        (getParsingFlags(config).meridiem = config._meridiem),
                        (config._a[HOUR] = (function (locale, hour, meridiem) {
                            var isPm;
                            if (null == meridiem) return hour;
                            return null != locale.meridiemHour ? locale.meridiemHour(hour, meridiem) : null != locale.isPM ? ((isPm = locale.isPM(meridiem)) && hour < 12 && (hour += 12), isPm || 12 !== hour || (hour = 0), hour) : hour;
                        })(config._locale, config._a[HOUR], config._meridiem)),
                        configFromArray(config),
                        checkOverflow(config);
                } else configFromRFC2822(config);
            else configFromISO(config);
        }
        function prepareConfig(config) {
            var input = config._i,
                format = config._f;
            return (
                (config._locale = config._locale || getLocale(config._l)),
                null === input || (void 0 === format && "" === input)
                    ? createInvalid({ nullInput: !0 })
                    : ("string" == typeof input && (config._i = input = config._locale.preparse(input)),
                      isMoment(input)
                          ? new Moment(checkOverflow(input))
                          : (isDate(input)
                                ? (config._d = input)
                                : isArray(format)
                                ? (function (config) {
                                      var tempConfig, bestMoment, scoreToBeat, i, currentScore;
                                      if (0 === config._f.length) return (getParsingFlags(config).invalidFormat = !0), void (config._d = new Date(NaN));
                                      for (i = 0; i < config._f.length; i++)
                                          (currentScore = 0),
                                              (tempConfig = copyConfig({}, config)),
                                              null != config._useUTC && (tempConfig._useUTC = config._useUTC),
                                              (tempConfig._f = config._f[i]),
                                              configFromStringAndFormat(tempConfig),
                                              isValid(tempConfig) &&
                                                  ((currentScore += getParsingFlags(tempConfig).charsLeftOver),
                                                  (currentScore += 10 * getParsingFlags(tempConfig).unusedTokens.length),
                                                  (getParsingFlags(tempConfig).score = currentScore),
                                                  (null == scoreToBeat || currentScore < scoreToBeat) && ((scoreToBeat = currentScore), (bestMoment = tempConfig)));
                                      extend(config, bestMoment || tempConfig);
                                  })(config)
                                : format
                                ? configFromStringAndFormat(config)
                                : (function (config) {
                                      var input = config._i;
                                      isUndefined(input)
                                          ? (config._d = new Date(hooks.now()))
                                          : isDate(input)
                                          ? (config._d = new Date(input.valueOf()))
                                          : "string" == typeof input
                                          ? (function (config) {
                                                var matched = aspNetJsonRegex.exec(config._i);
                                                null === matched
                                                    ? (configFromISO(config),
                                                      !1 === config._isValid && (delete config._isValid, configFromRFC2822(config), !1 === config._isValid && (delete config._isValid, hooks.createFromInputFallback(config))))
                                                    : (config._d = new Date(+matched[1]));
                                            })(config)
                                          : isArray(input)
                                          ? ((config._a = map(input.slice(0), function (obj) {
                                                return parseInt(obj, 10);
                                            })),
                                            configFromArray(config))
                                          : isObject(input)
                                          ? (function (config) {
                                                if (!config._d) {
                                                    var i = normalizeObjectUnits(config._i);
                                                    (config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
                                                        return obj && parseInt(obj, 10);
                                                    })),
                                                        configFromArray(config);
                                                }
                                            })(config)
                                          : isNumber(input)
                                          ? (config._d = new Date(input))
                                          : hooks.createFromInputFallback(config);
                                  })(config),
                            isValid(config) || (config._d = null),
                            config))
            );
        }
        function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var res,
                c = {};
            return (
                (!0 !== locale && !1 !== locale) || ((strict = locale), (locale = void 0)),
                ((isObject(input) &&
                    (function (obj) {
                        if (Object.getOwnPropertyNames) return 0 === Object.getOwnPropertyNames(obj).length;
                        var k;
                        for (k in obj) if (obj.hasOwnProperty(k)) return !1;
                        return !0;
                    })(input)) ||
                    (isArray(input) && 0 === input.length)) &&
                    (input = void 0),
                (c._isAMomentObject = !0),
                (c._useUTC = c._isUTC = isUTC),
                (c._l = locale),
                (c._i = input),
                (c._f = format),
                (c._strict = strict),
                (res = new Moment(checkOverflow(prepareConfig(c))))._nextDay && (res.add(1, "d"), (res._nextDay = void 0)),
                res
            );
        }
        function createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, !1);
        }
        (hooks.createFromInputFallback = deprecate(
            "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
            function (config) {
                config._d = new Date(config._i + (config._useUTC ? " UTC" : ""));
            }
        )),
            (hooks.ISO_8601 = function () {}),
            (hooks.RFC_2822 = function () {});
        var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
                var other = createLocal.apply(null, arguments);
                return this.isValid() && other.isValid() ? (other < this ? this : other) : createInvalid();
            }),
            prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
                var other = createLocal.apply(null, arguments);
                return this.isValid() && other.isValid() ? (other > this ? this : other) : createInvalid();
            });
        function pickBy(fn, moments) {
            var res, i;
            if ((1 === moments.length && isArray(moments[0]) && (moments = moments[0]), !moments.length)) return createLocal();
            for (res = moments[0], i = 1; i < moments.length; ++i) (moments[i].isValid() && !moments[i][fn](res)) || (res = moments[i]);
            return res;
        }
        var ordering = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
        function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration),
                years = normalizedInput.year || 0,
                quarters = normalizedInput.quarter || 0,
                months = normalizedInput.month || 0,
                weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
                days = normalizedInput.day || 0,
                hours = normalizedInput.hour || 0,
                minutes = normalizedInput.minute || 0,
                seconds = normalizedInput.second || 0,
                milliseconds = normalizedInput.millisecond || 0;
            (this._isValid = (function (m) {
                for (var key in m) if (-1 === indexOf.call(ordering, key) || (null != m[key] && isNaN(m[key]))) return !1;
                for (var unitHasDecimal = !1, i = 0; i < ordering.length; ++i)
                    if (m[ordering[i]]) {
                        if (unitHasDecimal) return !1;
                        parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]]) && (unitHasDecimal = !0);
                    }
                return !0;
            })(normalizedInput)),
                (this._milliseconds = +milliseconds + 1e3 * seconds + 6e4 * minutes + 1e3 * hours * 60 * 60),
                (this._days = +days + 7 * weeks),
                (this._months = +months + 3 * quarters + 12 * years),
                (this._data = {}),
                (this._locale = getLocale()),
                this._bubble();
        }
        function isDuration(obj) {
            return obj instanceof Duration;
        }
        function absRound(number) {
            return number < 0 ? -1 * Math.round(-1 * number) : Math.round(number);
        }
        function offset(token, separator) {
            addFormatToken(token, 0, 0, function () {
                var offset = this.utcOffset(),
                    sign = "+";
                return offset < 0 && ((offset = -offset), (sign = "-")), sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
            });
        }
        offset("Z", ":"),
            offset("ZZ", ""),
            addRegexToken("Z", matchShortOffset),
            addRegexToken("ZZ", matchShortOffset),
            addParseToken(["Z", "ZZ"], function (input, array, config) {
                (config._useUTC = !0), (config._tzm = offsetFromString(matchShortOffset, input));
            });
        var chunkOffset = /([\+\-]|\d\d)/gi;
        function offsetFromString(matcher, string) {
            var matches = (string || "").match(matcher);
            if (null === matches) return null;
            var parts = ((matches[matches.length - 1] || []) + "").match(chunkOffset) || ["-", 0, 0],
                minutes = 60 * parts[1] + toInt(parts[2]);
            return 0 === minutes ? 0 : "+" === parts[0] ? minutes : -minutes;
        }
        function cloneWithOffset(input, model) {
            var res, diff;
            return model._isUTC
                ? ((res = model.clone()), (diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf()), res._d.setTime(res._d.valueOf() + diff), hooks.updateOffset(res, !1), res)
                : createLocal(input).local();
        }
        function getDateOffset(m) {
            return 15 * -Math.round(m._d.getTimezoneOffset() / 15);
        }
        function isUtc() {
            return !!this.isValid() && this._isUTC && 0 === this._offset;
        }
        hooks.updateOffset = function () {};
        var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
            isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function createDuration(input, key) {
            var sign,
                ret,
                diffRes,
                duration = input,
                match = null;
            return (
                isDuration(input)
                    ? (duration = { ms: input._milliseconds, d: input._days, M: input._months })
                    : isNumber(input)
                    ? ((duration = {}), key ? (duration[key] = input) : (duration.milliseconds = input))
                    : (match = aspNetRegex.exec(input))
                    ? ((sign = "-" === match[1] ? -1 : 1),
                      (duration = { y: 0, d: toInt(match[DATE]) * sign, h: toInt(match[HOUR]) * sign, m: toInt(match[MINUTE]) * sign, s: toInt(match[SECOND]) * sign, ms: toInt(absRound(1e3 * match[MILLISECOND])) * sign }))
                    : (match = isoRegex.exec(input))
                    ? ((sign = "-" === match[1] ? -1 : 1),
                      (duration = {
                          y: parseIso(match[2], sign),
                          M: parseIso(match[3], sign),
                          w: parseIso(match[4], sign),
                          d: parseIso(match[5], sign),
                          h: parseIso(match[6], sign),
                          m: parseIso(match[7], sign),
                          s: parseIso(match[8], sign),
                      }))
                    : null == duration
                    ? (duration = {})
                    : "object" == typeof duration &&
                      ("from" in duration || "to" in duration) &&
                      ((diffRes = (function (base, other) {
                          var res;
                          if (!base.isValid() || !other.isValid()) return { milliseconds: 0, months: 0 };
                          (other = cloneWithOffset(other, base)),
                              base.isBefore(other) ? (res = positiveMomentsDifference(base, other)) : (((res = positiveMomentsDifference(other, base)).milliseconds = -res.milliseconds), (res.months = -res.months));
                          return res;
                      })(createLocal(duration.from), createLocal(duration.to))),
                      ((duration = {}).ms = diffRes.milliseconds),
                      (duration.M = diffRes.months)),
                (ret = new Duration(duration)),
                isDuration(input) && hasOwnProp(input, "_locale") && (ret._locale = input._locale),
                ret
            );
        }
        function parseIso(inp, sign) {
            var res = inp && parseFloat(inp.replace(",", "."));
            return (isNaN(res) ? 0 : res) * sign;
        }
        function positiveMomentsDifference(base, other) {
            var res = {};
            return (res.months = other.month() - base.month() + 12 * (other.year() - base.year())), base.clone().add(res.months, "M").isAfter(other) && --res.months, (res.milliseconds = +other - +base.clone().add(res.months, "M")), res;
        }
        function createAdder(direction, name) {
            return function (val, period) {
                var tmp;
                return (
                    null === period ||
                        isNaN(+period) ||
                        (deprecateSimple(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),
                        (tmp = val),
                        (val = period),
                        (period = tmp)),
                    addSubtract(this, createDuration((val = "string" == typeof val ? +val : val), period), direction),
                    this
                );
            };
        }
        function addSubtract(mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds,
                days = absRound(duration._days),
                months = absRound(duration._months);
            mom.isValid() &&
                ((updateOffset = null == updateOffset || updateOffset),
                months && setMonth(mom, get(mom, "Month") + months * isAdding),
                days && set$1(mom, "Date", get(mom, "Date") + days * isAdding),
                milliseconds && mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding),
                updateOffset && hooks.updateOffset(mom, days || months));
        }
        (createDuration.fn = Duration.prototype),
            (createDuration.invalid = function () {
                return createDuration(NaN);
            });
        var add = createAdder(1, "add"),
            subtract = createAdder(-1, "subtract");
        function monthDiff(a, b) {
            var wholeMonthDiff = 12 * (b.year() - a.year()) + (b.month() - a.month()),
                anchor = a.clone().add(wholeMonthDiff, "months");
            return -(wholeMonthDiff + (b - anchor < 0 ? (b - anchor) / (anchor - a.clone().add(wholeMonthDiff - 1, "months")) : (b - anchor) / (a.clone().add(wholeMonthDiff + 1, "months") - anchor))) || 0;
        }
        function locale(key) {
            var newLocaleData;
            return void 0 === key ? this._locale._abbr : (null != (newLocaleData = getLocale(key)) && (this._locale = newLocaleData), this);
        }
        (hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"), (hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]");
        var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (key) {
            return void 0 === key ? this.localeData() : this.locale(key);
        });
        function localeData() {
            return this._locale;
        }
        var MS_PER_SECOND = 1e3,
            MS_PER_MINUTE = 60 * MS_PER_SECOND,
            MS_PER_HOUR = 60 * MS_PER_MINUTE,
            MS_PER_400_YEARS = 3506328 * MS_PER_HOUR;
        function mod$1(dividend, divisor) {
            return ((dividend % divisor) + divisor) % divisor;
        }
        function localStartOfDate(y, m, d) {
            return y < 100 && y >= 0 ? new Date(y + 400, m, d) - MS_PER_400_YEARS : new Date(y, m, d).valueOf();
        }
        function utcStartOfDate(y, m, d) {
            return y < 100 && y >= 0 ? Date.UTC(y + 400, m, d) - MS_PER_400_YEARS : Date.UTC(y, m, d);
        }
        function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
        }
        function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;
            return null == input
                ? weekOfYear(this, dow, doy).year
                : (week > (weeksTarget = weeksInYear(input, dow, doy)) && (week = weeksTarget),
                  function (weekYear, week, weekday, dow, doy) {
                      var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
                          date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
                      return this.year(date.getUTCFullYear()), this.month(date.getUTCMonth()), this.date(date.getUTCDate()), this;
                  }.call(this, input, week, weekday, dow, doy));
        }
        addFormatToken(0, ["gg", 2], 0, function () {
            return this.weekYear() % 100;
        }),
            addFormatToken(0, ["GG", 2], 0, function () {
                return this.isoWeekYear() % 100;
            }),
            addWeekYearFormatToken("gggg", "weekYear"),
            addWeekYearFormatToken("ggggg", "weekYear"),
            addWeekYearFormatToken("GGGG", "isoWeekYear"),
            addWeekYearFormatToken("GGGGG", "isoWeekYear"),
            addUnitAlias("weekYear", "gg"),
            addUnitAlias("isoWeekYear", "GG"),
            addUnitPriority("weekYear", 1),
            addUnitPriority("isoWeekYear", 1),
            addRegexToken("G", matchSigned),
            addRegexToken("g", matchSigned),
            addRegexToken("GG", match1to2, match2),
            addRegexToken("gg", match1to2, match2),
            addRegexToken("GGGG", match1to4, match4),
            addRegexToken("gggg", match1to4, match4),
            addRegexToken("GGGGG", match1to6, match6),
            addRegexToken("ggggg", match1to6, match6),
            addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function (input, week, config, token) {
                week[token.substr(0, 2)] = toInt(input);
            }),
            addWeekParseToken(["gg", "GG"], function (input, week, config, token) {
                week[token] = hooks.parseTwoDigitYear(input);
            }),
            addFormatToken("Q", 0, "Qo", "quarter"),
            addUnitAlias("quarter", "Q"),
            addUnitPriority("quarter", 7),
            addRegexToken("Q", match1),
            addParseToken("Q", function (input, array) {
                array[MONTH] = 3 * (toInt(input) - 1);
            }),
            addFormatToken("D", ["DD", 2], "Do", "date"),
            addUnitAlias("date", "D"),
            addUnitPriority("date", 9),
            addRegexToken("D", match1to2),
            addRegexToken("DD", match1to2, match2),
            addRegexToken("Do", function (isStrict, locale) {
                return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
            }),
            addParseToken(["D", "DD"], DATE),
            addParseToken("Do", function (input, array) {
                array[DATE] = toInt(input.match(match1to2)[0]);
            });
        var getSetDayOfMonth = makeGetSet("Date", !0);
        addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
            addUnitAlias("dayOfYear", "DDD"),
            addUnitPriority("dayOfYear", 4),
            addRegexToken("DDD", match1to3),
            addRegexToken("DDDD", match3),
            addParseToken(["DDD", "DDDD"], function (input, array, config) {
                config._dayOfYear = toInt(input);
            }),
            addFormatToken("m", ["mm", 2], 0, "minute"),
            addUnitAlias("minute", "m"),
            addUnitPriority("minute", 14),
            addRegexToken("m", match1to2),
            addRegexToken("mm", match1to2, match2),
            addParseToken(["m", "mm"], MINUTE);
        var getSetMinute = makeGetSet("Minutes", !1);
        addFormatToken("s", ["ss", 2], 0, "second"), addUnitAlias("second", "s"), addUnitPriority("second", 15), addRegexToken("s", match1to2), addRegexToken("ss", match1to2, match2), addParseToken(["s", "ss"], SECOND);
        var token,
            getSetSecond = makeGetSet("Seconds", !1);
        for (
            addFormatToken("S", 0, 0, function () {
                return ~~(this.millisecond() / 100);
            }),
                addFormatToken(0, ["SS", 2], 0, function () {
                    return ~~(this.millisecond() / 10);
                }),
                addFormatToken(0, ["SSS", 3], 0, "millisecond"),
                addFormatToken(0, ["SSSS", 4], 0, function () {
                    return 10 * this.millisecond();
                }),
                addFormatToken(0, ["SSSSS", 5], 0, function () {
                    return 100 * this.millisecond();
                }),
                addFormatToken(0, ["SSSSSS", 6], 0, function () {
                    return 1e3 * this.millisecond();
                }),
                addFormatToken(0, ["SSSSSSS", 7], 0, function () {
                    return 1e4 * this.millisecond();
                }),
                addFormatToken(0, ["SSSSSSSS", 8], 0, function () {
                    return 1e5 * this.millisecond();
                }),
                addFormatToken(0, ["SSSSSSSSS", 9], 0, function () {
                    return 1e6 * this.millisecond();
                }),
                addUnitAlias("millisecond", "ms"),
                addUnitPriority("millisecond", 16),
                addRegexToken("S", match1to3, match1),
                addRegexToken("SS", match1to3, match2),
                addRegexToken("SSS", match1to3, match3),
                token = "SSSS";
            token.length <= 9;
            token += "S"
        )
            addRegexToken(token, matchUnsigned);
        function parseMs(input, array) {
            array[MILLISECOND] = toInt(1e3 * ("0." + input));
        }
        for (token = "S"; token.length <= 9; token += "S") addParseToken(token, parseMs);
        var getSetMillisecond = makeGetSet("Milliseconds", !1);
        addFormatToken("z", 0, 0, "zoneAbbr"), addFormatToken("zz", 0, 0, "zoneName");
        var proto = Moment.prototype;
        function preParsePostFormat(string) {
            return string;
        }
        (proto.add = add),
            (proto.calendar = function (time, formats) {
                var now = time || createLocal(),
                    sod = cloneWithOffset(now, this).startOf("day"),
                    format = hooks.calendarFormat(this, sod) || "sameElse",
                    output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
                return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
            }),
            (proto.clone = function () {
                return new Moment(this);
            }),
            (proto.diff = function (input, units, asFloat) {
                var that, zoneDelta, output;
                if (!this.isValid()) return NaN;
                if (!(that = cloneWithOffset(input, this)).isValid()) return NaN;
                switch (((zoneDelta = 6e4 * (that.utcOffset() - this.utcOffset())), (units = normalizeUnits(units)))) {
                    case "year":
                        output = monthDiff(this, that) / 12;
                        break;
                    case "month":
                        output = monthDiff(this, that);
                        break;
                    case "quarter":
                        output = monthDiff(this, that) / 3;
                        break;
                    case "second":
                        output = (this - that) / 1e3;
                        break;
                    case "minute":
                        output = (this - that) / 6e4;
                        break;
                    case "hour":
                        output = (this - that) / 36e5;
                        break;
                    case "day":
                        output = (this - that - zoneDelta) / 864e5;
                        break;
                    case "week":
                        output = (this - that - zoneDelta) / 6048e5;
                        break;
                    default:
                        output = this - that;
                }
                return asFloat ? output : absFloor(output);
            }),
            (proto.endOf = function (units) {
                var time;
                if (void 0 === (units = normalizeUnits(units)) || "millisecond" === units || !this.isValid()) return this;
                var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
                switch (units) {
                    case "year":
                        time = startOfDate(this.year() + 1, 0, 1) - 1;
                        break;
                    case "quarter":
                        time = startOfDate(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
                        break;
                    case "month":
                        time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                        break;
                    case "week":
                        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                        break;
                    case "isoWeek":
                        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                        break;
                    case "day":
                    case "date":
                        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                        break;
                    case "hour":
                        (time = this._d.valueOf()), (time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1);
                        break;
                    case "minute":
                        (time = this._d.valueOf()), (time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1);
                        break;
                    case "second":
                        (time = this._d.valueOf()), (time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1);
                }
                return this._d.setTime(time), hooks.updateOffset(this, !0), this;
            }),
            (proto.format = function (inputString) {
                inputString || (inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat);
                var output = formatMoment(this, inputString);
                return this.localeData().postformat(output);
            }),
            (proto.from = function (time, withoutSuffix) {
                return this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid()) ? createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix) : this.localeData().invalidDate();
            }),
            (proto.fromNow = function (withoutSuffix) {
                return this.from(createLocal(), withoutSuffix);
            }),
            (proto.to = function (time, withoutSuffix) {
                return this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid()) ? createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix) : this.localeData().invalidDate();
            }),
            (proto.toNow = function (withoutSuffix) {
                return this.to(createLocal(), withoutSuffix);
            }),
            (proto.get = function (units) {
                return isFunction(this[(units = normalizeUnits(units))]) ? this[units]() : this;
            }),
            (proto.invalidAt = function () {
                return getParsingFlags(this).overflow;
            }),
            (proto.isAfter = function (input, units) {
                var localInput = isMoment(input) ? input : createLocal(input);
                return (
                    !(!this.isValid() || !localInput.isValid()) && ("millisecond" === (units = normalizeUnits(units) || "millisecond") ? this.valueOf() > localInput.valueOf() : localInput.valueOf() < this.clone().startOf(units).valueOf())
                );
            }),
            (proto.isBefore = function (input, units) {
                var localInput = isMoment(input) ? input : createLocal(input);
                return !(!this.isValid() || !localInput.isValid()) && ("millisecond" === (units = normalizeUnits(units) || "millisecond") ? this.valueOf() < localInput.valueOf() : this.clone().endOf(units).valueOf() < localInput.valueOf());
            }),
            (proto.isBetween = function (from, to, units, inclusivity) {
                var localFrom = isMoment(from) ? from : createLocal(from),
                    localTo = isMoment(to) ? to : createLocal(to);
                return (
                    !!(this.isValid() && localFrom.isValid() && localTo.isValid()) &&
                    ("(" === (inclusivity = inclusivity || "()")[0] ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
                    (")" === inclusivity[1] ? this.isBefore(localTo, units) : !this.isAfter(localTo, units))
                );
            }),
            (proto.isSame = function (input, units) {
                var inputMs,
                    localInput = isMoment(input) ? input : createLocal(input);
                return (
                    !(!this.isValid() || !localInput.isValid()) &&
                    ("millisecond" === (units = normalizeUnits(units) || "millisecond")
                        ? this.valueOf() === localInput.valueOf()
                        : ((inputMs = localInput.valueOf()), this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf()))
                );
            }),
            (proto.isSameOrAfter = function (input, units) {
                return this.isSame(input, units) || this.isAfter(input, units);
            }),
            (proto.isSameOrBefore = function (input, units) {
                return this.isSame(input, units) || this.isBefore(input, units);
            }),
            (proto.isValid = function () {
                return isValid(this);
            }),
            (proto.lang = lang),
            (proto.locale = locale),
            (proto.localeData = localeData),
            (proto.max = prototypeMax),
            (proto.min = prototypeMin),
            (proto.parsingFlags = function () {
                return extend({}, getParsingFlags(this));
            }),
            (proto.set = function (units, value) {
                if ("object" == typeof units)
                    for (
                        var prioritized = (function (unitsObj) {
                                var units = [];
                                for (var u in unitsObj) units.push({ unit: u, priority: priorities[u] });
                                return (
                                    units.sort(function (a, b) {
                                        return a.priority - b.priority;
                                    }),
                                    units
                                );
                            })((units = normalizeObjectUnits(units))),
                            i = 0;
                        i < prioritized.length;
                        i++
                    )
                        this[prioritized[i].unit](units[prioritized[i].unit]);
                else if (isFunction(this[(units = normalizeUnits(units))])) return this[units](value);
                return this;
            }),
            (proto.startOf = function (units) {
                var time;
                if (void 0 === (units = normalizeUnits(units)) || "millisecond" === units || !this.isValid()) return this;
                var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
                switch (units) {
                    case "year":
                        time = startOfDate(this.year(), 0, 1);
                        break;
                    case "quarter":
                        time = startOfDate(this.year(), this.month() - (this.month() % 3), 1);
                        break;
                    case "month":
                        time = startOfDate(this.year(), this.month(), 1);
                        break;
                    case "week":
                        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                        break;
                    case "isoWeek":
                        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                        break;
                    case "day":
                    case "date":
                        time = startOfDate(this.year(), this.month(), this.date());
                        break;
                    case "hour":
                        (time = this._d.valueOf()), (time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR));
                        break;
                    case "minute":
                        (time = this._d.valueOf()), (time -= mod$1(time, MS_PER_MINUTE));
                        break;
                    case "second":
                        (time = this._d.valueOf()), (time -= mod$1(time, MS_PER_SECOND));
                }
                return this._d.setTime(time), hooks.updateOffset(this, !0), this;
            }),
            (proto.subtract = subtract),
            (proto.toArray = function () {
                var m = this;
                return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
            }),
            (proto.toObject = function () {
                var m = this;
                return { years: m.year(), months: m.month(), date: m.date(), hours: m.hours(), minutes: m.minutes(), seconds: m.seconds(), milliseconds: m.milliseconds() };
            }),
            (proto.toDate = function () {
                return new Date(this.valueOf());
            }),
            (proto.toISOString = function (keepOffset) {
                if (!this.isValid()) return null;
                var utc = !0 !== keepOffset,
                    m = utc ? this.clone().utc() : this;
                return m.year() < 0 || m.year() > 9999
                    ? formatMoment(m, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ")
                    : isFunction(Date.prototype.toISOString)
                    ? utc
                        ? this.toDate().toISOString()
                        : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", formatMoment(m, "Z"))
                    : formatMoment(m, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
            }),
            (proto.inspect = function () {
                if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
                var func = "moment",
                    zone = "";
                this.isLocal() || ((func = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone"), (zone = "Z"));
                var prefix = "[" + func + '("]',
                    year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY",
                    suffix = zone + '[")]';
                return this.format(prefix + year + "-MM-DD[T]HH:mm:ss.SSS" + suffix);
            }),
            (proto.toJSON = function () {
                return this.isValid() ? this.toISOString() : null;
            }),
            (proto.toString = function () {
                return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            }),
            (proto.unix = function () {
                return Math.floor(this.valueOf() / 1e3);
            }),
            (proto.valueOf = function () {
                return this._d.valueOf() - 6e4 * (this._offset || 0);
            }),
            (proto.creationData = function () {
                return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };
            }),
            (proto.year = getSetYear),
            (proto.isLeapYear = function () {
                return isLeapYear(this.year());
            }),
            (proto.weekYear = function (input) {
                return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
            }),
            (proto.isoWeekYear = function (input) {
                return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
            }),
            (proto.quarter = proto.quarters = function (input) {
                return null == input ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (input - 1) + (this.month() % 3));
            }),
            (proto.month = getSetMonth),
            (proto.daysInMonth = function () {
                return daysInMonth(this.year(), this.month());
            }),
            (proto.week = proto.weeks = function (input) {
                var week = this.localeData().week(this);
                return null == input ? week : this.add(7 * (input - week), "d");
            }),
            (proto.isoWeek = proto.isoWeeks = function (input) {
                var week = weekOfYear(this, 1, 4).week;
                return null == input ? week : this.add(7 * (input - week), "d");
            }),
            (proto.weeksInYear = function () {
                var weekInfo = this.localeData()._week;
                return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
            }),
            (proto.isoWeeksInYear = function () {
                return weeksInYear(this.year(), 1, 4);
            }),
            (proto.date = getSetDayOfMonth),
            (proto.day = proto.days = function (input) {
                if (!this.isValid()) return null != input ? this : NaN;
                var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                return null != input
                    ? ((input = (function (input, locale) {
                          return "string" != typeof input ? input : isNaN(input) ? ("number" == typeof (input = locale.weekdaysParse(input)) ? input : null) : parseInt(input, 10);
                      })(input, this.localeData())),
                      this.add(input - day, "d"))
                    : day;
            }),
            (proto.weekday = function (input) {
                if (!this.isValid()) return null != input ? this : NaN;
                var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
                return null == input ? weekday : this.add(input - weekday, "d");
            }),
            (proto.isoWeekday = function (input) {
                if (!this.isValid()) return null != input ? this : NaN;
                if (null != input) {
                    var weekday = (function (input, locale) {
                        return "string" == typeof input ? locale.weekdaysParse(input) % 7 || 7 : isNaN(input) ? null : input;
                    })(input, this.localeData());
                    return this.day(this.day() % 7 ? weekday : weekday - 7);
                }
                return this.day() || 7;
            }),
            (proto.dayOfYear = function (input) {
                var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                return null == input ? dayOfYear : this.add(input - dayOfYear, "d");
            }),
            (proto.hour = proto.hours = getSetHour),
            (proto.minute = proto.minutes = getSetMinute),
            (proto.second = proto.seconds = getSetSecond),
            (proto.millisecond = proto.milliseconds = getSetMillisecond),
            (proto.utcOffset = function (input, keepLocalTime, keepMinutes) {
                var localAdjust,
                    offset = this._offset || 0;
                if (!this.isValid()) return null != input ? this : NaN;
                if (null != input) {
                    if ("string" == typeof input) {
                        if (null === (input = offsetFromString(matchShortOffset, input))) return this;
                    } else Math.abs(input) < 16 && !keepMinutes && (input *= 60);
                    return (
                        !this._isUTC && keepLocalTime && (localAdjust = getDateOffset(this)),
                        (this._offset = input),
                        (this._isUTC = !0),
                        null != localAdjust && this.add(localAdjust, "m"),
                        offset !== input &&
                            (!keepLocalTime || this._changeInProgress
                                ? addSubtract(this, createDuration(input - offset, "m"), 1, !1)
                                : this._changeInProgress || ((this._changeInProgress = !0), hooks.updateOffset(this, !0), (this._changeInProgress = null))),
                        this
                    );
                }
                return this._isUTC ? offset : getDateOffset(this);
            }),
            (proto.utc = function (keepLocalTime) {
                return this.utcOffset(0, keepLocalTime);
            }),
            (proto.local = function (keepLocalTime) {
                return this._isUTC && (this.utcOffset(0, keepLocalTime), (this._isUTC = !1), keepLocalTime && this.subtract(getDateOffset(this), "m")), this;
            }),
            (proto.parseZone = function () {
                if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
                else if ("string" == typeof this._i) {
                    var tZone = offsetFromString(matchOffset, this._i);
                    null != tZone ? this.utcOffset(tZone) : this.utcOffset(0, !0);
                }
                return this;
            }),
            (proto.hasAlignedHourOffset = function (input) {
                return !!this.isValid() && ((input = input ? createLocal(input).utcOffset() : 0), (this.utcOffset() - input) % 60 == 0);
            }),
            (proto.isDST = function () {
                return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
            }),
            (proto.isLocal = function () {
                return !!this.isValid() && !this._isUTC;
            }),
            (proto.isUtcOffset = function () {
                return !!this.isValid() && this._isUTC;
            }),
            (proto.isUtc = isUtc),
            (proto.isUTC = isUtc),
            (proto.zoneAbbr = function () {
                return this._isUTC ? "UTC" : "";
            }),
            (proto.zoneName = function () {
                return this._isUTC ? "Coordinated Universal Time" : "";
            }),
            (proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth)),
            (proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth)),
            (proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear)),
            (proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", function (input, keepLocalTime) {
                return null != input ? ("string" != typeof input && (input = -input), this.utcOffset(input, keepLocalTime), this) : -this.utcOffset();
            })),
            (proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", function () {
                if (!isUndefined(this._isDSTShifted)) return this._isDSTShifted;
                var c = {};
                if ((copyConfig(c, this), (c = prepareConfig(c))._a)) {
                    var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
                    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
                } else this._isDSTShifted = !1;
                return this._isDSTShifted;
            }));
        var proto$1 = Locale.prototype;
        function get$1(format, index, field, setter) {
            var locale = getLocale(),
                utc = createUTC().set(setter, index);
            return locale[field](utc, format);
        }
        function listMonthsImpl(format, index, field) {
            if ((isNumber(format) && ((index = format), (format = void 0)), (format = format || ""), null != index)) return get$1(format, index, field, "month");
            var i,
                out = [];
            for (i = 0; i < 12; i++) out[i] = get$1(format, i, field, "month");
            return out;
        }
        function listWeekdaysImpl(localeSorted, format, index, field) {
            "boolean" == typeof localeSorted
                ? (isNumber(format) && ((index = format), (format = void 0)), (format = format || ""))
                : ((index = format = localeSorted), (localeSorted = !1), isNumber(format) && ((index = format), (format = void 0)), (format = format || ""));
            var i,
                locale = getLocale(),
                shift = localeSorted ? locale._week.dow : 0;
            if (null != index) return get$1(format, (index + shift) % 7, field, "day");
            var out = [];
            for (i = 0; i < 7; i++) out[i] = get$1(format, (i + shift) % 7, field, "day");
            return out;
        }
        (proto$1.calendar = function (key, mom, now) {
            var output = this._calendar[key] || this._calendar.sameElse;
            return isFunction(output) ? output.call(mom, now) : output;
        }),
            (proto$1.longDateFormat = function (key) {
                var format = this._longDateFormat[key],
                    formatUpper = this._longDateFormat[key.toUpperCase()];
                return format || !formatUpper
                    ? format
                    : ((this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
                          return val.slice(1);
                      })),
                      this._longDateFormat[key]);
            }),
            (proto$1.invalidDate = function () {
                return this._invalidDate;
            }),
            (proto$1.ordinal = function (number) {
                return this._ordinal.replace("%d", number);
            }),
            (proto$1.preparse = preParsePostFormat),
            (proto$1.postformat = preParsePostFormat),
            (proto$1.relativeTime = function (number, withoutSuffix, string, isFuture) {
                var output = this._relativeTime[string];
                return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
            }),
            (proto$1.pastFuture = function (diff, output) {
                var format = this._relativeTime[diff > 0 ? "future" : "past"];
                return isFunction(format) ? format(output) : format.replace(/%s/i, output);
            }),
            (proto$1.set = function (config) {
                var prop, i;
                for (i in config) isFunction((prop = config[i])) ? (this[i] = prop) : (this["_" + i] = prop);
                (this._config = config), (this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source));
            }),
            (proto$1.months = function (m, format) {
                return m
                    ? isArray(this._months)
                        ? this._months[m.month()]
                        : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? "format" : "standalone"][m.month()]
                    : isArray(this._months)
                    ? this._months
                    : this._months.standalone;
            }),
            (proto$1.monthsShort = function (m, format) {
                return m
                    ? isArray(this._monthsShort)
                        ? this._monthsShort[m.month()]
                        : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"][m.month()]
                    : isArray(this._monthsShort)
                    ? this._monthsShort
                    : this._monthsShort.standalone;
            }),
            (proto$1.monthsParse = function (monthName, format, strict) {
                var i, mom, regex;
                if (this._monthsParseExact)
                    return function (monthName, format, strict) {
                        var i,
                            ii,
                            mom,
                            llc = monthName.toLocaleLowerCase();
                        if (!this._monthsParse)
                            for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], i = 0; i < 12; ++i)
                                (mom = createUTC([2e3, i])), (this._shortMonthsParse[i] = this.monthsShort(mom, "").toLocaleLowerCase()), (this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase());
                        return strict
                            ? "MMM" === format
                                ? -1 !== (ii = indexOf.call(this._shortMonthsParse, llc))
                                    ? ii
                                    : null
                                : -1 !== (ii = indexOf.call(this._longMonthsParse, llc))
                                ? ii
                                : null
                            : "MMM" === format
                            ? -1 !== (ii = indexOf.call(this._shortMonthsParse, llc))
                                ? ii
                                : -1 !== (ii = indexOf.call(this._longMonthsParse, llc))
                                ? ii
                                : null
                            : -1 !== (ii = indexOf.call(this._longMonthsParse, llc))
                            ? ii
                            : -1 !== (ii = indexOf.call(this._shortMonthsParse, llc))
                            ? ii
                            : null;
                    }.call(this, monthName, format, strict);
                for (this._monthsParse || ((this._monthsParse = []), (this._longMonthsParse = []), (this._shortMonthsParse = [])), i = 0; i < 12; i++) {
                    if (
                        ((mom = createUTC([2e3, i])),
                        strict &&
                            !this._longMonthsParse[i] &&
                            ((this._longMonthsParse[i] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i")), (this._shortMonthsParse[i] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i"))),
                        strict || this._monthsParse[i] || ((regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "")), (this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i"))),
                        strict && "MMMM" === format && this._longMonthsParse[i].test(monthName))
                    )
                        return i;
                    if (strict && "MMM" === format && this._shortMonthsParse[i].test(monthName)) return i;
                    if (!strict && this._monthsParse[i].test(monthName)) return i;
                }
            }),
            (proto$1.monthsRegex = function (isStrict) {
                return this._monthsParseExact
                    ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), isStrict ? this._monthsStrictRegex : this._monthsRegex)
                    : (hasOwnProp(this, "_monthsRegex") || (this._monthsRegex = defaultMonthsRegex), this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex);
            }),
            (proto$1.monthsShortRegex = function (isStrict) {
                return this._monthsParseExact
                    ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex)
                    : (hasOwnProp(this, "_monthsShortRegex") || (this._monthsShortRegex = defaultMonthsShortRegex), this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex);
            }),
            (proto$1.week = function (mom) {
                return weekOfYear(mom, this._week.dow, this._week.doy).week;
            }),
            (proto$1.firstDayOfYear = function () {
                return this._week.doy;
            }),
            (proto$1.firstDayOfWeek = function () {
                return this._week.dow;
            }),
            (proto$1.weekdays = function (m, format) {
                var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && !0 !== m && this._weekdays.isFormat.test(format) ? "format" : "standalone"];
                return !0 === m ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
            }),
            (proto$1.weekdaysMin = function (m) {
                return !0 === m ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
            }),
            (proto$1.weekdaysShort = function (m) {
                return !0 === m ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
            }),
            (proto$1.weekdaysParse = function (weekdayName, format, strict) {
                var i, mom, regex;
                if (this._weekdaysParseExact)
                    return function (weekdayName, format, strict) {
                        var i,
                            ii,
                            mom,
                            llc = weekdayName.toLocaleLowerCase();
                        if (!this._weekdaysParse)
                            for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], i = 0; i < 7; ++i)
                                (mom = createUTC([2e3, 1]).day(i)),
                                    (this._minWeekdaysParse[i] = this.weekdaysMin(mom, "").toLocaleLowerCase()),
                                    (this._shortWeekdaysParse[i] = this.weekdaysShort(mom, "").toLocaleLowerCase()),
                                    (this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase());
                        return strict
                            ? "dddd" === format
                                ? -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                    ? ii
                                    : null
                                : "ddd" === format
                                ? -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                                    ? ii
                                    : null
                                : -1 !== (ii = indexOf.call(this._minWeekdaysParse, llc))
                                ? ii
                                : null
                            : "dddd" === format
                            ? -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                ? ii
                                : -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                                ? ii
                                : -1 !== (ii = indexOf.call(this._minWeekdaysParse, llc))
                                ? ii
                                : null
                            : "ddd" === format
                            ? -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                                ? ii
                                : -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                ? ii
                                : -1 !== (ii = indexOf.call(this._minWeekdaysParse, llc))
                                ? ii
                                : null
                            : -1 !== (ii = indexOf.call(this._minWeekdaysParse, llc))
                            ? ii
                            : -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                            ? ii
                            : -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                            ? ii
                            : null;
                    }.call(this, weekdayName, format, strict);
                for (this._weekdaysParse || ((this._weekdaysParse = []), (this._minWeekdaysParse = []), (this._shortWeekdaysParse = []), (this._fullWeekdaysParse = [])), i = 0; i < 7; i++) {
                    if (
                        ((mom = createUTC([2e3, 1]).day(i)),
                        strict &&
                            !this._fullWeekdaysParse[i] &&
                            ((this._fullWeekdaysParse[i] = new RegExp("^" + this.weekdays(mom, "").replace(".", "\\.?") + "$", "i")),
                            (this._shortWeekdaysParse[i] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$", "i")),
                            (this._minWeekdaysParse[i] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$", "i"))),
                        this._weekdaysParse[i] || ((regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "")), (this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i"))),
                        strict && "dddd" === format && this._fullWeekdaysParse[i].test(weekdayName))
                    )
                        return i;
                    if (strict && "ddd" === format && this._shortWeekdaysParse[i].test(weekdayName)) return i;
                    if (strict && "dd" === format && this._minWeekdaysParse[i].test(weekdayName)) return i;
                    if (!strict && this._weekdaysParse[i].test(weekdayName)) return i;
                }
            }),
            (proto$1.weekdaysRegex = function (isStrict) {
                return this._weekdaysParseExact
                    ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex)
                    : (hasOwnProp(this, "_weekdaysRegex") || (this._weekdaysRegex = defaultWeekdaysRegex), this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex);
            }),
            (proto$1.weekdaysShortRegex = function (isStrict) {
                return this._weekdaysParseExact
                    ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
                    : (hasOwnProp(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = defaultWeekdaysShortRegex), this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
            }),
            (proto$1.weekdaysMinRegex = function (isStrict) {
                return this._weekdaysParseExact
                    ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
                    : (hasOwnProp(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = defaultWeekdaysMinRegex), this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
            }),
            (proto$1.isPM = function (input) {
                return "p" === (input + "").toLowerCase().charAt(0);
            }),
            (proto$1.meridiem = function (hours, minutes, isLower) {
                return hours > 11 ? (isLower ? "pm" : "PM") : isLower ? "am" : "AM";
            }),
            getSetGlobalLocale("en", {
                dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function (number) {
                    var b = number % 10;
                    return number + (1 === toInt((number % 100) / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th");
                },
            }),
            (hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale)),
            (hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale));
        var mathAbs = Math.abs;
        function addSubtract$1(duration, input, value, direction) {
            var other = createDuration(input, value);
            return (duration._milliseconds += direction * other._milliseconds), (duration._days += direction * other._days), (duration._months += direction * other._months), duration._bubble();
        }
        function absCeil(number) {
            return number < 0 ? Math.floor(number) : Math.ceil(number);
        }
        function daysToMonths(days) {
            return (4800 * days) / 146097;
        }
        function monthsToDays(months) {
            return (146097 * months) / 4800;
        }
        function makeAs(alias) {
            return function () {
                return this.as(alias);
            };
        }
        var asMilliseconds = makeAs("ms"),
            asSeconds = makeAs("s"),
            asMinutes = makeAs("m"),
            asHours = makeAs("h"),
            asDays = makeAs("d"),
            asWeeks = makeAs("w"),
            asMonths = makeAs("M"),
            asQuarters = makeAs("Q"),
            asYears = makeAs("y");
        function makeGetter(name) {
            return function () {
                return this.isValid() ? this._data[name] : NaN;
            };
        }
        var milliseconds = makeGetter("milliseconds"),
            seconds = makeGetter("seconds"),
            minutes = makeGetter("minutes"),
            hours = makeGetter("hours"),
            days = makeGetter("days"),
            months = makeGetter("months"),
            years = makeGetter("years");
        var round = Math.round,
            thresholds = { ss: 44, s: 45, m: 45, h: 22, d: 26, M: 11 };
        var abs$1 = Math.abs;
        function sign(x) {
            return (x > 0) - (x < 0) || +x;
        }
        function toISOString$1() {
            if (!this.isValid()) return this.localeData().invalidDate();
            var minutes,
                hours,
                seconds = abs$1(this._milliseconds) / 1e3,
                days = abs$1(this._days),
                months = abs$1(this._months);
            (hours = absFloor((minutes = absFloor(seconds / 60)) / 60)), (seconds %= 60), (minutes %= 60);
            var Y = absFloor(months / 12),
                M = (months %= 12),
                D = days,
                h = hours,
                m = minutes,
                s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, "") : "",
                total = this.asSeconds();
            if (!total) return "P0D";
            var totalSign = total < 0 ? "-" : "",
                ymSign = sign(this._months) !== sign(total) ? "-" : "",
                daysSign = sign(this._days) !== sign(total) ? "-" : "",
                hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
            return (
                totalSign +
                "P" +
                (Y ? ymSign + Y + "Y" : "") +
                (M ? ymSign + M + "M" : "") +
                (D ? daysSign + D + "D" : "") +
                (h || m || s ? "T" : "") +
                (h ? hmsSign + h + "H" : "") +
                (m ? hmsSign + m + "M" : "") +
                (s ? hmsSign + s + "S" : "")
            );
        }
        var proto$2 = Duration.prototype;
        return (
            (proto$2.isValid = function () {
                return this._isValid;
            }),
            (proto$2.abs = function () {
                var data = this._data;
                return (
                    (this._milliseconds = mathAbs(this._milliseconds)),
                    (this._days = mathAbs(this._days)),
                    (this._months = mathAbs(this._months)),
                    (data.milliseconds = mathAbs(data.milliseconds)),
                    (data.seconds = mathAbs(data.seconds)),
                    (data.minutes = mathAbs(data.minutes)),
                    (data.hours = mathAbs(data.hours)),
                    (data.months = mathAbs(data.months)),
                    (data.years = mathAbs(data.years)),
                    this
                );
            }),
            (proto$2.add = function (input, value) {
                return addSubtract$1(this, input, value, 1);
            }),
            (proto$2.subtract = function (input, value) {
                return addSubtract$1(this, input, value, -1);
            }),
            (proto$2.as = function (units) {
                if (!this.isValid()) return NaN;
                var days,
                    months,
                    milliseconds = this._milliseconds;
                if ("month" === (units = normalizeUnits(units)) || "quarter" === units || "year" === units)
                    switch (((days = this._days + milliseconds / 864e5), (months = this._months + daysToMonths(days)), units)) {
                        case "month":
                            return months;
                        case "quarter":
                            return months / 3;
                        case "year":
                            return months / 12;
                    }
                else
                    switch (((days = this._days + Math.round(monthsToDays(this._months))), units)) {
                        case "week":
                            return days / 7 + milliseconds / 6048e5;
                        case "day":
                            return days + milliseconds / 864e5;
                        case "hour":
                            return 24 * days + milliseconds / 36e5;
                        case "minute":
                            return 1440 * days + milliseconds / 6e4;
                        case "second":
                            return 86400 * days + milliseconds / 1e3;
                        case "millisecond":
                            return Math.floor(864e5 * days) + milliseconds;
                        default:
                            throw new Error("Unknown unit " + units);
                    }
            }),
            (proto$2.asMilliseconds = asMilliseconds),
            (proto$2.asSeconds = asSeconds),
            (proto$2.asMinutes = asMinutes),
            (proto$2.asHours = asHours),
            (proto$2.asDays = asDays),
            (proto$2.asWeeks = asWeeks),
            (proto$2.asMonths = asMonths),
            (proto$2.asQuarters = asQuarters),
            (proto$2.asYears = asYears),
            (proto$2.valueOf = function () {
                return this.isValid() ? this._milliseconds + 864e5 * this._days + (this._months % 12) * 2592e6 + 31536e6 * toInt(this._months / 12) : NaN;
            }),
            (proto$2._bubble = function () {
                var seconds,
                    minutes,
                    hours,
                    years,
                    monthsFromDays,
                    milliseconds = this._milliseconds,
                    days = this._days,
                    months = this._months,
                    data = this._data;
                return (
                    (milliseconds >= 0 && days >= 0 && months >= 0) || (milliseconds <= 0 && days <= 0 && months <= 0) || ((milliseconds += 864e5 * absCeil(monthsToDays(months) + days)), (days = 0), (months = 0)),
                    (data.milliseconds = milliseconds % 1e3),
                    (seconds = absFloor(milliseconds / 1e3)),
                    (data.seconds = seconds % 60),
                    (minutes = absFloor(seconds / 60)),
                    (data.minutes = minutes % 60),
                    (hours = absFloor(minutes / 60)),
                    (data.hours = hours % 24),
                    (months += monthsFromDays = absFloor(daysToMonths((days += absFloor(hours / 24))))),
                    (days -= absCeil(monthsToDays(monthsFromDays))),
                    (years = absFloor(months / 12)),
                    (months %= 12),
                    (data.days = days),
                    (data.months = months),
                    (data.years = years),
                    this
                );
            }),
            (proto$2.clone = function () {
                return createDuration(this);
            }),
            (proto$2.get = function (units) {
                return (units = normalizeUnits(units)), this.isValid() ? this[units + "s"]() : NaN;
            }),
            (proto$2.milliseconds = milliseconds),
            (proto$2.seconds = seconds),
            (proto$2.minutes = minutes),
            (proto$2.hours = hours),
            (proto$2.days = days),
            (proto$2.weeks = function () {
                return absFloor(this.days() / 7);
            }),
            (proto$2.months = months),
            (proto$2.years = years),
            (proto$2.humanize = function (withSuffix) {
                if (!this.isValid()) return this.localeData().invalidDate();
                var locale = this.localeData(),
                    output = (function (posNegDuration, withoutSuffix, locale) {
                        var duration = createDuration(posNegDuration).abs(),
                            seconds = round(duration.as("s")),
                            minutes = round(duration.as("m")),
                            hours = round(duration.as("h")),
                            days = round(duration.as("d")),
                            months = round(duration.as("M")),
                            years = round(duration.as("y")),
                            a = (seconds <= thresholds.ss && ["s", seconds]) ||
                                (seconds < thresholds.s && ["ss", seconds]) ||
                                (minutes <= 1 && ["m"]) ||
                                (minutes < thresholds.m && ["mm", minutes]) ||
                                (hours <= 1 && ["h"]) ||
                                (hours < thresholds.h && ["hh", hours]) ||
                                (days <= 1 && ["d"]) ||
                                (days < thresholds.d && ["dd", days]) ||
                                (months <= 1 && ["M"]) ||
                                (months < thresholds.M && ["MM", months]) ||
                                (years <= 1 && ["y"]) || ["yy", years];
                        return (
                            (a[2] = withoutSuffix),
                            (a[3] = +posNegDuration > 0),
                            (a[4] = locale),
                            function (string, number, withoutSuffix, isFuture, locale) {
                                return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
                            }.apply(null, a)
                        );
                    })(this, !withSuffix, locale);
                return withSuffix && (output = locale.pastFuture(+this, output)), locale.postformat(output);
            }),
            (proto$2.toISOString = toISOString$1),
            (proto$2.toString = toISOString$1),
            (proto$2.toJSON = toISOString$1),
            (proto$2.locale = locale),
            (proto$2.localeData = localeData),
            (proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1)),
            (proto$2.lang = lang),
            addFormatToken("X", 0, 0, "unix"),
            addFormatToken("x", 0, 0, "valueOf"),
            addRegexToken("x", matchSigned),
            addRegexToken("X", /[+-]?\d+(\.\d{1,3})?/),
            addParseToken("X", function (input, array, config) {
                config._d = new Date(1e3 * parseFloat(input, 10));
            }),
            addParseToken("x", function (input, array, config) {
                config._d = new Date(toInt(input));
            }),
            (hooks.version = "2.24.0"),
            (hookCallback = createLocal),
            (hooks.fn = proto),
            (hooks.min = function () {
                return pickBy("isBefore", [].slice.call(arguments, 0));
            }),
            (hooks.max = function () {
                return pickBy("isAfter", [].slice.call(arguments, 0));
            }),
            (hooks.now = function () {
                return Date.now ? Date.now() : +new Date();
            }),
            (hooks.utc = createUTC),
            (hooks.unix = function (input) {
                return createLocal(1e3 * input);
            }),
            (hooks.months = function (format, index) {
                return listMonthsImpl(format, index, "months");
            }),
            (hooks.isDate = isDate),
            (hooks.locale = getSetGlobalLocale),
            (hooks.invalid = createInvalid),
            (hooks.duration = createDuration),
            (hooks.isMoment = isMoment),
            (hooks.weekdays = function (localeSorted, format, index) {
                return listWeekdaysImpl(localeSorted, format, index, "weekdays");
            }),
            (hooks.parseZone = function () {
                return createLocal.apply(null, arguments).parseZone();
            }),
            (hooks.localeData = getLocale),
            (hooks.isDuration = isDuration),
            (hooks.monthsShort = function (format, index) {
                return listMonthsImpl(format, index, "monthsShort");
            }),
            (hooks.weekdaysMin = function (localeSorted, format, index) {
                return listWeekdaysImpl(localeSorted, format, index, "weekdaysMin");
            }),
            (hooks.defineLocale = defineLocale),
            (hooks.updateLocale = function (name, config) {
                if (null != config) {
                    var locale,
                        tmpLocale,
                        parentConfig = baseConfig;
                    null != (tmpLocale = loadLocale(name)) && (parentConfig = tmpLocale._config),
                        ((locale = new Locale((config = mergeConfigs(parentConfig, config)))).parentLocale = locales[name]),
                        (locales[name] = locale),
                        getSetGlobalLocale(name);
                } else null != locales[name] && (null != locales[name].parentLocale ? (locales[name] = locales[name].parentLocale) : null != locales[name] && delete locales[name]);
                return locales[name];
            }),
            (hooks.locales = function () {
                return keys(locales);
            }),
            (hooks.weekdaysShort = function (localeSorted, format, index) {
                return listWeekdaysImpl(localeSorted, format, index, "weekdaysShort");
            }),
            (hooks.normalizeUnits = normalizeUnits),
            (hooks.relativeTimeRounding = function (roundingFunction) {
                return void 0 === roundingFunction ? round : "function" == typeof roundingFunction && ((round = roundingFunction), !0);
            }),
            (hooks.relativeTimeThreshold = function (threshold, limit) {
                return void 0 !== thresholds[threshold] && (void 0 === limit ? thresholds[threshold] : ((thresholds[threshold] = limit), "s" === threshold && (thresholds.ss = limit - 1), !0));
            }),
            (hooks.calendarFormat = function (myMoment, now) {
                var diff = myMoment.diff(now, "days", !0);
                return diff < -6 ? "sameElse" : diff < -1 ? "lastWeek" : diff < 0 ? "lastDay" : diff < 1 ? "sameDay" : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse";
            }),
            (hooks.prototype = proto),
            (hooks.HTML5_FMT = {
                DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                DATE: "YYYY-MM-DD",
                TIME: "HH:mm",
                TIME_SECONDS: "HH:mm:ss",
                TIME_MS: "HH:mm:ss.SSS",
                WEEK: "GGGG-[W]WW",
                MONTH: "YYYY-MM",
            }),
            hooks
        );
    }),
    (function (root, factory) {
        "use strict";
        "object" == typeof module && module.exports ? (module.exports = factory(require("moment"))) : "function" == typeof define && define.amd ? define(["moment"], factory) : factory(root.moment);
    })(this, function (moment) {
        "use strict";
        var cachedGuess,
            zones = {},
            links = {},
            names = {},
            guesses = {};
        (moment && "string" == typeof moment.version) || logError("Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/");
        var momentVersion = moment.version.split("."),
            major = +momentVersion[0],
            minor = +momentVersion[1];
        function charCodeToInt(charCode) {
            return charCode > 96 ? charCode - 87 : charCode > 64 ? charCode - 29 : charCode - 48;
        }
        function unpackBase60(string) {
            var i = 0,
                parts = string.split("."),
                whole = parts[0],
                fractional = parts[1] || "",
                multiplier = 1,
                out = 0,
                sign = 1;
            for (45 === string.charCodeAt(0) && ((i = 1), (sign = -1)); i < whole.length; i++) out = 60 * out + charCodeToInt(whole.charCodeAt(i));
            for (i = 0; i < fractional.length; i++) (multiplier /= 60), (out += charCodeToInt(fractional.charCodeAt(i)) * multiplier);
            return out * sign;
        }
        function arrayToInt(array) {
            for (var i = 0; i < array.length; i++) array[i] = unpackBase60(array[i]);
        }
        function mapIndices(source, indices) {
            var i,
                out = [];
            for (i = 0; i < indices.length; i++) out[i] = source[indices[i]];
            return out;
        }
        function unpack(string) {
            var data = string.split("|"),
                offsets = data[2].split(" "),
                indices = data[3].split(""),
                untils = data[4].split(" ");
            return (
                arrayToInt(offsets),
                arrayToInt(indices),
                arrayToInt(untils),
                (function (array, length) {
                    for (var i = 0; i < length; i++) array[i] = Math.round((array[i - 1] || 0) + 6e4 * array[i]);
                    array[length - 1] = 1 / 0;
                })(untils, indices.length),
                { name: data[0], abbrs: mapIndices(data[1].split(" "), indices), offsets: mapIndices(offsets, indices), untils: untils, population: 0 | data[5] }
            );
        }
        function Zone(packedString) {
            packedString && this._set(unpack(packedString));
        }
        function OffsetAt(at) {
            var timeString = at.toTimeString(),
                abbr = timeString.match(/\([a-z ]+\)/i);
            "GMT" === (abbr = abbr && abbr[0] ? ((abbr = abbr[0].match(/[A-Z]/g)) ? abbr.join("") : void 0) : (abbr = timeString.match(/[A-Z]{3,5}/g)) ? abbr[0] : void 0) && (abbr = void 0),
                (this.at = +at),
                (this.abbr = abbr),
                (this.offset = at.getTimezoneOffset());
        }
        function ZoneScore(zone) {
            (this.zone = zone), (this.offsetScore = 0), (this.abbrScore = 0);
        }
        function findChange(low, high) {
            for (var mid, diff; (diff = 6e4 * (((high.at - low.at) / 12e4) | 0)); ) (mid = new OffsetAt(new Date(low.at + diff))).offset === low.offset ? (low = mid) : (high = mid);
            return low;
        }
        function sortZoneScores(a, b) {
            return a.offsetScore !== b.offsetScore
                ? a.offsetScore - b.offsetScore
                : a.abbrScore !== b.abbrScore
                ? a.abbrScore - b.abbrScore
                : a.zone.population !== b.zone.population
                ? b.zone.population - a.zone.population
                : b.zone.name.localeCompare(a.zone.name);
        }
        function addToGuesses(name, offsets) {
            var i, offset;
            for (arrayToInt(offsets), i = 0; i < offsets.length; i++) (offset = offsets[i]), (guesses[offset] = guesses[offset] || {}), (guesses[offset][name] = !0);
        }
        function guessesForUserOffsets(offsets) {
            var i,
                j,
                guessesOffset,
                offsetsLength = offsets.length,
                filteredGuesses = {},
                out = [];
            for (i = 0; i < offsetsLength; i++) for (j in (guessesOffset = guesses[offsets[i].offset] || {})) guessesOffset.hasOwnProperty(j) && (filteredGuesses[j] = !0);
            for (i in filteredGuesses) filteredGuesses.hasOwnProperty(i) && out.push(names[i]);
            return out;
        }
        function rebuildGuess() {
            try {
                var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
                if (intlName && intlName.length > 3) {
                    var name = names[normalizeName(intlName)];
                    if (name) return name;
                    logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
                }
            } catch (e) {}
            var zoneScore,
                i,
                j,
                offsets = (function () {
                    var change,
                        next,
                        i,
                        startYear = new Date().getFullYear() - 2,
                        last = new OffsetAt(new Date(startYear, 0, 1)),
                        offsets = [last];
                    for (i = 1; i < 48; i++)
                        (next = new OffsetAt(new Date(startYear, i, 1))).offset !== last.offset && ((change = findChange(last, next)), offsets.push(change), offsets.push(new OffsetAt(new Date(change.at + 6e4)))), (last = next);
                    for (i = 0; i < 4; i++) offsets.push(new OffsetAt(new Date(startYear + i, 0, 1))), offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
                    return offsets;
                })(),
                offsetsLength = offsets.length,
                guesses = guessesForUserOffsets(offsets),
                zoneScores = [];
            for (i = 0; i < guesses.length; i++) {
                for (zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength), j = 0; j < offsetsLength; j++) zoneScore.scoreOffsetAt(offsets[j]);
                zoneScores.push(zoneScore);
            }
            return zoneScores.sort(sortZoneScores), zoneScores.length > 0 ? zoneScores[0].zone.name : void 0;
        }
        function normalizeName(name) {
            return (name || "").toLowerCase().replace(/\//g, "_");
        }
        function addZone(packed) {
            var i, name, split, normalized;
            for ("string" == typeof packed && (packed = [packed]), i = 0; i < packed.length; i++)
                (normalized = normalizeName((name = (split = packed[i].split("|"))[0]))), (zones[normalized] = packed[i]), (names[normalized] = name), addToGuesses(normalized, split[2].split(" "));
        }
        function getZone(name, caller) {
            name = normalizeName(name);
            var link,
                zone = zones[name];
            return zone instanceof Zone
                ? zone
                : "string" == typeof zone
                ? ((zone = new Zone(zone)), (zones[name] = zone), zone)
                : links[name] && caller !== getZone && (link = getZone(links[name], getZone))
                ? ((zone = zones[name] = new Zone())._set(link), (zone.name = names[name]), zone)
                : null;
        }
        function addLink(aliases) {
            var i, alias, normal0, normal1;
            for ("string" == typeof aliases && (aliases = [aliases]), i = 0; i < aliases.length; i++)
                (normal0 = normalizeName((alias = aliases[i].split("|"))[0])), (normal1 = normalizeName(alias[1])), (links[normal0] = normal1), (names[normal0] = alias[0]), (links[normal1] = normal0), (names[normal1] = alias[1]);
        }
        function loadData(data) {
            addZone(data.zones), addLink(data.links), (tz.dataVersion = data.version);
        }
        function needsOffset(m) {
            var isUnixTimestamp = "X" === m._f || "x" === m._f;
            return !(!m._a || void 0 !== m._tzm || isUnixTimestamp);
        }
        function logError(message) {
            "undefined" != typeof console && console.error;
        }
        function tz(input) {
            var args = Array.prototype.slice.call(arguments, 0, -1),
                name = arguments[arguments.length - 1],
                zone = getZone(name),
                out = moment.utc.apply(null, args);
            return zone && !moment.isMoment(input) && needsOffset(out) && out.add(zone.parse(out), "minutes"), out.tz(name), out;
        }
        (major < 2 || (2 === major && minor < 6)) && logError("Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " + moment.version + ". See momentjs.com"),
            (Zone.prototype = {
                _set: function (unpacked) {
                    (this.name = unpacked.name), (this.abbrs = unpacked.abbrs), (this.untils = unpacked.untils), (this.offsets = unpacked.offsets), (this.population = unpacked.population);
                },
                _index: function (timestamp) {
                    var i,
                        target = +timestamp,
                        untils = this.untils;
                    for (i = 0; i < untils.length; i++) if (target < untils[i]) return i;
                },
                parse: function (timestamp) {
                    var offset,
                        offsetNext,
                        offsetPrev,
                        i,
                        target = +timestamp,
                        offsets = this.offsets,
                        untils = this.untils,
                        max = untils.length - 1;
                    for (i = 0; i < max; i++)
                        if (
                            ((offset = offsets[i]),
                            (offsetNext = offsets[i + 1]),
                            (offsetPrev = offsets[i ? i - 1 : i]),
                            offset < offsetNext && tz.moveAmbiguousForward ? (offset = offsetNext) : offset > offsetPrev && tz.moveInvalidForward && (offset = offsetPrev),
                            target < untils[i] - 6e4 * offset)
                        )
                            return offsets[i];
                    return offsets[max];
                },
                abbr: function (mom) {
                    return this.abbrs[this._index(mom)];
                },
                offset: function (mom) {
                    return logError("zone.offset has been deprecated in favor of zone.utcOffset"), this.offsets[this._index(mom)];
                },
                utcOffset: function (mom) {
                    return this.offsets[this._index(mom)];
                },
            }),
            (ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
                (this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset)), this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, "") !== offsetAt.abbr && this.abbrScore++;
            }),
            (tz.version = "0.5.27"),
            (tz.dataVersion = ""),
            (tz._zones = zones),
            (tz._links = links),
            (tz._names = names),
            (tz.add = addZone),
            (tz.link = addLink),
            (tz.load = loadData),
            (tz.zone = getZone),
            (tz.zoneExists = function zoneExists(name) {
                return zoneExists.didShowError || ((zoneExists.didShowError = !0), logError()), !!getZone(name);
            }),
            (tz.guess = function (ignoreCache) {
                return (cachedGuess && !ignoreCache) || (cachedGuess = rebuildGuess()), cachedGuess;
            }),
            (tz.names = function () {
                var i,
                    out = [];
                for (i in names) names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i] && out.push(names[i]);
                return out.sort();
            }),
            (tz.Zone = Zone),
            (tz.unpack = unpack),
            (tz.unpackBase60 = unpackBase60),
            (tz.needsOffset = needsOffset),
            (tz.moveInvalidForward = !0),
            (tz.moveAmbiguousForward = !1);
        var old,
            fn = moment.fn;
        function abbrWrap(old) {
            return function () {
                return this._z ? this._z.abbr(this) : old.call(this);
            };
        }
        function resetZoneWrap(old) {
            return function () {
                return (this._z = null), old.apply(this, arguments);
            };
        }
        (moment.tz = tz),
            (moment.defaultZone = null),
            (moment.updateOffset = function (mom, keepTime) {
                var offset,
                    zone = moment.defaultZone;
                if ((void 0 === mom._z && (zone && needsOffset(mom) && !mom._isUTC && ((mom._d = moment.utc(mom._a)._d), mom.utc().add(zone.parse(mom), "minutes")), (mom._z = zone)), mom._z))
                    if (((offset = mom._z.utcOffset(mom)), Math.abs(offset) < 16 && (offset /= 60), void 0 !== mom.utcOffset)) {
                        var z = mom._z;
                        mom.utcOffset(-offset, keepTime), (mom._z = z);
                    } else mom.zone(offset, keepTime);
            }),
            (fn.tz = function (name, keepTime) {
                if (name) {
                    if ("string" != typeof name) throw new Error("Time zone name must be a string, got " + name + " [" + typeof name + "]");
                    return (this._z = getZone(name)), this._z ? moment.updateOffset(this, keepTime) : logError(), this;
                }
                if (this._z) return this._z.name;
            }),
            (fn.zoneName = abbrWrap(fn.zoneName)),
            (fn.zoneAbbr = abbrWrap(fn.zoneAbbr)),
            (fn.utc = resetZoneWrap(fn.utc)),
            (fn.local = resetZoneWrap(fn.local)),
            (fn.utcOffset =
                ((old = fn.utcOffset),
                function () {
                    return arguments.length > 0 && (this._z = null), old.apply(this, arguments);
                })),
            (moment.tz.setDefault = function (name) {
                return (major < 2 || (2 === major && minor < 9)) && logError(moment.version), (moment.defaultZone = name ? getZone(name) : null), moment;
            });
        var momentProperties = moment.momentProperties;
        return (
            "[object Array]" === Object.prototype.toString.call(momentProperties) ? (momentProperties.push("_z"), momentProperties.push("_a")) : momentProperties && (momentProperties._z = null),
            loadData({
                version: "2019c",
                zones: [
                    "Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
                    "Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5",
                    "Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5",
                    "Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
                    "Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6",
                    "Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
                    "Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
                    "Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
                    "Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5",
                    "Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
                    "Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|20e4",
                    "Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
                    "Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0",
                    "Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
                    "Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
                    "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
                    "Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00",
                    "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
                    "Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
                    "Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
                    "America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
                    "America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
                    "America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
                    "America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
                    "America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0",
                    "America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                    "America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0",
                    "America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0",
                    "America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                    "America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0",
                    "America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                    "America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0",
                    "America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0",
                    "America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0",
                    "America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0",
                    "America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0",
                    "America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
                    "America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
                    "America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
                    "America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
                    "America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
                    "America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
                    "America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
                    "America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3",
                    "America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
                    "America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
                    "America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
                    "America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
                    "America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
                    "America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
                    "America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
                    "America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
                    "America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
                    "America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
                    "America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
                    "America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
                    "America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
                    "America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
                    "America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
                    "America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
                    "America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
                    "America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|13e2",
                    "America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
                    "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
                    "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
                    "America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
                    "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
                    "America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
                    "America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
                    "America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
                    "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
                    "America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
                    "America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
                    "America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
                    "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
                    "America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
                    "America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
                    "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
                    "America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
                    "America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
                    "America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
                    "America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
                    "America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
                    "America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
                    "America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
                    "America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
                    "America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
                    "America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
                    "America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
                    "America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
                    "America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
                    "America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
                    "America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
                    "America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
                    "America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
                    "America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
                    "America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
                    "America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
                    "America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
                    "America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
                    "America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
                    "America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
                    "America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
                    "America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
                    "America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
                    "America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
                    "America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
                    "America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
                    "America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
                    "America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
                    "America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
                    "America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                    "America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
                    "America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
                    "America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
                    "America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0",
                    "America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
                    "America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
                    "America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
                    "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
                    "America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
                    "America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
                    "America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
                    "America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
                    "America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
                    "America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
                    "America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
                    "America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
                    "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
                    "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
                    "America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
                    "America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
                    "America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                    "America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
                    "America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
                    "America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
                    "America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
                    "Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10",
                    "Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
                    "Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
                    "Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1",
                    "Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
                    "Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
                    "Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
                    "Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
                    "Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
                    "Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
                    "Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
                    "Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
                    "Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
                    "Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
                    "Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
                    "Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
                    "Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
                    "Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
                    "Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
                    "Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0",
                    "Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
                    "Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
                    "Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
                    "Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
                    "Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0",
                    "Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
                    "Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
                    "Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
                    "Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
                    "Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
                    "Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
                    "Asia/Shanghai|CST CDT|-80 -90|010101010101010101010101010|-1c2w0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
                    "Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
                    "Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
                    "Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
                    "Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
                    "Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
                    "Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
                    "Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                    "Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5",
                    "Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4",
                    "Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
                    "Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
                    "Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
                    "Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                    "Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
                    "Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
                    "Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
                    "Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
                    "Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
                    "Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
                    "Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
                    "Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
                    "Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
                    "Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
                    "Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
                    "Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
                    "Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
                    "Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
                    "Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
                    "Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
                    "Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
                    "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
                    "Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
                    "Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
                    "Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
                    "Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
                    "Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
                    "Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
                    "Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0",
                    "Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
                    "Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
                    "Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
                    "Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
                    "Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
                    "Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
                    "Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
                    "Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
                    "Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
                    "Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
                    "Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
                    "Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
                    "Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
                    "Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
                    "Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
                    "Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                    "Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
                    "Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
                    "Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
                    "Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
                    "Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
                    "Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                    "Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
                    "Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
                    "Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
                    "Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
                    "Atlantic/South_Georgia|-02|20|0||30",
                    "Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
                    "Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
                    "Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
                    "Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
                    "Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
                    "Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746",
                    "Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4",
                    "Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
                    "Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
                    "Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
                    "Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
                    "Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
                    "Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
                    "CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                    "Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
                    "CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                    "Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                    "EST|EST|50|0|",
                    "EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "Etc/GMT-0|GMT|0|0|",
                    "Etc/GMT-1|+01|-10|0|",
                    "Pacific/Port_Moresby|+10|-a0|0||25e4",
                    "Etc/GMT-11|+11|-b0|0|",
                    "Pacific/Tarawa|+12|-c0|0||29e3",
                    "Etc/GMT-13|+13|-d0|0|",
                    "Etc/GMT-14|+14|-e0|0|",
                    "Etc/GMT-2|+02|-20|0|",
                    "Etc/GMT-3|+03|-30|0|",
                    "Etc/GMT-4|+04|-40|0|",
                    "Etc/GMT-5|+05|-50|0|",
                    "Etc/GMT-6|+06|-60|0|",
                    "Indian/Christmas|+07|-70|0||21e2",
                    "Etc/GMT-8|+08|-80|0|",
                    "Pacific/Palau|+09|-90|0||21e3",
                    "Etc/GMT+1|-01|10|0|",
                    "Etc/GMT+10|-10|a0|0|",
                    "Etc/GMT+11|-11|b0|0|",
                    "Etc/GMT+12|-12|c0|0|",
                    "Etc/GMT+3|-03|30|0|",
                    "Etc/GMT+4|-04|40|0|",
                    "Etc/GMT+5|-05|50|0|",
                    "Etc/GMT+6|-06|60|0|",
                    "Etc/GMT+7|-07|70|0|",
                    "Etc/GMT+8|-08|80|0|",
                    "Etc/GMT+9|-09|90|0|",
                    "Etc/UTC|UTC|0|0|",
                    "Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
                    "Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
                    "Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
                    "Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
                    "Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
                    "Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                    "Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
                    "Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
                    "Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
                    "Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
                    "Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
                    "Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
                    "Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
                    "Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                    "Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
                    "Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                    "Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
                    "Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
                    "Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
                    "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
                    "Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                    "Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
                    "Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
                    "Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
                    "Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
                    "Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
                    "Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
                    "Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
                    "Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
                    "Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
                    "Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810",
                    "Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
                    "Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                    "Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
                    "Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
                    "Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
                    "Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
                    "Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
                    "Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
                    "Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                    "Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5",
                    "Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
                    "Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
                    "HST|HST|a0|0|",
                    "Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
                    "Indian/Cocos|+0630|-6u|0||596",
                    "Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
                    "Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3",
                    "Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
                    "Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
                    "Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
                    "Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
                    "MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                    "MST|MST|70|0|",
                    "MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
                    "Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
                    "Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
                    "Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
                    "Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
                    "Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
                    "Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
                    "Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4",
                    "Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
                    "Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
                    "Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
                    "Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
                    "Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
                    "Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
                    "Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
                    "Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
                    "Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
                    "Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
                    "Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
                    "Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
                    "Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4",
                    "Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
                    "Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
                    "Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
                    "Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
                    "Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
                    "Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
                    "PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                    "WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                ],
                links: [
                    "Africa/Abidjan|Africa/Bamako",
                    "Africa/Abidjan|Africa/Banjul",
                    "Africa/Abidjan|Africa/Conakry",
                    "Africa/Abidjan|Africa/Dakar",
                    "Africa/Abidjan|Africa/Freetown",
                    "Africa/Abidjan|Africa/Lome",
                    "Africa/Abidjan|Africa/Nouakchott",
                    "Africa/Abidjan|Africa/Ouagadougou",
                    "Africa/Abidjan|Africa/Timbuktu",
                    "Africa/Abidjan|Atlantic/St_Helena",
                    "Africa/Cairo|Egypt",
                    "Africa/Johannesburg|Africa/Maseru",
                    "Africa/Johannesburg|Africa/Mbabane",
                    "Africa/Lagos|Africa/Bangui",
                    "Africa/Lagos|Africa/Brazzaville",
                    "Africa/Lagos|Africa/Douala",
                    "Africa/Lagos|Africa/Kinshasa",
                    "Africa/Lagos|Africa/Libreville",
                    "Africa/Lagos|Africa/Luanda",
                    "Africa/Lagos|Africa/Malabo",
                    "Africa/Lagos|Africa/Niamey",
                    "Africa/Lagos|Africa/Porto-Novo",
                    "Africa/Maputo|Africa/Blantyre",
                    "Africa/Maputo|Africa/Bujumbura",
                    "Africa/Maputo|Africa/Gaborone",
                    "Africa/Maputo|Africa/Harare",
                    "Africa/Maputo|Africa/Kigali",
                    "Africa/Maputo|Africa/Lubumbashi",
                    "Africa/Maputo|Africa/Lusaka",
                    "Africa/Nairobi|Africa/Addis_Ababa",
                    "Africa/Nairobi|Africa/Asmara",
                    "Africa/Nairobi|Africa/Asmera",
                    "Africa/Nairobi|Africa/Dar_es_Salaam",
                    "Africa/Nairobi|Africa/Djibouti",
                    "Africa/Nairobi|Africa/Kampala",
                    "Africa/Nairobi|Africa/Mogadishu",
                    "Africa/Nairobi|Indian/Antananarivo",
                    "Africa/Nairobi|Indian/Comoro",
                    "Africa/Nairobi|Indian/Mayotte",
                    "Africa/Tripoli|Libya",
                    "America/Adak|America/Atka",
                    "America/Adak|US/Aleutian",
                    "America/Anchorage|US/Alaska",
                    "America/Argentina/Buenos_Aires|America/Buenos_Aires",
                    "America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
                    "America/Argentina/Catamarca|America/Catamarca",
                    "America/Argentina/Cordoba|America/Cordoba",
                    "America/Argentina/Cordoba|America/Rosario",
                    "America/Argentina/Jujuy|America/Jujuy",
                    "America/Argentina/Mendoza|America/Mendoza",
                    "America/Atikokan|America/Coral_Harbour",
                    "America/Chicago|US/Central",
                    "America/Curacao|America/Aruba",
                    "America/Curacao|America/Kralendijk",
                    "America/Curacao|America/Lower_Princes",
                    "America/Denver|America/Shiprock",
                    "America/Denver|Navajo",
                    "America/Denver|US/Mountain",
                    "America/Detroit|US/Michigan",
                    "America/Edmonton|Canada/Mountain",
                    "America/Fort_Wayne|America/Indiana/Indianapolis",
                    "America/Fort_Wayne|America/Indianapolis",
                    "America/Fort_Wayne|US/East-Indiana",
                    "America/Halifax|Canada/Atlantic",
                    "America/Havana|Cuba",
                    "America/Indiana/Knox|America/Knox_IN",
                    "America/Indiana/Knox|US/Indiana-Starke",
                    "America/Jamaica|Jamaica",
                    "America/Kentucky/Louisville|America/Louisville",
                    "America/Los_Angeles|US/Pacific",
                    "America/Los_Angeles|US/Pacific-New",
                    "America/Manaus|Brazil/West",
                    "America/Mazatlan|Mexico/BajaSur",
                    "America/Mexico_City|Mexico/General",
                    "America/New_York|US/Eastern",
                    "America/Noronha|Brazil/DeNoronha",
                    "America/Panama|America/Cayman",
                    "America/Phoenix|US/Arizona",
                    "America/Port_of_Spain|America/Anguilla",
                    "America/Port_of_Spain|America/Antigua",
                    "America/Port_of_Spain|America/Dominica",
                    "America/Port_of_Spain|America/Grenada",
                    "America/Port_of_Spain|America/Guadeloupe",
                    "America/Port_of_Spain|America/Marigot",
                    "America/Port_of_Spain|America/Montserrat",
                    "America/Port_of_Spain|America/St_Barthelemy",
                    "America/Port_of_Spain|America/St_Kitts",
                    "America/Port_of_Spain|America/St_Lucia",
                    "America/Port_of_Spain|America/St_Thomas",
                    "America/Port_of_Spain|America/St_Vincent",
                    "America/Port_of_Spain|America/Tortola",
                    "America/Port_of_Spain|America/Virgin",
                    "America/Regina|Canada/Saskatchewan",
                    "America/Rio_Branco|America/Porto_Acre",
                    "America/Rio_Branco|Brazil/Acre",
                    "America/Santiago|Chile/Continental",
                    "America/Sao_Paulo|Brazil/East",
                    "America/St_Johns|Canada/Newfoundland",
                    "America/Tijuana|America/Ensenada",
                    "America/Tijuana|America/Santa_Isabel",
                    "America/Tijuana|Mexico/BajaNorte",
                    "America/Toronto|America/Montreal",
                    "America/Toronto|Canada/Eastern",
                    "America/Vancouver|Canada/Pacific",
                    "America/Whitehorse|Canada/Yukon",
                    "America/Winnipeg|Canada/Central",
                    "Asia/Ashgabat|Asia/Ashkhabad",
                    "Asia/Bangkok|Asia/Phnom_Penh",
                    "Asia/Bangkok|Asia/Vientiane",
                    "Asia/Dhaka|Asia/Dacca",
                    "Asia/Dubai|Asia/Muscat",
                    "Asia/Ho_Chi_Minh|Asia/Saigon",
                    "Asia/Hong_Kong|Hongkong",
                    "Asia/Jerusalem|Asia/Tel_Aviv",
                    "Asia/Jerusalem|Israel",
                    "Asia/Kathmandu|Asia/Katmandu",
                    "Asia/Kolkata|Asia/Calcutta",
                    "Asia/Kuala_Lumpur|Asia/Singapore",
                    "Asia/Kuala_Lumpur|Singapore",
                    "Asia/Macau|Asia/Macao",
                    "Asia/Makassar|Asia/Ujung_Pandang",
                    "Asia/Nicosia|Europe/Nicosia",
                    "Asia/Qatar|Asia/Bahrain",
                    "Asia/Rangoon|Asia/Yangon",
                    "Asia/Riyadh|Asia/Aden",
                    "Asia/Riyadh|Asia/Kuwait",
                    "Asia/Seoul|ROK",
                    "Asia/Shanghai|Asia/Chongqing",
                    "Asia/Shanghai|Asia/Chungking",
                    "Asia/Shanghai|Asia/Harbin",
                    "Asia/Shanghai|PRC",
                    "Asia/Taipei|ROC",
                    "Asia/Tehran|Iran",
                    "Asia/Thimphu|Asia/Thimbu",
                    "Asia/Tokyo|Japan",
                    "Asia/Ulaanbaatar|Asia/Ulan_Bator",
                    "Asia/Urumqi|Asia/Kashgar",
                    "Atlantic/Faroe|Atlantic/Faeroe",
                    "Atlantic/Reykjavik|Iceland",
                    "Atlantic/South_Georgia|Etc/GMT+2",
                    "Australia/Adelaide|Australia/South",
                    "Australia/Brisbane|Australia/Queensland",
                    "Australia/Broken_Hill|Australia/Yancowinna",
                    "Australia/Darwin|Australia/North",
                    "Australia/Hobart|Australia/Tasmania",
                    "Australia/Lord_Howe|Australia/LHI",
                    "Australia/Melbourne|Australia/Victoria",
                    "Australia/Perth|Australia/West",
                    "Australia/Sydney|Australia/ACT",
                    "Australia/Sydney|Australia/Canberra",
                    "Australia/Sydney|Australia/NSW",
                    "Etc/GMT-0|Etc/GMT",
                    "Etc/GMT-0|Etc/GMT+0",
                    "Etc/GMT-0|Etc/GMT0",
                    "Etc/GMT-0|Etc/Greenwich",
                    "Etc/GMT-0|GMT",
                    "Etc/GMT-0|GMT+0",
                    "Etc/GMT-0|GMT-0",
                    "Etc/GMT-0|GMT0",
                    "Etc/GMT-0|Greenwich",
                    "Etc/UTC|Etc/UCT",
                    "Etc/UTC|Etc/Universal",
                    "Etc/UTC|Etc/Zulu",
                    "Etc/UTC|UCT",
                    "Etc/UTC|UTC",
                    "Etc/UTC|Universal",
                    "Etc/UTC|Zulu",
                    "Europe/Belgrade|Europe/Ljubljana",
                    "Europe/Belgrade|Europe/Podgorica",
                    "Europe/Belgrade|Europe/Sarajevo",
                    "Europe/Belgrade|Europe/Skopje",
                    "Europe/Belgrade|Europe/Zagreb",
                    "Europe/Chisinau|Europe/Tiraspol",
                    "Europe/Dublin|Eire",
                    "Europe/Helsinki|Europe/Mariehamn",
                    "Europe/Istanbul|Asia/Istanbul",
                    "Europe/Istanbul|Turkey",
                    "Europe/Lisbon|Portugal",
                    "Europe/London|Europe/Belfast",
                    "Europe/London|Europe/Guernsey",
                    "Europe/London|Europe/Isle_of_Man",
                    "Europe/London|Europe/Jersey",
                    "Europe/London|GB",
                    "Europe/London|GB-Eire",
                    "Europe/Moscow|W-SU",
                    "Europe/Oslo|Arctic/Longyearbyen",
                    "Europe/Oslo|Atlantic/Jan_Mayen",
                    "Europe/Prague|Europe/Bratislava",
                    "Europe/Rome|Europe/San_Marino",
                    "Europe/Rome|Europe/Vatican",
                    "Europe/Warsaw|Poland",
                    "Europe/Zurich|Europe/Busingen",
                    "Europe/Zurich|Europe/Vaduz",
                    "Indian/Christmas|Etc/GMT-7",
                    "Pacific/Auckland|Antarctica/McMurdo",
                    "Pacific/Auckland|Antarctica/South_Pole",
                    "Pacific/Auckland|NZ",
                    "Pacific/Chatham|NZ-CHAT",
                    "Pacific/Chuuk|Pacific/Truk",
                    "Pacific/Chuuk|Pacific/Yap",
                    "Pacific/Easter|Chile/EasterIsland",
                    "Pacific/Guam|Pacific/Saipan",
                    "Pacific/Honolulu|Pacific/Johnston",
                    "Pacific/Honolulu|US/Hawaii",
                    "Pacific/Kwajalein|Kwajalein",
                    "Pacific/Pago_Pago|Pacific/Midway",
                    "Pacific/Pago_Pago|Pacific/Samoa",
                    "Pacific/Pago_Pago|US/Samoa",
                    "Pacific/Palau|Etc/GMT-9",
                    "Pacific/Pohnpei|Pacific/Ponape",
                    "Pacific/Port_Moresby|Etc/GMT-10",
                    "Pacific/Tarawa|Etc/GMT-12",
                    "Pacific/Tarawa|Pacific/Funafuti",
                    "Pacific/Tarawa|Pacific/Wake",
                    "Pacific/Tarawa|Pacific/Wallis",
                ],
            }),
            moment
        );
    }),
    (function (t, e) {
        "object" == typeof exports && "object" == typeof module ? (module.exports = e()) : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? (exports.io = e()) : (t.io = e());
    })(this, function () {
        return (function (t) {
            function e(r) {
                if (n[r]) return n[r].exports;
                var o = (n[r] = { exports: {}, id: r, loaded: !1 });
                return t[r].call(o.exports, o, o.exports, e), (o.loaded = !0), o.exports;
            }
            var n = {};
            return (e.m = t), (e.c = n), (e.p = ""), e(0);
        })([
            function (t, e, n) {
                function r(t, e) {
                    "object" == typeof t && ((e = t), (t = void 0)), (e = e || {});
                    var n,
                        r = o(t),
                        i = r.source,
                        u = r.id,
                        p = r.path,
                        h = c[u] && p in c[u].nsps;
                    return (
                        e.forceNew || e["force new connection"] || !1 === e.multiplex || h ? (a("ignoring socket cache for %s", i), (n = s(i, e))) : (c[u] || (a("new io instance for %s", i), (c[u] = s(i, e))), (n = c[u])),
                        r.query && !e.query && (e.query = r.query),
                        n.socket(r.path, e)
                    );
                }
                var o = n(1),
                    i = n(7),
                    s = n(15),
                    a = n(3)("socket.io-client");
                t.exports = e = r;
                var c = (e.managers = {});
                (e.protocol = i.protocol), (e.connect = r), (e.Manager = n(15)), (e.Socket = n(39));
            },
            function (t, e, n) {
                var o = n(2),
                    i = n(3)("socket.io-client:url");
                t.exports = function (t, e) {
                    var n = t;
                    (e = e || ("undefined" != typeof location && location)),
                        null == t && (t = e.protocol + "//" + e.host),
                        "string" == typeof t &&
                            ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? e.protocol + t : e.host + t),
                            /^(https?|wss?):\/\//.test(t) || (i("protocol-less url %s", t), (t = void 0 !== e ? e.protocol + "//" + t : "https://" + t)),
                            i("parse %s", t),
                            (n = o(t))),
                        n.port || (/^(http|ws)$/.test(n.protocol) ? (n.port = "80") : /^(http|ws)s$/.test(n.protocol) && (n.port = "443")),
                        (n.path = n.path || "/");
                    var s = -1 !== n.host.indexOf(":") ? "[" + n.host + "]" : n.host;
                    return (n.id = n.protocol + "://" + s + ":" + n.port), (n.href = n.protocol + "://" + s + (e && e.port === n.port ? "" : ":" + n.port)), n;
                };
            },
            function (t, e) {
                var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
                    r = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
                t.exports = function (t) {
                    var e = t,
                        o = t.indexOf("["),
                        i = t.indexOf("]");
                    -1 != o && -1 != i && (t = t.substring(0, o) + t.substring(o, i).replace(/:/g, ";") + t.substring(i, t.length));
                    for (var s = n.exec(t || ""), a = {}, c = 14; c--; ) a[r[c]] = s[c] || "";
                    return -1 != o && -1 != i && ((a.source = e), (a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":")), (a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":")), (a.ipv6uri = !0)), a;
                };
            },
            function (t, e, n) {
                (function (r) {
                    "use strict";
                    var p =
                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                            ? function (t) {
                                  return typeof t;
                              }
                            : function (t) {
                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                              };
                    (e.log = function () {
                        var t;
                        return "object" === ("undefined" == typeof console ? "undefined" : p(console)) && console.log && (t = console).log.apply(t, arguments);
                    }),
                        (e.formatArgs = function (e) {
                            if (((e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" + t.exports.humanize(this.diff)), this.useColors)) {
                                var n = "color: " + this.color;
                                e.splice(1, 0, n, "color: inherit");
                                var r = 0,
                                    o = 0;
                                e[0].replace(/%[a-zA-Z%]/g, function (t) {
                                    "%%" !== t && "%c" === t && (o = ++r);
                                }),
                                    e.splice(o, 0, n);
                            }
                        }),
                        (e.save = function (t) {
                            try {
                                t ? e.storage.setItem("debug", t) : e.storage.removeItem("debug");
                            } catch (n) {}
                        }),
                        (e.load = function () {
                            var t = void 0;
                            try {
                                t = e.storage.getItem("debug");
                            } catch (n) {}
                            return !t && void 0 !== r && "env" in r && (t = r.env.DEBUG), t;
                        }),
                        (e.useColors = function () {
                            return (
                                !("undefined" == typeof window || !window.process || ("renderer" !== window.process.type && !window.process.__nwjs)) ||
                                (("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) &&
                                    (("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
                                        ("undefined" != typeof window && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
                                        ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
                                        ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))))
                            );
                        }),
                        (e.storage = (function () {
                            try {
                                return localStorage;
                            } catch (t) {}
                        })()),
                        (e.colors = [
                            "#0000CC",
                            "#0000FF",
                            "#0033CC",
                            "#0033FF",
                            "#0066CC",
                            "#0066FF",
                            "#0099CC",
                            "#0099FF",
                            "#00CC00",
                            "#00CC33",
                            "#00CC66",
                            "#00CC99",
                            "#00CCCC",
                            "#00CCFF",
                            "#3300CC",
                            "#3300FF",
                            "#3333CC",
                            "#3333FF",
                            "#3366CC",
                            "#3366FF",
                            "#3399CC",
                            "#3399FF",
                            "#33CC00",
                            "#33CC33",
                            "#33CC66",
                            "#33CC99",
                            "#33CCCC",
                            "#33CCFF",
                            "#6600CC",
                            "#6600FF",
                            "#6633CC",
                            "#6633FF",
                            "#66CC00",
                            "#66CC33",
                            "#9900CC",
                            "#9900FF",
                            "#9933CC",
                            "#9933FF",
                            "#99CC00",
                            "#99CC33",
                            "#CC0000",
                            "#CC0033",
                            "#CC0066",
                            "#CC0099",
                            "#CC00CC",
                            "#CC00FF",
                            "#CC3300",
                            "#CC3333",
                            "#CC3366",
                            "#CC3399",
                            "#CC33CC",
                            "#CC33FF",
                            "#CC6600",
                            "#CC6633",
                            "#CC9900",
                            "#CC9933",
                            "#CCCC00",
                            "#CCCC33",
                            "#FF0000",
                            "#FF0033",
                            "#FF0066",
                            "#FF0099",
                            "#FF00CC",
                            "#FF00FF",
                            "#FF3300",
                            "#FF3333",
                            "#FF3366",
                            "#FF3399",
                            "#FF33CC",
                            "#FF33FF",
                            "#FF6600",
                            "#FF6633",
                            "#FF9900",
                            "#FF9933",
                            "#FFCC00",
                            "#FFCC33",
                        ]),
                        (t.exports = n(5)(e)),
                        (t.exports.formatters.j = function (t) {
                            try {
                                return JSON.stringify(t);
                            } catch (e) {
                                return "[UnexpectedJSONParseError]: " + e.message;
                            }
                        });
                }.call(e, n(4)));
            },
            function (t, e) {
                function n() {
                    throw new Error("setTimeout has not been defined");
                }
                function r() {
                    throw new Error("clearTimeout has not been defined");
                }
                function o(t) {
                    if (p === setTimeout) return setTimeout(t, 0);
                    if ((p === n || !p) && setTimeout) return (p = setTimeout), setTimeout(t, 0);
                    try {
                        return p(t, 0);
                    } catch (e) {
                        try {
                            return p.call(null, t, 0);
                        } catch (e) {
                            return p.call(this, t, 0);
                        }
                    }
                }
                function s() {
                    y && l && ((y = !1), l.length ? (d = l.concat(d)) : (m = -1), d.length && a());
                }
                function a() {
                    if (!y) {
                        var t = o(s);
                        y = !0;
                        for (var e = d.length; e; ) {
                            for (l = d, d = []; ++m < e; ) l && l[m].run();
                            (m = -1), (e = d.length);
                        }
                        (l = null),
                            (y = !1),
                            (function (t) {
                                if (h === clearTimeout) return clearTimeout(t);
                                if ((h === r || !h) && clearTimeout) return (h = clearTimeout), clearTimeout(t);
                                try {
                                    h(t);
                                } catch (e) {
                                    try {
                                        return h.call(null, t);
                                    } catch (e) {
                                        return h.call(this, t);
                                    }
                                }
                            })(t);
                    }
                }
                function c(t, e) {
                    (this.fun = t), (this.array = e);
                }
                function u() {}
                var p,
                    h,
                    f = (t.exports = {});
                !(function () {
                    try {
                        p = "function" == typeof setTimeout ? setTimeout : n;
                    } catch (t) {
                        p = n;
                    }
                    try {
                        h = "function" == typeof clearTimeout ? clearTimeout : r;
                    } catch (t) {
                        h = r;
                    }
                })();
                var l,
                    d = [],
                    y = !1,
                    m = -1;
                (f.nextTick = function (t) {
                    var e = new Array(arguments.length - 1);
                    if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                    d.push(new c(t, e)), 1 !== d.length || y || o(a);
                }),
                    (c.prototype.run = function () {
                        this.fun.apply(null, this.array);
                    }),
                    (f.title = "browser"),
                    (f.browser = !0),
                    (f.env = {}),
                    (f.argv = []),
                    (f.version = ""),
                    (f.versions = {}),
                    (f.on = u),
                    (f.addListener = u),
                    (f.once = u),
                    (f.off = u),
                    (f.removeListener = u),
                    (f.removeAllListeners = u),
                    (f.emit = u),
                    (f.prependListener = u),
                    (f.prependOnceListener = u),
                    (f.listeners = function (t) {
                        return [];
                    }),
                    (f.binding = function (t) {
                        throw new Error("process.binding is not supported");
                    }),
                    (f.cwd = function () {
                        return "/";
                    }),
                    (f.chdir = function (t) {
                        throw new Error("process.chdir is not supported");
                    }),
                    (f.umask = function () {
                        return 0;
                    });
            },
            function (t, e, n) {
                "use strict";
                function r(t) {
                    if (Array.isArray(t)) {
                        for (var e = 0, n = Array(t.length); e < t.length; e++) n[e] = t[e];
                        return n;
                    }
                    return Array.from(t);
                }
                t.exports = function (t) {
                    function e(t) {
                        for (var e = 0, n = 0; n < t.length; n++) (e = (e << 5) - e + t.charCodeAt(n)), (e |= 0);
                        return o.colors[Math.abs(e) % o.colors.length];
                    }
                    function o(t) {
                        function n() {
                            for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) e[i] = arguments[i];
                            if (n.enabled) {
                                var s = n,
                                    a = Number(new Date()),
                                    c = a - (r || a);
                                (s.diff = c), (s.prev = r), (s.curr = a), (r = a), (e[0] = o.coerce(e[0])), "string" != typeof e[0] && e.unshift("%O");
                                var u = 0;
                                (e[0] = e[0].replace(/%([a-zA-Z%])/g, function (t, n) {
                                    if ("%%" === t) return t;
                                    u++;
                                    var r = o.formatters[n];
                                    if ("function" == typeof r) {
                                        var i = e[u];
                                        (t = r.call(s, i)), e.splice(u, 1), u--;
                                    }
                                    return t;
                                })),
                                    o.formatArgs.call(s, e),
                                    (s.log || o.log).apply(s, e);
                            }
                        }
                        var r = void 0;
                        return (n.namespace = t), (n.enabled = o.enabled(t)), (n.useColors = o.useColors()), (n.color = e(t)), (n.destroy = i), (n.extend = s), "function" == typeof o.init && o.init(n), o.instances.push(n), n;
                    }
                    function i() {
                        var t = o.instances.indexOf(this);
                        return -1 !== t && (o.instances.splice(t, 1), !0);
                    }
                    function s(t, e) {
                        var n = o(this.namespace + (void 0 === e ? ":" : e) + t);
                        return (n.log = this.log), n;
                    }
                    function p(t) {
                        return t
                            .toString()
                            .substring(2, t.toString().length - 2)
                            .replace(/\.\*\?$/, "*");
                    }
                    return (
                        (o.debug = o),
                        (o.default = o),
                        (o.coerce = function (t) {
                            return t instanceof Error ? t.stack || t.message : t;
                        }),
                        (o.disable = function () {
                            var t = []
                                .concat(
                                    r(o.names.map(p)),
                                    r(
                                        o.skips.map(p).map(function (t) {
                                            return "-" + t;
                                        })
                                    )
                                )
                                .join(",");
                            return o.enable(""), t;
                        }),
                        (o.enable = function (t) {
                            o.save(t), (o.names = []), (o.skips = []);
                            var e = void 0,
                                n = ("string" == typeof t ? t : "").split(/[\s,]+/),
                                r = n.length;
                            for (e = 0; e < r; e++) n[e] && ("-" === (t = n[e].replace(/\*/g, ".*?"))[0] ? o.skips.push(new RegExp("^" + t.substr(1) + "$")) : o.names.push(new RegExp("^" + t + "$")));
                            for (e = 0; e < o.instances.length; e++) {
                                var i = o.instances[e];
                                i.enabled = o.enabled(i.namespace);
                            }
                        }),
                        (o.enabled = function (t) {
                            if ("*" === t[t.length - 1]) return !0;
                            var e = void 0,
                                n = void 0;
                            for (e = 0, n = o.skips.length; e < n; e++) if (o.skips[e].test(t)) return !1;
                            for (e = 0, n = o.names.length; e < n; e++) if (o.names[e].test(t)) return !0;
                            return !1;
                        }),
                        (o.humanize = n(6)),
                        Object.keys(t).forEach(function (e) {
                            o[e] = t[e];
                        }),
                        (o.instances = []),
                        (o.names = []),
                        (o.skips = []),
                        (o.formatters = {}),
                        (o.selectColor = e),
                        o.enable(o.load()),
                        o
                    );
                };
            },
            function (t, e) {
                function o(t) {
                    var e = Math.abs(t);
                    return e >= u ? i(t, e, u, "day") : e >= c ? i(t, e, c, "hour") : e >= a ? i(t, e, a, "minute") : e >= s ? i(t, e, s, "second") : t + " ms";
                }
                function i(t, e, n, r) {
                    var o = e >= 1.5 * n;
                    return Math.round(t / n) + " " + r + (o ? "s" : "");
                }
                var s = 1e3,
                    a = 60 * s,
                    c = 60 * a,
                    u = 24 * c,
                    p = 7 * u,
                    h = 365.25 * u;
                t.exports = function (t, e) {
                    e = e || {};
                    var i = typeof t;
                    if ("string" === i && t.length > 0)
                        return (function (t) {
                            if (!((t = String(t)).length > 100)) {
                                var e = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);
                                if (e) {
                                    var n = parseFloat(e[1]);
                                    switch ((e[2] || "ms").toLowerCase()) {
                                        case "years":
                                        case "year":
                                        case "yrs":
                                        case "yr":
                                        case "y":
                                            return n * h;
                                        case "weeks":
                                        case "week":
                                        case "w":
                                            return n * p;
                                        case "days":
                                        case "day":
                                        case "d":
                                            return n * u;
                                        case "hours":
                                        case "hour":
                                        case "hrs":
                                        case "hr":
                                        case "h":
                                            return n * c;
                                        case "minutes":
                                        case "minute":
                                        case "mins":
                                        case "min":
                                        case "m":
                                            return n * a;
                                        case "seconds":
                                        case "second":
                                        case "secs":
                                        case "sec":
                                        case "s":
                                            return n * s;
                                        case "milliseconds":
                                        case "millisecond":
                                        case "msecs":
                                        case "msec":
                                        case "ms":
                                            return n;
                                        default:
                                            return;
                                    }
                                }
                            }
                        })(t);
                    if ("number" === i && isFinite(t))
                        return e.long
                            ? o(t)
                            : (function (t) {
                                  var e = Math.abs(t);
                                  return e >= u ? Math.round(t / u) + "d" : e >= c ? Math.round(t / c) + "h" : e >= a ? Math.round(t / a) + "m" : e >= s ? Math.round(t / s) + "s" : t + "ms";
                              })(t);
                    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));
                };
            },
            function (t, e, n) {
                function r() {}
                function o(t) {
                    var n = "" + t.type;
                    if (((e.BINARY_EVENT !== t.type && e.BINARY_ACK !== t.type) || (n += t.attachments + "-"), t.nsp && "/" !== t.nsp && (n += t.nsp + ","), null != t.id && (n += t.id), null != t.data)) {
                        var r = (function (t) {
                            try {
                                return JSON.stringify(t);
                            } catch (e) {
                                return !1;
                            }
                        })(t.data);
                        if (!1 === r) return g;
                        n += r;
                    }
                    return f("encoded %j as %s", t, n), n;
                }
                function a() {
                    this.reconstructor = null;
                }
                function c(t) {
                    var n = 0,
                        r = { type: Number(t.charAt(0)) };
                    if (null == e.types[r.type]) return h("unknown packet type " + r.type);
                    if (e.BINARY_EVENT === r.type || e.BINARY_ACK === r.type) {
                        for (var o = ""; "-" !== t.charAt(++n) && ((o += t.charAt(n)), n != t.length); );
                        if (o != Number(o) || "-" !== t.charAt(n)) throw new Error("Illegal attachments");
                        r.attachments = Number(o);
                    }
                    if ("/" === t.charAt(n + 1))
                        for (r.nsp = ""; ++n; ) {
                            if ("," === (i = t.charAt(n))) break;
                            if (((r.nsp += i), n === t.length)) break;
                        }
                    else r.nsp = "/";
                    var s = t.charAt(n + 1);
                    if ("" !== s && Number(s) == s) {
                        for (r.id = ""; ++n; ) {
                            var i;
                            if (null == (i = t.charAt(n)) || Number(i) != i) {
                                --n;
                                break;
                            }
                            if (((r.id += t.charAt(n)), n === t.length)) break;
                        }
                        r.id = Number(r.id);
                    }
                    if (t.charAt(++n)) {
                        var a = (function (t) {
                            try {
                                return JSON.parse(t);
                            } catch (e) {
                                return !1;
                            }
                        })(t.substr(n));
                        if (!(!1 !== a && (r.type === e.ERROR || y(a)))) return h("invalid payload");
                        r.data = a;
                    }
                    return f("decoded %s as %j", t, r), r;
                }
                function p(t) {
                    (this.reconPack = t), (this.buffers = []);
                }
                function h(t) {
                    return { type: e.ERROR, data: "parser error: " + t };
                }
                var f = n(8)("socket.io-parser"),
                    l = n(11),
                    d = n(12),
                    y = n(13),
                    m = n(14);
                (e.protocol = 4),
                    (e.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"]),
                    (e.CONNECT = 0),
                    (e.DISCONNECT = 1),
                    (e.EVENT = 2),
                    (e.ACK = 3),
                    (e.ERROR = 4),
                    (e.BINARY_EVENT = 5),
                    (e.BINARY_ACK = 6),
                    (e.Encoder = r),
                    (e.Decoder = a);
                var g = e.ERROR + '"encode error"';
                (r.prototype.encode = function (t, n) {
                    (f("encoding packet %j", t), e.BINARY_EVENT === t.type || e.BINARY_ACK === t.type)
                        ? (function (t, e) {
                              d.removeBlobs(t, function (t) {
                                  var n = d.deconstructPacket(t),
                                      r = o(n.packet),
                                      i = n.buffers;
                                  i.unshift(r), e(i);
                              });
                          })(t, n)
                        : n([o(t)]);
                }),
                    l(a.prototype),
                    (a.prototype.add = function (t) {
                        var n;
                        if ("string" == typeof t)
                            (n = c(t)), e.BINARY_EVENT === n.type || e.BINARY_ACK === n.type ? ((this.reconstructor = new p(n)), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", n)) : this.emit("decoded", n);
                        else {
                            if (!m(t) && !t.base64) throw new Error("Unknown type: " + t);
                            if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
                            (n = this.reconstructor.takeBinaryData(t)) && ((this.reconstructor = null), this.emit("decoded", n));
                        }
                    }),
                    (a.prototype.destroy = function () {
                        this.reconstructor && this.reconstructor.finishedReconstruction();
                    }),
                    (p.prototype.takeBinaryData = function (t) {
                        if ((this.buffers.push(t), this.buffers.length === this.reconPack.attachments)) {
                            var e = d.reconstructPacket(this.reconPack, this.buffers);
                            return this.finishedReconstruction(), e;
                        }
                        return null;
                    }),
                    (p.prototype.finishedReconstruction = function () {
                        (this.reconPack = null), (this.buffers = []);
                    });
            },
            function (t, e, n) {
                (function (r) {
                    "use strict";
                    function c() {
                        var t;
                        try {
                            t = e.storage.debug;
                        } catch (n) {}
                        return !t && void 0 !== r && "env" in r && (t = r.env.DEBUG), t;
                    }
                    var p =
                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                            ? function (t) {
                                  return typeof t;
                              }
                            : function (t) {
                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                              };
                    ((e = t.exports = n(9)).log = function () {
                        return "object" === ("undefined" == typeof console ? "undefined" : p(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);
                    }),
                        (e.formatArgs = function (t) {
                            var n = this.useColors;
                            if (((t[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + t[0] + (n ? "%c " : " ") + "+" + e.humanize(this.diff)), n)) {
                                var r = "color: " + this.color;
                                t.splice(1, 0, r, "color: inherit");
                                var o = 0,
                                    i = 0;
                                t[0].replace(/%[a-zA-Z%]/g, function (t) {
                                    "%%" !== t && "%c" === t && (i = ++o);
                                }),
                                    t.splice(i, 0, r);
                            }
                        }),
                        (e.save = function (t) {
                            try {
                                null == t ? e.storage.removeItem("debug") : (e.storage.debug = t);
                            } catch (n) {}
                        }),
                        (e.load = c),
                        (e.useColors = function () {
                            return (
                                !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) ||
                                (("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) &&
                                    (("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
                                        ("undefined" != typeof window && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
                                        ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
                                        ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))))
                            );
                        }),
                        (e.storage =
                            "undefined" != typeof chrome && void 0 !== chrome.storage
                                ? chrome.storage.local
                                : (function () {
                                      try {
                                          return window.localStorage;
                                      } catch (t) {}
                                  })()),
                        (e.colors = [
                            "#0000CC",
                            "#0000FF",
                            "#0033CC",
                            "#0033FF",
                            "#0066CC",
                            "#0066FF",
                            "#0099CC",
                            "#0099FF",
                            "#00CC00",
                            "#00CC33",
                            "#00CC66",
                            "#00CC99",
                            "#00CCCC",
                            "#00CCFF",
                            "#3300CC",
                            "#3300FF",
                            "#3333CC",
                            "#3333FF",
                            "#3366CC",
                            "#3366FF",
                            "#3399CC",
                            "#3399FF",
                            "#33CC00",
                            "#33CC33",
                            "#33CC66",
                            "#33CC99",
                            "#33CCCC",
                            "#33CCFF",
                            "#6600CC",
                            "#6600FF",
                            "#6633CC",
                            "#6633FF",
                            "#66CC00",
                            "#66CC33",
                            "#9900CC",
                            "#9900FF",
                            "#9933CC",
                            "#9933FF",
                            "#99CC00",
                            "#99CC33",
                            "#CC0000",
                            "#CC0033",
                            "#CC0066",
                            "#CC0099",
                            "#CC00CC",
                            "#CC00FF",
                            "#CC3300",
                            "#CC3333",
                            "#CC3366",
                            "#CC3399",
                            "#CC33CC",
                            "#CC33FF",
                            "#CC6600",
                            "#CC6633",
                            "#CC9900",
                            "#CC9933",
                            "#CCCC00",
                            "#CCCC33",
                            "#FF0000",
                            "#FF0033",
                            "#FF0066",
                            "#FF0099",
                            "#FF00CC",
                            "#FF00FF",
                            "#FF3300",
                            "#FF3333",
                            "#FF3366",
                            "#FF3399",
                            "#FF33CC",
                            "#FF33FF",
                            "#FF6600",
                            "#FF6633",
                            "#FF9900",
                            "#FF9933",
                            "#FFCC00",
                            "#FFCC33",
                        ]),
                        (e.formatters.j = function (t) {
                            try {
                                return JSON.stringify(t);
                            } catch (e) {
                                return "[UnexpectedJSONParseError]: " + e.message;
                            }
                        }),
                        e.enable(c());
                }.call(e, n(4)));
            },
            function (t, e, n) {
                "use strict";
                function o(t) {
                    function n() {
                        if (n.enabled) {
                            var t = n,
                                r = +new Date(),
                                i = r - (o || r);
                            (t.diff = i), (t.prev = o), (t.curr = r), (o = r);
                            for (var s = new Array(arguments.length), a = 0; a < s.length; a++) s[a] = arguments[a];
                            (s[0] = e.coerce(s[0])), "string" != typeof s[0] && s.unshift("%O");
                            var c = 0;
                            (s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, r) {
                                if ("%%" === n) return n;
                                c++;
                                var o = e.formatters[r];
                                if ("function" == typeof o) {
                                    var i = s[c];
                                    (n = o.call(t, i)), s.splice(c, 1), c--;
                                }
                                return n;
                            })),
                                e.formatArgs.call(t, s),
                                (n.log || e.log || void 0).apply(t, s);
                        }
                    }
                    var o;
                    return (
                        (n.namespace = t),
                        (n.enabled = e.enabled(t)),
                        (n.useColors = e.useColors()),
                        (n.color = (function (t) {
                            var n,
                                r = 0;
                            for (n in t) (r = (r << 5) - r + t.charCodeAt(n)), (r |= 0);
                            return e.colors[Math.abs(r) % e.colors.length];
                        })(t)),
                        (n.destroy = i),
                        "function" == typeof e.init && e.init(n),
                        e.instances.push(n),
                        n
                    );
                }
                function i() {
                    var t = e.instances.indexOf(this);
                    return -1 !== t && (e.instances.splice(t, 1), !0);
                }
                ((e = t.exports = o.debug = o.default = o).coerce = function (t) {
                    return t instanceof Error ? t.stack || t.message : t;
                }),
                    (e.disable = function () {
                        e.enable("");
                    }),
                    (e.enable = function (t) {
                        e.save(t), (e.names = []), (e.skips = []);
                        var n,
                            r = ("string" == typeof t ? t : "").split(/[\s,]+/),
                            o = r.length;
                        for (n = 0; n < o; n++) r[n] && ("-" === (t = r[n].replace(/\*/g, ".*?"))[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));
                        for (n = 0; n < e.instances.length; n++) {
                            var i = e.instances[n];
                            i.enabled = e.enabled(i.namespace);
                        }
                    }),
                    (e.enabled = function (t) {
                        if ("*" === t[t.length - 1]) return !0;
                        var n, r;
                        for (n = 0, r = e.skips.length; n < r; n++) if (e.skips[n].test(t)) return !1;
                        for (n = 0, r = e.names.length; n < r; n++) if (e.names[n].test(t)) return !0;
                        return !1;
                    }),
                    (e.humanize = n(10)),
                    (e.instances = []),
                    (e.names = []),
                    (e.skips = []),
                    (e.formatters = {});
            },
            function (t, e) {
                function o(t) {
                    return i(t, u, "day") || i(t, c, "hour") || i(t, a, "minute") || i(t, s, "second") || t + " ms";
                }
                function i(t, e, n) {
                    if (!(t < e)) return t < 1.5 * e ? Math.floor(t / e) + " " + n : Math.ceil(t / e) + " " + n + "s";
                }
                var s = 1e3,
                    a = 60 * s,
                    c = 60 * a,
                    u = 24 * c,
                    p = 365.25 * u;
                t.exports = function (t, e) {
                    e = e || {};
                    var i = typeof t;
                    if ("string" === i && t.length > 0)
                        return (function (t) {
                            if (!((t = String(t)).length > 100)) {
                                var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);
                                if (e) {
                                    var n = parseFloat(e[1]);
                                    switch ((e[2] || "ms").toLowerCase()) {
                                        case "years":
                                        case "year":
                                        case "yrs":
                                        case "yr":
                                        case "y":
                                            return n * p;
                                        case "days":
                                        case "day":
                                        case "d":
                                            return n * u;
                                        case "hours":
                                        case "hour":
                                        case "hrs":
                                        case "hr":
                                        case "h":
                                            return n * c;
                                        case "minutes":
                                        case "minute":
                                        case "mins":
                                        case "min":
                                        case "m":
                                            return n * a;
                                        case "seconds":
                                        case "second":
                                        case "secs":
                                        case "sec":
                                        case "s":
                                            return n * s;
                                        case "milliseconds":
                                        case "millisecond":
                                        case "msecs":
                                        case "msec":
                                        case "ms":
                                            return n;
                                        default:
                                            return;
                                    }
                                }
                            }
                        })(t);
                    if ("number" === i && !1 === isNaN(t))
                        return e.long
                            ? o(t)
                            : (function (t) {
                                  return t >= u ? Math.round(t / u) + "d" : t >= c ? Math.round(t / c) + "h" : t >= a ? Math.round(t / a) + "m" : t >= s ? Math.round(t / s) + "s" : t + "ms";
                              })(t);
                    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));
                };
            },
            function (t, e, n) {
                function r(t) {
                    if (t)
                        return (function (t) {
                            for (var e in r.prototype) t[e] = r.prototype[e];
                            return t;
                        })(t);
                }
                (t.exports = r),
                    (r.prototype.on = r.prototype.addEventListener = function (t, e) {
                        return (this._callbacks = this._callbacks || {}), (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this;
                    }),
                    (r.prototype.once = function (t, e) {
                        function n() {
                            this.off(t, n), e.apply(this, arguments);
                        }
                        return (n.fn = e), this.on(t, n), this;
                    }),
                    (r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function (t, e) {
                        if (((this._callbacks = this._callbacks || {}), 0 == arguments.length)) return (this._callbacks = {}), this;
                        var n = this._callbacks["$" + t];
                        if (!n) return this;
                        if (1 == arguments.length) return delete this._callbacks["$" + t], this;
                        for (var r, o = 0; o < n.length; o++)
                            if ((r = n[o]) === e || r.fn === e) {
                                n.splice(o, 1);
                                break;
                            }
                        return this;
                    }),
                    (r.prototype.emit = function (t) {
                        this._callbacks = this._callbacks || {};
                        var e = [].slice.call(arguments, 1),
                            n = this._callbacks["$" + t];
                        if (n) for (var r = 0, o = (n = n.slice(0)).length; r < o; ++r) n[r].apply(this, e);
                        return this;
                    }),
                    (r.prototype.listeners = function (t) {
                        return (this._callbacks = this._callbacks || {}), this._callbacks["$" + t] || [];
                    }),
                    (r.prototype.hasListeners = function (t) {
                        return !!this.listeners(t).length;
                    });
            },
            function (t, e, n) {
                var i = n(13),
                    s = n(14),
                    a = Object.prototype.toString,
                    c = "function" == typeof Blob || ("undefined" != typeof Blob && "[object BlobConstructor]" === a.call(Blob)),
                    u = "function" == typeof File || ("undefined" != typeof File && "[object FileConstructor]" === a.call(File));
                (e.deconstructPacket = function (t) {
                    var e = [],
                        n = t.data,
                        o = t;
                    return (
                        (o.data = (function r(t, e) {
                            if (!t) return t;
                            if (s(t)) {
                                var n = { _placeholder: !0, num: e.length };
                                return e.push(t), n;
                            }
                            if (i(t)) {
                                for (var o = new Array(t.length), a = 0; a < t.length; a++) o[a] = r(t[a], e);
                                return o;
                            }
                            if ("object" == typeof t && !(t instanceof Date)) {
                                for (var c in ((o = {}), t)) o[c] = r(t[c], e);
                                return o;
                            }
                            return t;
                        })(n, e)),
                        (o.attachments = e.length),
                        { packet: o, buffers: e }
                    );
                }),
                    (e.reconstructPacket = function (t, e) {
                        return (
                            (t.data = (function o(t, e) {
                                if (!t) return t;
                                if (t && t._placeholder) return e[t.num];
                                if (i(t)) for (var n = 0; n < t.length; n++) t[n] = o(t[n], e);
                                else if ("object" == typeof t) for (var r in t) t[r] = o(t[r], e);
                                return t;
                            })(t.data, e)),
                            (t.attachments = void 0),
                            t
                        );
                    }),
                    (e.removeBlobs = function (t, e) {
                        var r = 0,
                            o = t;
                        (function n(t, a, p) {
                            if (!t) return t;
                            if ((c && t instanceof Blob) || (u && t instanceof File)) {
                                r++;
                                var h = new FileReader();
                                (h.onload = function () {
                                    p ? (p[a] = this.result) : (o = this.result), --r || e(o);
                                }),
                                    h.readAsArrayBuffer(t);
                            } else if (i(t)) for (var f = 0; f < t.length; f++) n(t[f], f, t);
                            else if ("object" == typeof t && !s(t)) for (var l in t) n(t[l], l, t);
                        })(o),
                            r || e(o);
                    });
            },
            function (t, e) {
                var n = {}.toString;
                t.exports =
                    Array.isArray ||
                    function (t) {
                        return "[object Array]" == n.call(t);
                    };
            },
            function (t, e) {
                t.exports = function (t) {
                    return (r && Buffer.isBuffer(t)) || (o && (t instanceof ArrayBuffer || i(t)));
                };
                var r = "function" == typeof Buffer && "function" == typeof Buffer.isBuffer,
                    o = "function" == typeof ArrayBuffer,
                    i = function (t) {
                        return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer;
                    };
            },
            function (t, e, n) {
                function r(t, e) {
                    if (!(this instanceof r)) return new r(t, e);
                    t && "object" == typeof t && ((e = t), (t = void 0)),
                        ((e = e || {}).path = e.path || "/socket.io"),
                        (this.nsps = {}),
                        (this.subs = []),
                        (this.opts = e),
                        this.reconnection(!1 !== e.reconnection),
                        this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0),
                        this.reconnectionDelay(e.reconnectionDelay || 1e3),
                        this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3),
                        this.randomizationFactor(e.randomizationFactor || 0.5),
                        (this.backoff = new f({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() })),
                        this.timeout(null == e.timeout ? 2e4 : e.timeout),
                        (this.readyState = "closed"),
                        (this.uri = t),
                        (this.connecting = []),
                        (this.lastPing = null),
                        (this.encoding = !1),
                        (this.packetBuffer = []);
                    var n = e.parser || a;
                    (this.encoder = new n.Encoder()), (this.decoder = new n.Decoder()), (this.autoConnect = !1 !== e.autoConnect), this.autoConnect && this.open();
                }
                var o = n(16),
                    i = n(39),
                    s = n(11),
                    a = n(7),
                    c = n(41),
                    u = n(42),
                    p = n(3)("socket.io-client:manager"),
                    h = n(38),
                    f = n(43),
                    l = Object.prototype.hasOwnProperty;
                (t.exports = r),
                    (r.prototype.emitAll = function () {
                        for (var t in (this.emit.apply(this, arguments), this.nsps)) l.call(this.nsps, t) && this.nsps[t].emit.apply(this.nsps[t], arguments);
                    }),
                    (r.prototype.updateSocketIds = function () {
                        for (var t in this.nsps) l.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t));
                    }),
                    (r.prototype.generateId = function (t) {
                        return ("/" === t ? "" : t + "#") + this.engine.id;
                    }),
                    s(r.prototype),
                    (r.prototype.reconnection = function (t) {
                        return arguments.length ? ((this._reconnection = !!t), this) : this._reconnection;
                    }),
                    (r.prototype.reconnectionAttempts = function (t) {
                        return arguments.length ? ((this._reconnectionAttempts = t), this) : this._reconnectionAttempts;
                    }),
                    (r.prototype.reconnectionDelay = function (t) {
                        return arguments.length ? ((this._reconnectionDelay = t), this.backoff && this.backoff.setMin(t), this) : this._reconnectionDelay;
                    }),
                    (r.prototype.randomizationFactor = function (t) {
                        return arguments.length ? ((this._randomizationFactor = t), this.backoff && this.backoff.setJitter(t), this) : this._randomizationFactor;
                    }),
                    (r.prototype.reconnectionDelayMax = function (t) {
                        return arguments.length ? ((this._reconnectionDelayMax = t), this.backoff && this.backoff.setMax(t), this) : this._reconnectionDelayMax;
                    }),
                    (r.prototype.timeout = function (t) {
                        return arguments.length ? ((this._timeout = t), this) : this._timeout;
                    }),
                    (r.prototype.maybeReconnectOnOpen = function () {
                        !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();
                    }),
                    (r.prototype.open = r.prototype.connect = function (t, e) {
                        if ((p("readyState %s", this.readyState), ~this.readyState.indexOf("open"))) return this;
                        p("opening %s", this.uri), (this.engine = o(this.uri, this.opts));
                        var n = this.engine,
                            r = this;
                        (this.readyState = "opening"), (this.skipReconnect = !1);
                        var i = c(n, "open", function () {
                                r.onopen(), t && t();
                            }),
                            s = c(n, "error", function (e) {
                                if ((p("connect_error"), r.cleanup(), (r.readyState = "closed"), r.emitAll("connect_error", e), t)) {
                                    var n = new Error("Connection error");
                                    (n.data = e), t(n);
                                } else r.maybeReconnectOnOpen();
                            });
                        if (!1 !== this._timeout) {
                            var a = this._timeout;
                            p("connect attempt will timeout after %d", a);
                            var u = setTimeout(function () {
                                p("connect attempt timed out after %d", a), i.destroy(), n.close(), n.emit("error", "timeout"), r.emitAll("connect_timeout", a);
                            }, a);
                            this.subs.push({
                                destroy: function () {
                                    clearTimeout(u);
                                },
                            });
                        }
                        return this.subs.push(i), this.subs.push(s), this;
                    }),
                    (r.prototype.onopen = function () {
                        p("open"), this.cleanup(), (this.readyState = "open"), this.emit("open");
                        var t = this.engine;
                        this.subs.push(c(t, "data", u(this, "ondata"))),
                            this.subs.push(c(t, "ping", u(this, "onping"))),
                            this.subs.push(c(t, "pong", u(this, "onpong"))),
                            this.subs.push(c(t, "error", u(this, "onerror"))),
                            this.subs.push(c(t, "close", u(this, "onclose"))),
                            this.subs.push(c(this.decoder, "decoded", u(this, "ondecoded")));
                    }),
                    (r.prototype.onping = function () {
                        (this.lastPing = new Date()), this.emitAll("ping");
                    }),
                    (r.prototype.onpong = function () {
                        this.emitAll("pong", new Date() - this.lastPing);
                    }),
                    (r.prototype.ondata = function (t) {
                        this.decoder.add(t);
                    }),
                    (r.prototype.ondecoded = function (t) {
                        this.emit("packet", t);
                    }),
                    (r.prototype.onerror = function (t) {
                        p("error", t), this.emitAll("error", t);
                    }),
                    (r.prototype.socket = function (t, e) {
                        function n() {
                            ~h(o.connecting, r) || o.connecting.push(r);
                        }
                        var r = this.nsps[t];
                        if (!r) {
                            (r = new i(this, t, e)), (this.nsps[t] = r);
                            var o = this;
                            r.on("connecting", n),
                                r.on("connect", function () {
                                    r.id = o.generateId(t);
                                }),
                                this.autoConnect && n();
                        }
                        return r;
                    }),
                    (r.prototype.destroy = function (t) {
                        var e = h(this.connecting, t);
                        ~e && this.connecting.splice(e, 1), this.connecting.length || this.close();
                    }),
                    (r.prototype.packet = function (t) {
                        p("writing packet %j", t);
                        var e = this;
                        t.query && 0 === t.type && (t.nsp += "?" + t.query),
                            e.encoding
                                ? e.packetBuffer.push(t)
                                : ((e.encoding = !0),
                                  this.encoder.encode(t, function (n) {
                                      for (var r = 0; r < n.length; r++) e.engine.write(n[r], t.options);
                                      (e.encoding = !1), e.processPacketQueue();
                                  }));
                    }),
                    (r.prototype.processPacketQueue = function () {
                        if (this.packetBuffer.length > 0 && !this.encoding) {
                            var t = this.packetBuffer.shift();
                            this.packet(t);
                        }
                    }),
                    (r.prototype.cleanup = function () {
                        p("cleanup");
                        for (var t = this.subs.length, e = 0; e < t; e++) {
                            this.subs.shift().destroy();
                        }
                        (this.packetBuffer = []), (this.encoding = !1), (this.lastPing = null), this.decoder.destroy();
                    }),
                    (r.prototype.close = r.prototype.disconnect = function () {
                        p("disconnect"), (this.skipReconnect = !0), (this.reconnecting = !1), "opening" === this.readyState && this.cleanup(), this.backoff.reset(), (this.readyState = "closed"), this.engine && this.engine.close();
                    }),
                    (r.prototype.onclose = function (t) {
                        p("onclose"), this.cleanup(), this.backoff.reset(), (this.readyState = "closed"), this.emit("close", t), this._reconnection && !this.skipReconnect && this.reconnect();
                    }),
                    (r.prototype.reconnect = function () {
                        if (this.reconnecting || this.skipReconnect) return this;
                        var t = this;
                        if (this.backoff.attempts >= this._reconnectionAttempts) p("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), (this.reconnecting = !1);
                        else {
                            var e = this.backoff.duration();
                            p("will wait %dms before reconnect attempt", e), (this.reconnecting = !0);
                            var n = setTimeout(function () {
                                t.skipReconnect ||
                                    (p("attempting reconnect"),
                                    t.emitAll("reconnect_attempt", t.backoff.attempts),
                                    t.emitAll("reconnecting", t.backoff.attempts),
                                    t.skipReconnect ||
                                        t.open(function (e) {
                                            e ? (p("reconnect attempt error"), (t.reconnecting = !1), t.reconnect(), t.emitAll("reconnect_error", e.data)) : (p("reconnect success"), t.onreconnect());
                                        }));
                            }, e);
                            this.subs.push({
                                destroy: function () {
                                    clearTimeout(n);
                                },
                            });
                        }
                    }),
                    (r.prototype.onreconnect = function () {
                        var t = this.backoff.attempts;
                        (this.reconnecting = !1), this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", t);
                    });
            },
            function (t, e, n) {
                (t.exports = n(17)), (t.exports.parser = n(24));
            },
            function (t, e, n) {
                function r(t, e) {
                    return this instanceof r
                        ? ((e = e || {}),
                          t && "object" == typeof t && ((e = t), (t = null)),
                          t ? ((t = p(t)), (e.hostname = t.host), (e.secure = "https" === t.protocol || "wss" === t.protocol), (e.port = t.port), t.query && (e.query = t.query)) : e.host && (e.hostname = p(e.host).host),
                          (this.secure = null != e.secure ? e.secure : "undefined" != typeof location && "https:" === location.protocol),
                          e.hostname && !e.port && (e.port = this.secure ? "443" : "80"),
                          (this.agent = e.agent || !1),
                          (this.hostname = e.hostname || ("undefined" != typeof location ? location.hostname : "localhost")),
                          (this.port = e.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80)),
                          (this.query = e.query || {}),
                          "string" == typeof this.query && (this.query = h.decode(this.query)),
                          (this.upgrade = !1 !== e.upgrade),
                          (this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/"),
                          (this.forceJSONP = !!e.forceJSONP),
                          (this.jsonp = !1 !== e.jsonp),
                          (this.forceBase64 = !!e.forceBase64),
                          (this.enablesXDR = !!e.enablesXDR),
                          (this.withCredentials = !1 !== e.withCredentials),
                          (this.timestampParam = e.timestampParam || "t"),
                          (this.timestampRequests = e.timestampRequests),
                          (this.transports = e.transports || ["polling", "websocket"]),
                          (this.transportOptions = e.transportOptions || {}),
                          (this.readyState = ""),
                          (this.writeBuffer = []),
                          (this.prevBufferLen = 0),
                          (this.policyPort = e.policyPort || 843),
                          (this.rememberUpgrade = e.rememberUpgrade || !1),
                          (this.binaryType = null),
                          (this.onlyBinaryUpgrades = e.onlyBinaryUpgrades),
                          (this.perMessageDeflate = !1 !== e.perMessageDeflate && (e.perMessageDeflate || {})),
                          !0 === this.perMessageDeflate && (this.perMessageDeflate = {}),
                          this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024),
                          (this.pfx = e.pfx || null),
                          (this.key = e.key || null),
                          (this.passphrase = e.passphrase || null),
                          (this.cert = e.cert || null),
                          (this.ca = e.ca || null),
                          (this.ciphers = e.ciphers || null),
                          (this.rejectUnauthorized = void 0 === e.rejectUnauthorized || e.rejectUnauthorized),
                          (this.forceNode = !!e.forceNode),
                          (this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase()),
                          ("undefined" == typeof self || this.isReactNative) && (e.extraHeaders && Object.keys(e.extraHeaders).length > 0 && (this.extraHeaders = e.extraHeaders), e.localAddress && (this.localAddress = e.localAddress)),
                          (this.id = null),
                          (this.upgrades = null),
                          (this.pingInterval = null),
                          (this.pingTimeout = null),
                          (this.pingIntervalTimer = null),
                          (this.pingTimeoutTimer = null),
                          void this.open())
                        : new r(t, e);
                }
                var i = n(18),
                    s = n(11),
                    a = n(3)("engine.io-client:socket"),
                    c = n(38),
                    u = n(24),
                    p = n(2),
                    h = n(32);
                (t.exports = r),
                    (r.priorWebsocketSuccess = !1),
                    s(r.prototype),
                    (r.protocol = u.protocol),
                    (r.Socket = r),
                    (r.Transport = n(23)),
                    (r.transports = n(18)),
                    (r.parser = n(24)),
                    (r.prototype.createTransport = function (t) {
                        a('creating transport "%s"', t);
                        var e = (function (t) {
                            var e = {};
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                            return e;
                        })(this.query);
                        (e.EIO = u.protocol), (e.transport = t);
                        var n = this.transportOptions[t] || {};
                        return (
                            this.id && (e.sid = this.id),
                            new i[t]({
                                query: e,
                                socket: this,
                                agent: n.agent || this.agent,
                                hostname: n.hostname || this.hostname,
                                port: n.port || this.port,
                                secure: n.secure || this.secure,
                                path: n.path || this.path,
                                forceJSONP: n.forceJSONP || this.forceJSONP,
                                jsonp: n.jsonp || this.jsonp,
                                forceBase64: n.forceBase64 || this.forceBase64,
                                enablesXDR: n.enablesXDR || this.enablesXDR,
                                withCredentials: n.withCredentials || this.withCredentials,
                                timestampRequests: n.timestampRequests || this.timestampRequests,
                                timestampParam: n.timestampParam || this.timestampParam,
                                policyPort: n.policyPort || this.policyPort,
                                pfx: n.pfx || this.pfx,
                                key: n.key || this.key,
                                passphrase: n.passphrase || this.passphrase,
                                cert: n.cert || this.cert,
                                ca: n.ca || this.ca,
                                ciphers: n.ciphers || this.ciphers,
                                rejectUnauthorized: n.rejectUnauthorized || this.rejectUnauthorized,
                                perMessageDeflate: n.perMessageDeflate || this.perMessageDeflate,
                                extraHeaders: n.extraHeaders || this.extraHeaders,
                                forceNode: n.forceNode || this.forceNode,
                                localAddress: n.localAddress || this.localAddress,
                                requestTimeout: n.requestTimeout || this.requestTimeout,
                                protocols: n.protocols || void 0,
                                isReactNative: this.isReactNative,
                            })
                        );
                    }),
                    (r.prototype.open = function () {
                        var t;
                        if (this.rememberUpgrade && r.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) t = "websocket";
                        else {
                            if (0 === this.transports.length) {
                                var e = this;
                                return void setTimeout(function () {
                                    e.emit("error", "No transports available");
                                }, 0);
                            }
                            t = this.transports[0];
                        }
                        this.readyState = "opening";
                        try {
                            t = this.createTransport(t);
                        } catch (n) {
                            return this.transports.shift(), void this.open();
                        }
                        t.open(), this.setTransport(t);
                    }),
                    (r.prototype.setTransport = function (t) {
                        a("setting transport %s", t.name);
                        var e = this;
                        this.transport && (a("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()),
                            (this.transport = t),
                            t
                                .on("drain", function () {
                                    e.onDrain();
                                })
                                .on("packet", function (t) {
                                    e.onPacket(t);
                                })
                                .on("error", function (t) {
                                    e.onError(t);
                                })
                                .on("close", function () {
                                    e.onClose("transport close");
                                });
                    }),
                    (r.prototype.probe = function (t) {
                        function e() {
                            if (f.onlyBinaryUpgrades) {
                                var e = !this.supportsBinary && f.transport.supportsBinary;
                                h = h || e;
                            }
                            h ||
                                (a('probe transport "%s" opened', t),
                                p.send([{ type: "ping", data: "probe" }]),
                                p.once("packet", function (e) {
                                    if (!h)
                                        if ("pong" === e.type && "probe" === e.data) {
                                            if ((a('probe transport "%s" pong', t), (f.upgrading = !0), f.emit("upgrading", p), !p)) return;
                                            (r.priorWebsocketSuccess = "websocket" === p.name),
                                                a('pausing current transport "%s"', f.transport.name),
                                                f.transport.pause(function () {
                                                    h ||
                                                        ("closed" !== f.readyState &&
                                                            (a("changing transport and sending upgrade packet"), u(), f.setTransport(p), p.send([{ type: "upgrade" }]), f.emit("upgrade", p), (p = null), (f.upgrading = !1), f.flush()));
                                                });
                                        } else {
                                            a('probe transport "%s" failed', t);
                                            var n = new Error("probe error");
                                            (n.transport = p.name), f.emit("upgradeError", n);
                                        }
                                }));
                        }
                        function n() {
                            h || ((h = !0), u(), p.close(), (p = null));
                        }
                        function o(e) {
                            var r = new Error("probe error: " + e);
                            (r.transport = p.name), n(), a('probe transport "%s" failed because of error: %s', t, e), f.emit("upgradeError", r);
                        }
                        function i() {
                            o("transport closed");
                        }
                        function s() {
                            o("socket closed");
                        }
                        function c(t) {
                            p && t.name !== p.name && (a('"%s" works - aborting "%s"', t.name, p.name), n());
                        }
                        function u() {
                            p.removeListener("open", e), p.removeListener("error", o), p.removeListener("close", i), f.removeListener("close", s), f.removeListener("upgrading", c);
                        }
                        a('probing transport "%s"', t);
                        var p = this.createTransport(t, { probe: 1 }),
                            h = !1,
                            f = this;
                        (r.priorWebsocketSuccess = !1), p.once("open", e), p.once("error", o), p.once("close", i), this.once("close", s), this.once("upgrading", c), p.open();
                    }),
                    (r.prototype.onOpen = function () {
                        if (
                            (a("socket open"), (this.readyState = "open"), (r.priorWebsocketSuccess = "websocket" === this.transport.name), this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause)
                        ) {
                            a("starting upgrade probes");
                            for (var t = 0, e = this.upgrades.length; t < e; t++) this.probe(this.upgrades[t]);
                        }
                    }),
                    (r.prototype.onPacket = function (t) {
                        if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState)
                            switch ((a('socket receive: type "%s", data "%s"', t.type, t.data), this.emit("packet", t), this.emit("heartbeat"), t.type)) {
                                case "open":
                                    this.onHandshake(JSON.parse(t.data));
                                    break;
                                case "pong":
                                    this.setPing(), this.emit("pong");
                                    break;
                                case "error":
                                    var e = new Error("server error");
                                    (e.code = t.data), this.onError(e);
                                    break;
                                case "message":
                                    this.emit("data", t.data), this.emit("message", t.data);
                            }
                        else a('packet received with socket readyState "%s"', this.readyState);
                    }),
                    (r.prototype.onHandshake = function (t) {
                        this.emit("handshake", t),
                            (this.id = t.sid),
                            (this.transport.query.sid = t.sid),
                            (this.upgrades = this.filterUpgrades(t.upgrades)),
                            (this.pingInterval = t.pingInterval),
                            (this.pingTimeout = t.pingTimeout),
                            this.onOpen(),
                            "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));
                    }),
                    (r.prototype.onHeartbeat = function (t) {
                        clearTimeout(this.pingTimeoutTimer);
                        var e = this;
                        e.pingTimeoutTimer = setTimeout(function () {
                            "closed" !== e.readyState && e.onClose("ping timeout");
                        }, t || e.pingInterval + e.pingTimeout);
                    }),
                    (r.prototype.setPing = function () {
                        var t = this;
                        clearTimeout(t.pingIntervalTimer),
                            (t.pingIntervalTimer = setTimeout(function () {
                                a("writing ping packet - expecting pong within %sms", t.pingTimeout), t.ping(), t.onHeartbeat(t.pingTimeout);
                            }, t.pingInterval));
                    }),
                    (r.prototype.ping = function () {
                        var t = this;
                        this.sendPacket("ping", function () {
                            t.emit("ping");
                        });
                    }),
                    (r.prototype.onDrain = function () {
                        this.writeBuffer.splice(0, this.prevBufferLen), (this.prevBufferLen = 0), 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();
                    }),
                    (r.prototype.flush = function () {
                        "closed" !== this.readyState &&
                            this.transport.writable &&
                            !this.upgrading &&
                            this.writeBuffer.length &&
                            (a("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), (this.prevBufferLen = this.writeBuffer.length), this.emit("flush"));
                    }),
                    (r.prototype.write = r.prototype.send = function (t, e, n) {
                        return this.sendPacket("message", t, e, n), this;
                    }),
                    (r.prototype.sendPacket = function (t, e, n, r) {
                        if (("function" == typeof e && ((r = e), (e = void 0)), "function" == typeof n && ((r = n), (n = null)), "closing" !== this.readyState && "closed" !== this.readyState)) {
                            (n = n || {}).compress = !1 !== n.compress;
                            var o = { type: t, data: e, options: n };
                            this.emit("packetCreate", o), this.writeBuffer.push(o), r && this.once("flush", r), this.flush();
                        }
                    }),
                    (r.prototype.close = function () {
                        function t() {
                            r.onClose("forced close"), a("socket closing - telling transport to close"), r.transport.close();
                        }
                        function e() {
                            r.removeListener("upgrade", e), r.removeListener("upgradeError", e), t();
                        }
                        function n() {
                            r.once("upgrade", e), r.once("upgradeError", e);
                        }
                        if ("opening" === this.readyState || "open" === this.readyState) {
                            this.readyState = "closing";
                            var r = this;
                            this.writeBuffer.length
                                ? this.once("drain", function () {
                                      this.upgrading ? n() : t();
                                  })
                                : this.upgrading
                                ? n()
                                : t();
                        }
                        return this;
                    }),
                    (r.prototype.onError = function (t) {
                        a("socket error %j", t), (r.priorWebsocketSuccess = !1), this.emit("error", t), this.onClose("transport error", t);
                    }),
                    (r.prototype.onClose = function (t, e) {
                        if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
                            a('socket close with reason: "%s"', t);
                            clearTimeout(this.pingIntervalTimer),
                                clearTimeout(this.pingTimeoutTimer),
                                this.transport.removeAllListeners("close"),
                                this.transport.close(),
                                this.transport.removeAllListeners(),
                                (this.readyState = "closed"),
                                (this.id = null),
                                this.emit("close", t, e),
                                (this.writeBuffer = []),
                                (this.prevBufferLen = 0);
                        }
                    }),
                    (r.prototype.filterUpgrades = function (t) {
                        for (var e = [], n = 0, r = t.length; n < r; n++) ~c(this.transports, t[n]) && e.push(t[n]);
                        return e;
                    });
            },
            function (t, e, n) {
                var o = n(19),
                    i = n(21),
                    s = n(35),
                    a = n(36);
                (e.polling = function (t) {
                    var n = !1,
                        r = !1,
                        a = !1 !== t.jsonp;
                    if ("undefined" != typeof location) {
                        var c = "https:" === location.protocol,
                            u = location.port;
                        u || (u = c ? 443 : 80), (n = t.hostname !== location.hostname || u !== t.port), (r = t.secure !== c);
                    }
                    if (((t.xdomain = n), (t.xscheme = r), "open" in new o(t) && !t.forceJSONP)) return new i(t);
                    if (!a) throw new Error("JSONP disabled");
                    return new s(t);
                }),
                    (e.websocket = a);
            },
            function (t, e, n) {
                var r = n(20);
                t.exports = function (t) {
                    var e = t.xdomain,
                        n = t.xscheme,
                        o = t.enablesXDR;
                    try {
                        if ("undefined" != typeof XMLHttpRequest && (!e || r)) return new XMLHttpRequest();
                    } catch (i) {}
                    try {
                        if ("undefined" != typeof XDomainRequest && !n && o) return new XDomainRequest();
                    } catch (i) {}
                    if (!e)
                        try {
                            return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
                        } catch (i) {}
                };
            },
            function (t, e) {
                try {
                    t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
                } catch (n) {
                    t.exports = !1;
                }
            },
            function (t, e, n) {
                function r() {}
                function o(t) {
                    if ((c.call(this, t), (this.requestTimeout = t.requestTimeout), (this.extraHeaders = t.extraHeaders), "undefined" != typeof location)) {
                        var e = "https:" === location.protocol,
                            n = location.port;
                        n || (n = e ? 443 : 80), (this.xd = ("undefined" != typeof location && t.hostname !== location.hostname) || n !== t.port), (this.xs = t.secure !== e);
                    }
                }
                function i(t) {
                    (this.method = t.method || "GET"),
                        (this.uri = t.uri),
                        (this.xd = !!t.xd),
                        (this.xs = !!t.xs),
                        (this.async = !1 !== t.async),
                        (this.data = void 0 !== t.data ? t.data : null),
                        (this.agent = t.agent),
                        (this.isBinary = t.isBinary),
                        (this.supportsBinary = t.supportsBinary),
                        (this.enablesXDR = t.enablesXDR),
                        (this.withCredentials = t.withCredentials),
                        (this.requestTimeout = t.requestTimeout),
                        (this.pfx = t.pfx),
                        (this.key = t.key),
                        (this.passphrase = t.passphrase),
                        (this.cert = t.cert),
                        (this.ca = t.ca),
                        (this.ciphers = t.ciphers),
                        (this.rejectUnauthorized = t.rejectUnauthorized),
                        (this.extraHeaders = t.extraHeaders),
                        this.create();
                }
                function s() {
                    for (var t in i.requests) i.requests.hasOwnProperty(t) && i.requests[t].abort();
                }
                var a = n(19),
                    c = n(22),
                    u = n(11),
                    p = n(33),
                    h = n(3)("engine.io-client:polling-xhr");
                if (
                    ((t.exports = o),
                    (t.exports.Request = i),
                    p(o, c),
                    (o.prototype.supportsBinary = !0),
                    (o.prototype.request = function (t) {
                        return (
                            ((t = t || {}).uri = this.uri()),
                            (t.xd = this.xd),
                            (t.xs = this.xs),
                            (t.agent = this.agent || !1),
                            (t.supportsBinary = this.supportsBinary),
                            (t.enablesXDR = this.enablesXDR),
                            (t.withCredentials = this.withCredentials),
                            (t.pfx = this.pfx),
                            (t.key = this.key),
                            (t.passphrase = this.passphrase),
                            (t.cert = this.cert),
                            (t.ca = this.ca),
                            (t.ciphers = this.ciphers),
                            (t.rejectUnauthorized = this.rejectUnauthorized),
                            (t.requestTimeout = this.requestTimeout),
                            (t.extraHeaders = this.extraHeaders),
                            new i(t)
                        );
                    }),
                    (o.prototype.doWrite = function (t, e) {
                        var n = "string" != typeof t && void 0 !== t,
                            r = this.request({ method: "POST", data: t, isBinary: n }),
                            o = this;
                        r.on("success", e),
                            r.on("error", function (t) {
                                o.onError("xhr post error", t);
                            }),
                            (this.sendXhr = r);
                    }),
                    (o.prototype.doPoll = function () {
                        h("xhr poll");
                        var t = this.request(),
                            e = this;
                        t.on("data", function (t) {
                            e.onData(t);
                        }),
                            t.on("error", function (t) {
                                e.onError("xhr poll error", t);
                            }),
                            (this.pollXhr = t);
                    }),
                    u(i.prototype),
                    (i.prototype.create = function () {
                        var t = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };
                        (t.pfx = this.pfx), (t.key = this.key), (t.passphrase = this.passphrase), (t.cert = this.cert), (t.ca = this.ca), (t.ciphers = this.ciphers), (t.rejectUnauthorized = this.rejectUnauthorized);
                        var e = (this.xhr = new a(t)),
                            n = this;
                        try {
                            h("xhr open %s: %s", this.method, this.uri), e.open(this.method, this.uri, this.async);
                            try {
                                if (this.extraHeaders) for (var r in (e.setDisableHeaderCheck && e.setDisableHeaderCheck(!0), this.extraHeaders)) this.extraHeaders.hasOwnProperty(r) && e.setRequestHeader(r, this.extraHeaders[r]);
                            } catch (o) {}
                            if ("POST" === this.method)
                                try {
                                    this.isBinary ? e.setRequestHeader("Content-type", "application/octet-stream") : e.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                                } catch (o) {}
                            try {
                                e.setRequestHeader("Accept", "*/*");
                            } catch (o) {}
                            "withCredentials" in e && (e.withCredentials = this.withCredentials),
                                this.requestTimeout && (e.timeout = this.requestTimeout),
                                this.hasXDR()
                                    ? ((e.onload = function () {
                                          n.onLoad();
                                      }),
                                      (e.onerror = function () {
                                          n.onError(e.responseText);
                                      }))
                                    : (e.onreadystatechange = function () {
                                          if (2 === e.readyState)
                                              try {
                                                  var t = e.getResponseHeader("Content-Type");
                                                  ((n.supportsBinary && "application/octet-stream" === t) || "application/octet-stream; charset=UTF-8" === t) && (e.responseType = "arraybuffer");
                                              } catch (r) {}
                                          4 === e.readyState &&
                                              (200 === e.status || 1223 === e.status
                                                  ? n.onLoad()
                                                  : setTimeout(function () {
                                                        n.onError("number" == typeof e.status ? e.status : 0);
                                                    }, 0));
                                      }),
                                h("xhr data %s", this.data),
                                e.send(this.data);
                        } catch (o) {
                            return void setTimeout(function () {
                                n.onError(o);
                            }, 0);
                        }
                        "undefined" != typeof document && ((this.index = i.requestsCount++), (i.requests[this.index] = this));
                    }),
                    (i.prototype.onSuccess = function () {
                        this.emit("success"), this.cleanup();
                    }),
                    (i.prototype.onData = function (t) {
                        this.emit("data", t), this.onSuccess();
                    }),
                    (i.prototype.onError = function (t) {
                        this.emit("error", t), this.cleanup(!0);
                    }),
                    (i.prototype.cleanup = function (t) {
                        if (void 0 !== this.xhr && null !== this.xhr) {
                            if ((this.hasXDR() ? (this.xhr.onload = this.xhr.onerror = r) : (this.xhr.onreadystatechange = r), t))
                                try {
                                    this.xhr.abort();
                                } catch (e) {}
                            "undefined" != typeof document && delete i.requests[this.index], (this.xhr = null);
                        }
                    }),
                    (i.prototype.onLoad = function () {
                        var t;
                        try {
                            var e;
                            try {
                                e = this.xhr.getResponseHeader("Content-Type");
                            } catch (n) {}
                            t = (("application/octet-stream" === e || "application/octet-stream; charset=UTF-8" === e) && this.xhr.response) || this.xhr.responseText;
                        } catch (n) {
                            this.onError(n);
                        }
                        null != t && this.onData(t);
                    }),
                    (i.prototype.hasXDR = function () {
                        return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;
                    }),
                    (i.prototype.abort = function () {
                        this.cleanup();
                    }),
                    (i.requestsCount = 0),
                    (i.requests = {}),
                    "undefined" != typeof document)
                )
                    if ("function" == typeof attachEvent) attachEvent("onunload", s);
                    else if ("function" == typeof addEventListener) {
                        var f = "onpagehide" in self ? "pagehide" : "unload";
                        addEventListener(f, s, !1);
                    }
            },
            function (t, e, n) {
                function r(t) {
                    var e = t && t.forceBase64;
                    (p && !e) || (this.supportsBinary = !1), o.call(this, t);
                }
                var o = n(23),
                    i = n(32),
                    s = n(24),
                    a = n(33),
                    c = n(34),
                    u = n(3)("engine.io-client:polling");
                t.exports = r;
                var p = null != new (n(19))({ xdomain: !1 }).responseType;
                a(r, o),
                    (r.prototype.name = "polling"),
                    (r.prototype.doOpen = function () {
                        this.poll();
                    }),
                    (r.prototype.pause = function (t) {
                        function e() {
                            u("paused"), (n.readyState = "paused"), t();
                        }
                        var n = this;
                        if (((this.readyState = "pausing"), this.polling || !this.writable)) {
                            var r = 0;
                            this.polling &&
                                (u("we are currently polling - waiting to pause"),
                                r++,
                                this.once("pollComplete", function () {
                                    u("pre-pause polling complete"), --r || e();
                                })),
                                this.writable ||
                                    (u("we are currently writing - waiting to pause"),
                                    r++,
                                    this.once("drain", function () {
                                        u("pre-pause writing complete"), --r || e();
                                    }));
                        } else e();
                    }),
                    (r.prototype.poll = function () {
                        u("polling"), (this.polling = !0), this.doPoll(), this.emit("poll");
                    }),
                    (r.prototype.onData = function (t) {
                        var e = this;
                        u("polling got data %s", t);
                        s.decodePayload(t, this.socket.binaryType, function (t, n, r) {
                            return "opening" === e.readyState && e.onOpen(), "close" === t.type ? (e.onClose(), !1) : void e.onPacket(t);
                        }),
                            "closed" !== this.readyState && ((this.polling = !1), this.emit("pollComplete"), "open" === this.readyState ? this.poll() : u('ignoring poll - transport state "%s"', this.readyState));
                    }),
                    (r.prototype.doClose = function () {
                        function t() {
                            u("writing close packet"), e.write([{ type: "close" }]);
                        }
                        var e = this;
                        "open" === this.readyState ? (u("transport open - closing"), t()) : (u("transport not open - deferring close"), this.once("open", t));
                    }),
                    (r.prototype.write = function (t) {
                        var e = this;
                        this.writable = !1;
                        var n = function () {
                            (e.writable = !0), e.emit("drain");
                        };
                        s.encodePayload(t, this.supportsBinary, function (t) {
                            e.doWrite(t, n);
                        });
                    }),
                    (r.prototype.uri = function () {
                        var t = this.query || {},
                            e = this.secure ? "https" : "http",
                            n = "";
                        return (
                            !1 !== this.timestampRequests && (t[this.timestampParam] = c()),
                            this.supportsBinary || t.sid || (t.b64 = 1),
                            (t = i.encode(t)),
                            this.port && (("https" === e && 443 !== Number(this.port)) || ("http" === e && 80 !== Number(this.port))) && (n = ":" + this.port),
                            t.length && (t = "?" + t),
                            e + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t
                        );
                    });
            },
            function (t, e, n) {
                function r(t) {
                    (this.path = t.path),
                        (this.hostname = t.hostname),
                        (this.port = t.port),
                        (this.secure = t.secure),
                        (this.query = t.query),
                        (this.timestampParam = t.timestampParam),
                        (this.timestampRequests = t.timestampRequests),
                        (this.readyState = ""),
                        (this.agent = t.agent || !1),
                        (this.socket = t.socket),
                        (this.enablesXDR = t.enablesXDR),
                        (this.withCredentials = t.withCredentials),
                        (this.pfx = t.pfx),
                        (this.key = t.key),
                        (this.passphrase = t.passphrase),
                        (this.cert = t.cert),
                        (this.ca = t.ca),
                        (this.ciphers = t.ciphers),
                        (this.rejectUnauthorized = t.rejectUnauthorized),
                        (this.forceNode = t.forceNode),
                        (this.isReactNative = t.isReactNative),
                        (this.extraHeaders = t.extraHeaders),
                        (this.localAddress = t.localAddress);
                }
                var o = n(24),
                    i = n(11);
                (t.exports = r),
                    i(r.prototype),
                    (r.prototype.onError = function (t, e) {
                        var n = new Error(t);
                        return (n.type = "TransportError"), (n.description = e), this.emit("error", n), this;
                    }),
                    (r.prototype.open = function () {
                        return ("closed" !== this.readyState && "" !== this.readyState) || ((this.readyState = "opening"), this.doOpen()), this;
                    }),
                    (r.prototype.close = function () {
                        return ("opening" !== this.readyState && "open" !== this.readyState) || (this.doClose(), this.onClose()), this;
                    }),
                    (r.prototype.send = function (t) {
                        if ("open" !== this.readyState) throw new Error("Transport not open");
                        this.write(t);
                    }),
                    (r.prototype.onOpen = function () {
                        (this.readyState = "open"), (this.writable = !0), this.emit("open");
                    }),
                    (r.prototype.onData = function (t) {
                        var e = o.decodePacket(t, this.socket.binaryType);
                        this.onPacket(e);
                    }),
                    (r.prototype.onPacket = function (t) {
                        this.emit("packet", t);
                    }),
                    (r.prototype.onClose = function () {
                        (this.readyState = "closed"), this.emit("close");
                    });
            },
            function (t, e, n) {
                function r(t, n) {
                    return n("b" + e.packets[t.type] + t.data.data);
                }
                function o(t, n, r) {
                    if (!n) return e.encodeBase64Packet(t, r);
                    var o = t.data,
                        i = new Uint8Array(o),
                        s = new Uint8Array(1 + o.byteLength);
                    s[0] = v[t.type];
                    for (var a = 0; a < i.length; a++) s[a + 1] = i[a];
                    return r(s.buffer);
                }
                function s(t, n, r) {
                    if (!n) return e.encodeBase64Packet(t, r);
                    if (g)
                        return (function (t, n, r) {
                            if (!n) return e.encodeBase64Packet(t, r);
                            var o = new FileReader();
                            return (
                                (o.onload = function () {
                                    e.encodePacket({ type: t.type, data: o.result }, n, !0, r);
                                }),
                                o.readAsArrayBuffer(t.data)
                            );
                        })(t, n, r);
                    var o = new Uint8Array(1);
                    return (o[0] = v[t.type]), r(new w([o.buffer, t.data]));
                }
                function c(t, e, n) {
                    for (
                        var r = new Array(t.length),
                            o = l(t.length, n),
                            i = function (t, n, o) {
                                e(n, function (e, n) {
                                    (r[t] = n), o(e, r);
                                });
                            },
                            s = 0;
                        s < t.length;
                        s++
                    )
                        i(s, t[s], o);
                }
                var u,
                    p = n(25),
                    h = n(26),
                    f = n(27),
                    l = n(28),
                    d = n(29);
                "undefined" != typeof ArrayBuffer && (u = n(30));
                var y = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent),
                    m = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent),
                    g = y || m;
                e.protocol = 3;
                var v = (e.packets = { open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6 }),
                    b = p(v),
                    C = { type: "error", data: "parser error" },
                    w = n(31);
                (e.encodePacket = function (t, e, n, i) {
                    "function" == typeof e && ((i = e), (e = !1)), "function" == typeof n && ((i = n), (n = null));
                    var a = void 0 === t.data ? void 0 : t.data.buffer || t.data;
                    if ("undefined" != typeof ArrayBuffer && a instanceof ArrayBuffer) return o(t, e, i);
                    if (void 0 !== w && a instanceof w) return s(t, e, i);
                    if (a && a.base64) return r(t, i);
                    var c = v[t.type];
                    return void 0 !== t.data && (c += n ? d.encode(String(t.data), { strict: !1 }) : String(t.data)), i("" + c);
                }),
                    (e.encodeBase64Packet = function (t, n) {
                        var i,
                            r = "b" + e.packets[t.type];
                        if (void 0 !== w && t.data instanceof w) {
                            var o = new FileReader();
                            return (
                                (o.onload = function () {
                                    var t = o.result.split(",")[1];
                                    n(r + t);
                                }),
                                o.readAsDataURL(t.data)
                            );
                        }
                        try {
                            i = String.fromCharCode.apply(null, new Uint8Array(t.data));
                        } catch (s) {
                            for (var a = new Uint8Array(t.data), c = new Array(a.length), u = 0; u < a.length; u++) c[u] = a[u];
                            i = String.fromCharCode.apply(null, c);
                        }
                        return (r += btoa(i)), n(r);
                    }),
                    (e.decodePacket = function (t, n, r) {
                        if (void 0 === t) return C;
                        if ("string" == typeof t) {
                            if ("b" === t.charAt(0)) return e.decodeBase64Packet(t.substr(1), n);
                            if (
                                r &&
                                !1 ===
                                    (t = (function (t) {
                                        try {
                                            t = d.decode(t, { strict: !1 });
                                        } catch (e) {
                                            return !1;
                                        }
                                        return t;
                                    })(t))
                            )
                                return C;
                            var o = t.charAt(0);
                            return Number(o) == o && b[o] ? (t.length > 1 ? { type: b[o], data: t.substring(1) } : { type: b[o] }) : C;
                        }
                        o = new Uint8Array(t)[0];
                        var s = f(t, 1);
                        return w && "blob" === n && (s = new w([s])), { type: b[o], data: s };
                    }),
                    (e.decodeBase64Packet = function (t, e) {
                        var n = b[t.charAt(0)];
                        if (!u) return { type: n, data: { base64: !0, data: t.substr(1) } };
                        var r = u.decode(t.substr(1));
                        return "blob" === e && w && (r = new w([r])), { type: n, data: r };
                    }),
                    (e.encodePayload = function (t, n, r) {
                        "function" == typeof n && ((r = n), (n = null));
                        var s = h(t);
                        return n && s
                            ? w && !g
                                ? e.encodePayloadAsBlob(t, r)
                                : e.encodePayloadAsArrayBuffer(t, r)
                            : t.length
                            ? void c(
                                  t,
                                  function (t, r) {
                                      e.encodePacket(t, !!s && n, !1, function (t) {
                                          r(
                                              null,
                                              (function (t) {
                                                  return t.length + ":" + t;
                                              })(t)
                                          );
                                      });
                                  },
                                  function (t, e) {
                                      return r(e.join(""));
                                  }
                              )
                            : r("0:");
                    }),
                    (e.decodePayload = function (t, n, r) {
                        if ("string" != typeof t) return e.decodePayloadAsBinary(t, n, r);
                        var o;
                        if (("function" == typeof n && ((r = n), (n = null)), "" === t)) return r(C, 0, 1);
                        for (var i, s, a = "", c = 0, u = t.length; c < u; c++) {
                            var p = t.charAt(c);
                            if (":" === p) {
                                if ("" === a || a != (i = Number(a))) return r(C, 0, 1);
                                if (a != (s = t.substr(c + 1, i)).length) return r(C, 0, 1);
                                if (s.length) {
                                    if (((o = e.decodePacket(s, n, !1)), C.type === o.type && C.data === o.data)) return r(C, 0, 1);
                                    if (!1 === r(o, c + i, u)) return;
                                }
                                (c += i), (a = "");
                            } else a += p;
                        }
                        return "" !== a ? r(C, 0, 1) : void 0;
                    }),
                    (e.encodePayloadAsArrayBuffer = function (t, n) {
                        return t.length
                            ? void c(
                                  t,
                                  function (t, n) {
                                      e.encodePacket(t, !0, !0, function (t) {
                                          return n(null, t);
                                      });
                                  },
                                  function (t, e) {
                                      var r = e.reduce(function (t, e) {
                                              var n;
                                              return t + (n = "string" == typeof e ? e.length : e.byteLength).toString().length + n + 2;
                                          }, 0),
                                          o = new Uint8Array(r),
                                          i = 0;
                                      return (
                                          e.forEach(function (t) {
                                              var e = "string" == typeof t,
                                                  n = t;
                                              if (e) {
                                                  for (var r = new Uint8Array(t.length), s = 0; s < t.length; s++) r[s] = t.charCodeAt(s);
                                                  n = r.buffer;
                                              }
                                              o[i++] = e ? 0 : 1;
                                              var a = n.byteLength.toString();
                                              for (s = 0; s < a.length; s++) o[i++] = parseInt(a[s]);
                                              o[i++] = 255;
                                              for (r = new Uint8Array(n), s = 0; s < r.length; s++) o[i++] = r[s];
                                          }),
                                          n(o.buffer)
                                      );
                                  }
                              )
                            : n(new ArrayBuffer(0));
                    }),
                    (e.encodePayloadAsBlob = function (t, n) {
                        c(
                            t,
                            function (t, n) {
                                e.encodePacket(t, !0, !0, function (t) {
                                    var e = new Uint8Array(1);
                                    if (((e[0] = 1), "string" == typeof t)) {
                                        for (var r = new Uint8Array(t.length), o = 0; o < t.length; o++) r[o] = t.charCodeAt(o);
                                        (t = r.buffer), (e[0] = 0);
                                    }
                                    var s = (t instanceof ArrayBuffer ? t.byteLength : t.size).toString(),
                                        a = new Uint8Array(s.length + 1);
                                    for (o = 0; o < s.length; o++) a[o] = parseInt(s[o]);
                                    if (((a[s.length] = 255), w)) {
                                        var c = new w([e.buffer, a.buffer, t]);
                                        n(null, c);
                                    }
                                });
                            },
                            function (t, e) {
                                return n(new w(e));
                            }
                        );
                    }),
                    (e.decodePayloadAsBinary = function (t, n, r) {
                        "function" == typeof n && ((r = n), (n = null));
                        for (var o = t, i = []; o.byteLength > 0; ) {
                            for (var s = new Uint8Array(o), a = 0 === s[0], c = "", u = 1; 255 !== s[u]; u++) {
                                if (c.length > 310) return r(C, 0, 1);
                                c += s[u];
                            }
                            (o = f(o, 2 + c.length)), (c = parseInt(c));
                            var p = f(o, 0, c);
                            if (a)
                                try {
                                    p = String.fromCharCode.apply(null, new Uint8Array(p));
                                } catch (h) {
                                    var l = new Uint8Array(p);
                                    p = "";
                                    for (u = 0; u < l.length; u++) p += String.fromCharCode(l[u]);
                                }
                            i.push(p), (o = f(o, c));
                        }
                        var d = i.length;
                        i.forEach(function (t, o) {
                            r(e.decodePacket(t, n, !0), o, d);
                        });
                    });
            },
            function (t, e) {
                t.exports =
                    Object.keys ||
                    function (t) {
                        var e = [],
                            n = Object.prototype.hasOwnProperty;
                        for (var r in t) n.call(t, r) && e.push(r);
                        return e;
                    };
            },
            function (t, e, n) {
                var o = n(13),
                    i = Object.prototype.toString,
                    s = "function" == typeof Blob || ("undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob)),
                    a = "function" == typeof File || ("undefined" != typeof File && "[object FileConstructor]" === i.call(File));
                t.exports = function r(t) {
                    if (!t || "object" != typeof t) return !1;
                    if (o(t)) {
                        for (var e = 0, n = t.length; e < n; e++) if (r(t[e])) return !0;
                        return !1;
                    }
                    if (("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(t)) || ("function" == typeof ArrayBuffer && t instanceof ArrayBuffer) || (s && t instanceof Blob) || (a && t instanceof File)) return !0;
                    if (t.toJSON && "function" == typeof t.toJSON && 1 === arguments.length) return r(t.toJSON(), !0);
                    for (var i in t) if (Object.prototype.hasOwnProperty.call(t, i) && r(t[i])) return !0;
                    return !1;
                };
            },
            function (t, e) {
                t.exports = function (t, e, n) {
                    var r = t.byteLength;
                    if (((e = e || 0), (n = n || r), t.slice)) return t.slice(e, n);
                    if ((e < 0 && (e += r), n < 0 && (n += r), n > r && (n = r), e >= r || e >= n || 0 === r)) return new ArrayBuffer(0);
                    for (var o = new Uint8Array(t), i = new Uint8Array(n - e), s = e, a = 0; s < n; s++, a++) i[a] = o[s];
                    return i.buffer;
                };
            },
            function (t, e) {
                function r() {}
                t.exports = function (t, e, n) {
                    function o(t, r) {
                        if (o.count <= 0) throw new Error("after called too many times");
                        --o.count, t ? ((i = !0), e(t), (e = n)) : 0 !== o.count || i || e(null, r);
                    }
                    var i = !1;
                    return (n = n || r), (o.count = t), 0 === t ? e() : o;
                };
            },
            function (t, e) {
                function n(t) {
                    for (var e, n, r = [], o = 0, i = t.length; o < i; )
                        (e = t.charCodeAt(o++)) >= 55296 && e <= 56319 && o < i ? (56320 == (64512 & (n = t.charCodeAt(o++))) ? r.push(((1023 & e) << 10) + (1023 & n) + 65536) : (r.push(e), o--)) : r.push(e);
                    return r;
                }
                function o(t, e) {
                    if (t >= 55296 && t <= 57343) {
                        if (e) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value");
                        return !1;
                    }
                    return !0;
                }
                function i(t, e) {
                    return d(((t >> e) & 63) | 128);
                }
                function s(t, e) {
                    if (0 == (4294967168 & t)) return d(t);
                    var n = "";
                    return (
                        0 == (4294965248 & t)
                            ? (n = d(((t >> 6) & 31) | 192))
                            : 0 == (4294901760 & t)
                            ? (o(t, e) || (t = 65533), (n = d(((t >> 12) & 15) | 224)), (n += i(t, 6)))
                            : 0 == (4292870144 & t) && ((n = d(((t >> 18) & 7) | 240)), (n += i(t, 12)), (n += i(t, 6))),
                        n + d((63 & t) | 128)
                    );
                }
                function c() {
                    if (l >= f) throw Error("Invalid byte index");
                    var t = 255 & h[l];
                    if ((l++, 128 == (192 & t))) return 63 & t;
                    throw Error("Invalid continuation byte");
                }
                function u(t) {
                    var e, s;
                    if (l > f) throw Error("Invalid byte index");
                    if (l == f) return !1;
                    if (((e = 255 & h[l]), l++, 0 == (128 & e))) return e;
                    if (192 == (224 & e)) {
                        if ((s = ((31 & e) << 6) | c()) >= 128) return s;
                        throw Error("Invalid continuation byte");
                    }
                    if (224 == (240 & e)) {
                        if ((s = ((15 & e) << 12) | (c() << 6) | c()) >= 2048) return o(s, t) ? s : 65533;
                        throw Error("Invalid continuation byte");
                    }
                    if (240 == (248 & e) && (s = ((7 & e) << 18) | (c() << 12) | (c() << 6) | c()) >= 65536 && s <= 1114111) return s;
                    throw Error("Invalid UTF-8 detected");
                }
                var h,
                    f,
                    l,
                    d = String.fromCharCode;
                t.exports = {
                    version: "2.1.2",
                    encode: function (t, e) {
                        for (var o = !1 !== (e = e || {}).strict, i = n(t), a = i.length, c = -1, u = ""; ++c < a; ) u += s(i[c], o);
                        return u;
                    },
                    decode: function (t, e) {
                        var o = !1 !== (e = e || {}).strict;
                        (h = n(t)), (f = h.length), (l = 0);
                        for (var i, s = []; !1 !== (i = u(o)); ) s.push(i);
                        return (function (t) {
                            for (var e, n = t.length, r = -1, o = ""; ++r < n; ) (e = t[r]) > 65535 && ((o += d((((e -= 65536) >>> 10) & 1023) | 55296)), (e = 56320 | (1023 & e))), (o += d(e));
                            return o;
                        })(s);
                    },
                };
            },
            function (t, e) {
                !(function () {
                    "use strict";
                    for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(256), r = 0; r < t.length; r++) n[t.charCodeAt(r)] = r;
                    (e.encode = function (e) {
                        var n,
                            r = new Uint8Array(e),
                            o = r.length,
                            i = "";
                        for (n = 0; n < o; n += 3) (i += t[r[n] >> 2]), (i += t[((3 & r[n]) << 4) | (r[n + 1] >> 4)]), (i += t[((15 & r[n + 1]) << 2) | (r[n + 2] >> 6)]), (i += t[63 & r[n + 2]]);
                        return o % 3 == 2 ? (i = i.substring(0, i.length - 1) + "=") : o % 3 == 1 && (i = i.substring(0, i.length - 2) + "=="), i;
                    }),
                        (e.decode = function (t) {
                            var e,
                                r,
                                o,
                                i,
                                s,
                                a = 0.75 * t.length,
                                c = t.length,
                                u = 0;
                            "=" === t[t.length - 1] && (a--, "=" === t[t.length - 2] && a--);
                            var p = new ArrayBuffer(a),
                                h = new Uint8Array(p);
                            for (e = 0; e < c; e += 4)
                                (r = n[t.charCodeAt(e)]),
                                    (o = n[t.charCodeAt(e + 1)]),
                                    (i = n[t.charCodeAt(e + 2)]),
                                    (s = n[t.charCodeAt(e + 3)]),
                                    (h[u++] = (r << 2) | (o >> 4)),
                                    (h[u++] = ((15 & o) << 4) | (i >> 2)),
                                    (h[u++] = ((3 & i) << 6) | (63 & s));
                            return p;
                        });
                })();
            },
            function (t, e) {
                function n(t) {
                    return t.map(function (t) {
                        if (t.buffer instanceof ArrayBuffer) {
                            var e = t.buffer;
                            if (t.byteLength !== e.byteLength) {
                                var n = new Uint8Array(t.byteLength);
                                n.set(new Uint8Array(e, t.byteOffset, t.byteLength)), (e = n.buffer);
                            }
                            return e;
                        }
                        return t;
                    });
                }
                function r(t, e) {
                    e = e || {};
                    var r = new i();
                    return (
                        n(t).forEach(function (t) {
                            r.append(t);
                        }),
                        e.type ? r.getBlob(e.type) : r.getBlob()
                    );
                }
                function o(t, e) {
                    return new Blob(n(t), e || {});
                }
                var i = void 0 !== i ? i : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,
                    s = (function () {
                        try {
                            return 2 === new Blob(["hi"]).size;
                        } catch (e) {
                            return !1;
                        }
                    })(),
                    a =
                        s &&
                        (function () {
                            try {
                                return 2 === new Blob([new Uint8Array([1, 2])]).size;
                            } catch (e) {
                                return !1;
                            }
                        })(),
                    c = i && i.prototype.append && i.prototype.getBlob;
                "undefined" != typeof Blob && ((r.prototype = Blob.prototype), (o.prototype = Blob.prototype)), (t.exports = s ? (a ? Blob : o) : c ? r : void 0);
            },
            function (t, e) {
                (e.encode = function (t) {
                    var e = "";
                    for (var n in t) t.hasOwnProperty(n) && (e.length && (e += "&"), (e += encodeURIComponent(n) + "=" + encodeURIComponent(t[n])));
                    return e;
                }),
                    (e.decode = function (t) {
                        for (var e = {}, n = t.split("&"), r = 0, o = n.length; r < o; r++) {
                            var i = n[r].split("=");
                            e[decodeURIComponent(i[0])] = decodeURIComponent(i[1]);
                        }
                        return e;
                    });
            },
            function (t, e) {
                t.exports = function (t, e) {
                    var n = function () {};
                    (n.prototype = e.prototype), (t.prototype = new n()), (t.prototype.constructor = t);
                };
            },
            function (t, e) {
                "use strict";
                function n(t) {
                    var e = "";
                    do {
                        (e = s[t % a] + e), (t = Math.floor(t / a));
                    } while (t > 0);
                    return e;
                }
                function o() {
                    var t = n(+new Date());
                    return t !== i ? ((u = 0), (i = t)) : t + "." + n(u++);
                }
                for (var i, s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), a = 64, c = {}, u = 0, p = 0; p < a; p++) c[s[p]] = p;
                (o.encode = n),
                    (o.decode = function (t) {
                        var e = 0;
                        for (p = 0; p < t.length; p++) e = e * a + c[t.charAt(p)];
                        return e;
                    }),
                    (t.exports = o);
            },
            function (t, e, n) {
                (function (e) {
                    function r() {}
                    function o() {
                        return "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== e ? e : {};
                    }
                    function i(t) {
                        if ((s.call(this, t), (this.query = this.query || {}), !c)) {
                            var e = o();
                            c = e.___eio = e.___eio || [];
                        }
                        this.index = c.length;
                        var n = this;
                        c.push(function (t) {
                            n.onData(t);
                        }),
                            (this.query.j = this.index),
                            "function" == typeof addEventListener &&
                                addEventListener(
                                    "beforeunload",
                                    function () {
                                        n.script && (n.script.onerror = r);
                                    },
                                    !1
                                );
                    }
                    var s = n(22),
                        a = n(33);
                    t.exports = i;
                    var c,
                        u = /\n/g,
                        p = /\\n/g;
                    a(i, s),
                        (i.prototype.supportsBinary = !1),
                        (i.prototype.doClose = function () {
                            this.script && (this.script.parentNode.removeChild(this.script), (this.script = null)),
                                this.form && (this.form.parentNode.removeChild(this.form), (this.form = null), (this.iframe = null)),
                                s.prototype.doClose.call(this);
                        }),
                        (i.prototype.doPoll = function () {
                            var t = this,
                                e = document.createElement("script");
                            this.script && (this.script.parentNode.removeChild(this.script), (this.script = null)),
                                (e.async = !0),
                                (e.src = this.uri()),
                                (e.onerror = function (e) {
                                    t.onError("jsonp poll error", e);
                                });
                            var n = document.getElementsByTagName("script")[0];
                            n ? n.parentNode.insertBefore(e, n) : (document.head || document.body).appendChild(e),
                                (this.script = e),
                                "undefined" != typeof navigator &&
                                    /gecko/i.test(navigator.userAgent) &&
                                    setTimeout(function () {
                                        var t = document.createElement("iframe");
                                        document.body.appendChild(t), document.body.removeChild(t);
                                    }, 100);
                        }),
                        (i.prototype.doWrite = function (t, e) {
                            function n() {
                                r(), e();
                            }
                            function r() {
                                if (o.iframe)
                                    try {
                                        o.form.removeChild(o.iframe);
                                    } catch (t) {
                                        o.onError("jsonp polling iframe removal error", t);
                                    }
                                try {
                                    var e = '<iframe src="javascript:0" name="' + o.iframeId + '">';
                                    i = document.createElement(e);
                                } catch (t) {
                                    ((i = document.createElement("iframe")).name = o.iframeId), (i.src = "javascript:0");
                                }
                                (i.id = o.iframeId), o.form.appendChild(i), (o.iframe = i);
                            }
                            var o = this;
                            if (!this.form) {
                                var i,
                                    s = document.createElement("form"),
                                    a = document.createElement("textarea"),
                                    c = (this.iframeId = "eio_iframe_" + this.index);
                                (s.className = "socketio"),
                                    (s.style.position = "absolute"),
                                    (s.style.top = "-1000px"),
                                    (s.style.left = "-1000px"),
                                    (s.target = c),
                                    (s.method = "POST"),
                                    s.setAttribute("accept-charset", "utf-8"),
                                    (a.name = "d"),
                                    s.appendChild(a),
                                    document.body.appendChild(s),
                                    (this.form = s),
                                    (this.area = a);
                            }
                            (this.form.action = this.uri()), r(), (t = t.replace(p, "\\\n")), (this.area.value = t.replace(u, "\\n"));
                            try {
                                this.form.submit();
                            } catch (h) {}
                            this.iframe.attachEvent
                                ? (this.iframe.onreadystatechange = function () {
                                      "complete" === o.iframe.readyState && n();
                                  })
                                : (this.iframe.onload = n);
                        });
                }.call(
                    e,
                    (function () {
                        return this;
                    })()
                ));
            },
            function (t, e, n) {
                function r(t) {
                    t && t.forceBase64 && (this.supportsBinary = !1),
                        (this.perMessageDeflate = t.perMessageDeflate),
                        (this.usingBrowserWebSocket = o && !t.forceNode),
                        (this.protocols = t.protocols),
                        this.usingBrowserWebSocket || (l = i),
                        s.call(this, t);
                }
                var o,
                    i,
                    s = n(23),
                    a = n(24),
                    c = n(32),
                    u = n(33),
                    p = n(34),
                    h = n(3)("engine.io-client:websocket");
                if (("undefined" != typeof WebSocket ? (o = WebSocket) : "undefined" != typeof self && (o = self.WebSocket || self.MozWebSocket), "undefined" == typeof window))
                    try {
                        i = n(37);
                    } catch (f) {}
                var l = o || i;
                (t.exports = r),
                    u(r, s),
                    (r.prototype.name = "websocket"),
                    (r.prototype.supportsBinary = !0),
                    (r.prototype.doOpen = function () {
                        if (this.check()) {
                            var t = this.uri(),
                                e = this.protocols,
                                n = { agent: this.agent, perMessageDeflate: this.perMessageDeflate };
                            (n.pfx = this.pfx),
                                (n.key = this.key),
                                (n.passphrase = this.passphrase),
                                (n.cert = this.cert),
                                (n.ca = this.ca),
                                (n.ciphers = this.ciphers),
                                (n.rejectUnauthorized = this.rejectUnauthorized),
                                this.extraHeaders && (n.headers = this.extraHeaders),
                                this.localAddress && (n.localAddress = this.localAddress);
                            try {
                                this.ws = this.usingBrowserWebSocket && !this.isReactNative ? (e ? new l(t, e) : new l(t)) : new l(t, e, n);
                            } catch (r) {
                                return this.emit("error", r);
                            }
                            void 0 === this.ws.binaryType && (this.supportsBinary = !1),
                                this.ws.supports && this.ws.supports.binary ? ((this.supportsBinary = !0), (this.ws.binaryType = "nodebuffer")) : (this.ws.binaryType = "arraybuffer"),
                                this.addEventListeners();
                        }
                    }),
                    (r.prototype.addEventListeners = function () {
                        var t = this;
                        (this.ws.onopen = function () {
                            t.onOpen();
                        }),
                            (this.ws.onclose = function () {
                                t.onClose();
                            }),
                            (this.ws.onmessage = function (e) {
                                t.onData(e.data);
                            }),
                            (this.ws.onerror = function (e) {
                                t.onError("websocket error", e);
                            });
                    }),
                    (r.prototype.write = function (t) {
                        var n = this;
                        this.writable = !1;
                        for (var r = t.length, o = 0, i = r; o < i; o++)
                            !(function (t) {
                                a.encodePacket(t, n.supportsBinary, function (o) {
                                    if (!n.usingBrowserWebSocket) {
                                        var i = {};
                                        if ((t.options && (i.compress = t.options.compress), n.perMessageDeflate)) ("string" == typeof o ? Buffer.byteLength(o) : o.length) < n.perMessageDeflate.threshold && (i.compress = !1);
                                    }
                                    try {
                                        n.usingBrowserWebSocket ? n.ws.send(o) : n.ws.send(o, i);
                                    } catch (a) {
                                        h("websocket closed before onclose event");
                                    }
                                    --r ||
                                        (n.emit("flush"),
                                        setTimeout(function () {
                                            (n.writable = !0), n.emit("drain");
                                        }, 0));
                                });
                            })(t[o]);
                    }),
                    (r.prototype.onClose = function () {
                        s.prototype.onClose.call(this);
                    }),
                    (r.prototype.doClose = function () {
                        void 0 !== this.ws && this.ws.close();
                    }),
                    (r.prototype.uri = function () {
                        var t = this.query || {},
                            e = this.secure ? "wss" : "ws",
                            n = "";
                        return (
                            this.port && (("wss" === e && 443 !== Number(this.port)) || ("ws" === e && 80 !== Number(this.port))) && (n = ":" + this.port),
                            this.timestampRequests && (t[this.timestampParam] = p()),
                            this.supportsBinary || (t.b64 = 1),
                            (t = c.encode(t)).length && (t = "?" + t),
                            e + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t
                        );
                    }),
                    (r.prototype.check = function () {
                        return !(!l || ("__initialize" in l && this.name === r.prototype.name));
                    });
            },
            function (t, e) {},
            function (t, e) {
                var n = [].indexOf;
                t.exports = function (t, e) {
                    if (n) return t.indexOf(e);
                    for (var r = 0; r < t.length; ++r) if (t[r] === e) return r;
                    return -1;
                };
            },
            function (t, e, n) {
                function r(t, e, n) {
                    (this.io = t),
                        (this.nsp = e),
                        (this.json = this),
                        (this.ids = 0),
                        (this.acks = {}),
                        (this.receiveBuffer = []),
                        (this.sendBuffer = []),
                        (this.connected = !1),
                        (this.disconnected = !0),
                        (this.flags = {}),
                        n && n.query && (this.query = n.query),
                        this.io.autoConnect && this.open();
                }
                var o = n(7),
                    i = n(11),
                    s = n(40),
                    a = n(41),
                    c = n(42),
                    u = n(3)("socket.io-client:socket"),
                    p = n(32),
                    h = n(26);
                t.exports = r;
                var f = { connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1 },
                    l = i.prototype.emit;
                i(r.prototype),
                    (r.prototype.subEvents = function () {
                        if (!this.subs) {
                            var t = this.io;
                            this.subs = [a(t, "open", c(this, "onopen")), a(t, "packet", c(this, "onpacket")), a(t, "close", c(this, "onclose"))];
                        }
                    }),
                    (r.prototype.open = r.prototype.connect = function () {
                        return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);
                    }),
                    (r.prototype.send = function () {
                        var t = s(arguments);
                        return t.unshift("message"), this.emit.apply(this, t), this;
                    }),
                    (r.prototype.emit = function (t) {
                        if (f.hasOwnProperty(t)) return l.apply(this, arguments), this;
                        var e = s(arguments),
                            n = { type: (void 0 !== this.flags.binary ? this.flags.binary : h(e)) ? o.BINARY_EVENT : o.EVENT, data: e, options: {} };
                        return (
                            (n.options.compress = !this.flags || !1 !== this.flags.compress),
                            "function" == typeof e[e.length - 1] && (u("emitting packet with ack id %d", this.ids), (this.acks[this.ids] = e.pop()), (n.id = this.ids++)),
                            this.connected ? this.packet(n) : this.sendBuffer.push(n),
                            (this.flags = {}),
                            this
                        );
                    }),
                    (r.prototype.packet = function (t) {
                        (t.nsp = this.nsp), this.io.packet(t);
                    }),
                    (r.prototype.onopen = function () {
                        if ((u("transport is open - connecting"), "/" !== this.nsp))
                            if (this.query) {
                                var t = "object" == typeof this.query ? p.encode(this.query) : this.query;
                                u("sending connect packet with query %s", t), this.packet({ type: o.CONNECT, query: t });
                            } else this.packet({ type: o.CONNECT });
                    }),
                    (r.prototype.onclose = function (t) {
                        u("close (%s)", t), (this.connected = !1), (this.disconnected = !0), delete this.id, this.emit("disconnect", t);
                    }),
                    (r.prototype.onpacket = function (t) {
                        var e = t.nsp === this.nsp,
                            n = t.type === o.ERROR && "/" === t.nsp;
                        if (e || n)
                            switch (t.type) {
                                case o.CONNECT:
                                    this.onconnect();
                                    break;
                                case o.EVENT:
                                case o.BINARY_EVENT:
                                    this.onevent(t);
                                    break;
                                case o.ACK:
                                case o.BINARY_ACK:
                                    this.onack(t);
                                    break;
                                case o.DISCONNECT:
                                    this.ondisconnect();
                                    break;
                                case o.ERROR:
                                    this.emit("error", t.data);
                            }
                    }),
                    (r.prototype.onevent = function (t) {
                        var e = t.data || [];
                        u("emitting event %j", e), null != t.id && (u("attaching ack callback to event"), e.push(this.ack(t.id))), this.connected ? l.apply(this, e) : this.receiveBuffer.push(e);
                    }),
                    (r.prototype.ack = function (t) {
                        var e = this,
                            n = !1;
                        return function () {
                            if (!n) {
                                n = !0;
                                var r = s(arguments);
                                u("sending ack %j", r), e.packet({ type: h(r) ? o.BINARY_ACK : o.ACK, id: t, data: r });
                            }
                        };
                    }),
                    (r.prototype.onack = function (t) {
                        var e = this.acks[t.id];
                        "function" == typeof e ? (u("calling ack %s with %j", t.id, t.data), e.apply(this, t.data), delete this.acks[t.id]) : u("bad ack %s", t.id);
                    }),
                    (r.prototype.onconnect = function () {
                        (this.connected = !0), (this.disconnected = !1), this.emit("connect"), this.emitBuffered();
                    }),
                    (r.prototype.emitBuffered = function () {
                        var t;
                        for (t = 0; t < this.receiveBuffer.length; t++) l.apply(this, this.receiveBuffer[t]);
                        for (this.receiveBuffer = [], t = 0; t < this.sendBuffer.length; t++) this.packet(this.sendBuffer[t]);
                        this.sendBuffer = [];
                    }),
                    (r.prototype.ondisconnect = function () {
                        u("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect");
                    }),
                    (r.prototype.destroy = function () {
                        if (this.subs) {
                            for (var t = 0; t < this.subs.length; t++) this.subs[t].destroy();
                            this.subs = null;
                        }
                        this.io.destroy(this);
                    }),
                    (r.prototype.close = r.prototype.disconnect = function () {
                        return this.connected && (u("performing disconnect (%s)", this.nsp), this.packet({ type: o.DISCONNECT })), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
                    }),
                    (r.prototype.compress = function (t) {
                        return (this.flags.compress = t), this;
                    }),
                    (r.prototype.binary = function (t) {
                        return (this.flags.binary = t), this;
                    });
            },
            function (t, e) {
                t.exports = function (t, e) {
                    for (var n = [], r = (e = e || 0) || 0; r < t.length; r++) n[r - e] = t[r];
                    return n;
                };
            },
            function (t, e) {
                t.exports = function (t, e, n) {
                    return (
                        t.on(e, n),
                        {
                            destroy: function () {
                                t.removeListener(e, n);
                            },
                        }
                    );
                };
            },
            function (t, e) {
                var n = [].slice;
                t.exports = function (t, e) {
                    if (("string" == typeof e && (e = t[e]), "function" != typeof e)) throw new Error("bind() requires a function");
                    var r = n.call(arguments, 2);
                    return function () {
                        return e.apply(t, r.concat(n.call(arguments)));
                    };
                };
            },
            function (t, e) {
                function n(t) {
                    (t = t || {}), (this.ms = t.min || 100), (this.max = t.max || 1e4), (this.factor = t.factor || 2), (this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0), (this.attempts = 0);
                }
                (t.exports = n),
                    (n.prototype.duration = function () {
                        var t = this.ms * Math.pow(this.factor, this.attempts++);
                        if (this.jitter) {
                            var e = Math.random(),
                                n = Math.floor(e * this.jitter * t);
                            t = 0 == (1 & Math.floor(10 * e)) ? t - n : t + n;
                        }
                        return 0 | Math.min(t, this.max);
                    }),
                    (n.prototype.reset = function () {
                        this.attempts = 0;
                    }),
                    (n.prototype.setMin = function (t) {
                        this.ms = t;
                    }),
                    (n.prototype.setMax = function (t) {
                        this.max = t;
                    }),
                    (n.prototype.setJitter = function (t) {
                        this.jitter = t;
                    });
            },
        ]);
    }),
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? (module.exports = factory()) : "function" == typeof define && define.amd ? define(factory) : (global.Sweetalert2 = factory());
    })(this, function () {
        "use strict";
        function _typeof(obj) {
            return (_typeof =
                "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                    ? function (obj) {
                          return typeof obj;
                      }
                    : function (obj) {
                          return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                      })(obj);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
        }
        function _extends() {
            return (_extends =
                Object.assign ||
                function (target) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = arguments[i];
                        for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                    }
                    return target;
                }).apply(this, arguments);
        }
        function _getPrototypeOf(o) {
            return (_getPrototypeOf = Object.setPrototypeOf
                ? Object.getPrototypeOf
                : function (o) {
                      return o.__proto__ || Object.getPrototypeOf(o);
                  })(o);
        }
        function _setPrototypeOf(o, p) {
            return (_setPrototypeOf =
                Object.setPrototypeOf ||
                function (o, p) {
                    return (o.__proto__ = p), o;
                })(o, p);
        }
        function _construct(Parent, args, Class) {
            return (_construct = (function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
                } catch (e) {
                    return !1;
                }
            })()
                ? Reflect.construct
                : function (Parent, args, Class) {
                      var a = [null];
                      a.push.apply(a, args);
                      var instance = new (Function.bind.apply(Parent, a))();
                      return Class && _setPrototypeOf(instance, Class.prototype), instance;
                  }).apply(null, arguments);
        }
        function _possibleConstructorReturn(self, call) {
            return !call || ("object" != typeof call && "function" != typeof call)
                ? (function (self) {
                      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return self;
                  })(self)
                : call;
        }
        function _get(target, property, receiver) {
            return (_get =
                "undefined" != typeof Reflect && Reflect.get
                    ? Reflect.get
                    : function (target, property, receiver) {
                          var base = (function (object, property) {
                              for (; !Object.prototype.hasOwnProperty.call(object, property) && null !== (object = _getPrototypeOf(object)); );
                              return object;
                          })(target, property);
                          if (base) {
                              var desc = Object.getOwnPropertyDescriptor(base, property);
                              return desc.get ? desc.get.call(receiver) : desc.value;
                          }
                      })(target, property, receiver || target);
        }
        var capitalizeFirstLetter = function (str) {
                return str.charAt(0).toUpperCase() + str.slice(1);
            },
            objectValues = function (obj) {
                return Object.keys(obj).map(function (key) {
                    return obj[key];
                });
            },
            toArray = function (nodeList) {
                return Array.prototype.slice.call(nodeList);
            },
            warn = function (message) {},
            error = function (message) {},
            previousWarnOnceMessages = [],
            warnAboutDepreation = function (deprecatedParam, useInstead) {
                var message;
                (message = '"'.concat(deprecatedParam, '" is deprecated and will be removed in the next major release. Please use "').concat(useInstead, '" instead.')),
                    -1 === previousWarnOnceMessages.indexOf(message) && (previousWarnOnceMessages.push(message), warn(message));
            },
            callIfFunction = function (arg) {
                return "function" == typeof arg ? arg() : arg;
            },
            isPromise = function (arg) {
                return arg && Promise.resolve(arg) === arg;
            },
            DismissReason = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }),
            isElement = function (elem) {
                return (
                    elem instanceof Element ||
                    (function (elem) {
                        return "object" === _typeof(elem) && elem.jquery;
                    })(elem)
                );
            },
            prefix = function (items) {
                var result = {};
                for (var i in items) result[items[i]] = "swal2-" + items[i];
                return result;
            },
            swalClasses = prefix([
                "container",
                "shown",
                "height-auto",
                "iosfix",
                "popup",
                "modal",
                "no-backdrop",
                "toast",
                "toast-shown",
                "toast-column",
                "show",
                "hide",
                "close",
                "title",
                "header",
                "content",
                "html-container",
                "actions",
                "confirm",
                "cancel",
                "footer",
                "icon",
                "icon-content",
                "image",
                "input",
                "file",
                "range",
                "select",
                "radio",
                "checkbox",
                "label",
                "textarea",
                "inputerror",
                "validation-message",
                "progress-steps",
                "active-progress-step",
                "progress-step",
                "progress-step-line",
                "loading",
                "styled",
                "top",
                "top-start",
                "top-end",
                "top-left",
                "top-right",
                "center",
                "center-start",
                "center-end",
                "center-left",
                "center-right",
                "bottom",
                "bottom-start",
                "bottom-end",
                "bottom-left",
                "bottom-right",
                "grow-row",
                "grow-column",
                "grow-fullscreen",
                "rtl",
                "timer-progress-bar",
                "scrollbar-measure",
                "icon-success",
                "icon-warning",
                "icon-info",
                "icon-question",
                "icon-error",
            ]),
            iconTypes = prefix(["success", "warning", "info", "question", "error"]),
            getContainer = function () {
                return document.body.querySelector(".".concat(swalClasses.container));
            },
            elementBySelector = function (selectorString) {
                var container = getContainer();
                return container ? container.querySelector(selectorString) : null;
            },
            elementByClass = function (className) {
                return elementBySelector(".".concat(className));
            },
            getPopup = function () {
                return elementByClass(swalClasses.popup);
            },
            getIcons = function () {
                var popup = getPopup();
                return toArray(popup.querySelectorAll(".".concat(swalClasses.icon)));
            },
            getIcon = function () {
                var visibleIcon = getIcons().filter(function (icon) {
                    return isVisible(icon);
                });
                return visibleIcon.length ? visibleIcon[0] : null;
            },
            getTitle = function () {
                return elementByClass(swalClasses.title);
            },
            getContent = function () {
                return elementByClass(swalClasses.content);
            },
            getImage = function () {
                return elementByClass(swalClasses.image);
            },
            getProgressSteps = function () {
                return elementByClass(swalClasses["progress-steps"]);
            },
            getValidationMessage = function () {
                return elementByClass(swalClasses["validation-message"]);
            },
            getConfirmButton = function () {
                return elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.confirm));
            },
            getCancelButton = function () {
                return elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.cancel));
            },
            getActions = function () {
                return elementByClass(swalClasses.actions);
            },
            getHeader = function () {
                return elementByClass(swalClasses.header);
            },
            getFooter = function () {
                return elementByClass(swalClasses.footer);
            },
            getTimerProgressBar = function () {
                return elementByClass(swalClasses["timer-progress-bar"]);
            },
            getCloseButton = function () {
                return elementByClass(swalClasses.close);
            },
            getFocusableElements = function () {
                var focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(function (a, b) {
                        return (a = parseInt(a.getAttribute("tabindex"))) > (b = parseInt(b.getAttribute("tabindex"))) ? 1 : a < b ? -1 : 0;
                    }),
                    otherFocusableElements = toArray(
                        getPopup().querySelectorAll(
                            '\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n'
                        )
                    ).filter(function (el) {
                        return "-1" !== el.getAttribute("tabindex");
                    });
                return (function (arr) {
                    for (var result = [], i = 0; i < arr.length; i++) -1 === result.indexOf(arr[i]) && result.push(arr[i]);
                    return result;
                })(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(function (el) {
                    return isVisible(el);
                });
            },
            isModal = function () {
                return !isToast() && !document.body.classList.contains(swalClasses["no-backdrop"]);
            },
            isToast = function () {
                return document.body.classList.contains(swalClasses["toast-shown"]);
            },
            states = { previousBodyPadding: null },
            hasClass = function (elem, className) {
                if (!className) return !1;
                for (var classList = className.split(/\s+/), i = 0; i < classList.length; i++) if (!elem.classList.contains(classList[i])) return !1;
                return !0;
            },
            applyCustomClass = function (elem, params, className) {
                if (
                    ((function (elem, params) {
                        toArray(elem.classList).forEach(function (className) {
                            -1 === objectValues(swalClasses).indexOf(className) && -1 === objectValues(iconTypes).indexOf(className) && -1 === objectValues(params.showClass).indexOf(className) && elem.classList.remove(className);
                        });
                    })(elem, params),
                    params.customClass && params.customClass[className])
                ) {
                    if ("string" != typeof params.customClass[className] && !params.customClass[className].forEach)
                        return warn("Invalid type of customClass.".concat(className, '! Expected string or iterable object, got "').concat(_typeof(params.customClass[className]), '"'));
                    addClass(elem, params.customClass[className]);
                }
            };
        function getInput(content, inputType) {
            if (!inputType) return null;
            switch (inputType) {
                case "select":
                case "textarea":
                case "file":
                    return getChildByClass(content, swalClasses[inputType]);
                case "checkbox":
                    return content.querySelector(".".concat(swalClasses.checkbox, " input"));
                case "radio":
                    return content.querySelector(".".concat(swalClasses.radio, " input:checked")) || content.querySelector(".".concat(swalClasses.radio, " input:first-child"));
                case "range":
                    return content.querySelector(".".concat(swalClasses.range, " input"));
                default:
                    return getChildByClass(content, swalClasses.input);
            }
        }
        var oldInputVal,
            focusInput = function (input) {
                if ((input.focus(), "file" !== input.type)) {
                    var val = input.value;
                    (input.value = ""), (input.value = val);
                }
            },
            toggleClass = function (target, classList, condition) {
                target &&
                    classList &&
                    ("string" == typeof classList && (classList = classList.split(/\s+/).filter(Boolean)),
                    classList.forEach(function (className) {
                        target.forEach
                            ? target.forEach(function (elem) {
                                  condition ? elem.classList.add(className) : elem.classList.remove(className);
                              })
                            : condition
                            ? target.classList.add(className)
                            : target.classList.remove(className);
                    }));
            },
            addClass = function (target, classList) {
                toggleClass(target, classList, !0);
            },
            removeClass = function (target, classList) {
                toggleClass(target, classList, !1);
            },
            getChildByClass = function (elem, className) {
                for (var i = 0; i < elem.childNodes.length; i++) if (hasClass(elem.childNodes[i], className)) return elem.childNodes[i];
            },
            applyNumericalStyle = function (elem, property, value) {
                value || 0 === parseInt(value) ? (elem.style[property] = "number" == typeof value ? "".concat(value, "px") : value) : elem.style.removeProperty(property);
            },
            show = function (elem) {
                var display = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex";
                (elem.style.opacity = ""), (elem.style.display = display);
            },
            hide = function (elem) {
                (elem.style.opacity = ""), (elem.style.display = "none");
            },
            toggle = function (elem, condition, display) {
                condition ? show(elem, display) : hide(elem);
            },
            isVisible = function (elem) {
                return !(!elem || !(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));
            },
            hasCssAnimation = function (elem) {
                var style = window.getComputedStyle(elem),
                    animDuration = parseFloat(style.getPropertyValue("animation-duration") || "0"),
                    transDuration = parseFloat(style.getPropertyValue("transition-duration") || "0");
                return animDuration > 0 || transDuration > 0;
            },
            animateTimerProgressBar = function (timer) {
                var reset = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    timerProgressBar = getTimerProgressBar();
                isVisible(timerProgressBar) &&
                    (reset && ((timerProgressBar.style.transition = "none"), (timerProgressBar.style.width = "100%")),
                    setTimeout(function () {
                        (timerProgressBar.style.transition = "width ".concat(timer / 1e3, "s linear")), (timerProgressBar.style.width = "0%");
                    }, 10));
            },
            isNodeEnv = function () {
                return "undefined" == typeof window || "undefined" == typeof document;
            },
            sweetHTML = '\n <div aria-labelledby="'
                .concat(swalClasses.title, '" aria-describedby="')
                .concat(swalClasses.content, '" class="')
                .concat(swalClasses.popup, '" tabindex="-1">\n   <div class="')
                .concat(swalClasses.header, '">\n     <ul class="')
                .concat(swalClasses["progress-steps"], '"></ul>\n     <div class="')
                .concat(swalClasses.icon, " ")
                .concat(iconTypes.error, '"></div>\n     <div class="')
                .concat(swalClasses.icon, " ")
                .concat(iconTypes.question, '"></div>\n     <div class="')
                .concat(swalClasses.icon, " ")
                .concat(iconTypes.warning, '"></div>\n     <div class="')
                .concat(swalClasses.icon, " ")
                .concat(iconTypes.info, '"></div>\n     <div class="')
                .concat(swalClasses.icon, " ")
                .concat(iconTypes.success, '"></div>\n     <img class="')
                .concat(swalClasses.image, '" />\n     <h2 class="')
                .concat(swalClasses.title, '" id="')
                .concat(swalClasses.title, '"></h2>\n     <button type="button" class="')
                .concat(swalClasses.close, '"></button>\n   </div>\n   <div class="')
                .concat(swalClasses.content, '">\n     <div id="')
                .concat(swalClasses.content, '" class="')
                .concat(swalClasses["html-container"], '"></div>\n     <input class="')
                .concat(swalClasses.input, '" />\n     <input type="file" class="')
                .concat(swalClasses.file, '" />\n     <div class="')
                .concat(swalClasses.range, '">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="')
                .concat(swalClasses.select, '"></select>\n     <div class="')
                .concat(swalClasses.radio, '"></div>\n     <label for="')
                .concat(swalClasses.checkbox, '" class="')
                .concat(swalClasses.checkbox, '">\n       <input type="checkbox" />\n       <span class="')
                .concat(swalClasses.label, '"></span>\n     </label>\n     <textarea class="')
                .concat(swalClasses.textarea, '"></textarea>\n     <div class="')
                .concat(swalClasses["validation-message"], '" id="')
                .concat(swalClasses["validation-message"], '"></div>\n   </div>\n   <div class="')
                .concat(swalClasses.actions, '">\n     <button type="button" class="')
                .concat(swalClasses.confirm, '">OK</button>\n     <button type="button" class="')
                .concat(swalClasses.cancel, '">Cancel</button>\n   </div>\n   <div class="')
                .concat(swalClasses.footer, '"></div>\n   <div class="')
                .concat(swalClasses["timer-progress-bar"], '"></div>\n </div>\n')
                .replace(/(^|\n)\s*/g, ""),
            resetValidationMessage = function (e) {
                Swal.isVisible() && oldInputVal !== e.target.value && Swal.resetValidationMessage(), (oldInputVal = e.target.value);
            },
            init = function (params) {
                var oldContainer;
                if (
                    ((oldContainer = getContainer()) &&
                        (oldContainer.parentNode.removeChild(oldContainer), removeClass([document.documentElement, document.body], [swalClasses["no-backdrop"], swalClasses["toast-shown"], swalClasses["has-column"]])),
                    isNodeEnv())
                )
                    error("SweetAlert2 requires document to initialize");
                else {
                    var container = document.createElement("div");
                    (container.className = swalClasses.container), (container.innerHTML = sweetHTML);
                    var target,
                        content,
                        input,
                        file,
                        range,
                        rangeOutput,
                        select,
                        checkbox,
                        textarea,
                        targetElement = "string" == typeof (target = params.target) ? document.querySelector(target) : target;
                    targetElement.appendChild(container),
                        (function (params) {
                            var popup = getPopup();
                            popup.setAttribute("role", params.toast ? "alert" : "dialog"), popup.setAttribute("aria-live", params.toast ? "polite" : "assertive"), params.toast || popup.setAttribute("aria-modal", "true");
                        })(params),
                        (function (targetElement) {
                            "rtl" === window.getComputedStyle(targetElement).direction && addClass(getContainer(), swalClasses.rtl);
                        })(targetElement),
                        (content = getContent()),
                        (input = getChildByClass(content, swalClasses.input)),
                        (file = getChildByClass(content, swalClasses.file)),
                        (range = content.querySelector(".".concat(swalClasses.range, " input"))),
                        (rangeOutput = content.querySelector(".".concat(swalClasses.range, " output"))),
                        (select = getChildByClass(content, swalClasses.select)),
                        (checkbox = content.querySelector(".".concat(swalClasses.checkbox, " input"))),
                        (textarea = getChildByClass(content, swalClasses.textarea)),
                        (input.oninput = resetValidationMessage),
                        (file.onchange = resetValidationMessage),
                        (select.onchange = resetValidationMessage),
                        (checkbox.onchange = resetValidationMessage),
                        (textarea.oninput = resetValidationMessage),
                        (range.oninput = function (e) {
                            resetValidationMessage(e), (rangeOutput.value = range.value);
                        }),
                        (range.onchange = function (e) {
                            resetValidationMessage(e), (range.nextSibling.value = range.value);
                        });
                }
            },
            parseHtmlToContainer = function (param, target) {
                param instanceof HTMLElement ? target.appendChild(param) : "object" === _typeof(param) ? handleJqueryElem(target, param) : param && (target.innerHTML = param);
            },
            handleJqueryElem = function (target, elem) {
                if (((target.innerHTML = ""), 0 in elem)) for (var i = 0; i in elem; i++) target.appendChild(elem[i].cloneNode(!0));
                else target.appendChild(elem.cloneNode(!0));
            },
            animationEndEvent = (function () {
                if (isNodeEnv()) return !1;
                var testEl = document.createElement("div"),
                    transEndEventNames = { WebkitAnimation: "webkitAnimationEnd", OAnimation: "oAnimationEnd oanimationend", animation: "animationend" };
                for (var i in transEndEventNames) if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && void 0 !== testEl.style[i]) return transEndEventNames[i];
                return !1;
            })(),
            renderActions = function (instance, params) {
                var actions = getActions(),
                    confirmButton = getConfirmButton(),
                    cancelButton = getCancelButton();
                params.showConfirmButton || params.showCancelButton || hide(actions),
                    applyCustomClass(actions, params, "actions"),
                    renderButton(confirmButton, "confirm", params),
                    renderButton(cancelButton, "cancel", params),
                    params.buttonsStyling
                        ? (function (confirmButton, cancelButton, params) {
                              addClass([confirmButton, cancelButton], swalClasses.styled), params.confirmButtonColor && (confirmButton.style.backgroundColor = params.confirmButtonColor);
                              params.cancelButtonColor && (cancelButton.style.backgroundColor = params.cancelButtonColor);
                              var confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue("background-color");
                              (confirmButton.style.borderLeftColor = confirmButtonBackgroundColor), (confirmButton.style.borderRightColor = confirmButtonBackgroundColor);
                          })(confirmButton, cancelButton, params)
                        : (removeClass([confirmButton, cancelButton], swalClasses.styled),
                          (confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = ""),
                          (cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = "")),
                    params.reverseButtons && confirmButton.parentNode.insertBefore(cancelButton, confirmButton);
            };
        function renderButton(button, buttonType, params) {
            toggle(button, params["show".concat(capitalizeFirstLetter(buttonType), "Button")], "inline-block"),
                (button.innerHTML = params["".concat(buttonType, "ButtonText")]),
                button.setAttribute("aria-label", params["".concat(buttonType, "ButtonAriaLabel")]),
                (button.className = swalClasses[buttonType]),
                applyCustomClass(button, params, "".concat(buttonType, "Button")),
                addClass(button, params["".concat(buttonType, "ButtonClass")]);
        }
        var renderContainer = function (instance, params) {
                var container = getContainer();
                if (container) {
                    !(function (container, backdrop) {
                        "string" == typeof backdrop ? (container.style.background = backdrop) : backdrop || addClass([document.documentElement, document.body], swalClasses["no-backdrop"]);
                    })(container, params.backdrop),
                        !params.backdrop && params.allowOutsideClick && warn('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'),
                        (function (container, position) {
                            position in swalClasses ? addClass(container, swalClasses[position]) : (warn('The "position" parameter is not valid, defaulting to "center"'), addClass(container, swalClasses.center));
                        })(container, params.position),
                        (function (container, grow) {
                            if (grow && "string" == typeof grow) {
                                var growClass = "grow-".concat(grow);
                                growClass in swalClasses && addClass(container, swalClasses[growClass]);
                            }
                        })(container, params.grow),
                        applyCustomClass(container, params, "container");
                    var queueStep = document.body.getAttribute("data-swal2-queue-step");
                    queueStep && (container.setAttribute("data-queue-step", queueStep), document.body.removeAttribute("data-swal2-queue-step"));
                }
            },
            privateProps = { promise: new WeakMap(), innerParams: new WeakMap(), domCache: new WeakMap() },
            inputTypes = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
            showInput = function (params) {
                if (!renderInputType[params.input])
                    return error('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(params.input, '"'));
                var inputContainer = getInputContainer(params.input),
                    input = renderInputType[params.input](inputContainer, params);
                show(input),
                    setTimeout(function () {
                        focusInput(input);
                    });
            },
            setAttributes = function (inputType, inputAttributes) {
                var input = getInput(getContent(), inputType);
                if (input)
                    for (var attr in ((function (input) {
                        for (var i = 0; i < input.attributes.length; i++) {
                            var attrName = input.attributes[i].name;
                            -1 === ["type", "value", "style"].indexOf(attrName) && input.removeAttribute(attrName);
                        }
                    })(input),
                    inputAttributes))
                        ("range" === inputType && "placeholder" === attr) || input.setAttribute(attr, inputAttributes[attr]);
            },
            setCustomClass = function (params) {
                var inputContainer = getInputContainer(params.input);
                params.customClass && addClass(inputContainer, params.customClass.input);
            },
            setInputPlaceholder = function (input, params) {
                (input.placeholder && !params.inputPlaceholder) || (input.placeholder = params.inputPlaceholder);
            },
            getInputContainer = function (inputType) {
                var inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;
                return getChildByClass(getContent(), inputClass);
            },
            renderInputType = {};
        (renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = function (input, params) {
            return (
                "string" == typeof params.inputValue || "number" == typeof params.inputValue
                    ? (input.value = params.inputValue)
                    : isPromise(params.inputValue) || warn('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(_typeof(params.inputValue), '"')),
                setInputPlaceholder(input, params),
                (input.type = params.input),
                input
            );
        }),
            (renderInputType.file = function (input, params) {
                return setInputPlaceholder(input, params), input;
            }),
            (renderInputType.range = function (range, params) {
                var rangeInput = range.querySelector("input"),
                    rangeOutput = range.querySelector("output");
                return (rangeInput.value = params.inputValue), (rangeInput.type = params.input), (rangeOutput.value = params.inputValue), range;
            }),
            (renderInputType.select = function (select, params) {
                if (((select.innerHTML = ""), params.inputPlaceholder)) {
                    var placeholder = document.createElement("option");
                    (placeholder.innerHTML = params.inputPlaceholder), (placeholder.value = ""), (placeholder.disabled = !0), (placeholder.selected = !0), select.appendChild(placeholder);
                }
                return select;
            }),
            (renderInputType.radio = function (radio) {
                return (radio.innerHTML = ""), radio;
            }),
            (renderInputType.checkbox = function (checkboxContainer, params) {
                var checkbox = getInput(getContent(), "checkbox");
                return (checkbox.value = 1), (checkbox.id = swalClasses.checkbox), (checkbox.checked = Boolean(params.inputValue)), (checkboxContainer.querySelector("span").innerHTML = params.inputPlaceholder), checkboxContainer;
            }),
            (renderInputType.textarea = function (textarea, params) {
                if (((textarea.value = params.inputValue), setInputPlaceholder(textarea, params), "MutationObserver" in window)) {
                    var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width),
                        popupPadding = parseInt(window.getComputedStyle(getPopup()).paddingLeft) + parseInt(window.getComputedStyle(getPopup()).paddingRight);
                    new MutationObserver(function () {
                        var contentWidth = textarea.offsetWidth + popupPadding;
                        getPopup().style.width = contentWidth > initialPopupWidth ? "".concat(contentWidth, "px") : null;
                    }).observe(textarea, { attributes: !0, attributeFilter: ["style"] });
                }
                return textarea;
            });
        var renderContent = function (instance, params) {
                var content = getContent().querySelector("#".concat(swalClasses.content));
                params.html ? (parseHtmlToContainer(params.html, content), show(content, "block")) : params.text ? ((content.textContent = params.text), show(content, "block")) : hide(content),
                    (function (instance, params) {
                        var content = getContent(),
                            innerParams = privateProps.innerParams.get(instance),
                            rerender = !innerParams || params.input !== innerParams.input;
                        inputTypes.forEach(function (inputType) {
                            var inputClass = swalClasses[inputType],
                                inputContainer = getChildByClass(content, inputClass);
                            setAttributes(inputType, params.inputAttributes), (inputContainer.className = inputClass), rerender && hide(inputContainer);
                        }),
                            params.input && (rerender && showInput(params), setCustomClass(params));
                    })(instance, params),
                    applyCustomClass(getContent(), params, "content");
            },
            hideAllIcons = function () {
                for (var icons = getIcons(), i = 0; i < icons.length; i++) hide(icons[i]);
            },
            adjustSuccessIconBackgoundColor = function () {
                for (
                    var popup = getPopup(),
                        popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue("background-color"),
                        successIconParts = popup.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"),
                        i = 0;
                    i < successIconParts.length;
                    i++
                )
                    successIconParts[i].style.backgroundColor = popupBackgroundColor;
            },
            setContent = function (icon, params) {
                if (((icon.innerHTML = ""), params.iconHtml)) icon.innerHTML = iconContent(params.iconHtml);
                else if ("success" === params.icon)
                    icon.innerHTML =
                        '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    ';
                else if ("error" === params.icon) icon.innerHTML = '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    ';
                else {
                    icon.innerHTML = iconContent({ question: "?", warning: "!", info: "i" }[params.icon]);
                }
            },
            iconContent = function (content) {
                return '<div class="'.concat(swalClasses["icon-content"], '">').concat(content, "</div>");
            },
            currentSteps = [],
            getQueueStep = function () {
                return getContainer().getAttribute("data-queue-step");
            },
            renderProgressSteps = function (instance, params) {
                var progressStepsContainer = getProgressSteps();
                if (!params.progressSteps || 0 === params.progressSteps.length) return hide(progressStepsContainer);
                show(progressStepsContainer), (progressStepsContainer.innerHTML = "");
                var currentProgressStep = parseInt(void 0 === params.currentProgressStep ? getQueueStep() : params.currentProgressStep);
                currentProgressStep >= params.progressSteps.length && warn("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"),
                    params.progressSteps.forEach(function (step, index) {
                        var stepEl = (function (step) {
                            var stepEl = document.createElement("li");
                            return addClass(stepEl, swalClasses["progress-step"]), (stepEl.innerHTML = step), stepEl;
                        })(step);
                        if ((progressStepsContainer.appendChild(stepEl), index === currentProgressStep && addClass(stepEl, swalClasses["active-progress-step"]), index !== params.progressSteps.length - 1)) {
                            var lineEl = (function (params) {
                                var lineEl = document.createElement("li");
                                return addClass(lineEl, swalClasses["progress-step-line"]), params.progressStepsDistance && (lineEl.style.width = params.progressStepsDistance), lineEl;
                            })(step);
                            progressStepsContainer.appendChild(lineEl);
                        }
                    });
            },
            renderHeader = function (instance, params) {
                var header = getHeader();
                applyCustomClass(header, params, "header"),
                    renderProgressSteps(0, params),
                    (function (instance, params) {
                        var innerParams = privateProps.innerParams.get(instance);
                        if (innerParams && params.icon === innerParams.icon && getIcon()) applyCustomClass(getIcon(), params, "icon");
                        else if ((hideAllIcons(), params.icon))
                            if (-1 !== Object.keys(iconTypes).indexOf(params.icon)) {
                                var icon = elementBySelector(".".concat(swalClasses.icon, ".").concat(iconTypes[params.icon]));
                                show(icon), setContent(icon, params), adjustSuccessIconBackgoundColor(), applyCustomClass(icon, params, "icon"), addClass(icon, params.showClass.icon);
                            } else error('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(params.icon, '"'));
                    })(instance, params),
                    (function (instance, params) {
                        var image = getImage();
                        if (!params.imageUrl) return hide(image);
                        show(image),
                            image.setAttribute("src", params.imageUrl),
                            image.setAttribute("alt", params.imageAlt),
                            applyNumericalStyle(image, "width", params.imageWidth),
                            applyNumericalStyle(image, "height", params.imageHeight),
                            (image.className = swalClasses.image),
                            applyCustomClass(image, params, "image");
                    })(0, params),
                    (function (instance, params) {
                        var title = getTitle();
                        toggle(title, params.title || params.titleText), params.title && parseHtmlToContainer(params.title, title), params.titleText && (title.innerText = params.titleText), applyCustomClass(title, params, "title");
                    })(0, params),
                    (function (instance, params) {
                        var closeButton = getCloseButton();
                        (closeButton.innerHTML = params.closeButtonHtml),
                            applyCustomClass(closeButton, params, "closeButton"),
                            toggle(closeButton, params.showCloseButton),
                            closeButton.setAttribute("aria-label", params.closeButtonAriaLabel);
                    })(0, params);
            },
            addClasses = function (popup, params) {
                (popup.className = "".concat(swalClasses.popup, " ").concat(isVisible(popup) ? params.showClass.popup : "")),
                    params.toast ? (addClass([document.documentElement, document.body], swalClasses["toast-shown"]), addClass(popup, swalClasses.toast)) : addClass(popup, swalClasses.modal),
                    applyCustomClass(popup, params, "popup"),
                    "string" == typeof params.customClass && addClass(popup, params.customClass),
                    params.icon && addClass(popup, swalClasses["icon-".concat(params.icon)]);
            },
            render = function (instance, params) {
                !(function (instance, params) {
                    var popup = getPopup();
                    applyNumericalStyle(popup, "width", params.width), applyNumericalStyle(popup, "padding", params.padding), params.background && (popup.style.background = params.background), addClasses(popup, params);
                })(0, params),
                    renderContainer(0, params),
                    renderHeader(instance, params),
                    renderContent(instance, params),
                    renderActions(0, params),
                    (function (instance, params) {
                        var footer = getFooter();
                        toggle(footer, params.footer), params.footer && parseHtmlToContainer(params.footer, footer), applyCustomClass(footer, params, "footer");
                    })(0, params),
                    "function" == typeof params.onRender && params.onRender(getPopup());
            },
            clickConfirm = function () {
                return getConfirmButton() && getConfirmButton().click();
            };
        var showLoading = function () {
                var popup = getPopup();
                popup || Swal.fire(), (popup = getPopup());
                var actions = getActions(),
                    confirmButton = getConfirmButton();
                show(actions), show(confirmButton, "inline-block"), addClass([popup, actions], swalClasses.loading), (confirmButton.disabled = !0), popup.setAttribute("data-loading", !0), popup.setAttribute("aria-busy", !0), popup.focus();
            },
            globalState = {},
            restoreActiveElement = function () {
                return new Promise(function (resolve) {
                    var x = window.scrollX,
                        y = window.scrollY;
                    (globalState.restoreFocusTimeout = setTimeout(function () {
                        globalState.previousActiveElement && globalState.previousActiveElement.focus ? (globalState.previousActiveElement.focus(), (globalState.previousActiveElement = null)) : document.body && document.body.focus(),
                            resolve();
                    }, 100)),
                        void 0 !== x && void 0 !== y && window.scrollTo(x, y);
                });
            },
            stopTimer = function () {
                if (globalState.timeout)
                    return (
                        (function () {
                            var timerProgressBar = getTimerProgressBar(),
                                timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
                            timerProgressBar.style.removeProperty("transition"), (timerProgressBar.style.width = "100%");
                            var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width),
                                timerProgressBarPercent = parseInt((timerProgressBarWidth / timerProgressBarFullWidth) * 100);
                            timerProgressBar.style.removeProperty("transition"), (timerProgressBar.style.width = "".concat(timerProgressBarPercent, "%"));
                        })(),
                        globalState.timeout.stop()
                    );
            },
            resumeTimer = function () {
                if (globalState.timeout) {
                    var remaining = globalState.timeout.start();
                    return animateTimerProgressBar(remaining), remaining;
                }
            },
            defaultParams = {
                title: "",
                titleText: "",
                text: "",
                html: "",
                footer: "",
                icon: void 0,
                iconHtml: void 0,
                toast: !1,
                animation: !0,
                showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" },
                hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" },
                customClass: void 0,
                target: "body",
                backdrop: !0,
                heightAuto: !0,
                allowOutsideClick: !0,
                allowEscapeKey: !0,
                allowEnterKey: !0,
                stopKeydownPropagation: !0,
                keydownListenerCapture: !1,
                showConfirmButton: !0,
                showCancelButton: !1,
                preConfirm: void 0,
                confirmButtonText: "OK",
                confirmButtonAriaLabel: "",
                confirmButtonColor: void 0,
                cancelButtonText: "Cancel",
                cancelButtonAriaLabel: "",
                cancelButtonColor: void 0,
                buttonsStyling: !0,
                reverseButtons: !1,
                focusConfirm: !0,
                focusCancel: !1,
                showCloseButton: !1,
                closeButtonHtml: "&times;",
                closeButtonAriaLabel: "Close this dialog",
                showLoaderOnConfirm: !1,
                imageUrl: void 0,
                imageWidth: void 0,
                imageHeight: void 0,
                imageAlt: "",
                timer: void 0,
                timerProgressBar: !1,
                width: void 0,
                padding: void 0,
                background: void 0,
                input: void 0,
                inputPlaceholder: "",
                inputValue: "",
                inputOptions: {},
                inputAutoTrim: !0,
                inputAttributes: {},
                inputValidator: void 0,
                validationMessage: void 0,
                grow: !1,
                position: "center",
                progressSteps: [],
                currentProgressStep: void 0,
                progressStepsDistance: void 0,
                onBeforeOpen: void 0,
                onOpen: void 0,
                onRender: void 0,
                onClose: void 0,
                onAfterClose: void 0,
                scrollbarPadding: !0,
            },
            updatableParams = [
                "title",
                "titleText",
                "text",
                "html",
                "icon",
                "customClass",
                "showConfirmButton",
                "showCancelButton",
                "confirmButtonText",
                "confirmButtonAriaLabel",
                "confirmButtonColor",
                "cancelButtonText",
                "cancelButtonAriaLabel",
                "cancelButtonColor",
                "buttonsStyling",
                "reverseButtons",
                "imageUrl",
                "imageWidth",
                "imageHeight",
                "imageAlt",
                "progressSteps",
                "currentProgressStep",
            ],
            deprecatedParams = { animation: 'showClass" and "hideClass' },
            toastIncompatibleParams = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusCancel", "heightAuto", "keydownListenerCapture"],
            isValidParameter = function (paramName) {
                return Object.prototype.hasOwnProperty.call(defaultParams, paramName);
            },
            isDeprecatedParameter = function (paramName) {
                return deprecatedParams[paramName];
            },
            checkIfParamIsValid = function (param) {
                isValidParameter(param) || warn('Unknown parameter "'.concat(param, '"'));
            },
            checkIfToastParamIsValid = function (param) {
                -1 !== toastIncompatibleParams.indexOf(param) && warn('The parameter "'.concat(param, '" is incompatible with toasts'));
            },
            checkIfParamIsDeprecated = function (param) {
                isDeprecatedParameter(param) && warnAboutDepreation(param, isDeprecatedParameter(param));
            },
            showWarningsForParams = function (params) {
                for (var param in params) checkIfParamIsValid(param), params.toast && checkIfToastParamIsValid(param), checkIfParamIsDeprecated(param);
            },
            staticMethods = Object.freeze({
                isValidParameter: isValidParameter,
                isUpdatableParameter: function (paramName) {
                    return -1 !== updatableParams.indexOf(paramName);
                },
                isDeprecatedParameter: isDeprecatedParameter,
                argsToParams: function (args) {
                    var params = {};
                    return (
                        "object" !== _typeof(args[0]) || isElement(args[0])
                            ? ["title", "html", "icon"].forEach(function (name, index) {
                                  var arg = args[index];
                                  "string" == typeof arg || isElement(arg) ? (params[name] = arg) : void 0 !== arg && error("Unexpected type of ".concat(name, '! Expected "string" or "Element", got ').concat(_typeof(arg)));
                              })
                            : _extends(params, args[0]),
                        params
                    );
                },
                isVisible: function () {
                    return isVisible(getPopup());
                },
                clickConfirm: clickConfirm,
                clickCancel: function () {
                    return getCancelButton() && getCancelButton().click();
                },
                getContainer: getContainer,
                getPopup: getPopup,
                getTitle: getTitle,
                getContent: getContent,
                getHtmlContainer: function () {
                    return elementByClass(swalClasses["html-container"]);
                },
                getImage: getImage,
                getIcon: getIcon,
                getIcons: getIcons,
                getCloseButton: getCloseButton,
                getActions: getActions,
                getConfirmButton: getConfirmButton,
                getCancelButton: getCancelButton,
                getHeader: getHeader,
                getFooter: getFooter,
                getFocusableElements: getFocusableElements,
                getValidationMessage: getValidationMessage,
                isLoading: function () {
                    return getPopup().hasAttribute("data-loading");
                },
                fire: function () {
                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return _construct(this, args);
                },
                mixin: function (mixinParams) {
                    return (function (_this) {
                        function MixinSwal() {
                            return _classCallCheck(this, MixinSwal), _possibleConstructorReturn(this, _getPrototypeOf(MixinSwal).apply(this, arguments));
                        }
                        return (
                            (function (subClass, superClass) {
                                if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
                                (subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } })), superClass && _setPrototypeOf(subClass, superClass);
                            })(MixinSwal, _this),
                            _createClass(MixinSwal, [
                                {
                                    key: "_main",
                                    value: function (params) {
                                        return _get(_getPrototypeOf(MixinSwal.prototype), "_main", this).call(this, _extends({}, mixinParams, params));
                                    },
                                },
                            ]),
                            MixinSwal
                        );
                    })(this);
                },
                queue: function (steps) {
                    var Swal = this;
                    currentSteps = steps;
                    var resetAndResolve = function (resolve, value) {
                            (currentSteps = []), resolve(value);
                        },
                        queueResult = [];
                    return new Promise(function (resolve) {
                        !(function step(i, callback) {
                            i < currentSteps.length
                                ? (document.body.setAttribute("data-swal2-queue-step", i),
                                  Swal.fire(currentSteps[i]).then(function (result) {
                                      void 0 !== result.value ? (queueResult.push(result.value), step(i + 1, callback)) : resetAndResolve(resolve, { dismiss: result.dismiss });
                                  }))
                                : resetAndResolve(resolve, { value: queueResult });
                        })(0);
                    });
                },
                getQueueStep: getQueueStep,
                insertQueueStep: function (step, index) {
                    return index && index < currentSteps.length ? currentSteps.splice(index, 0, step) : currentSteps.push(step);
                },
                deleteQueueStep: function (index) {
                    void 0 !== currentSteps[index] && currentSteps.splice(index, 1);
                },
                showLoading: showLoading,
                enableLoading: showLoading,
                getTimerLeft: function () {
                    return globalState.timeout && globalState.timeout.getTimerLeft();
                },
                stopTimer: stopTimer,
                resumeTimer: resumeTimer,
                toggleTimer: function () {
                    var timer = globalState.timeout;
                    return timer && (timer.running ? stopTimer() : resumeTimer());
                },
                increaseTimer: function (n) {
                    if (globalState.timeout) {
                        var remaining = globalState.timeout.increase(n);
                        return animateTimerProgressBar(remaining, !0), remaining;
                    }
                },
                isTimerRunning: function () {
                    return globalState.timeout && globalState.timeout.isRunning();
                },
            });
        function hideLoading() {
            var innerParams = privateProps.innerParams.get(this);
            if (innerParams) {
                var domCache = privateProps.domCache.get(this);
                innerParams.showConfirmButton || (hide(domCache.confirmButton), innerParams.showCancelButton || hide(domCache.actions)),
                    removeClass([domCache.popup, domCache.actions], swalClasses.loading),
                    domCache.popup.removeAttribute("aria-busy"),
                    domCache.popup.removeAttribute("data-loading"),
                    (domCache.confirmButton.disabled = !1),
                    (domCache.cancelButton.disabled = !1);
            }
        }
        var fixScrollbar = function () {
                null === states.previousBodyPadding &&
                    document.body.scrollHeight > window.innerHeight &&
                    ((states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"))),
                    (document.body.style.paddingRight = "".concat(
                        states.previousBodyPadding +
                            (function () {
                                var scrollDiv = document.createElement("div");
                                (scrollDiv.className = swalClasses["scrollbar-measure"]), document.body.appendChild(scrollDiv);
                                var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
                                return document.body.removeChild(scrollDiv), scrollbarWidth;
                            })(),
                        "px"
                    )));
            },
            undoScrollbar = function () {
                null !== states.previousBodyPadding && ((document.body.style.paddingRight = "".concat(states.previousBodyPadding, "px")), (states.previousBodyPadding = null));
            },
            lockBodyScroll = function () {
                var preventTouchMove,
                    container = getContainer();
                (container.ontouchstart = function (e) {
                    var elem;
                    preventTouchMove = e.target === container || (!((elem = container).scrollHeight > elem.clientHeight) && "INPUT" !== e.target.tagName);
                }),
                    (container.ontouchmove = function (e) {
                        preventTouchMove && (e.preventDefault(), e.stopPropagation());
                    });
            },
            undoIOSfix = function () {
                if (hasClass(document.body, swalClasses.iosfix)) {
                    var offset = parseInt(document.body.style.top, 10);
                    removeClass(document.body, swalClasses.iosfix), (document.body.style.top = ""), (document.body.scrollTop = -1 * offset);
                }
            },
            isIE11 = function () {
                return !!window.MSInputMethodContext && !!document.documentMode;
            },
            fixVerticalPositionIE = function () {
                var container = getContainer(),
                    popup = getPopup();
                container.style.removeProperty("align-items"), popup.offsetTop < 0 && (container.style.alignItems = "flex-start");
            },
            undoIEfix = function () {
                "undefined" != typeof window && isIE11() && window.removeEventListener("resize", fixVerticalPositionIE);
            },
            unsetAriaHidden = function () {
                toArray(document.body.children).forEach(function (el) {
                    el.hasAttribute("data-previous-aria-hidden") ? (el.setAttribute("aria-hidden", el.getAttribute("data-previous-aria-hidden")), el.removeAttribute("data-previous-aria-hidden")) : el.removeAttribute("aria-hidden");
                });
            },
            privateMethods = { swalPromiseResolve: new WeakMap() };
        function removePopupAndResetState(instance, container, isToast, onAfterClose) {
            isToast
                ? triggerOnAfterCloseAndDispose(instance, onAfterClose)
                : (restoreActiveElement().then(function () {
                      return triggerOnAfterCloseAndDispose(instance, onAfterClose);
                  }),
                  globalState.keydownTarget.removeEventListener("keydown", globalState.keydownHandler, { capture: globalState.keydownListenerCapture }),
                  (globalState.keydownHandlerAdded = !1)),
                container.parentNode && container.parentNode.removeChild(container),
                isModal() && (undoScrollbar(), undoIOSfix(), undoIEfix(), unsetAriaHidden()),
                removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses["height-auto"], swalClasses["no-backdrop"], swalClasses["toast-shown"], swalClasses["toast-column"]]);
        }
        function close(resolveValue) {
            var popup = getPopup();
            if (popup) {
                var innerParams = privateProps.innerParams.get(this);
                if (innerParams && !hasClass(popup, innerParams.hideClass.popup)) {
                    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);
                    removeClass(popup, innerParams.showClass.popup), addClass(popup, innerParams.hideClass.popup);
                    var backdrop = getContainer();
                    removeClass(backdrop, innerParams.showClass.backdrop), addClass(backdrop, innerParams.hideClass.backdrop), handlePopupAnimation(this, popup, innerParams), swalPromiseResolve(resolveValue || {});
                }
            }
        }
        var handlePopupAnimation = function (instance, popup, innerParams) {
                var container = getContainer(),
                    animationIsSupported = animationEndEvent && hasCssAnimation(popup),
                    onClose = innerParams.onClose,
                    onAfterClose = innerParams.onAfterClose;
                null !== onClose && "function" == typeof onClose && onClose(popup), animationIsSupported ? animatePopup(instance, popup, container, onAfterClose) : removePopupAndResetState(instance, container, isToast(), onAfterClose);
            },
            animatePopup = function (instance, popup, container, onAfterClose) {
                (globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, isToast(), onAfterClose)),
                    popup.addEventListener(animationEndEvent, function (e) {
                        e.target === popup && (globalState.swalCloseEventFinishedCallback(), delete globalState.swalCloseEventFinishedCallback);
                    });
            },
            unsetWeakMaps = function (obj) {
                for (var i in obj) obj[i] = new WeakMap();
            },
            triggerOnAfterCloseAndDispose = function (instance, onAfterClose) {
                setTimeout(function () {
                    null !== onAfterClose && "function" == typeof onAfterClose && onAfterClose(),
                        getPopup() ||
                            (function (instance) {
                                delete instance.params, delete globalState.keydownHandler, delete globalState.keydownTarget, unsetWeakMaps(privateProps), unsetWeakMaps(privateMethods);
                            })(instance);
                });
            };
        function setButtonsDisabled(instance, buttons, disabled) {
            var domCache = privateProps.domCache.get(instance);
            buttons.forEach(function (button) {
                domCache[button].disabled = disabled;
            });
        }
        function setInputDisabled(input, disabled) {
            if (!input) return !1;
            if ("radio" === input.type) for (var radios = input.parentNode.parentNode.querySelectorAll("input"), i = 0; i < radios.length; i++) radios[i].disabled = disabled;
            else input.disabled = disabled;
        }
        var Timer = (function () {
                function Timer(callback, delay) {
                    _classCallCheck(this, Timer), (this.callback = callback), (this.remaining = delay), (this.running = !1), this.start();
                }
                return (
                    _createClass(Timer, [
                        {
                            key: "start",
                            value: function () {
                                return this.running || ((this.running = !0), (this.started = new Date()), (this.id = setTimeout(this.callback, this.remaining))), this.remaining;
                            },
                        },
                        {
                            key: "stop",
                            value: function () {
                                return this.running && ((this.running = !1), clearTimeout(this.id), (this.remaining -= new Date() - this.started)), this.remaining;
                            },
                        },
                        {
                            key: "increase",
                            value: function (n) {
                                var running = this.running;
                                return running && this.stop(), (this.remaining += n), running && this.start(), this.remaining;
                            },
                        },
                        {
                            key: "getTimerLeft",
                            value: function () {
                                return this.running && (this.stop(), this.start()), this.remaining;
                            },
                        },
                        {
                            key: "isRunning",
                            value: function () {
                                return this.running;
                            },
                        },
                    ]),
                    Timer
                );
            })(),
            defaultInputValidators = {
                email: function (string, validationMessage) {
                    return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || "Invalid email address");
                },
                url: function (string, validationMessage) {
                    return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || "Invalid URL");
                },
            };
        function setParameters(params) {
            !(function (params) {
                params.inputValidator ||
                    Object.keys(defaultInputValidators).forEach(function (key) {
                        params.input === key && (params.inputValidator = defaultInputValidators[key]);
                    });
            })(params),
                params.showLoaderOnConfirm &&
                    !params.preConfirm &&
                    warn("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"),
                (params.animation = callIfFunction(params.animation)),
                (function (params) {
                    (!params.target || ("string" == typeof params.target && !document.querySelector(params.target)) || ("string" != typeof params.target && !params.target.appendChild)) &&
                        (warn('Target parameter is not valid, defaulting to "body"'), (params.target = "body"));
                })(params),
                "string" == typeof params.title && (params.title = params.title.split("\n").join("<br />")),
                init(params);
        }
        function swalOpenAnimationFinished(popup, container) {
            popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished), (container.style.overflowY = "auto");
        }
        var setScrollingVisibility = function (container, popup) {
                animationEndEvent && hasCssAnimation(popup)
                    ? ((container.style.overflowY = "hidden"),
                      popup.addEventListener(animationEndEvent, function (e) {
                          e.target === popup && swalOpenAnimationFinished.bind(null, popup, container);
                      }))
                    : (container.style.overflowY = "auto");
            },
            fixScrollContainer = function (container, scrollbarPadding) {
                !(function () {
                    if (((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) || ("MacIntel" === navigator.platform && navigator.maxTouchPoints > 1)) && !hasClass(document.body, swalClasses.iosfix)) {
                        var offset = document.body.scrollTop;
                        (document.body.style.top = "".concat(-1 * offset, "px")), addClass(document.body, swalClasses.iosfix), lockBodyScroll();
                    }
                })(),
                    "undefined" != typeof window && isIE11() && (fixVerticalPositionIE(), window.addEventListener("resize", fixVerticalPositionIE)),
                    toArray(document.body.children).forEach(function (el) {
                        el === getContainer() ||
                            (function (haystack, needle) {
                                if ("function" == typeof haystack.contains) return haystack.contains(needle);
                            })(el, getContainer()) ||
                            (el.hasAttribute("aria-hidden") && el.setAttribute("data-previous-aria-hidden", el.getAttribute("aria-hidden")), el.setAttribute("aria-hidden", "true"));
                    }),
                    scrollbarPadding && fixScrollbar(),
                    setTimeout(function () {
                        container.scrollTop = 0;
                    });
            },
            addClasses$1 = function (container, popup, params) {
                addClass(container, params.showClass.backdrop),
                    show(popup),
                    addClass(popup, params.showClass.popup),
                    addClass([document.documentElement, document.body], swalClasses.shown),
                    params.heightAuto && params.backdrop && !params.toast && addClass([document.documentElement, document.body], swalClasses["height-auto"]);
            },
            getCheckboxValue = function (input) {
                return input.checked ? 1 : 0;
            },
            getRadioValue = function (input) {
                return input.checked ? input.value : null;
            },
            getFileValue = function (input) {
                return input.files.length ? (null !== input.getAttribute("multiple") ? input.files : input.files[0]) : null;
            },
            handleInputOptions = function (instance, params) {
                var content = getContent(),
                    processInputOptions = function (inputOptions) {
                        return populateInputOptions[params.input](content, formatInputOptions(inputOptions), params);
                    };
                isPromise(params.inputOptions)
                    ? (showLoading(),
                      params.inputOptions.then(function (inputOptions) {
                          instance.hideLoading(), processInputOptions(inputOptions);
                      }))
                    : "object" === _typeof(params.inputOptions)
                    ? processInputOptions(params.inputOptions)
                    : error("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(_typeof(params.inputOptions)));
            },
            handleInputValue = function (instance, params) {
                var input = instance.getInput();
                hide(input),
                    params.inputValue
                        .then(function (inputValue) {
                            (input.value = "number" === params.input ? parseFloat(inputValue) || 0 : "".concat(inputValue)), show(input), input.focus(), instance.hideLoading();
                        })
                        .catch(function (err) {
                            error("Error in inputValue promise: ".concat(err)), (input.value = ""), show(input), input.focus(), instance.hideLoading();
                        });
            },
            populateInputOptions = {
                select: function (content, inputOptions, params) {
                    var select = getChildByClass(content, swalClasses.select);
                    inputOptions.forEach(function (inputOption) {
                        var optionValue = inputOption[0],
                            optionLabel = inputOption[1],
                            option = document.createElement("option");
                        (option.value = optionValue), (option.innerHTML = optionLabel), params.inputValue.toString() === optionValue.toString() && (option.selected = !0), select.appendChild(option);
                    }),
                        select.focus();
                },
                radio: function (content, inputOptions, params) {
                    var radio = getChildByClass(content, swalClasses.radio);
                    inputOptions.forEach(function (inputOption) {
                        var radioValue = inputOption[0],
                            radioLabel = inputOption[1],
                            radioInput = document.createElement("input"),
                            radioLabelElement = document.createElement("label");
                        (radioInput.type = "radio"), (radioInput.name = swalClasses.radio), (radioInput.value = radioValue), params.inputValue.toString() === radioValue.toString() && (radioInput.checked = !0);
                        var label = document.createElement("span");
                        (label.innerHTML = radioLabel), (label.className = swalClasses.label), radioLabelElement.appendChild(radioInput), radioLabelElement.appendChild(label), radio.appendChild(radioLabelElement);
                    });
                    var radios = radio.querySelectorAll("input");
                    radios.length && radios[0].focus();
                },
            },
            formatInputOptions = function (inputOptions) {
                var result = [];
                return (
                    "undefined" != typeof Map && inputOptions instanceof Map
                        ? inputOptions.forEach(function (value, key) {
                              result.push([key, value]);
                          })
                        : Object.keys(inputOptions).forEach(function (key) {
                              result.push([key, inputOptions[key]]);
                          }),
                    result
                );
            },
            handleConfirmWithInput = function (instance, innerParams) {
                var inputValue = (function (instance, innerParams) {
                    var input = instance.getInput();
                    if (!input) return null;
                    switch (innerParams.input) {
                        case "checkbox":
                            return getCheckboxValue(input);
                        case "radio":
                            return getRadioValue(input);
                        case "file":
                            return getFileValue(input);
                        default:
                            return innerParams.inputAutoTrim ? input.value.trim() : input.value;
                    }
                })(instance, innerParams);
                innerParams.inputValidator
                    ? (instance.disableInput(),
                      Promise.resolve()
                          .then(function () {
                              return innerParams.inputValidator(inputValue, innerParams.validationMessage);
                          })
                          .then(function (validationMessage) {
                              instance.enableButtons(), instance.enableInput(), validationMessage ? instance.showValidationMessage(validationMessage) : confirm(instance, innerParams, inputValue);
                          }))
                    : instance.getInput().checkValidity()
                    ? confirm(instance, innerParams, inputValue)
                    : (instance.enableButtons(), instance.showValidationMessage(innerParams.validationMessage));
            },
            succeedWith = function (instance, value) {
                instance.closePopup({ value: value });
            },
            confirm = function (instance, innerParams, value) {
                (innerParams.showLoaderOnConfirm && showLoading(), innerParams.preConfirm)
                    ? (instance.resetValidationMessage(),
                      Promise.resolve()
                          .then(function () {
                              return innerParams.preConfirm(value, innerParams.validationMessage);
                          })
                          .then(function (preConfirmValue) {
                              isVisible(getValidationMessage()) || !1 === preConfirmValue ? instance.hideLoading() : succeedWith(instance, void 0 === preConfirmValue ? value : preConfirmValue);
                          }))
                    : succeedWith(instance, value);
            },
            setFocus = function (innerParams, index, increment) {
                for (var focusableElements = getFocusableElements(), i = 0; i < focusableElements.length; i++)
                    return (index += increment) === focusableElements.length ? (index = 0) : -1 === index && (index = focusableElements.length - 1), focusableElements[index].focus();
                getPopup().focus();
            },
            arrowKeys = ["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown", "Left", "Right", "Up", "Down"],
            escKeys = ["Escape", "Esc"],
            keydownHandler = function (instance, e, innerParams, dismissWith) {
                innerParams.stopKeydownPropagation && e.stopPropagation(),
                    "Enter" === e.key
                        ? handleEnter(instance, e, innerParams)
                        : "Tab" === e.key
                        ? handleTab(e, innerParams)
                        : -1 !== arrowKeys.indexOf(e.key)
                        ? handleArrows()
                        : -1 !== escKeys.indexOf(e.key) && handleEsc(e, innerParams, dismissWith);
            },
            handleEnter = function (instance, e, innerParams) {
                if (!e.isComposing && e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {
                    if (-1 !== ["textarea", "file"].indexOf(innerParams.input)) return;
                    clickConfirm(), e.preventDefault();
                }
            },
            handleTab = function (e, innerParams) {
                for (var targetElement = e.target, focusableElements = getFocusableElements(), btnIndex = -1, i = 0; i < focusableElements.length; i++)
                    if (targetElement === focusableElements[i]) {
                        btnIndex = i;
                        break;
                    }
                e.shiftKey ? setFocus(0, btnIndex, -1) : setFocus(0, btnIndex, 1), e.stopPropagation(), e.preventDefault();
            },
            handleArrows = function () {
                var confirmButton = getConfirmButton(),
                    cancelButton = getCancelButton();
                document.activeElement === confirmButton && isVisible(cancelButton) ? cancelButton.focus() : document.activeElement === cancelButton && isVisible(confirmButton) && confirmButton.focus();
            },
            handleEsc = function (e, innerParams, dismissWith) {
                callIfFunction(innerParams.allowEscapeKey) && (e.preventDefault(), dismissWith(DismissReason.esc));
            },
            handleToastClick = function (domCache, innerParams, dismissWith) {
                domCache.popup.onclick = function () {
                    innerParams.showConfirmButton || innerParams.showCancelButton || innerParams.showCloseButton || innerParams.input || dismissWith(DismissReason.close);
                };
            },
            ignoreOutsideClick = !1,
            handleModalMousedown = function (domCache) {
                domCache.popup.onmousedown = function () {
                    domCache.container.onmouseup = function (e) {
                        (domCache.container.onmouseup = void 0), e.target === domCache.container && (ignoreOutsideClick = !0);
                    };
                };
            },
            handleContainerMousedown = function (domCache) {
                domCache.container.onmousedown = function () {
                    domCache.popup.onmouseup = function (e) {
                        (domCache.popup.onmouseup = void 0), (e.target === domCache.popup || domCache.popup.contains(e.target)) && (ignoreOutsideClick = !0);
                    };
                };
            },
            handleModalClick = function (domCache, innerParams, dismissWith) {
                domCache.container.onclick = function (e) {
                    ignoreOutsideClick ? (ignoreOutsideClick = !1) : e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick) && dismissWith(DismissReason.backdrop);
                };
            };
        var prepareParams = function (userParams) {
                var showClass = _extends({}, defaultParams.showClass, userParams.showClass),
                    hideClass = _extends({}, defaultParams.hideClass, userParams.hideClass),
                    params = _extends({}, defaultParams, userParams);
                return (params.showClass = showClass), (params.hideClass = hideClass), !1 === userParams.animation && ((params.showClass = { popup: "", backdrop: "swal2-backdrop-show swal2-noanimation" }), (params.hideClass = {})), params;
            },
            swalPromise = function (instance, domCache, innerParams) {
                return new Promise(function (resolve) {
                    var params,
                        container,
                        popup,
                        dismissWith = function (dismiss) {
                            instance.closePopup({ dismiss: dismiss });
                        };
                    privateMethods.swalPromiseResolve.set(instance, resolve),
                        setupTimer(globalState, innerParams, dismissWith),
                        (domCache.confirmButton.onclick = function () {
                            return (function (instance, innerParams) {
                                instance.disableButtons(), innerParams.input ? handleConfirmWithInput(instance, innerParams) : confirm(instance, innerParams, !0);
                            })(instance, innerParams);
                        }),
                        (domCache.cancelButton.onclick = function () {
                            return (function (instance, dismissWith) {
                                instance.disableButtons(), dismissWith(DismissReason.cancel);
                            })(instance, dismissWith);
                        }),
                        (domCache.closeButton.onclick = function () {
                            return dismissWith(DismissReason.close);
                        }),
                        (function (domCache, innerParams, dismissWith) {
                            innerParams.toast ? handleToastClick(domCache, innerParams, dismissWith) : (handleModalMousedown(domCache), handleContainerMousedown(domCache), handleModalClick(domCache, innerParams, dismissWith));
                        })(domCache, innerParams, dismissWith),
                        (function (instance, globalState, innerParams, dismissWith) {
                            globalState.keydownTarget &&
                                globalState.keydownHandlerAdded &&
                                (globalState.keydownTarget.removeEventListener("keydown", globalState.keydownHandler, { capture: globalState.keydownListenerCapture }), (globalState.keydownHandlerAdded = !1)),
                                innerParams.toast ||
                                    ((globalState.keydownHandler = function (e) {
                                        return keydownHandler(instance, e, innerParams, dismissWith);
                                    }),
                                    (globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup()),
                                    (globalState.keydownListenerCapture = innerParams.keydownListenerCapture),
                                    globalState.keydownTarget.addEventListener("keydown", globalState.keydownHandler, { capture: globalState.keydownListenerCapture }),
                                    (globalState.keydownHandlerAdded = !0));
                        })(instance, globalState, innerParams, dismissWith),
                        innerParams.toast && (innerParams.input || innerParams.footer || innerParams.showCloseButton) ? addClass(document.body, swalClasses["toast-column"]) : removeClass(document.body, swalClasses["toast-column"]),
                        (function (instance, params) {
                            "select" === params.input || "radio" === params.input
                                ? handleInputOptions(instance, params)
                                : -1 !== ["text", "email", "number", "tel", "textarea"].indexOf(params.input) && isPromise(params.inputValue) && handleInputValue(instance, params);
                        })(instance, innerParams),
                        (params = innerParams),
                        (container = getContainer()),
                        (popup = getPopup()),
                        "function" == typeof params.onBeforeOpen && params.onBeforeOpen(popup),
                        addClasses$1(container, popup, params),
                        setScrollingVisibility(container, popup),
                        isModal() && fixScrollContainer(container, params.scrollbarPadding),
                        isToast() || globalState.previousActiveElement || (globalState.previousActiveElement = document.activeElement),
                        "function" == typeof params.onOpen &&
                            setTimeout(function () {
                                return params.onOpen(popup);
                            }),
                        initFocus(domCache, innerParams),
                        (domCache.container.scrollTop = 0);
                });
            },
            populateDomCache = function (instance) {
                var domCache = {
                    popup: getPopup(),
                    container: getContainer(),
                    content: getContent(),
                    actions: getActions(),
                    confirmButton: getConfirmButton(),
                    cancelButton: getCancelButton(),
                    closeButton: getCloseButton(),
                    validationMessage: getValidationMessage(),
                    progressSteps: getProgressSteps(),
                };
                return privateProps.domCache.set(instance, domCache), domCache;
            },
            setupTimer = function (globalState$$1, innerParams, dismissWith) {
                var timerProgressBar = getTimerProgressBar();
                hide(timerProgressBar),
                    innerParams.timer &&
                        ((globalState$$1.timeout = new Timer(function () {
                            dismissWith("timer"), delete globalState$$1.timeout;
                        }, innerParams.timer)),
                        innerParams.timerProgressBar &&
                            (show(timerProgressBar),
                            setTimeout(function () {
                                animateTimerProgressBar(innerParams.timer);
                            })));
            },
            initFocus = function (domCache, innerParams) {
                if (!innerParams.toast)
                    return callIfFunction(innerParams.allowEnterKey)
                        ? innerParams.focusCancel && isVisible(domCache.cancelButton)
                            ? domCache.cancelButton.focus()
                            : innerParams.focusConfirm && isVisible(domCache.confirmButton)
                            ? domCache.confirmButton.focus()
                            : void setFocus(0, -1, 1)
                        : blurActiveElement();
            },
            blurActiveElement = function () {
                document.activeElement && "function" == typeof document.activeElement.blur && document.activeElement.blur();
            };
        var currentInstance,
            instanceMethods = Object.freeze({
                hideLoading: hideLoading,
                disableLoading: hideLoading,
                getInput: function (instance) {
                    var innerParams = privateProps.innerParams.get(instance || this),
                        domCache = privateProps.domCache.get(instance || this);
                    return domCache ? getInput(domCache.content, innerParams.input) : null;
                },
                close: close,
                closePopup: close,
                closeModal: close,
                closeToast: close,
                enableButtons: function () {
                    setButtonsDisabled(this, ["confirmButton", "cancelButton"], !1);
                },
                disableButtons: function () {
                    setButtonsDisabled(this, ["confirmButton", "cancelButton"], !0);
                },
                enableInput: function () {
                    return setInputDisabled(this.getInput(), !1);
                },
                disableInput: function () {
                    return setInputDisabled(this.getInput(), !0);
                },
                showValidationMessage: function (error) {
                    var domCache = privateProps.domCache.get(this);
                    domCache.validationMessage.innerHTML = error;
                    var popupComputedStyle = window.getComputedStyle(domCache.popup);
                    (domCache.validationMessage.style.marginLeft = "-".concat(popupComputedStyle.getPropertyValue("padding-left"))),
                        (domCache.validationMessage.style.marginRight = "-".concat(popupComputedStyle.getPropertyValue("padding-right"))),
                        show(domCache.validationMessage);
                    var input = this.getInput();
                    input && (input.setAttribute("aria-invalid", !0), input.setAttribute("aria-describedBy", swalClasses["validation-message"]), focusInput(input), addClass(input, swalClasses.inputerror));
                },
                resetValidationMessage: function () {
                    var domCache = privateProps.domCache.get(this);
                    domCache.validationMessage && hide(domCache.validationMessage);
                    var input = this.getInput();
                    input && (input.removeAttribute("aria-invalid"), input.removeAttribute("aria-describedBy"), removeClass(input, swalClasses.inputerror));
                },
                getProgressSteps: function () {
                    return privateProps.domCache.get(this).progressSteps;
                },
                _main: function (userParams) {
                    showWarningsForParams(userParams),
                        getPopup() && globalState.swalCloseEventFinishedCallback && (globalState.swalCloseEventFinishedCallback(), delete globalState.swalCloseEventFinishedCallback),
                        globalState.deferDisposalTimer && (clearTimeout(globalState.deferDisposalTimer), delete globalState.deferDisposalTimer);
                    var innerParams = prepareParams(userParams);
                    setParameters(innerParams), Object.freeze(innerParams), globalState.timeout && (globalState.timeout.stop(), delete globalState.timeout), clearTimeout(globalState.restoreFocusTimeout);
                    var domCache = populateDomCache(this);
                    return render(this, innerParams), privateProps.innerParams.set(this, innerParams), swalPromise(this, domCache, innerParams);
                },
                update: function (params) {
                    var popup = getPopup(),
                        innerParams = privateProps.innerParams.get(this);
                    if (!popup || hasClass(popup, innerParams.hideClass.popup)) return warn("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
                    var validUpdatableParams = {};
                    Object.keys(params).forEach(function (param) {
                        Swal.isUpdatableParameter(param)
                            ? (validUpdatableParams[param] = params[param])
                            : warn('Invalid parameter to update: "'.concat(param, '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js'));
                    });
                    var updatedParams = _extends({}, innerParams, validUpdatableParams);
                    render(this, updatedParams), privateProps.innerParams.set(this, updatedParams), Object.defineProperties(this, { params: { value: _extends({}, this.params, params), writable: !1, enumerable: !0 } });
                },
            });
        function SweetAlert() {
            if ("undefined" != typeof window) {
                "undefined" == typeof Promise &&
                    error("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"),
                    (currentInstance = this);
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                var outerParams = Object.freeze(this.constructor.argsToParams(args));
                Object.defineProperties(this, { params: { value: outerParams, writable: !1, enumerable: !0, configurable: !0 } });
                var promise = this._main(this.params);
                privateProps.promise.set(this, promise);
            }
        }
        (SweetAlert.prototype.then = function (onFulfilled) {
            return privateProps.promise.get(this).then(onFulfilled);
        }),
            (SweetAlert.prototype.finally = function (onFinally) {
                return privateProps.promise.get(this).finally(onFinally);
            }),
            _extends(SweetAlert.prototype, instanceMethods),
            _extends(SweetAlert, staticMethods),
            Object.keys(instanceMethods).forEach(function (key) {
                SweetAlert[key] = function () {
                    var _currentInstance;
                    if (currentInstance) return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);
                };
            }),
            (SweetAlert.DismissReason = DismissReason),
            (SweetAlert.version = "9.5.3");
        var Swal = SweetAlert;
        return (Swal.default = Swal), Swal;
    }),
    void 0 !== this && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2),
    (this.createjs = this.createjs || {}),
    (createjs.extend = function (subclass, superclass) {
        "use strict";
        function o() {
            this.constructor = subclass;
        }
        return (o.prototype = superclass.prototype), (subclass.prototype = new o());
    }),
    (this.createjs = this.createjs || {}),
    (createjs.promote = function (subclass, prefix) {
        "use strict";
        var subP = subclass.prototype,
            supP = (Object.getPrototypeOf && Object.getPrototypeOf(subP)) || subP.__proto__;
        if (supP) for (var n in ((subP[(prefix += "_") + "constructor"] = supP.constructor), supP)) subP.hasOwnProperty(n) && "function" == typeof supP[n] && (subP[prefix + n] = supP[n]);
        return subclass;
    }),
    (this.createjs = this.createjs || {}),
    (createjs.indexOf = function (array, searchElement) {
        "use strict";
        for (var i = 0, l = array.length; i < l; i++) if (searchElement === array[i]) return i;
        return -1;
    }),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function UID() {
            throw "UID cannot be instantiated";
        }
        (UID._nextID = 0),
            (UID.get = function () {
                return UID._nextID++;
            }),
            (createjs.UID = UID);
    })(),
    (this.createjs = this.createjs || {}),
    (createjs.deprecate = function (fallbackMethod, name) {
        "use strict";
        return function () {
            return console && console.warn, fallbackMethod && fallbackMethod.apply(this, arguments);
        };
    }),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Event(type, bubbles, cancelable) {
            (this.type = type),
                (this.target = null),
                (this.currentTarget = null),
                (this.eventPhase = 0),
                (this.bubbles = !!bubbles),
                (this.cancelable = !!cancelable),
                (this.timeStamp = new Date().getTime()),
                (this.defaultPrevented = !1),
                (this.propagationStopped = !1),
                (this.immediatePropagationStopped = !1),
                (this.removed = !1);
        }
        var p = Event.prototype;
        (p.preventDefault = function () {
            this.defaultPrevented = this.cancelable && !0;
        }),
            (p.stopPropagation = function () {
                this.propagationStopped = !0;
            }),
            (p.stopImmediatePropagation = function () {
                this.immediatePropagationStopped = this.propagationStopped = !0;
            }),
            (p.remove = function () {
                this.removed = !0;
            }),
            (p.clone = function () {
                return new Event(this.type, this.bubbles, this.cancelable);
            }),
            (p.set = function (props) {
                for (var n in props) this[n] = props[n];
                return this;
            }),
            (p.toString = function () {
                return "[Event (type=" + this.type + ")]";
            }),
            (createjs.Event = Event);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function EventDispatcher() {
            (this._listeners = null), (this._captureListeners = null);
        }
        var p = EventDispatcher.prototype;
        (EventDispatcher.initialize = function (target) {
            (target.addEventListener = p.addEventListener),
                (target.on = p.on),
                (target.removeEventListener = target.off = p.removeEventListener),
                (target.removeAllEventListeners = p.removeAllEventListeners),
                (target.hasEventListener = p.hasEventListener),
                (target.dispatchEvent = p.dispatchEvent),
                (target._dispatchEvent = p._dispatchEvent),
                (target.willTrigger = p.willTrigger);
        }),
            (p.addEventListener = function (type, listener, useCapture) {
                var listeners,
                    arr = (listeners = useCapture ? (this._captureListeners = this._captureListeners || {}) : (this._listeners = this._listeners || {}))[type];
                return arr && this.removeEventListener(type, listener, useCapture), (arr = listeners[type]) ? arr.push(listener) : (listeners[type] = [listener]), listener;
            }),
            (p.on = function (type, listener, scope, once, data, useCapture) {
                return (
                    listener.handleEvent && ((scope = scope || listener), (listener = listener.handleEvent)),
                    (scope = scope || this),
                    this.addEventListener(
                        type,
                        function (evt) {
                            listener.call(scope, evt, data), once && evt.remove();
                        },
                        useCapture
                    )
                );
            }),
            (p.removeEventListener = function (type, listener, useCapture) {
                var listeners = useCapture ? this._captureListeners : this._listeners;
                if (listeners) {
                    var arr = listeners[type];
                    if (arr)
                        for (var i = 0, l = arr.length; i < l; i++)
                            if (arr[i] == listener) {
                                1 == l ? delete listeners[type] : arr.splice(i, 1);
                                break;
                            }
                }
            }),
            (p.off = p.removeEventListener),
            (p.removeAllEventListeners = function (type) {
                type ? (this._listeners && delete this._listeners[type], this._captureListeners && delete this._captureListeners[type]) : (this._listeners = this._captureListeners = null);
            }),
            (p.dispatchEvent = function (eventObj, bubbles, cancelable) {
                if ("string" == typeof eventObj) {
                    var listeners = this._listeners;
                    if (!(bubbles || (listeners && listeners[eventObj]))) return !0;
                    eventObj = new createjs.Event(eventObj, bubbles, cancelable);
                } else eventObj.target && eventObj.clone && (eventObj = eventObj.clone());
                try {
                    eventObj.target = this;
                } catch (e) {}
                if (eventObj.bubbles && this.parent) {
                    for (var top = this, list = [top]; top.parent; ) list.push((top = top.parent));
                    var i,
                        l = list.length;
                    for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) list[i]._dispatchEvent(eventObj, 1 + (0 == i));
                    for (i = 1; i < l && !eventObj.propagationStopped; i++) list[i]._dispatchEvent(eventObj, 3);
                } else this._dispatchEvent(eventObj, 2);
                return !eventObj.defaultPrevented;
            }),
            (p.hasEventListener = function (type) {
                var listeners = this._listeners,
                    captureListeners = this._captureListeners;
                return !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));
            }),
            (p.willTrigger = function (type) {
                for (var o = this; o; ) {
                    if (o.hasEventListener(type)) return !0;
                    o = o.parent;
                }
                return !1;
            }),
            (p.toString = function () {
                return "[EventDispatcher]";
            }),
            (p._dispatchEvent = function (eventObj, eventPhase) {
                var l,
                    arr,
                    listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;
                if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {
                    try {
                        eventObj.currentTarget = this;
                    } catch (e) {}
                    try {
                        eventObj.eventPhase = 0 | eventPhase;
                    } catch (e) {}
                    (eventObj.removed = !1), (arr = arr.slice());
                    for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {
                        var o = arr[i];
                        o.handleEvent ? o.handleEvent(eventObj) : o(eventObj), eventObj.removed && (this.off(eventObj.type, o, 1 == eventPhase), (eventObj.removed = !1));
                    }
                }
                2 === eventPhase && this._dispatchEvent(eventObj, 2.1);
            }),
            (createjs.EventDispatcher = EventDispatcher);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Ticker() {
            throw "Ticker cannot be instantiated.";
        }
        (Ticker.RAF_SYNCHED = "synched"),
            (Ticker.RAF = "raf"),
            (Ticker.TIMEOUT = "timeout"),
            (Ticker.timingMode = null),
            (Ticker.maxDelta = 0),
            (Ticker.paused = !1),
            (Ticker.removeEventListener = null),
            (Ticker.removeAllEventListeners = null),
            (Ticker.dispatchEvent = null),
            (Ticker.hasEventListener = null),
            (Ticker._listeners = null),
            createjs.EventDispatcher.initialize(Ticker),
            (Ticker._addEventListener = Ticker.addEventListener),
            (Ticker.addEventListener = function () {
                return !Ticker._inited && Ticker.init(), Ticker._addEventListener.apply(Ticker, arguments);
            }),
            (Ticker._inited = !1),
            (Ticker._startTime = 0),
            (Ticker._pausedTime = 0),
            (Ticker._ticks = 0),
            (Ticker._pausedTicks = 0),
            (Ticker._interval = 50),
            (Ticker._lastTime = 0),
            (Ticker._times = null),
            (Ticker._tickTimes = null),
            (Ticker._timerId = null),
            (Ticker._raf = !0),
            (Ticker._setInterval = function (interval) {
                (Ticker._interval = interval), Ticker._inited && Ticker._setupTick();
            }),
            (Ticker.setInterval = createjs.deprecate(Ticker._setInterval, "Ticker.setInterval")),
            (Ticker._getInterval = function () {
                return Ticker._interval;
            }),
            (Ticker.getInterval = createjs.deprecate(Ticker._getInterval, "Ticker.getInterval")),
            (Ticker._setFPS = function (value) {
                Ticker._setInterval(1e3 / value);
            }),
            (Ticker.setFPS = createjs.deprecate(Ticker._setFPS, "Ticker.setFPS")),
            (Ticker._getFPS = function () {
                return 1e3 / Ticker._interval;
            }),
            (Ticker.getFPS = createjs.deprecate(Ticker._getFPS, "Ticker.getFPS"));
        try {
            Object.defineProperties(Ticker, { interval: { get: Ticker._getInterval, set: Ticker._setInterval }, framerate: { get: Ticker._getFPS, set: Ticker._setFPS } });
        } catch (e) {}
        (Ticker.init = function () {
            Ticker._inited || ((Ticker._inited = !0), (Ticker._times = []), (Ticker._tickTimes = []), (Ticker._startTime = Ticker._getTime()), Ticker._times.push((Ticker._lastTime = 0)), (Ticker.interval = Ticker._interval));
        }),
            (Ticker.reset = function () {
                if (Ticker._raf) {
                    var f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;
                    f && f(Ticker._timerId);
                } else clearTimeout(Ticker._timerId);
                Ticker.removeAllEventListeners("tick"), (Ticker._timerId = Ticker._times = Ticker._tickTimes = null), (Ticker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0), (Ticker._inited = !1);
            }),
            (Ticker.getMeasuredTickTime = function (ticks) {
                var ttl = 0,
                    times = Ticker._tickTimes;
                if (!times || times.length < 1) return -1;
                ticks = Math.min(times.length, ticks || 0 | Ticker._getFPS());
                for (var i = 0; i < ticks; i++) ttl += times[i];
                return ttl / ticks;
            }),
            (Ticker.getMeasuredFPS = function (ticks) {
                var times = Ticker._times;
                return !times || times.length < 2 ? -1 : ((ticks = Math.min(times.length - 1, ticks || 0 | Ticker._getFPS())), 1e3 / ((times[0] - times[ticks]) / ticks));
            }),
            (Ticker.getTime = function (runTime) {
                return Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;
            }),
            (Ticker.getEventTime = function (runTime) {
                return Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;
            }),
            (Ticker.getTicks = function (pauseable) {
                return Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);
            }),
            (Ticker._handleSynch = function () {
                (Ticker._timerId = null), Ticker._setupTick(), Ticker._getTime() - Ticker._lastTime >= 0.97 * (Ticker._interval - 1) && Ticker._tick();
            }),
            (Ticker._handleRAF = function () {
                (Ticker._timerId = null), Ticker._setupTick(), Ticker._tick();
            }),
            (Ticker._handleTimeout = function () {
                (Ticker._timerId = null), Ticker._setupTick(), Ticker._tick();
            }),
            (Ticker._setupTick = function () {
                if (null == Ticker._timerId) {
                    var mode = Ticker.timingMode;
                    if (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {
                        var f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
                        if (f) return (Ticker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch)), void (Ticker._raf = !0);
                    }
                    (Ticker._raf = !1), (Ticker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval));
                }
            }),
            (Ticker._tick = function () {
                var paused = Ticker.paused,
                    time = Ticker._getTime(),
                    elapsedTime = time - Ticker._lastTime;
                if (((Ticker._lastTime = time), Ticker._ticks++, paused && (Ticker._pausedTicks++, (Ticker._pausedTime += elapsedTime)), Ticker.hasEventListener("tick"))) {
                    var event = new createjs.Event("tick"),
                        maxDelta = Ticker.maxDelta;
                    (event.delta = maxDelta && elapsedTime > maxDelta ? maxDelta : elapsedTime), (event.paused = paused), (event.time = time), (event.runTime = time - Ticker._pausedTime), Ticker.dispatchEvent(event);
                }
                for (Ticker._tickTimes.unshift(Ticker._getTime() - time); Ticker._tickTimes.length > 100; ) Ticker._tickTimes.pop();
                for (Ticker._times.unshift(time); Ticker._times.length > 100; ) Ticker._times.pop();
            });
        var w = window,
            now = w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;
        (Ticker._getTime = function () {
            return ((now && now.call(w.performance)) || new Date().getTime()) - Ticker._startTime;
        }),
            (createjs.Ticker = Ticker);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function VideoBuffer(video) {
            (this.readyState = video.readyState), (this._video = video), (this._canvas = null), (this._lastTime = -1), this.readyState < 2 && video.addEventListener("canplaythrough", this._videoReady.bind(this));
        }
        var p = VideoBuffer.prototype;
        (p.getImage = function () {
            if (!(this.readyState < 2)) {
                var canvas = this._canvas,
                    video = this._video;
                if (
                    (canvas || (((canvas = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = video.videoWidth), (canvas.height = video.videoHeight)),
                    video.readyState >= 2 && video.currentTime !== this._lastTime)
                ) {
                    var ctx = canvas.getContext("2d");
                    ctx.clearRect(0, 0, canvas.width, canvas.height), ctx.drawImage(video, 0, 0, canvas.width, canvas.height), (this._lastTime = video.currentTime);
                }
                return canvas;
            }
        }),
            (p._videoReady = function () {
                this.readyState = 2;
            }),
            (createjs.VideoBuffer = VideoBuffer);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {
            this.Event_constructor(type, bubbles, cancelable),
                (this.stageX = stageX),
                (this.stageY = stageY),
                (this.rawX = null == rawX ? stageX : rawX),
                (this.rawY = null == rawY ? stageY : rawY),
                (this.nativeEvent = nativeEvent),
                (this.pointerID = pointerID),
                (this.primary = !!primary),
                (this.relatedTarget = relatedTarget);
        }
        var p = createjs.extend(MouseEvent, createjs.Event);
        (p._get_localX = function () {
            return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;
        }),
            (p._get_localY = function () {
                return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;
            }),
            (p._get_isTouch = function () {
                return -1 !== this.pointerID;
            });
        try {
            Object.defineProperties(p, { localX: { get: p._get_localX }, localY: { get: p._get_localY }, isTouch: { get: p._get_isTouch } });
        } catch (e) {}
        (p.clone = function () {
            return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);
        }),
            (p.toString = function () {
                return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]";
            }),
            (createjs.MouseEvent = createjs.promote(MouseEvent, "Event"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Matrix2D(a, b, c, d, tx, ty) {
            this.setValues(a, b, c, d, tx, ty);
        }
        var p = Matrix2D.prototype;
        (Matrix2D.DEG_TO_RAD = Math.PI / 180),
            (Matrix2D.identity = null),
            (p.setValues = function (a, b, c, d, tx, ty) {
                return (this.a = null == a ? 1 : a), (this.b = b || 0), (this.c = c || 0), (this.d = null == d ? 1 : d), (this.tx = tx || 0), (this.ty = ty || 0), this;
            }),
            (p.append = function (a, b, c, d, tx, ty) {
                var a1 = this.a,
                    b1 = this.b,
                    c1 = this.c,
                    d1 = this.d;
                return (
                    (1 == a && 0 == b && 0 == c && 1 == d) || ((this.a = a1 * a + c1 * b), (this.b = b1 * a + d1 * b), (this.c = a1 * c + c1 * d), (this.d = b1 * c + d1 * d)),
                    (this.tx = a1 * tx + c1 * ty + this.tx),
                    (this.ty = b1 * tx + d1 * ty + this.ty),
                    this
                );
            }),
            (p.prepend = function (a, b, c, d, tx, ty) {
                var a1 = this.a,
                    c1 = this.c,
                    tx1 = this.tx;
                return (this.a = a * a1 + c * this.b), (this.b = b * a1 + d * this.b), (this.c = a * c1 + c * this.d), (this.d = b * c1 + d * this.d), (this.tx = a * tx1 + c * this.ty + tx), (this.ty = b * tx1 + d * this.ty + ty), this;
            }),
            (p.appendMatrix = function (matrix) {
                return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);
            }),
            (p.prependMatrix = function (matrix) {
                return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);
            }),
            (p.appendTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {
                if (rotation % 360)
                    var r = rotation * Matrix2D.DEG_TO_RAD,
                        cos = Math.cos(r),
                        sin = Math.sin(r);
                else (cos = 1), (sin = 0);
                return (
                    skewX || skewY
                        ? ((skewX *= Matrix2D.DEG_TO_RAD),
                          (skewY *= Matrix2D.DEG_TO_RAD),
                          this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y),
                          this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0))
                        : this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y),
                    (regX || regY) && ((this.tx -= regX * this.a + regY * this.c), (this.ty -= regX * this.b + regY * this.d)),
                    this
                );
            }),
            (p.prependTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {
                if (rotation % 360)
                    var r = rotation * Matrix2D.DEG_TO_RAD,
                        cos = Math.cos(r),
                        sin = Math.sin(r);
                else (cos = 1), (sin = 0);
                return (
                    (regX || regY) && ((this.tx -= regX), (this.ty -= regY)),
                    skewX || skewY
                        ? ((skewX *= Matrix2D.DEG_TO_RAD),
                          (skewY *= Matrix2D.DEG_TO_RAD),
                          this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0),
                          this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y))
                        : this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y),
                    this
                );
            }),
            (p.rotate = function (angle) {
                angle *= Matrix2D.DEG_TO_RAD;
                var cos = Math.cos(angle),
                    sin = Math.sin(angle),
                    a1 = this.a,
                    b1 = this.b;
                return (this.a = a1 * cos + this.c * sin), (this.b = b1 * cos + this.d * sin), (this.c = -a1 * sin + this.c * cos), (this.d = -b1 * sin + this.d * cos), this;
            }),
            (p.skew = function (skewX, skewY) {
                return (skewX *= Matrix2D.DEG_TO_RAD), (skewY *= Matrix2D.DEG_TO_RAD), this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0), this;
            }),
            (p.scale = function (x, y) {
                return (this.a *= x), (this.b *= x), (this.c *= y), (this.d *= y), this;
            }),
            (p.translate = function (x, y) {
                return (this.tx += this.a * x + this.c * y), (this.ty += this.b * x + this.d * y), this;
            }),
            (p.identity = function () {
                return (this.a = this.d = 1), (this.b = this.c = this.tx = this.ty = 0), this;
            }),
            (p.invert = function () {
                var a1 = this.a,
                    b1 = this.b,
                    c1 = this.c,
                    d1 = this.d,
                    tx1 = this.tx,
                    n = a1 * d1 - b1 * c1;
                return (this.a = d1 / n), (this.b = -b1 / n), (this.c = -c1 / n), (this.d = a1 / n), (this.tx = (c1 * this.ty - d1 * tx1) / n), (this.ty = -(a1 * this.ty - b1 * tx1) / n), this;
            }),
            (p.isIdentity = function () {
                return 0 === this.tx && 0 === this.ty && 1 === this.a && 0 === this.b && 0 === this.c && 1 === this.d;
            }),
            (p.equals = function (matrix) {
                return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;
            }),
            (p.transformPoint = function (x, y, pt) {
                return ((pt = pt || {}).x = x * this.a + y * this.c + this.tx), (pt.y = x * this.b + y * this.d + this.ty), pt;
            }),
            (p.decompose = function (target) {
                null == target && (target = {}), (target.x = this.tx), (target.y = this.ty), (target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b)), (target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d));
                var skewX = Math.atan2(-this.c, this.d),
                    skewY = Math.atan2(this.b, this.a);
                return (
                    Math.abs(1 - skewX / skewY) < 1e-5
                        ? ((target.rotation = skewY / Matrix2D.DEG_TO_RAD), this.a < 0 && this.d >= 0 && (target.rotation += target.rotation <= 0 ? 180 : -180), (target.skewX = target.skewY = 0))
                        : ((target.skewX = skewX / Matrix2D.DEG_TO_RAD), (target.skewY = skewY / Matrix2D.DEG_TO_RAD)),
                    target
                );
            }),
            (p.copy = function (matrix) {
                return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);
            }),
            (p.clone = function () {
                return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);
            }),
            (p.toString = function () {
                return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]";
            }),
            (Matrix2D.identity = new Matrix2D()),
            (createjs.Matrix2D = Matrix2D);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {
            this.setValues(visible, alpha, shadow, compositeOperation, matrix);
        }
        var p = DisplayProps.prototype;
        (p.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {
            return (
                (this.visible = null == visible || !!visible),
                (this.alpha = null == alpha ? 1 : alpha),
                (this.shadow = shadow),
                (this.compositeOperation = compositeOperation),
                (this.matrix = matrix || (this.matrix && this.matrix.identity()) || new createjs.Matrix2D()),
                this
            );
        }),
            (p.append = function (visible, alpha, shadow, compositeOperation, matrix) {
                return (
                    (this.alpha *= alpha),
                    (this.shadow = shadow || this.shadow),
                    (this.compositeOperation = compositeOperation || this.compositeOperation),
                    (this.visible = this.visible && visible),
                    matrix && this.matrix.appendMatrix(matrix),
                    this
                );
            }),
            (p.prepend = function (visible, alpha, shadow, compositeOperation, matrix) {
                return (
                    (this.alpha *= alpha),
                    (this.shadow = this.shadow || shadow),
                    (this.compositeOperation = this.compositeOperation || compositeOperation),
                    (this.visible = this.visible && visible),
                    matrix && this.matrix.prependMatrix(matrix),
                    this
                );
            }),
            (p.identity = function () {
                return (this.visible = !0), (this.alpha = 1), (this.shadow = this.compositeOperation = null), this.matrix.identity(), this;
            }),
            (p.clone = function () {
                return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());
            }),
            (createjs.DisplayProps = DisplayProps);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Point(x, y) {
            this.setValues(x, y);
        }
        var p = Point.prototype;
        (p.setValues = function (x, y) {
            return (this.x = x || 0), (this.y = y || 0), this;
        }),
            (p.copy = function (point) {
                return (this.x = point.x), (this.y = point.y), this;
            }),
            (p.clone = function () {
                return new Point(this.x, this.y);
            }),
            (p.toString = function () {
                return "[Point (x=" + this.x + " y=" + this.y + ")]";
            }),
            (createjs.Point = Point);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Rectangle(x, y, width, height) {
            this.setValues(x, y, width, height);
        }
        var p = Rectangle.prototype;
        (p.setValues = function (x, y, width, height) {
            return (this.x = x || 0), (this.y = y || 0), (this.width = width || 0), (this.height = height || 0), this;
        }),
            (p.extend = function (x, y, width, height) {
                return (
                    (width = width || 0),
                    (height = height || 0),
                    x + width > this.x + this.width && (this.width = x + width - this.x),
                    y + height > this.y + this.height && (this.height = y + height - this.y),
                    x < this.x && ((this.width += this.x - x), (this.x = x)),
                    y < this.y && ((this.height += this.y - y), (this.y = y)),
                    this
                );
            }),
            (p.pad = function (top, left, bottom, right) {
                return (this.x -= left), (this.y -= top), (this.width += left + right), (this.height += top + bottom), this;
            }),
            (p.copy = function (rectangle) {
                return this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
            }),
            (p.contains = function (x, y, width, height) {
                return (width = width || 0), (height = height || 0), x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;
            }),
            (p.union = function (rect) {
                return this.clone().extend(rect.x, rect.y, rect.width, rect.height);
            }),
            (p.intersection = function (rect) {
                var x1 = rect.x,
                    y1 = rect.y,
                    x2 = x1 + rect.width,
                    y2 = y1 + rect.height;
                return (
                    this.x > x1 && (x1 = this.x),
                    this.y > y1 && (y1 = this.y),
                    this.x + this.width < x2 && (x2 = this.x + this.width),
                    this.y + this.height < y2 && (y2 = this.y + this.height),
                    x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1)
                );
            }),
            (p.intersects = function (rect) {
                return rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;
            }),
            (p.isEmpty = function () {
                return this.width <= 0 || this.height <= 0;
            }),
            (p.clone = function () {
                return new Rectangle(this.x, this.y, this.width, this.height);
            }),
            (p.toString = function () {
                return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]";
            }),
            (createjs.Rectangle = Rectangle);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {
            target.addEventListener &&
                ((this.target = target),
                (this.overLabel = null == overLabel ? "over" : overLabel),
                (this.outLabel = null == outLabel ? "out" : outLabel),
                (this.downLabel = null == downLabel ? "down" : downLabel),
                (this.play = play),
                (this._isPressed = !1),
                (this._isOver = !1),
                (this._enabled = !1),
                (target.mouseChildren = !1),
                (this.enabled = !0),
                this.handleEvent({}),
                hitArea && (hitLabel && ((hitArea.actionsEnabled = !1), hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel)), (target.hitArea = hitArea)));
        }
        var p = ButtonHelper.prototype;
        (p._setEnabled = function (value) {
            if (value != this._enabled) {
                var o = this.target;
                (this._enabled = value),
                    value
                        ? ((o.cursor = "pointer"),
                          o.addEventListener("rollover", this),
                          o.addEventListener("rollout", this),
                          o.addEventListener("mousedown", this),
                          o.addEventListener("pressup", this),
                          o._reset && ((o.__reset = o._reset), (o._reset = this._reset)))
                        : ((o.cursor = null),
                          o.removeEventListener("rollover", this),
                          o.removeEventListener("rollout", this),
                          o.removeEventListener("mousedown", this),
                          o.removeEventListener("pressup", this),
                          o.__reset && ((o._reset = o.__reset), delete o.__reset));
            }
        }),
            (p.setEnabled = createjs.deprecate(p._setEnabled, "ButtonHelper.setEnabled")),
            (p._getEnabled = function () {
                return this._enabled;
            }),
            (p.getEnabled = createjs.deprecate(p._getEnabled, "ButtonHelper.getEnabled"));
        try {
            Object.defineProperties(p, { enabled: { get: p._getEnabled, set: p._setEnabled } });
        } catch (e) {}
        (p.toString = function () {
            return "[ButtonHelper]";
        }),
            (p.handleEvent = function (evt) {
                var label,
                    t = this.target,
                    type = evt.type;
                "mousedown" == type
                    ? ((this._isPressed = !0), (label = this.downLabel))
                    : "pressup" == type
                    ? ((this._isPressed = !1), (label = this._isOver ? this.overLabel : this.outLabel))
                    : "rollover" == type
                    ? ((this._isOver = !0), (label = this._isPressed ? this.downLabel : this.overLabel))
                    : ((this._isOver = !1), (label = this._isPressed ? this.overLabel : this.outLabel)),
                    this.play ? t.gotoAndPlay && t.gotoAndPlay(label) : t.gotoAndStop && t.gotoAndStop(label);
            }),
            (p._reset = function () {
                var p = this.paused;
                this.__reset(), (this.paused = p);
            }),
            (createjs.ButtonHelper = ButtonHelper);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Shadow(color, offsetX, offsetY, blur) {
            (this.color = color || "black"), (this.offsetX = offsetX || 0), (this.offsetY = offsetY || 0), (this.blur = blur || 0);
        }
        var p = Shadow.prototype;
        (Shadow.identity = new Shadow("transparent", 0, 0, 0)),
            (p.toString = function () {
                return "[Shadow]";
            }),
            (p.clone = function () {
                return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);
            }),
            (createjs.Shadow = Shadow);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SpriteSheet(data) {
            this.EventDispatcher_constructor(),
                (this.complete = !0),
                (this.framerate = 0),
                (this._animations = null),
                (this._frames = null),
                (this._images = null),
                (this._data = null),
                (this._loadCount = 0),
                (this._frameHeight = 0),
                (this._frameWidth = 0),
                (this._numFrames = 0),
                (this._regX = 0),
                (this._regY = 0),
                (this._spacing = 0),
                (this._margin = 0),
                this._parseData(data);
        }
        var p = createjs.extend(SpriteSheet, createjs.EventDispatcher);
        (p._getAnimations = function () {
            return this._animations.slice();
        }),
            (p.getAnimations = createjs.deprecate(p._getAnimations, "SpriteSheet.getAnimations"));
        try {
            Object.defineProperties(p, { animations: { get: p._getAnimations } });
        } catch (e) {}
        (p.getNumFrames = function (animation) {
            if (null == animation) return this._frames ? this._frames.length : this._numFrames || 0;
            var data = this._data[animation];
            return null == data ? 0 : data.frames.length;
        }),
            (p.getAnimation = function (name) {
                return this._data[name];
            }),
            (p.getFrame = function (frameIndex) {
                var frame;
                return this._frames && (frame = this._frames[frameIndex]) ? frame : null;
            }),
            (p.getFrameBounds = function (frameIndex, rectangle) {
                var frame = this.getFrame(frameIndex);
                return frame ? (rectangle || new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;
            }),
            (p.toString = function () {
                return "[SpriteSheet]";
            }),
            (p.clone = function () {
                throw "SpriteSheet cannot be cloned.";
            }),
            (p._parseData = function (data) {
                var i, l, o, a;
                if (null != data) {
                    if (((this.framerate = data.framerate || 0), data.images && (l = data.images.length) > 0))
                        for (a = this._images = [], i = 0; i < l; i++) {
                            var img = data.images[i];
                            if ("string" == typeof img) {
                                var src = img;
                                (img = document.createElement("img")).src = src;
                            }
                            a.push(img),
                                img.getContext ||
                                    img.naturalWidth ||
                                    (this._loadCount++,
                                    (this.complete = !1),
                                    (function (o, src) {
                                        img.onload = function () {
                                            o._handleImageLoad(src);
                                        };
                                    })(this, src),
                                    (function (o, src) {
                                        img.onerror = function () {
                                            o._handleImageError(src);
                                        };
                                    })(this, src));
                        }
                    if (null == data.frames);
                    else if (Array.isArray(data.frames))
                        for (this._frames = [], i = 0, l = (a = data.frames).length; i < l; i++) {
                            var arr = a[i];
                            this._frames.push({ image: this._images[arr[4] ? arr[4] : 0], rect: new createjs.Rectangle(arr[0], arr[1], arr[2], arr[3]), regX: arr[5] || 0, regY: arr[6] || 0 });
                        }
                    else
                        (o = data.frames),
                            (this._frameWidth = o.width),
                            (this._frameHeight = o.height),
                            (this._regX = o.regX || 0),
                            (this._regY = o.regY || 0),
                            (this._spacing = o.spacing || 0),
                            (this._margin = o.margin || 0),
                            (this._numFrames = o.count),
                            0 == this._loadCount && this._calculateFrames();
                    var name;
                    if (((this._animations = []), null != (o = data.animations)))
                        for (name in ((this._data = {}), o)) {
                            var anim = { name: name },
                                obj = o[name];
                            if ("number" == typeof obj) a = anim.frames = [obj];
                            else if (Array.isArray(obj))
                                if (1 == obj.length) anim.frames = [obj[0]];
                                else for (anim.speed = obj[3], anim.next = obj[2], a = anim.frames = [], i = obj[0]; i <= obj[1]; i++) a.push(i);
                            else {
                                (anim.speed = obj.speed), (anim.next = obj.next);
                                var frames = obj.frames;
                                a = anim.frames = "number" == typeof frames ? [frames] : frames.slice(0);
                            }
                            (!0 !== anim.next && void 0 !== anim.next) || (anim.next = name),
                                (!1 === anim.next || (a.length < 2 && anim.next == name)) && (anim.next = null),
                                anim.speed || (anim.speed = 1),
                                this._animations.push(name),
                                (this._data[name] = anim);
                        }
                }
            }),
            (p._handleImageLoad = function (src) {
                0 == --this._loadCount && (this._calculateFrames(), (this.complete = !0), this.dispatchEvent("complete"));
            }),
            (p._handleImageError = function (src) {
                var errorEvent = new createjs.Event("error");
                (errorEvent.src = src), this.dispatchEvent(errorEvent), 0 == --this._loadCount && this.dispatchEvent("complete");
            }),
            (p._calculateFrames = function () {
                if (!this._frames && 0 != this._frameWidth) {
                    this._frames = [];
                    var maxFrames = this._numFrames || 1e5,
                        frameCount = 0,
                        frameWidth = this._frameWidth,
                        frameHeight = this._frameHeight,
                        spacing = this._spacing,
                        margin = this._margin;
                    imgLoop: for (var i = 0, imgs = this._images; i < imgs.length; i++)
                        for (var img = imgs[i], imgW = img.width || img.naturalWidth, imgH = img.height || img.naturalHeight, y = margin; y <= imgH - margin - frameHeight; ) {
                            for (var x = margin; x <= imgW - margin - frameWidth; ) {
                                if (frameCount >= maxFrames) break imgLoop;
                                frameCount++, this._frames.push({ image: img, rect: new createjs.Rectangle(x, y, frameWidth, frameHeight), regX: this._regX, regY: this._regY }), (x += frameWidth + spacing);
                            }
                            y += frameHeight + spacing;
                        }
                    this._numFrames = frameCount;
                }
            }),
            (createjs.SpriteSheet = createjs.promote(SpriteSheet, "EventDispatcher"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Graphics() {
            (this.command = null),
                (this._stroke = null),
                (this._strokeStyle = null),
                (this._oldStrokeStyle = null),
                (this._strokeDash = null),
                (this._oldStrokeDash = null),
                (this._strokeIgnoreScale = !1),
                (this._fill = null),
                (this._instructions = []),
                (this._commitIndex = 0),
                (this._activeInstructions = []),
                (this._dirty = !1),
                (this._storeIndex = 0),
                this.clear();
        }
        var p = Graphics.prototype,
            G = Graphics;
        (Graphics.getRGB = function (r, g, b, alpha) {
            return null != r && null == b && ((alpha = g), (b = 255 & r), (g = (r >> 8) & 255), (r = (r >> 16) & 255)), null == alpha ? "rgb(" + r + "," + g + "," + b + ")" : "rgba(" + r + "," + g + "," + b + "," + alpha + ")";
        }),
            (Graphics.getHSL = function (hue, saturation, lightness, alpha) {
                return null == alpha ? "hsl(" + (hue % 360) + "," + saturation + "%," + lightness + "%)" : "hsla(" + (hue % 360) + "," + saturation + "%," + lightness + "%," + alpha + ")";
            }),
            (Graphics.BASE_64 = {
                A: 0,
                B: 1,
                C: 2,
                D: 3,
                E: 4,
                F: 5,
                G: 6,
                H: 7,
                I: 8,
                J: 9,
                K: 10,
                L: 11,
                M: 12,
                N: 13,
                O: 14,
                P: 15,
                Q: 16,
                R: 17,
                S: 18,
                T: 19,
                U: 20,
                V: 21,
                W: 22,
                X: 23,
                Y: 24,
                Z: 25,
                a: 26,
                b: 27,
                c: 28,
                d: 29,
                e: 30,
                f: 31,
                g: 32,
                h: 33,
                i: 34,
                j: 35,
                k: 36,
                l: 37,
                m: 38,
                n: 39,
                o: 40,
                p: 41,
                q: 42,
                r: 43,
                s: 44,
                t: 45,
                u: 46,
                v: 47,
                w: 48,
                x: 49,
                y: 50,
                z: 51,
                0: 52,
                1: 53,
                2: 54,
                3: 55,
                4: 56,
                5: 57,
                6: 58,
                7: 59,
                8: 60,
                9: 61,
                "+": 62,
                "/": 63,
            }),
            (Graphics.STROKE_CAPS_MAP = ["butt", "round", "square"]),
            (Graphics.STROKE_JOINTS_MAP = ["miter", "round", "bevel"]);
        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
        canvas.getContext && ((Graphics._ctx = canvas.getContext("2d")), (canvas.width = canvas.height = 1)),
            (p._getInstructions = function () {
                return this._updateInstructions(), this._instructions;
            }),
            (p.getInstructions = createjs.deprecate(p._getInstructions, "Graphics.getInstructions"));
        try {
            Object.defineProperties(p, { instructions: { get: p._getInstructions } });
        } catch (e) {}
        (p.isEmpty = function () {
            return !(this._instructions.length || this._activeInstructions.length);
        }),
            (p.draw = function (ctx, data) {
                this._updateInstructions();
                for (var instr = this._instructions, i = this._storeIndex, l = instr.length; i < l; i++) instr[i].exec(ctx, data);
            }),
            (p.drawAsPath = function (ctx) {
                this._updateInstructions();
                for (var instr, instrs = this._instructions, i = this._storeIndex, l = instrs.length; i < l; i++) !1 !== (instr = instrs[i]).path && instr.exec(ctx);
            }),
            (p.moveTo = function (x, y) {
                return this.append(new G.MoveTo(x, y), !0);
            }),
            (p.lineTo = function (x, y) {
                return this.append(new G.LineTo(x, y));
            }),
            (p.arcTo = function (x1, y1, x2, y2, radius) {
                return this.append(new G.ArcTo(x1, y1, x2, y2, radius));
            }),
            (p.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {
                return this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));
            }),
            (p.quadraticCurveTo = function (cpx, cpy, x, y) {
                return this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));
            }),
            (p.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {
                return this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));
            }),
            (p.rect = function (x, y, w, h) {
                return this.append(new G.Rect(x, y, w, h));
            }),
            (p.closePath = function () {
                return this._activeInstructions.length ? this.append(new G.ClosePath()) : this;
            }),
            (p.clear = function () {
                return (
                    (this._instructions.length = this._activeInstructions.length = this._commitIndex = 0),
                    (this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null),
                    (this._dirty = this._strokeIgnoreScale = !1),
                    this
                );
            }),
            (p.beginFill = function (color) {
                return this._setFill(color ? new G.Fill(color) : null);
            }),
            (p.beginLinearGradientFill = function (colors, ratios, x0, y0, x1, y1) {
                return this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));
            }),
            (p.beginRadialGradientFill = function (colors, ratios, x0, y0, r0, x1, y1, r1) {
                return this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));
            }),
            (p.beginBitmapFill = function (image, repetition, matrix) {
                return this._setFill(new G.Fill(null, matrix).bitmap(image, repetition));
            }),
            (p.endFill = function () {
                return this.beginFill();
            }),
            (p.setStrokeStyle = function (thickness, caps, joints, miterLimit, ignoreScale) {
                return (
                    this._updateInstructions(!0),
                    (this._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale)),
                    this._stroke && (this._stroke.ignoreScale = ignoreScale),
                    (this._strokeIgnoreScale = ignoreScale),
                    this
                );
            }),
            (p.setStrokeDash = function (segments, offset) {
                return this._updateInstructions(!0), (this._strokeDash = this.command = new G.StrokeDash(segments, offset)), this;
            }),
            (p.beginStroke = function (color) {
                return this._setStroke(color ? new G.Stroke(color) : null);
            }),
            (p.beginLinearGradientStroke = function (colors, ratios, x0, y0, x1, y1) {
                return this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));
            }),
            (p.beginRadialGradientStroke = function (colors, ratios, x0, y0, r0, x1, y1, r1) {
                return this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));
            }),
            (p.beginBitmapStroke = function (image, repetition) {
                return this._setStroke(new G.Stroke().bitmap(image, repetition));
            }),
            (p.endStroke = function () {
                return this.beginStroke();
            }),
            (p.curveTo = p.quadraticCurveTo),
            (p.drawRect = p.rect),
            (p.drawRoundRect = function (x, y, w, h, radius) {
                return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);
            }),
            (p.drawRoundRectComplex = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {
                return this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));
            }),
            (p.drawCircle = function (x, y, radius) {
                return this.append(new G.Circle(x, y, radius));
            }),
            (p.drawEllipse = function (x, y, w, h) {
                return this.append(new G.Ellipse(x, y, w, h));
            }),
            (p.drawPolyStar = function (x, y, radius, sides, pointSize, angle) {
                return this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));
            }),
            (p.append = function (command, clean) {
                return this._activeInstructions.push(command), (this.command = command), clean || (this._dirty = !0), this;
            }),
            (p.decodePath = function (str) {
                for (
                    var instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath], paramCount = [2, 2, 4, 6, 0], i = 0, l = str.length, params = [], x = 0, y = 0, base64 = Graphics.BASE_64;
                    i < l;

                ) {
                    var c = str.charAt(i),
                        n = base64[c],
                        fi = n >> 3,
                        f = instructions[fi];
                    if (!f || 3 & n) throw "bad path data (@" + i + "): " + c;
                    var pl = paramCount[fi];
                    fi || (x = y = 0), (params.length = 0), i++;
                    for (var charCount = 2 + ((n >> 2) & 1), p = 0; p < pl; p++) {
                        var num = base64[str.charAt(i)],
                            sign = num >> 5 ? -1 : 1;
                        (num = ((31 & num) << 6) | base64[str.charAt(i + 1)]),
                            3 == charCount && (num = (num << 6) | base64[str.charAt(i + 2)]),
                            (num = (sign * num) / 10),
                            p % 2 ? (x = num += x) : (y = num += y),
                            (params[p] = num),
                            (i += charCount);
                    }
                    f.apply(this, params);
                }
                return this;
            }),
            (p.store = function () {
                return this._updateInstructions(!0), (this._storeIndex = this._instructions.length), this;
            }),
            (p.unstore = function () {
                return (this._storeIndex = 0), this;
            }),
            (p.clone = function () {
                var o = new Graphics();
                return (
                    (o.command = this.command),
                    (o._stroke = this._stroke),
                    (o._strokeStyle = this._strokeStyle),
                    (o._strokeDash = this._strokeDash),
                    (o._strokeIgnoreScale = this._strokeIgnoreScale),
                    (o._fill = this._fill),
                    (o._instructions = this._instructions.slice()),
                    (o._commitIndex = this._commitIndex),
                    (o._activeInstructions = this._activeInstructions.slice()),
                    (o._dirty = this._dirty),
                    (o._storeIndex = this._storeIndex),
                    o
                );
            }),
            (p.toString = function () {
                return "[Graphics]";
            }),
            (p.mt = p.moveTo),
            (p.lt = p.lineTo),
            (p.at = p.arcTo),
            (p.bt = p.bezierCurveTo),
            (p.qt = p.quadraticCurveTo),
            (p.a = p.arc),
            (p.r = p.rect),
            (p.cp = p.closePath),
            (p.c = p.clear),
            (p.f = p.beginFill),
            (p.lf = p.beginLinearGradientFill),
            (p.rf = p.beginRadialGradientFill),
            (p.bf = p.beginBitmapFill),
            (p.ef = p.endFill),
            (p.ss = p.setStrokeStyle),
            (p.sd = p.setStrokeDash),
            (p.s = p.beginStroke),
            (p.ls = p.beginLinearGradientStroke),
            (p.rs = p.beginRadialGradientStroke),
            (p.bs = p.beginBitmapStroke),
            (p.es = p.endStroke),
            (p.dr = p.drawRect),
            (p.rr = p.drawRoundRect),
            (p.rc = p.drawRoundRectComplex),
            (p.dc = p.drawCircle),
            (p.de = p.drawEllipse),
            (p.dp = p.drawPolyStar),
            (p.p = p.decodePath),
            (p._updateInstructions = function (commit) {
                var instr = this._instructions,
                    active = this._activeInstructions,
                    commitIndex = this._commitIndex;
                if (this._dirty && active.length) {
                    (instr.length = commitIndex), instr.push(Graphics.beginCmd);
                    var l = active.length,
                        ll = instr.length;
                    instr.length = ll + l;
                    for (var i = 0; i < l; i++) instr[i + ll] = active[i];
                    this._fill && instr.push(this._fill),
                        this._stroke &&
                            (this._strokeDash !== this._oldStrokeDash && instr.push(this._strokeDash),
                            this._strokeStyle !== this._oldStrokeStyle && instr.push(this._strokeStyle),
                            commit && ((this._oldStrokeStyle = this._strokeStyle), (this._oldStrokeDash = this._strokeDash)),
                            instr.push(this._stroke)),
                        (this._dirty = !1);
                }
                commit && ((active.length = 0), (this._commitIndex = instr.length));
            }),
            (p._setFill = function (fill) {
                return this._updateInstructions(!0), (this.command = this._fill = fill), this;
            }),
            (p._setStroke = function (stroke) {
                return this._updateInstructions(!0), (this.command = this._stroke = stroke) && (stroke.ignoreScale = this._strokeIgnoreScale), this;
            }),
            ((G.LineTo = function (x, y) {
                (this.x = x), (this.y = y);
            }).prototype.exec = function (ctx) {
                ctx.lineTo(this.x, this.y);
            }),
            ((G.MoveTo = function (x, y) {
                (this.x = x), (this.y = y);
            }).prototype.exec = function (ctx) {
                ctx.moveTo(this.x, this.y);
            }),
            ((G.ArcTo = function (x1, y1, x2, y2, radius) {
                (this.x1 = x1), (this.y1 = y1), (this.x2 = x2), (this.y2 = y2), (this.radius = radius);
            }).prototype.exec = function (ctx) {
                ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);
            }),
            ((G.Arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {
                (this.x = x), (this.y = y), (this.radius = radius), (this.startAngle = startAngle), (this.endAngle = endAngle), (this.anticlockwise = !!anticlockwise);
            }).prototype.exec = function (ctx) {
                ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);
            }),
            ((G.QuadraticCurveTo = function (cpx, cpy, x, y) {
                (this.cpx = cpx), (this.cpy = cpy), (this.x = x), (this.y = y);
            }).prototype.exec = function (ctx) {
                ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);
            }),
            ((G.BezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {
                (this.cp1x = cp1x), (this.cp1y = cp1y), (this.cp2x = cp2x), (this.cp2y = cp2y), (this.x = x), (this.y = y);
            }).prototype.exec = function (ctx) {
                ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);
            }),
            ((G.Rect = function (x, y, w, h) {
                (this.x = x), (this.y = y), (this.w = w), (this.h = h);
            }).prototype.exec = function (ctx) {
                ctx.rect(this.x, this.y, this.w, this.h);
            }),
            ((G.ClosePath = function () {}).prototype.exec = function (ctx) {
                ctx.closePath();
            }),
            ((G.BeginPath = function () {}).prototype.exec = function (ctx) {
                ctx.beginPath();
            }),
            ((p = (G.Fill = function (style, matrix) {
                (this.style = style), (this.matrix = matrix);
            }).prototype).exec = function (ctx) {
                if (this.style) {
                    ctx.fillStyle = this.style;
                    var mtx = this.matrix;
                    mtx && (ctx.save(), ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty)), ctx.fill(), mtx && ctx.restore();
                }
            }),
            (p.linearGradient = function (colors, ratios, x0, y0, x1, y1) {
                for (var o = (this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1)), i = 0, l = colors.length; i < l; i++) o.addColorStop(ratios[i], colors[i]);
                return (o.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, x1: x1, y1: y1, type: "linear" }), this;
            }),
            (p.radialGradient = function (colors, ratios, x0, y0, r0, x1, y1, r1) {
                for (var o = (this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1)), i = 0, l = colors.length; i < l; i++) o.addColorStop(ratios[i], colors[i]);
                return (o.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, r0: r0, x1: x1, y1: y1, r1: r1, type: "radial" }), this;
            }),
            (p.bitmap = function (image, repetition) {
                (image.naturalWidth || image.getContext || image.readyState >= 2) && ((this.style = Graphics._ctx.createPattern(image, repetition || "")).props = { image: image, repetition: repetition, type: "bitmap" });
                return this;
            }),
            (p.path = !1),
            ((p = (G.Stroke = function (style, ignoreScale) {
                (this.style = style), (this.ignoreScale = ignoreScale);
            }).prototype).exec = function (ctx) {
                this.style && ((ctx.strokeStyle = this.style), this.ignoreScale && (ctx.save(), ctx.setTransform(1, 0, 0, 1, 0, 0)), ctx.stroke(), this.ignoreScale && ctx.restore());
            }),
            (p.linearGradient = G.Fill.prototype.linearGradient),
            (p.radialGradient = G.Fill.prototype.radialGradient),
            (p.bitmap = G.Fill.prototype.bitmap),
            (p.path = !1),
            ((p = (G.StrokeStyle = function (width, caps, joints, miterLimit, ignoreScale) {
                (this.width = width), (this.caps = caps), (this.joints = joints), (this.miterLimit = miterLimit), (this.ignoreScale = ignoreScale);
            }).prototype).exec = function (ctx) {
                (ctx.lineWidth = null == this.width ? "1" : this.width),
                    (ctx.lineCap = null == this.caps ? "butt" : isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]),
                    (ctx.lineJoin = null == this.joints ? "miter" : isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]),
                    (ctx.miterLimit = null == this.miterLimit ? "10" : this.miterLimit),
                    (ctx.ignoreScale = null != this.ignoreScale && this.ignoreScale);
            }),
            (p.path = !1),
            ((G.StrokeDash = function (segments, offset) {
                (this.segments = segments), (this.offset = offset || 0);
            }).prototype.exec = function (ctx) {
                ctx.setLineDash && (ctx.setLineDash(this.segments || G.StrokeDash.EMPTY_SEGMENTS), (ctx.lineDashOffset = this.offset || 0));
            }),
            (G.StrokeDash.EMPTY_SEGMENTS = []),
            ((G.RoundRect = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {
                (this.x = x), (this.y = y), (this.w = w), (this.h = h), (this.radiusTL = radiusTL), (this.radiusTR = radiusTR), (this.radiusBR = radiusBR), (this.radiusBL = radiusBL);
            }).prototype.exec = function (ctx) {
                var max = (w < h ? w : h) / 2,
                    mTL = 0,
                    mTR = 0,
                    mBR = 0,
                    mBL = 0,
                    x = this.x,
                    y = this.y,
                    w = this.w,
                    h = this.h,
                    rTL = this.radiusTL,
                    rTR = this.radiusTR,
                    rBR = this.radiusBR,
                    rBL = this.radiusBL;
                rTL < 0 && (rTL *= mTL = -1),
                    rTL > max && (rTL = max),
                    rTR < 0 && (rTR *= mTR = -1),
                    rTR > max && (rTR = max),
                    rBR < 0 && (rBR *= mBR = -1),
                    rBR > max && (rBR = max),
                    rBL < 0 && (rBL *= mBL = -1),
                    rBL > max && (rBL = max),
                    ctx.moveTo(x + w - rTR, y),
                    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR),
                    ctx.lineTo(x + w, y + h - rBR),
                    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR),
                    ctx.lineTo(x + rBL, y + h),
                    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL),
                    ctx.lineTo(x, y + rTL),
                    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL),
                    ctx.closePath();
            }),
            ((G.Circle = function (x, y, radius) {
                (this.x = x), (this.y = y), (this.radius = radius);
            }).prototype.exec = function (ctx) {
                ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);
            }),
            ((G.Ellipse = function (x, y, w, h) {
                (this.x = x), (this.y = y), (this.w = w), (this.h = h);
            }).prototype.exec = function (ctx) {
                var x = this.x,
                    y = this.y,
                    w = this.w,
                    h = this.h,
                    k = 0.5522848,
                    ox = (w / 2) * k,
                    oy = (h / 2) * k,
                    xe = x + w,
                    ye = y + h,
                    xm = x + w / 2,
                    ym = y + h / 2;
                ctx.moveTo(x, ym), ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y), ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym), ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye), ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
            }),
            ((G.PolyStar = function (x, y, radius, sides, pointSize, angle) {
                (this.x = x), (this.y = y), (this.radius = radius), (this.sides = sides), (this.pointSize = pointSize), (this.angle = angle);
            }).prototype.exec = function (ctx) {
                var x = this.x,
                    y = this.y,
                    radius = this.radius,
                    angle = ((this.angle || 0) / 180) * Math.PI,
                    sides = this.sides,
                    ps = 1 - (this.pointSize || 0),
                    a = Math.PI / sides;
                ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);
                for (var i = 0; i < sides; i++) (angle += a), 1 != ps && ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps), (angle += a), ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);
                ctx.closePath();
            }),
            (Graphics.beginCmd = new G.BeginPath()),
            (createjs.Graphics = Graphics);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function DisplayObject() {
            this.EventDispatcher_constructor(),
                (this.alpha = 1),
                (this.cacheCanvas = null),
                (this.bitmapCache = null),
                (this.id = createjs.UID.get()),
                (this.mouseEnabled = !0),
                (this.tickEnabled = !0),
                (this.name = null),
                (this.parent = null),
                (this.regX = 0),
                (this.regY = 0),
                (this.rotation = 0),
                (this.scaleX = 1),
                (this.scaleY = 1),
                (this.skewX = 0),
                (this.skewY = 0),
                (this.shadow = null),
                (this.visible = !0),
                (this.x = 0),
                (this.y = 0),
                (this.transformMatrix = null),
                (this.compositeOperation = null),
                (this.snapToPixel = !0),
                (this.filters = null),
                (this.mask = null),
                (this.hitArea = null),
                (this.cursor = null),
                (this._props = new createjs.DisplayProps()),
                (this._rectangle = new createjs.Rectangle()),
                (this._bounds = null),
                (this._webGLRenderStyle = DisplayObject._StageGL_NONE);
        }
        var p = createjs.extend(DisplayObject, createjs.EventDispatcher);
        (DisplayObject._MOUSE_EVENTS = ["click", "dblclick", "mousedown", "mouseout", "mouseover", "pressmove", "pressup", "rollout", "rollover"]),
            (DisplayObject.suppressCrossDomainErrors = !1),
            (DisplayObject._snapToPixelEnabled = !1),
            (DisplayObject._StageGL_NONE = 0),
            (DisplayObject._StageGL_SPRITE = 1),
            (DisplayObject._StageGL_BITMAP = 2);
        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
        canvas.getContext && ((DisplayObject._hitTestCanvas = canvas), (DisplayObject._hitTestContext = canvas.getContext("2d")), (canvas.width = canvas.height = 1)),
            (p._getStage = function () {
                for (var o = this, _Stage = createjs.Stage; o.parent; ) o = o.parent;
                return o instanceof _Stage ? o : null;
            }),
            (p.getStage = createjs.deprecate(p._getStage, "DisplayObject.getStage"));
        try {
            Object.defineProperties(p, {
                stage: { get: p._getStage },
                cacheID: {
                    get: function () {
                        return this.bitmapCache && this.bitmapCache.cacheID;
                    },
                    set: function (a) {
                        this.bitmapCache && (this.bitmapCache.cacheID = a);
                    },
                },
                scale: {
                    get: function () {
                        return this.scaleX;
                    },
                    set: function (scale) {
                        this.scaleX = this.scaleY = scale;
                    },
                },
            });
        } catch (e) {}
        (p.isVisible = function () {
            return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY);
        }),
            (p.draw = function (ctx, ignoreCache) {
                var cache = this.bitmapCache;
                return !(!cache || ignoreCache) && cache.draw(ctx);
            }),
            (p.updateContext = function (ctx) {
                var o = this,
                    mask = o.mask,
                    mtx = o._props.matrix;
                mask &&
                    mask.graphics &&
                    !mask.graphics.isEmpty() &&
                    (mask.getMatrix(mtx), ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty), mask.graphics.drawAsPath(ctx), ctx.clip(), mtx.invert(), ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty)),
                    this.getMatrix(mtx);
                var tx = mtx.tx,
                    ty = mtx.ty;
                DisplayObject._snapToPixelEnabled && o.snapToPixel && ((tx = (tx + (tx < 0 ? -0.5 : 0.5)) | 0), (ty = (ty + (ty < 0 ? -0.5 : 0.5)) | 0)),
                    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty),
                    (ctx.globalAlpha *= o.alpha),
                    o.compositeOperation && (ctx.globalCompositeOperation = o.compositeOperation),
                    o.shadow && this._applyShadow(ctx, o.shadow);
            }),
            (p.cache = function (x, y, width, height, scale, options) {
                this.bitmapCache || (this.bitmapCache = new createjs.BitmapCache()), this.bitmapCache.define(this, x, y, width, height, scale, options);
            }),
            (p.updateCache = function (compositeOperation) {
                if (!this.bitmapCache) throw "cache() must be called before updateCache()";
                this.bitmapCache.update(compositeOperation);
            }),
            (p.uncache = function () {
                this.bitmapCache && (this.bitmapCache.release(), (this.bitmapCache = void 0));
            }),
            (p.getCacheDataURL = function () {
                return this.bitmapCache ? this.bitmapCache.getDataURL() : null;
            }),
            (p.localToGlobal = function (x, y, pt) {
                return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt || new createjs.Point());
            }),
            (p.globalToLocal = function (x, y, pt) {
                return this.getConcatenatedMatrix(this._props.matrix)
                    .invert()
                    .transformPoint(x, y, pt || new createjs.Point());
            }),
            (p.localToLocal = function (x, y, target, pt) {
                return (pt = this.localToGlobal(x, y, pt)), target.globalToLocal(pt.x, pt.y, pt);
            }),
            (p.setTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {
                return (
                    (this.x = x || 0),
                    (this.y = y || 0),
                    (this.scaleX = null == scaleX ? 1 : scaleX),
                    (this.scaleY = null == scaleY ? 1 : scaleY),
                    (this.rotation = rotation || 0),
                    (this.skewX = skewX || 0),
                    (this.skewY = skewY || 0),
                    (this.regX = regX || 0),
                    (this.regY = regY || 0),
                    this
                );
            }),
            (p.getMatrix = function (matrix) {
                var o = this,
                    mtx = (matrix && matrix.identity()) || new createjs.Matrix2D();
                return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);
            }),
            (p.getConcatenatedMatrix = function (matrix) {
                for (var o = this, mtx = this.getMatrix(matrix); (o = o.parent); ) mtx.prependMatrix(o.getMatrix(o._props.matrix));
                return mtx;
            }),
            (p.getConcatenatedDisplayProps = function (props) {
                props = props ? props.identity() : new createjs.DisplayProps();
                var o = this,
                    mtx = o.getMatrix(props.matrix);
                do {
                    props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation), o != this && mtx.prependMatrix(o.getMatrix(o._props.matrix));
                } while ((o = o.parent));
                return props;
            }),
            (p.hitTest = function (x, y) {
                var ctx = DisplayObject._hitTestContext;
                ctx.setTransform(1, 0, 0, 1, -x, -y), this.draw(ctx);
                var hit = this._testHit(ctx);
                return ctx.setTransform(1, 0, 0, 1, 0, 0), ctx.clearRect(0, 0, 2, 2), hit;
            }),
            (p.set = function (props) {
                for (var n in props) this[n] = props[n];
                return this;
            }),
            (p.getBounds = function () {
                if (this._bounds) return this._rectangle.copy(this._bounds);
                var cacheCanvas = this.cacheCanvas;
                if (cacheCanvas) {
                    var scale = this._cacheScale;
                    return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);
                }
                return null;
            }),
            (p.getTransformedBounds = function () {
                return this._getBounds();
            }),
            (p.setBounds = function (x, y, width, height) {
                this._bounds = null != x ? (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height) : x;
            }),
            (p.clone = function () {
                return this._cloneProps(new DisplayObject());
            }),
            (p.toString = function () {
                return "[DisplayObject (name=" + this.name + ")]";
            }),
            (p._updateState = null),
            (p._cloneProps = function (o) {
                return (
                    (o.alpha = this.alpha),
                    (o.mouseEnabled = this.mouseEnabled),
                    (o.tickEnabled = this.tickEnabled),
                    (o.name = this.name),
                    (o.regX = this.regX),
                    (o.regY = this.regY),
                    (o.rotation = this.rotation),
                    (o.scaleX = this.scaleX),
                    (o.scaleY = this.scaleY),
                    (o.shadow = this.shadow),
                    (o.skewX = this.skewX),
                    (o.skewY = this.skewY),
                    (o.visible = this.visible),
                    (o.x = this.x),
                    (o.y = this.y),
                    (o.compositeOperation = this.compositeOperation),
                    (o.snapToPixel = this.snapToPixel),
                    (o.filters = null == this.filters ? null : this.filters.slice(0)),
                    (o.mask = this.mask),
                    (o.hitArea = this.hitArea),
                    (o.cursor = this.cursor),
                    (o._bounds = this._bounds),
                    o
                );
            }),
            (p._applyShadow = function (ctx, shadow) {
                (shadow = shadow || Shadow.identity), (ctx.shadowColor = shadow.color), (ctx.shadowOffsetX = shadow.offsetX), (ctx.shadowOffsetY = shadow.offsetY), (ctx.shadowBlur = shadow.blur);
            }),
            (p._tick = function (evtObj) {
                var ls = this._listeners;
                ls && ls.tick && ((evtObj.target = null), (evtObj.propagationStopped = evtObj.immediatePropagationStopped = !1), this.dispatchEvent(evtObj));
            }),
            (p._testHit = function (ctx) {
                try {
                    var hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;
                } catch (e) {
                    if (!DisplayObject.suppressCrossDomainErrors) throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.";
                }
                return hit;
            }),
            (p._getBounds = function (matrix, ignoreTransform) {
                return this._transformBounds(this.getBounds(), matrix, ignoreTransform);
            }),
            (p._transformBounds = function (bounds, matrix, ignoreTransform) {
                if (!bounds) return bounds;
                var x = bounds.x,
                    y = bounds.y,
                    width = bounds.width,
                    height = bounds.height,
                    mtx = this._props.matrix;
                (mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx)), (x || y) && mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y), matrix && mtx.prependMatrix(matrix);
                var x_a = width * mtx.a,
                    x_b = width * mtx.b,
                    y_c = height * mtx.c,
                    y_d = height * mtx.d,
                    tx = mtx.tx,
                    ty = mtx.ty,
                    minX = tx,
                    maxX = tx,
                    minY = ty,
                    maxY = ty;
                return (
                    (x = x_a + tx) < minX ? (minX = x) : x > maxX && (maxX = x),
                    (x = x_a + y_c + tx) < minX ? (minX = x) : x > maxX && (maxX = x),
                    (x = y_c + tx) < minX ? (minX = x) : x > maxX && (maxX = x),
                    (y = x_b + ty) < minY ? (minY = y) : y > maxY && (maxY = y),
                    (y = x_b + y_d + ty) < minY ? (minY = y) : y > maxY && (maxY = y),
                    (y = y_d + ty) < minY ? (minY = y) : y > maxY && (maxY = y),
                    bounds.setValues(minX, minY, maxX - minX, maxY - minY)
                );
            }),
            (p._hasMouseEventListener = function () {
                for (var evts = DisplayObject._MOUSE_EVENTS, i = 0, l = evts.length; i < l; i++) if (this.hasEventListener(evts[i])) return !0;
                return !!this.cursor;
            }),
            (createjs.DisplayObject = createjs.promote(DisplayObject, "EventDispatcher"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Container() {
            this.DisplayObject_constructor(), (this.children = []), (this.mouseChildren = !0), (this.tickChildren = !0);
        }
        var p = createjs.extend(Container, createjs.DisplayObject);
        (p._getNumChildren = function () {
            return this.children.length;
        }),
            (p.getNumChildren = createjs.deprecate(p._getNumChildren, "Container.getNumChildren"));
        try {
            Object.defineProperties(p, { numChildren: { get: p._getNumChildren } });
        } catch (e) {}
        (p.initialize = Container),
            (p.isVisible = function () {
                var hasContent = this.cacheCanvas || this.children.length;
                return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && hasContent);
            }),
            (p.draw = function (ctx, ignoreCache) {
                if (this.DisplayObject_draw(ctx, ignoreCache)) return !0;
                for (var list = this.children.slice(), i = 0, l = list.length; i < l; i++) {
                    var child = list[i];
                    child.isVisible() && (ctx.save(), child.updateContext(ctx), child.draw(ctx), ctx.restore());
                }
                return !0;
            }),
            (p.addChild = function (child) {
                if (null == child) return child;
                var l = arguments.length;
                if (l > 1) {
                    for (var i = 0; i < l; i++) this.addChild(arguments[i]);
                    return arguments[l - 1];
                }
                var par = child.parent,
                    silent = par === this;
                return par && par._removeChildAt(createjs.indexOf(par.children, child), silent), (child.parent = this), this.children.push(child), silent || child.dispatchEvent("added"), child;
            }),
            (p.addChildAt = function (child, index) {
                var l = arguments.length,
                    indx = arguments[l - 1];
                if (indx < 0 || indx > this.children.length) return arguments[l - 2];
                if (l > 2) {
                    for (var i = 0; i < l - 1; i++) this.addChildAt(arguments[i], indx + i);
                    return arguments[l - 2];
                }
                var par = child.parent,
                    silent = par === this;
                return par && par._removeChildAt(createjs.indexOf(par.children, child), silent), (child.parent = this), this.children.splice(index, 0, child), silent || child.dispatchEvent("added"), child;
            }),
            (p.removeChild = function (child) {
                var l = arguments.length;
                if (l > 1) {
                    for (var good = !0, i = 0; i < l; i++) good = good && this.removeChild(arguments[i]);
                    return good;
                }
                return this._removeChildAt(createjs.indexOf(this.children, child));
            }),
            (p.removeChildAt = function (index) {
                var l = arguments.length;
                if (l > 1) {
                    for (var a = [], i = 0; i < l; i++) a[i] = arguments[i];
                    a.sort(function (a, b) {
                        return b - a;
                    });
                    var good = !0;
                    for (i = 0; i < l; i++) good = good && this._removeChildAt(a[i]);
                    return good;
                }
                return this._removeChildAt(index);
            }),
            (p.removeAllChildren = function () {
                for (var kids = this.children; kids.length; ) this._removeChildAt(0);
            }),
            (p.getChildAt = function (index) {
                return this.children[index];
            }),
            (p.getChildByName = function (name) {
                for (var kids = this.children, i = 0, l = kids.length; i < l; i++) if (kids[i].name == name) return kids[i];
                return null;
            }),
            (p.sortChildren = function (sortFunction) {
                this.children.sort(sortFunction);
            }),
            (p.getChildIndex = function (child) {
                return createjs.indexOf(this.children, child);
            }),
            (p.swapChildrenAt = function (index1, index2) {
                var kids = this.children,
                    o1 = kids[index1],
                    o2 = kids[index2];
                o1 && o2 && ((kids[index1] = o2), (kids[index2] = o1));
            }),
            (p.swapChildren = function (child1, child2) {
                for (var index1, index2, kids = this.children, i = 0, l = kids.length; i < l && (kids[i] == child1 && (index1 = i), kids[i] == child2 && (index2 = i), null == index1 || null == index2); i++);
                i != l && ((kids[index1] = child2), (kids[index2] = child1));
            }),
            (p.setChildIndex = function (child, index) {
                var kids = this.children,
                    l = kids.length;
                if (!(child.parent != this || index < 0 || index >= l)) {
                    for (var i = 0; i < l && kids[i] != child; i++);
                    i != l && i != index && (kids.splice(i, 1), kids.splice(index, 0, child));
                }
            }),
            (p.contains = function (child) {
                for (; child; ) {
                    if (child == this) return !0;
                    child = child.parent;
                }
                return !1;
            }),
            (p.hitTest = function (x, y) {
                return null != this.getObjectUnderPoint(x, y);
            }),
            (p.getObjectsUnderPoint = function (x, y, mode) {
                var arr = [],
                    pt = this.localToGlobal(x, y);
                return this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, 1 == mode), arr;
            }),
            (p.getObjectUnderPoint = function (x, y, mode) {
                var pt = this.localToGlobal(x, y);
                return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, 1 == mode);
            }),
            (p.getBounds = function () {
                return this._getBounds(null, !0);
            }),
            (p.getTransformedBounds = function () {
                return this._getBounds();
            }),
            (p.clone = function (recursive) {
                var o = this._cloneProps(new Container());
                return recursive && this._cloneChildren(o), o;
            }),
            (p.toString = function () {
                return "[Container (name=" + this.name + ")]";
            }),
            (p._tick = function (evtObj) {
                if (this.tickChildren)
                    for (var i = this.children.length - 1; i >= 0; i--) {
                        var child = this.children[i];
                        child.tickEnabled && child._tick && child._tick(evtObj);
                    }
                this.DisplayObject__tick(evtObj);
            }),
            (p._cloneChildren = function (o) {
                o.children.length && o.removeAllChildren();
                for (var arr = o.children, i = 0, l = this.children.length; i < l; i++) {
                    var clone = this.children[i].clone(!0);
                    (clone.parent = o), arr.push(clone);
                }
            }),
            (p._removeChildAt = function (index, silent) {
                if (index < 0 || index > this.children.length - 1) return !1;
                var child = this.children[index];
                return child && (child.parent = null), this.children.splice(index, 1), silent || child.dispatchEvent("removed"), !0;
            }),
            (p._getObjectsUnderPoint = function (x, y, arr, mouse, activeListener, currentDepth) {
                if (!(currentDepth = currentDepth || 0) && !this._testMask(this, x, y)) return null;
                var mtx,
                    ctx = createjs.DisplayObject._hitTestContext;
                activeListener = activeListener || (mouse && this._hasMouseEventListener());
                for (var children = this.children, i = children.length - 1; i >= 0; i--) {
                    var child = children[i],
                        hitArea = child.hitArea;
                    if (child.visible && (hitArea || child.isVisible()) && (!mouse || child.mouseEnabled) && (hitArea || this._testMask(child, x, y)))
                        if (!hitArea && child instanceof Container) {
                            var result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);
                            if (!arr && result) return mouse && !this.mouseChildren ? this : result;
                        } else {
                            if (mouse && !activeListener && !child._hasMouseEventListener()) continue;
                            var props = child.getConcatenatedDisplayProps(child._props);
                            if (
                                ((mtx = props.matrix),
                                hitArea && (mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix)), (props.alpha = hitArea.alpha)),
                                (ctx.globalAlpha = props.alpha),
                                ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y),
                                (hitArea || child).draw(ctx),
                                !this._testHit(ctx))
                            )
                                continue;
                            if ((ctx.setTransform(1, 0, 0, 1, 0, 0), ctx.clearRect(0, 0, 2, 2), !arr)) return mouse && !this.mouseChildren ? this : child;
                            arr.push(child);
                        }
                }
                return null;
            }),
            (p._testMask = function (target, x, y) {
                var mask = target.mask;
                if (!mask || !mask.graphics || mask.graphics.isEmpty()) return !0;
                var mtx = this._props.matrix,
                    parent = target.parent;
                (mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity()), (mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx));
                var ctx = createjs.DisplayObject._hitTestContext;
                return (
                    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y),
                    mask.graphics.drawAsPath(ctx),
                    (ctx.fillStyle = "#000"),
                    ctx.fill(),
                    !!this._testHit(ctx) && (ctx.setTransform(1, 0, 0, 1, 0, 0), ctx.clearRect(0, 0, 2, 2), !0)
                );
            }),
            (p._getBounds = function (matrix, ignoreTransform) {
                var bounds = this.DisplayObject_getBounds();
                if (bounds) return this._transformBounds(bounds, matrix, ignoreTransform);
                var mtx = this._props.matrix;
                (mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx)), matrix && mtx.prependMatrix(matrix);
                for (var l = this.children.length, rect = null, i = 0; i < l; i++) {
                    var child = this.children[i];
                    child.visible && (bounds = child._getBounds(mtx)) && (rect ? rect.extend(bounds.x, bounds.y, bounds.width, bounds.height) : (rect = bounds.clone()));
                }
                return rect;
            }),
            (createjs.Container = createjs.promote(Container, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Stage(canvas) {
            this.Container_constructor(),
                (this.autoClear = !0),
                (this.canvas = "string" == typeof canvas ? document.getElementById(canvas) : canvas),
                (this.mouseX = 0),
                (this.mouseY = 0),
                (this.drawRect = null),
                (this.snapToPixelEnabled = !1),
                (this.mouseInBounds = !1),
                (this.tickOnUpdate = !0),
                (this.mouseMoveOutside = !1),
                (this.preventSelection = !0),
                (this._pointerData = {}),
                (this._pointerCount = 0),
                (this._primaryPointerID = null),
                (this._mouseOverIntervalID = null),
                (this._nextStage = null),
                (this._prevStage = null),
                this.enableDOMEvents(!0);
        }
        var p = createjs.extend(Stage, createjs.Container);
        (p._get_nextStage = function () {
            return this._nextStage;
        }),
            (p._set_nextStage = function (value) {
                this._nextStage && (this._nextStage._prevStage = null), value && (value._prevStage = this), (this._nextStage = value);
            });
        try {
            Object.defineProperties(p, { nextStage: { get: p._get_nextStage, set: p._set_nextStage } });
        } catch (e) {}
        (p.update = function (props) {
            if (this.canvas && (this.tickOnUpdate && this.tick(props), !1 !== this.dispatchEvent("drawstart", !1, !0))) {
                createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;
                var r = this.drawRect,
                    ctx = this.canvas.getContext("2d");
                ctx.setTransform(1, 0, 0, 1, 0, 0),
                    this.autoClear && (r ? ctx.clearRect(r.x, r.y, r.width, r.height) : ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)),
                    ctx.save(),
                    this.drawRect && (ctx.beginPath(), ctx.rect(r.x, r.y, r.width, r.height), ctx.clip()),
                    this.updateContext(ctx),
                    this.draw(ctx, !1),
                    ctx.restore(),
                    this.dispatchEvent("drawend");
            }
        }),
            (p.tick = function (props) {
                if (this.tickEnabled && !1 !== this.dispatchEvent("tickstart", !1, !0)) {
                    var evtObj = new createjs.Event("tick");
                    if (props) for (var n in props) props.hasOwnProperty(n) && (evtObj[n] = props[n]);
                    this._tick(evtObj), this.dispatchEvent("tickend");
                }
            }),
            (p.handleEvent = function (evt) {
                "tick" == evt.type && this.update(evt);
            }),
            (p.clear = function () {
                if (this.canvas) {
                    var ctx = this.canvas.getContext("2d");
                    ctx.setTransform(1, 0, 0, 1, 0, 0), ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);
                }
            }),
            (p.toDataURL = function (backgroundColor, mimeType) {
                var data,
                    ctx = this.canvas.getContext("2d"),
                    w = this.canvas.width,
                    h = this.canvas.height;
                if (backgroundColor) {
                    data = ctx.getImageData(0, 0, w, h);
                    var compositeOperation = ctx.globalCompositeOperation;
                    (ctx.globalCompositeOperation = "destination-over"), (ctx.fillStyle = backgroundColor), ctx.fillRect(0, 0, w, h);
                }
                var dataURL = this.canvas.toDataURL(mimeType || "image/png");
                return backgroundColor && (ctx.putImageData(data, 0, 0), (ctx.globalCompositeOperation = compositeOperation)), dataURL;
            }),
            (p.enableMouseOver = function (frequency) {
                if ((this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID), (this._mouseOverIntervalID = null), 0 == frequency && this._testMouseOver(!0)), null == frequency)) frequency = 20;
                else if (frequency <= 0) return;
                var o = this;
                this._mouseOverIntervalID = setInterval(function () {
                    o._testMouseOver();
                }, 1e3 / Math.min(50, frequency));
            }),
            (p.enableDOMEvents = function (enable) {
                null == enable && (enable = !0);
                var n,
                    o,
                    ls = this._eventListeners;
                if (!enable && ls) {
                    for (n in ls) (o = ls[n]).t.removeEventListener(n, o.f, !1);
                    this._eventListeners = null;
                } else if (enable && !ls && this.canvas) {
                    var t = window.addEventListener ? window : document,
                        _this = this;
                    for (n in (((ls = this._eventListeners = {}).mouseup = {
                        t: t,
                        f: function (e) {
                            _this._handleMouseUp(e);
                        },
                    }),
                    (ls.mousemove = {
                        t: t,
                        f: function (e) {
                            _this._handleMouseMove(e);
                        },
                    }),
                    (ls.dblclick = {
                        t: this.canvas,
                        f: function (e) {
                            _this._handleDoubleClick(e);
                        },
                    }),
                    (ls.mousedown = {
                        t: this.canvas,
                        f: function (e) {
                            _this._handleMouseDown(e);
                        },
                    }),
                    ls))
                        (o = ls[n]).t.addEventListener(n, o.f, !1);
                }
            }),
            (p.clone = function () {
                throw "Stage cannot be cloned.";
            }),
            (p.toString = function () {
                return "[Stage (name=" + this.name + ")]";
            }),
            (p._getElementRect = function (e) {
                var bounds;
                try {
                    bounds = e.getBoundingClientRect();
                } catch (err) {
                    bounds = { top: e.offsetTop, left: e.offsetLeft, width: e.offsetWidth, height: e.offsetHeight };
                }
                var offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0),
                    offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0),
                    styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle,
                    padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth),
                    padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth),
                    padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth),
                    padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth);
                return { left: bounds.left + offX + padL, right: bounds.right + offX - padR, top: bounds.top + offY + padT, bottom: bounds.bottom + offY - padB };
            }),
            (p._getPointerData = function (id) {
                var data = this._pointerData[id];
                return data || (data = this._pointerData[id] = { x: 0, y: 0 }), data;
            }),
            (p._handleMouseMove = function (e) {
                e || (e = window.event), this._handlePointerMove(-1, e, e.pageX, e.pageY);
            }),
            (p._handlePointerMove = function (id, e, pageX, pageY, owner) {
                if ((!this._prevStage || void 0 !== owner) && this.canvas) {
                    var nextStage = this._nextStage,
                        o = this._getPointerData(id),
                        inBounds = o.inBounds;
                    this._updatePointerPosition(id, e, pageX, pageY),
                        (inBounds || o.inBounds || this.mouseMoveOutside) &&
                            (-1 === id && o.inBounds == !inBounds && this._dispatchMouseEvent(this, inBounds ? "mouseleave" : "mouseenter", !1, id, o, e),
                            this._dispatchMouseEvent(this, "stagemousemove", !1, id, o, e),
                            this._dispatchMouseEvent(o.target, "pressmove", !0, id, o, e)),
                        nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);
                }
            }),
            (p._updatePointerPosition = function (id, e, pageX, pageY) {
                var rect = this._getElementRect(this.canvas);
                (pageX -= rect.left), (pageY -= rect.top);
                var w = this.canvas.width,
                    h = this.canvas.height;
                (pageX /= (rect.right - rect.left) / w), (pageY /= (rect.bottom - rect.top) / h);
                var o = this._getPointerData(id);
                (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1)
                    ? ((o.x = pageX), (o.y = pageY))
                    : this.mouseMoveOutside && ((o.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX), (o.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY)),
                    (o.posEvtObj = e),
                    (o.rawX = pageX),
                    (o.rawY = pageY),
                    (id !== this._primaryPointerID && -1 !== id) || ((this.mouseX = o.x), (this.mouseY = o.y), (this.mouseInBounds = o.inBounds));
            }),
            (p._handleMouseUp = function (e) {
                this._handlePointerUp(-1, e, !1);
            }),
            (p._handlePointerUp = function (id, e, clear, owner) {
                var nextStage = this._nextStage,
                    o = this._getPointerData(id);
                if (!this._prevStage || void 0 !== owner) {
                    var target = null,
                        oTarget = o.target;
                    owner || (!oTarget && !nextStage) || (target = this._getObjectsUnderPoint(o.x, o.y, null, !0)),
                        o.down && (this._dispatchMouseEvent(this, "stagemouseup", !1, id, o, e, target), (o.down = !1)),
                        target == oTarget && this._dispatchMouseEvent(oTarget, "click", !0, id, o, e),
                        this._dispatchMouseEvent(oTarget, "pressup", !0, id, o, e),
                        clear ? (id == this._primaryPointerID && (this._primaryPointerID = null), delete this._pointerData[id]) : (o.target = null),
                        nextStage && nextStage._handlePointerUp(id, e, clear, owner || (target && this));
                }
            }),
            (p._handleMouseDown = function (e) {
                this._handlePointerDown(-1, e, e.pageX, e.pageY);
            }),
            (p._handlePointerDown = function (id, e, pageX, pageY, owner) {
                this.preventSelection && e.preventDefault(), (null != this._primaryPointerID && -1 !== id) || (this._primaryPointerID = id), null != pageY && this._updatePointerPosition(id, e, pageX, pageY);
                var target = null,
                    nextStage = this._nextStage,
                    o = this._getPointerData(id);
                owner || (target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, !0)),
                    o.inBounds && (this._dispatchMouseEvent(this, "stagemousedown", !1, id, o, e, target), (o.down = !0)),
                    this._dispatchMouseEvent(target, "mousedown", !0, id, o, e),
                    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || (target && this));
            }),
            (p._testMouseOver = function (clear, owner, eventTarget) {
                if (!this._prevStage || void 0 !== owner) {
                    var nextStage = this._nextStage;
                    if (this._mouseOverIntervalID) {
                        var o = this._getPointerData(-1);
                        if (o && (clear || this.mouseX != this._mouseOverX || this.mouseY != this._mouseOverY || !this.mouseInBounds)) {
                            var t,
                                i,
                                l,
                                e = o.posEvtObj,
                                isEventTarget = eventTarget || (e && e.target == this.canvas),
                                target = null,
                                common = -1,
                                cursor = "";
                            !owner && (clear || (this.mouseInBounds && isEventTarget)) && ((target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, !0)), (this._mouseOverX = this.mouseX), (this._mouseOverY = this.mouseY));
                            var oldList = this._mouseOverTarget || [],
                                oldTarget = oldList[oldList.length - 1],
                                list = (this._mouseOverTarget = []);
                            for (t = target; t; ) list.unshift(t), cursor || (cursor = t.cursor), (t = t.parent);
                            for (this.canvas.style.cursor = cursor, !owner && eventTarget && (eventTarget.canvas.style.cursor = cursor), i = 0, l = list.length; i < l && list[i] == oldList[i]; i++) common = i;
                            for (oldTarget != target && this._dispatchMouseEvent(oldTarget, "mouseout", !0, -1, o, e, target), i = oldList.length - 1; i > common; i--) this._dispatchMouseEvent(oldList[i], "rollout", !1, -1, o, e, target);
                            for (i = list.length - 1; i > common; i--) this._dispatchMouseEvent(list[i], "rollover", !1, -1, o, e, oldTarget);
                            oldTarget != target && this._dispatchMouseEvent(target, "mouseover", !0, -1, o, e, oldTarget), nextStage && nextStage._testMouseOver(clear, owner || (target && this), eventTarget || (isEventTarget && this));
                        }
                    } else nextStage && nextStage._testMouseOver(clear, owner, eventTarget);
                }
            }),
            (p._handleDoubleClick = function (e, owner) {
                var target = null,
                    nextStage = this._nextStage,
                    o = this._getPointerData(-1);
                owner || ((target = this._getObjectsUnderPoint(o.x, o.y, null, !0)), this._dispatchMouseEvent(target, "dblclick", !0, -1, o, e)), nextStage && nextStage._handleDoubleClick(e, owner || (target && this));
            }),
            (p._dispatchMouseEvent = function (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {
                if (target && (bubbles || target.hasEventListener(type))) {
                    var evt = new createjs.MouseEvent(type, bubbles, !1, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || -1 === pointerId, o.rawX, o.rawY, relatedTarget);
                    target.dispatchEvent(evt);
                }
            }),
            (createjs.Stage = createjs.promote(Stage, "Container"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function StageGL(canvas, options) {
            if ((this.Stage_constructor(canvas), void 0 !== options)) {
                if ("object" != typeof options) throw "Invalid options object";
                var premultiply = options.premultiply,
                    transparent = options.transparent,
                    antialias = options.antialias,
                    preserveBuffer = options.preserveBuffer,
                    autoPurge = options.autoPurge;
            }
            (this.vocalDebug = !1),
                (this._preserveBuffer = preserveBuffer || !1),
                (this._antialias = antialias || !1),
                (this._transparent = transparent || !1),
                (this._premultiply = premultiply || !1),
                (this._autoPurge = void 0),
                (this.autoPurge = autoPurge),
                (this._viewportWidth = 0),
                (this._viewportHeight = 0),
                (this._projectionMatrix = null),
                (this._webGLContext = null),
                (this._clearColor = { r: 0.5, g: 0.5, b: 0.5, a: 0 }),
                (this._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE),
                (this._activeShader = null),
                (this._vertices = null),
                (this._vertexPositionBuffer = null),
                (this._uvs = null),
                (this._uvPositionBuffer = null),
                (this._indices = null),
                (this._textureIndexBuffer = null),
                (this._alphas = null),
                (this._alphaBuffer = null),
                (this._textureDictionary = []),
                (this._textureIDs = {}),
                (this._batchTextures = []),
                (this._baseTextures = []),
                (this._batchTextureCount = 8),
                (this._lastTextureInsert = -1),
                (this._batchID = 0),
                (this._drawID = 0),
                (this._slotBlacklist = []),
                (this._isDrawing = 0),
                (this._lastTrackedCanvas = 0),
                (this.isCacheControlled = !1),
                (this._cacheContainer = new createjs.Container()),
                this._initializeWebGL();
        }
        var p = createjs.extend(StageGL, createjs.Stage);
        (StageGL.buildUVRects = function (spritesheet, target, onlyTarget) {
            if (!spritesheet || !spritesheet._frames) return null;
            void 0 === target && (target = -1), void 0 === onlyTarget && (onlyTarget = !1);
            for (var start = -1 != target && onlyTarget ? target : 0, end = -1 != target && onlyTarget ? target + 1 : spritesheet._frames.length, i = start; i < end; i++) {
                var f = spritesheet._frames[i];
                if (!(f.uvRect || f.image.width <= 0 || f.image.height <= 0)) {
                    var r = f.rect;
                    f.uvRect = { t: r.y / f.image.height, l: r.x / f.image.width, b: (r.y + r.height) / f.image.height, r: (r.x + r.width) / f.image.width };
                }
            }
            return spritesheet._frames[-1 != target ? target : 0].uvRect || { t: 0, l: 0, b: 1, r: 1 };
        }),
            (StageGL.isWebGLActive = function (ctx) {
                return ctx && ctx instanceof WebGLRenderingContext && "undefined" != typeof WebGLRenderingContext;
            }),
            (StageGL.VERTEX_PROPERTY_COUNT = 6),
            (StageGL.INDICIES_PER_CARD = 6),
            (StageGL.DEFAULT_MAX_BATCH_SIZE = 1e4),
            (StageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16)),
            (StageGL.UV_RECT = { t: 0, l: 0, b: 1, r: 1 });
        try {
            (StageGL.COVER_VERT = new Float32Array([-1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, -1])),
                (StageGL.COVER_UV = new Float32Array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1])),
                (StageGL.COVER_UV_FLIP = new Float32Array([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]));
        } catch (e) {}
        (StageGL.REGULAR_VARYING_HEADER = "precision mediump float;varying vec2 vTextureCoord;varying lowp float indexPicker;varying lowp float alphaValue;"),
            (StageGL.REGULAR_VERTEX_HEADER = StageGL.REGULAR_VARYING_HEADER + "attribute vec2 vertexPosition;attribute vec2 uvPosition;attribute lowp float textureIndex;attribute lowp float objectAlpha;uniform mat4 pMatrix;"),
            (StageGL.REGULAR_FRAGMENT_HEADER = StageGL.REGULAR_VARYING_HEADER + "uniform sampler2D uSampler[{{count}}];"),
            (StageGL.REGULAR_VERTEX_BODY =
                "void main(void) {gl_Position = vec4((vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],pMatrix[3][2],1.0);alphaValue = objectAlpha;indexPicker = textureIndex;vTextureCoord = uvPosition;}"),
            (StageGL.REGULAR_FRAGMENT_BODY = "void main(void) {vec4 color = vec4(1.0, 0.0, 0.0, 1.0);if (indexPicker <= 0.5) {color = texture2D(uSampler[0], vTextureCoord);{{alternates}}}{{fragColor}}}"),
            (StageGL.REGULAR_FRAG_COLOR_NORMAL = "gl_FragColor = vec4(color.rgb, color.a * alphaValue);"),
            (StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = "if(color.a > 0.0035) {gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);} else {gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);}"),
            (StageGL.PARTICLE_VERTEX_BODY = StageGL.REGULAR_VERTEX_BODY),
            (StageGL.PARTICLE_FRAGMENT_BODY = StageGL.REGULAR_FRAGMENT_BODY),
            (StageGL.COVER_VARYING_HEADER = "precision mediump float;varying highp vec2 vRenderCoord;varying highp vec2 vTextureCoord;"),
            (StageGL.COVER_VERTEX_HEADER = StageGL.COVER_VARYING_HEADER + "attribute vec2 vertexPosition;attribute vec2 uvPosition;uniform float uUpright;"),
            (StageGL.COVER_FRAGMENT_HEADER = StageGL.COVER_VARYING_HEADER + "uniform sampler2D uSampler;"),
            (StageGL.COVER_VERTEX_BODY = "void main(void) {gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);vRenderCoord = uvPosition;vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));}"),
            (StageGL.COVER_FRAGMENT_BODY = "void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = color;}"),
            (p._get_isWebGL = function () {
                return !!this._webGLContext;
            }),
            (p._set_autoPurge = function (value) {
                -1 != (value = isNaN(value) ? 1200 : value) && (value = value < 10 ? 10 : value), (this._autoPurge = value);
            }),
            (p._get_autoPurge = function () {
                return Number(this._autoPurge);
            });
        try {
            Object.defineProperties(p, { isWebGL: { get: p._get_isWebGL }, autoPurge: { get: p._get_autoPurge, set: p._set_autoPurge } });
        } catch (e) {}
        (p._initializeWebGL = function () {
            if (this.canvas) {
                if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {
                    var options = { depth: !1, alpha: this._transparent, stencil: !0, antialias: this._antialias, premultipliedAlpha: this._premultiply, preserveDrawingBuffer: this._preserveBuffer },
                        gl = (this._webGLContext = this._fetchWebGLContext(this.canvas, options));
                    if (!gl) return null;
                    this.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)),
                        (this._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),
                        this._createBuffers(gl),
                        this._initTextures(gl),
                        gl.disable(gl.DEPTH_TEST),
                        gl.enable(gl.BLEND),
                        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA),
                        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply),
                        this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a),
                        this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);
                }
            } else this._webGLContext = null;
            return this._webGLContext;
        }),
            (p.update = function (props) {
                if (this.canvas) {
                    if ((this.tickOnUpdate && this.tick(props), this.dispatchEvent("drawstart"), this.autoClear && this.clear(), this._webGLContext))
                        this._batchDraw(this, this._webGLContext), -1 == this._autoPurge || this._drawID % ((this._autoPurge / 2) | 0) || this.purgeTextures(this._autoPurge);
                    else {
                        var ctx = this.canvas.getContext("2d");
                        ctx.save(), this.updateContext(ctx), this.draw(ctx, !1), ctx.restore();
                    }
                    this.dispatchEvent("drawend");
                }
            }),
            (p.clear = function () {
                if (this.canvas)
                    if (StageGL.isWebGLActive(this._webGLContext)) {
                        var gl = this._webGLContext,
                            cc = this._clearColor,
                            adjust = this._transparent ? cc.a : 1;
                        this._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust), gl.clear(gl.COLOR_BUFFER_BIT), this._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);
                    } else this.Stage_clear();
            }),
            (p.draw = function (context, ignoreCache) {
                if (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {
                    var gl = this._webGLContext;
                    return this._batchDraw(this, gl, ignoreCache), !0;
                }
                return this.Stage_draw(context, ignoreCache);
            }),
            (p.cacheDraw = function (target, filters, manager) {
                if (StageGL.isWebGLActive(this._webGLContext)) {
                    var gl = this._webGLContext;
                    return this._cacheDraw(gl, target, filters, manager), !0;
                }
                return !1;
            }),
            (p.protectTextureSlot = function (id, lock) {
                if (id > this._maxTextureSlots || id < 0) throw "Slot outside of acceptable range";
                this._slotBlacklist[id] = !!lock;
            }),
            (p.getTargetRenderTexture = function (target, w, h) {
                var result,
                    toggle = !1,
                    gl = this._webGLContext;
                if (
                    (void 0 !== target.__lastRT && target.__lastRT === target.__rtA && (toggle = !0),
                    toggle
                        ? (void 0 === target.__rtB ? (target.__rtB = this.getRenderBufferTexture(w, h)) : ((w == target.__rtB._width && h == target.__rtB._height) || this.resizeTexture(target.__rtB, w, h), this.setTextureParams(gl)),
                          (result = target.__rtB))
                        : (void 0 === target.__rtA ? (target.__rtA = this.getRenderBufferTexture(w, h)) : ((w == target.__rtA._width && h == target.__rtA._height) || this.resizeTexture(target.__rtA, w, h), this.setTextureParams(gl)),
                          (result = target.__rtA)),
                    !result)
                )
                    throw "Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances";
                return (target.__lastRT = result), result;
            }),
            (p.releaseTexture = function (item) {
                var i, l;
                if (item) {
                    if (item.children) for (i = 0, l = item.children.length; i < l; i++) this.releaseTexture(item.children[i]);
                    item.cacheCanvas && item.uncache();
                    var foundImage = void 0;
                    if (void 0 !== item._storeID) {
                        if (item === this._textureDictionary[item._storeID]) return this._killTextureObject(item), void (item._storeID = void 0);
                        foundImage = item;
                    } else if (2 === item._webGLRenderStyle) foundImage = item.image;
                    else if (1 === item._webGLRenderStyle) {
                        for (i = 0, l = item.spriteSheet._images.length; i < l; i++) this.releaseTexture(item.spriteSheet._images[i]);
                        return;
                    }
                    void 0 !== foundImage ? (this._killTextureObject(this._textureDictionary[foundImage._storeID]), (foundImage._storeID = void 0)) : this.vocalDebug;
                }
            }),
            (p.purgeTextures = function (count) {
                void 0 == count && (count = 100);
                for (var dict = this._textureDictionary, l = dict.length, i = 0; i < l; i++) {
                    var item = dict[i];
                    item && item._drawID + count <= this._drawID && this._killTextureObject(item);
                }
            }),
            (p.updateSimultaneousTextureCount = function (count) {
                var gl = this._webGLContext,
                    success = !1;
                for ((count < 1 || isNaN(count)) && (count = 1), this._batchTextureCount = count; !success; )
                    try {
                        (this._activeShader = this._fetchShaderProgram(gl)), (success = !0);
                    } catch (e) {
                        if (1 == this._batchTextureCount) throw "Cannot compile shader " + e;
                        (this._batchTextureCount -= 4), this._batchTextureCount < 1 && (this._batchTextureCount = 1), this.vocalDebug;
                    }
            }),
            (p.updateViewport = function (width, height) {
                (this._viewportWidth = 0 | width), (this._viewportHeight = 0 | height);
                var gl = this._webGLContext;
                gl &&
                    (gl.viewport(0, 0, this._viewportWidth, this._viewportHeight),
                    (this._projectionMatrix = new Float32Array([2 / this._viewportWidth, 0, 0, 0, 0, -2 / this._viewportHeight, 1, 0, 0, 0, 1, 0, -1, 1, 0.1, 0])),
                    (this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                    this._projectionMatrixFlip.set(this._projectionMatrix),
                    (this._projectionMatrixFlip[5] *= -1),
                    (this._projectionMatrixFlip[13] *= -1));
            }),
            (p.getFilterShader = function (filter) {
                filter || (filter = this);
                var gl = this._webGLContext,
                    targetShader = this._activeShader;
                if (filter._builtShader) (targetShader = filter._builtShader), filter.shaderParamSetup && (gl.useProgram(targetShader), filter.shaderParamSetup(gl, this, targetShader));
                else
                    try {
                        (targetShader = this._fetchShaderProgram(gl, "filter", filter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY, filter.shaderParamSetup && filter.shaderParamSetup.bind(filter))),
                            (filter._builtShader = targetShader),
                            (targetShader._name = filter.toString());
                    } catch (e) {
                        console;
                    }
                return targetShader;
            }),
            (p.getBaseTexture = function (w, h) {
                var width = Math.ceil(w > 0 ? w : 1) || 1,
                    height = Math.ceil(h > 0 ? h : 1) || 1,
                    gl = this._webGLContext,
                    texture = gl.createTexture();
                return this.resizeTexture(texture, width, height), this.setTextureParams(gl, !1), texture;
            }),
            (p.resizeTexture = function (texture, width, height) {
                var gl = this._webGLContext;
                gl.bindTexture(gl.TEXTURE_2D, texture), gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null), (texture.width = width), (texture.height = height);
            }),
            (p.getRenderBufferTexture = function (w, h) {
                var gl = this._webGLContext,
                    renderTexture = this.getBaseTexture(w, h);
                if (!renderTexture) return null;
                var frameBuffer = gl.createFramebuffer();
                return frameBuffer
                    ? ((renderTexture.width = w),
                      (renderTexture.height = h),
                      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer),
                      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0),
                      (frameBuffer._renderTexture = renderTexture),
                      (renderTexture._frameBuffer = frameBuffer),
                      (renderTexture._storeID = this._textureDictionary.length),
                      (this._textureDictionary[renderTexture._storeID] = renderTexture),
                      gl.bindFramebuffer(gl.FRAMEBUFFER, null),
                      renderTexture)
                    : null;
            }),
            (p.setTextureParams = function (gl, isPOT) {
                isPOT && this._antialias
                    ? (gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR), gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR))
                    : (gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST), gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)),
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE),
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
            }),
            (p.setClearColor = function (color) {
                var r, g, b, a, output;
                "string" == typeof color
                    ? 0 == color.indexOf("#")
                        ? (4 == color.length && (color = "#" + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2) + color.charAt(3) + color.charAt(3)),
                          (r = Number("0x" + color.slice(1, 3)) / 255),
                          (g = Number("0x" + color.slice(3, 5)) / 255),
                          (b = Number("0x" + color.slice(5, 7)) / 255),
                          (a = Number("0x" + color.slice(7, 9)) / 255))
                        : 0 == color.indexOf("rgba(") && ((output = color.slice(5, -1).split(",")), (r = Number(output[0]) / 255), (g = Number(output[1]) / 255), (b = Number(output[2]) / 255), (a = Number(output[3])))
                    : ((r = ((4278190080 & color) >>> 24) / 255), (g = ((16711680 & color) >>> 16) / 255), (b = ((65280 & color) >>> 8) / 255), (a = (255 & color) / 255)),
                    (this._clearColor.r = r || 0),
                    (this._clearColor.g = g || 0),
                    (this._clearColor.b = b || 0),
                    (this._clearColor.a = a || 0),
                    this._webGLContext && this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);
            }),
            (p.toString = function () {
                return "[StageGL (name=" + this.name + ")]";
            }),
            (p._fetchWebGLContext = function (canvas, options) {
                var gl;
                try {
                    gl = canvas.getContext("webgl", options) || canvas.getContext("experimental-webgl", options);
                } catch (e) {}
                if (gl) (gl.viewportWidth = canvas.width), (gl.viewportHeight = canvas.height);
                else {
                    console.error;
                }
                return gl;
            }),
            (p._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {
                var targetFrag, targetVtx;
                switch ((gl.useProgram(null), shaderName)) {
                    case "filter":
                        (targetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY)), (targetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY));
                        break;
                    case "particle":
                        (targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY), (targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY);
                        break;
                    case "override":
                        (targetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY)), (targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY));
                        break;
                    case "regular":
                    default:
                        (targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY), (targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY);
                }
                var vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx),
                    fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag),
                    shaderProgram = gl.createProgram();
                if ((gl.attachShader(shaderProgram, vertexShader), gl.attachShader(shaderProgram, fragmentShader), gl.linkProgram(shaderProgram), (shaderProgram._type = shaderName), !gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)))
                    throw (gl.useProgram(this._activeShader), gl.getProgramInfoLog(shaderProgram));
                switch ((gl.useProgram(shaderProgram), shaderName)) {
                    case "filter":
                        (shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, "vertexPosition")),
                            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute),
                            (shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, "uvPosition")),
                            gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute),
                            (shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, "uSampler")),
                            gl.uniform1i(shaderProgram.samplerUniform, 0),
                            (shaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, "uUpright")),
                            gl.uniform1f(shaderProgram.uprightUniform, 0),
                            shaderParamSetup && shaderParamSetup(gl, this, shaderProgram);
                        break;
                    case "override":
                    case "particle":
                    case "regular":
                    default:
                        (shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, "vertexPosition")),
                            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute),
                            (shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, "uvPosition")),
                            gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute),
                            (shaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, "textureIndex")),
                            gl.enableVertexAttribArray(shaderProgram.textureIndexAttribute),
                            (shaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, "objectAlpha")),
                            gl.enableVertexAttribArray(shaderProgram.alphaAttribute);
                        for (var samplers = [], i = 0; i < this._batchTextureCount; i++) samplers[i] = i;
                        (shaderProgram.samplerData = samplers),
                            (shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, "uSampler")),
                            gl.uniform1iv(shaderProgram.samplerUniform, samplers),
                            (shaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, "pMatrix"));
                }
                return gl.useProgram(this._activeShader), shaderProgram;
            }),
            (p._createShader = function (gl, type, str) {
                str = str.replace(/{{count}}/g, this._batchTextureCount);
                for (var insert = "", i = 1; i < this._batchTextureCount; i++) insert += "} else if (indexPicker <= " + i + ".5) { color = texture2D(uSampler[" + i + "], vTextureCoord);";
                str = (str = str.replace(/{{alternates}}/g, insert)).replace(/{{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL);
                var shader = gl.createShader(type);
                if ((gl.shaderSource(shader, str), gl.compileShader(shader), !gl.getShaderParameter(shader, gl.COMPILE_STATUS))) throw gl.getShaderInfoLog(shader);
                return shader;
            }),
            (p._createBuffers = function (gl) {
                var groupSize,
                    i,
                    l,
                    groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD,
                    vertexPositionBuffer = (this._vertexPositionBuffer = gl.createBuffer());
                gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer), (groupSize = 2);
                var vertices = (this._vertices = new Float32Array(groupCount * groupSize));
                for (i = 0, l = vertices.length; i < l; i += groupSize) vertices[i] = vertices[i + 1] = 0;
                gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW), (vertexPositionBuffer.itemSize = groupSize), (vertexPositionBuffer.numItems = groupCount);
                var uvPositionBuffer = (this._uvPositionBuffer = gl.createBuffer());
                gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer), (groupSize = 2);
                var uvs = (this._uvs = new Float32Array(groupCount * groupSize));
                for (i = 0, l = uvs.length; i < l; i += groupSize) uvs[i] = uvs[i + 1] = 0;
                gl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW), (uvPositionBuffer.itemSize = groupSize), (uvPositionBuffer.numItems = groupCount);
                var textureIndexBuffer = (this._textureIndexBuffer = gl.createBuffer());
                gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer), (groupSize = 1);
                var indices = (this._indices = new Float32Array(groupCount * groupSize));
                for (i = 0, l = indices.length; i < l; i++) indices[i] = 0;
                gl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW), (textureIndexBuffer.itemSize = groupSize), (textureIndexBuffer.numItems = groupCount);
                var alphaBuffer = (this._alphaBuffer = gl.createBuffer());
                gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer), (groupSize = 1);
                var alphas = (this._alphas = new Float32Array(groupCount * groupSize));
                for (i = 0, l = alphas.length; i < l; i++) alphas[i] = 1;
                gl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW), (alphaBuffer.itemSize = groupSize), (alphaBuffer.numItems = groupCount);
            }),
            (p._initTextures = function () {
                (this._lastTextureInsert = -1), (this._textureDictionary = []), (this._textureIDs = {}), (this._baseTextures = []), (this._batchTextures = []);
                for (var i = 0; i < this._batchTextureCount; i++) {
                    var tex = this.getBaseTexture();
                    if (((this._baseTextures[i] = this._batchTextures[i] = tex), !tex)) throw "Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances";
                }
            }),
            (p._loadTextureImage = function (gl, image) {
                var src = image.src;
                src || ((image._isCanvas = !0), (src = image.src = "canvas_" + this._lastTrackedCanvas++));
                var storeID = this._textureIDs[src];
                void 0 === storeID && (storeID = this._textureIDs[src] = this._textureDictionary.length), void 0 === this._textureDictionary[storeID] && (this._textureDictionary[storeID] = this.getBaseTexture());
                var texture = this._textureDictionary[storeID];
                if (texture)
                    (texture._batchID = this._batchID),
                        (texture._storeID = storeID),
                        (texture._imageData = image),
                        this._insertTextureInBatch(gl, texture),
                        (image._storeID = storeID),
                        image.complete || image.naturalWidth || image._isCanvas ? this._updateTextureImageData(gl, image) : image.addEventListener("load", this._updateTextureImageData.bind(this, gl, image));
                else {
                    console.error, ((texture = this._baseTextures[0])._batchID = this._batchID), (texture._storeID = -1), (texture._imageData = texture), this._insertTextureInBatch(gl, texture);
                }
                return texture;
            }),
            (p._updateTextureImageData = function (gl, image) {
                var isNPOT = image.width & (image.width - 1) || image.height & (image.height - 1),
                    texture = this._textureDictionary[image._storeID];
                gl.activeTexture(gl.TEXTURE0 + texture._activeIndex), gl.bindTexture(gl.TEXTURE_2D, texture), (texture.isPOT = !isNPOT), this.setTextureParams(gl, texture.isPOT);
                try {
                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
                } catch (e) {
                    console.error || console;
                }
                (image._invalid = !1), (texture._w = image.width), (texture._h = image.height), this.vocalDebug && (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE) && console;
            }),
            (p._insertTextureInBatch = function (gl, texture) {
                if (this._batchTextures[texture._activeIndex] !== texture) {
                    var found = -1,
                        start = (this._lastTextureInsert + 1) % this._batchTextureCount,
                        look = start;
                    do {
                        if (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {
                            found = look;
                            break;
                        }
                        look = (look + 1) % this._batchTextureCount;
                    } while (look !== start);
                    -1 === found && ((this.batchReason = "textureOverflow"), this._drawBuffers(gl), (this.batchCardCount = 0), (found = start)),
                        (this._batchTextures[found] = texture),
                        (texture._activeIndex = found),
                        (image = texture._imageData) && image._invalid && void 0 !== texture._drawID
                            ? this._updateTextureImageData(gl, image)
                            : (gl.activeTexture(gl.TEXTURE0 + found), gl.bindTexture(gl.TEXTURE_2D, texture), this.setTextureParams(gl)),
                        (this._lastTextureInsert = found);
                } else {
                    var image = texture._imageData;
                    void 0 != texture._storeID && image && image._invalid && this._updateTextureImageData(gl, image);
                }
                (texture._drawID = this._drawID), (texture._batchID = this._batchID);
            }),
            (p._killTextureObject = function (tex) {
                if (tex) {
                    var gl = this._webGLContext;
                    if (void 0 !== tex._storeID && tex._storeID >= 0) {
                        for (var n in ((this._textureDictionary[tex._storeID] = void 0), this._textureIDs)) this._textureIDs[n] == tex._storeID && delete this._textureIDs[n];
                        tex._imageData && (tex._imageData._storeID = void 0), (tex._imageData = tex._storeID = void 0);
                    }
                    void 0 !== tex._activeIndex && this._batchTextures[tex._activeIndex] === tex && (this._batchTextures[tex._activeIndex] = this._baseTextures[tex._activeIndex]);
                    try {
                        tex._frameBuffer && gl.deleteFramebuffer(tex._frameBuffer), (tex._frameBuffer = void 0);
                    } catch (e) {
                        this.vocalDebug;
                    }
                    try {
                        gl.deleteTexture(tex);
                    } catch (e) {
                        this.vocalDebug;
                    }
                }
            }),
            (p._backupBatchTextures = function (restore, target) {
                var gl = this._webGLContext;
                this._backupTextures || (this._backupTextures = []), void 0 === target && (target = this._backupTextures);
                for (var i = 0; i < this._batchTextureCount; i++)
                    gl.activeTexture(gl.TEXTURE0 + i),
                        restore ? (this._batchTextures[i] = target[i]) : ((target[i] = this._batchTextures[i]), (this._batchTextures[i] = this._baseTextures[i])),
                        gl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]),
                        this.setTextureParams(gl, this._batchTextures[i].isPOT);
                restore && target === this._backupTextures && (this._backupTextures = []);
            }),
            (p._batchDraw = function (sceneGraph, gl, ignoreCache) {
                this._isDrawing > 0 && this._drawBuffers(gl),
                    this._isDrawing++,
                    this._drawID++,
                    (this.batchCardCount = 0),
                    (this.depth = 0),
                    this._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache),
                    (this.batchReason = "drawFinish"),
                    this._drawBuffers(gl),
                    this._isDrawing--;
            }),
            (p._cacheDraw = function (gl, target, filters, manager) {
                var renderTexture,
                    shaderBackup = this._activeShader,
                    blackListBackup = this._slotBlacklist,
                    lastTextureSlot = this._maxTextureSlots - 1,
                    wBackup = this._viewportWidth,
                    hBackup = this._viewportHeight;
                this.protectTextureSlot(lastTextureSlot, !0);
                var mtx = target.getMatrix();
                (mtx = mtx.clone()).scale(1 / manager.scale, 1 / manager.scale), (mtx = mtx.invert()).translate((-manager.offX / manager.scale) * target.scaleX, (-manager.offY / manager.scale) * target.scaleY);
                var container = this._cacheContainer;
                (container.children = [target]),
                    (container.transformMatrix = mtx),
                    this._backupBatchTextures(!1),
                    filters && filters.length
                        ? this._drawFilters(target, filters, manager)
                        : this.isCacheControlled
                        ? (gl.clear(gl.COLOR_BUFFER_BIT), this._batchDraw(container, gl, !0))
                        : (gl.activeTexture(gl.TEXTURE0 + lastTextureSlot),
                          (target.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight)),
                          (renderTexture = target.cacheCanvas),
                          gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer),
                          this.updateViewport(manager._drawWidth, manager._drawHeight),
                          (this._projectionMatrix = this._projectionMatrixFlip),
                          gl.clear(gl.COLOR_BUFFER_BIT),
                          this._batchDraw(container, gl, !0),
                          gl.bindFramebuffer(gl.FRAMEBUFFER, null),
                          this.updateViewport(wBackup, hBackup)),
                    this._backupBatchTextures(!0),
                    this.protectTextureSlot(lastTextureSlot, !1),
                    (this._activeShader = shaderBackup),
                    (this._slotBlacklist = blackListBackup);
            }),
            (p._drawFilters = function (target, filters, manager) {
                var renderTexture,
                    gl = this._webGLContext,
                    lastTextureSlot = this._maxTextureSlots - 1,
                    wBackup = this._viewportWidth,
                    hBackup = this._viewportHeight,
                    container = this._cacheContainer,
                    filterCount = filters.length;
                gl.activeTexture(gl.TEXTURE0 + lastTextureSlot),
                    (renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight)),
                    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer),
                    this.updateViewport(manager._drawWidth, manager._drawHeight),
                    gl.clear(gl.COLOR_BUFFER_BIT),
                    this._batchDraw(container, gl, !0),
                    gl.activeTexture(gl.TEXTURE0),
                    gl.bindTexture(gl.TEXTURE_2D, renderTexture),
                    this.setTextureParams(gl);
                var flipY = !1,
                    i = 0,
                    filter = filters[i];
                do {
                    (this._activeShader = this.getFilterShader(filter)),
                        this._activeShader &&
                            (gl.activeTexture(gl.TEXTURE0 + lastTextureSlot),
                            (renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight)),
                            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer),
                            gl.viewport(0, 0, manager._drawWidth, manager._drawHeight),
                            gl.clear(gl.COLOR_BUFFER_BIT),
                            this._drawCover(gl, flipY),
                            gl.activeTexture(gl.TEXTURE0),
                            gl.bindTexture(gl.TEXTURE_2D, renderTexture),
                            this.setTextureParams(gl),
                            (filterCount > 1 || filters[0]._multiPass) && (flipY = !flipY),
                            (filter = null !== filter._multiPass ? filter._multiPass : filters[++i]));
                } while (filter);
                this.isCacheControlled
                    ? (gl.bindFramebuffer(gl.FRAMEBUFFER, null), this.updateViewport(wBackup, hBackup), (this._activeShader = this.getFilterShader(this)), gl.clear(gl.COLOR_BUFFER_BIT), this._drawCover(gl, flipY))
                    : (flipY &&
                          (gl.activeTexture(gl.TEXTURE0 + lastTextureSlot),
                          (renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight)),
                          gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer),
                          (this._activeShader = this.getFilterShader(this)),
                          gl.viewport(0, 0, manager._drawWidth, manager._drawHeight),
                          gl.clear(gl.COLOR_BUFFER_BIT),
                          this._drawCover(gl, !flipY)),
                      gl.bindFramebuffer(gl.FRAMEBUFFER, null),
                      this.updateViewport(wBackup, hBackup),
                      (target.cacheCanvas = renderTexture));
            }),
            (p._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {
                container._glMtx || (container._glMtx = new createjs.Matrix2D());
                var subL,
                    subT,
                    subR,
                    subB,
                    cMtx = container._glMtx;
                cMtx.copy(concatMtx),
                    container.transformMatrix
                        ? cMtx.appendMatrix(container.transformMatrix)
                        : cMtx.appendTransform(container.x, container.y, container.scaleX, container.scaleY, container.rotation, container.skewX, container.skewY, container.regX, container.regY);
                for (var l = container.children.length, i = 0; i < l; i++) {
                    var item = container.children[i];
                    if (item.visible && concatAlpha)
                        if ((item.cacheCanvas && !ignoreCache) || (item._updateState && item._updateState(), !item.children)) {
                            this.batchCardCount + 1 > this._maxCardsPerBatch && ((this.batchReason = "vertexOverflow"), this._drawBuffers(gl), (this.batchCardCount = 0)), item._glMtx || (item._glMtx = new createjs.Matrix2D());
                            var uvRect,
                                texIndex,
                                image,
                                frame,
                                texture,
                                src,
                                iMtx = item._glMtx;
                            iMtx.copy(cMtx), item.transformMatrix ? iMtx.appendMatrix(item.transformMatrix) : iMtx.appendTransform(item.x, item.y, item.scaleX, item.scaleY, item.rotation, item.skewX, item.skewY, item.regX, item.regY);
                            var useCache = item.cacheCanvas && !ignoreCache;
                            if (2 === item._webGLRenderStyle || useCache) image = (!ignoreCache && item.cacheCanvas) || item.image;
                            else {
                                if (1 !== item._webGLRenderStyle) continue;
                                if (null === (frame = item.spriteSheet.getFrame(item.currentFrame))) continue;
                                image = frame.image;
                            }
                            var uvs = this._uvs,
                                vertices = this._vertices,
                                texI = this._indices,
                                alphas = this._alphas;
                            if (image) {
                                if (void 0 === image._storeID) (texture = this._loadTextureImage(gl, image)), this._insertTextureInBatch(gl, texture);
                                else {
                                    if (!(texture = this._textureDictionary[image._storeID])) {
                                        this.vocalDebug;
                                        continue;
                                    }
                                    texture._batchID !== this._batchID && this._insertTextureInBatch(gl, texture);
                                }
                                if (((texIndex = texture._activeIndex), 2 === item._webGLRenderStyle || useCache))
                                    !useCache && item.sourceRect
                                        ? (item._uvRect || (item._uvRect = {}),
                                          (src = item.sourceRect),
                                          ((uvRect = item._uvRect).t = src.y / image.height),
                                          (uvRect.l = src.x / image.width),
                                          (uvRect.b = (src.y + src.height) / image.height),
                                          (uvRect.r = (src.x + src.width) / image.width),
                                          (subL = 0),
                                          (subT = 0),
                                          (subR = src.width + subL),
                                          (subB = src.height + subT))
                                        : ((uvRect = StageGL.UV_RECT),
                                          useCache
                                              ? ((subL = (src = item.bitmapCache).x + src._filterOffX / src.scale),
                                                (subT = src.y + src._filterOffY / src.scale),
                                                (subR = src._drawWidth / src.scale + subL),
                                                (subB = src._drawHeight / src.scale + subT))
                                              : ((subL = 0), (subT = 0), (subR = image.width + subL), (subB = image.height + subT)));
                                else if (1 === item._webGLRenderStyle) {
                                    var rect = frame.rect;
                                    (uvRect = frame.uvRect) || (uvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, !1)),
                                        (subL = -frame.regX),
                                        (subT = -frame.regY),
                                        (subR = rect.width - frame.regX),
                                        (subB = rect.height - frame.regY);
                                }
                                var offV1 = this.batchCardCount * StageGL.INDICIES_PER_CARD,
                                    offV2 = 2 * offV1;
                                (vertices[offV2] = subL * iMtx.a + subT * iMtx.c + iMtx.tx),
                                    (vertices[offV2 + 1] = subL * iMtx.b + subT * iMtx.d + iMtx.ty),
                                    (vertices[offV2 + 2] = subL * iMtx.a + subB * iMtx.c + iMtx.tx),
                                    (vertices[offV2 + 3] = subL * iMtx.b + subB * iMtx.d + iMtx.ty),
                                    (vertices[offV2 + 4] = subR * iMtx.a + subT * iMtx.c + iMtx.tx),
                                    (vertices[offV2 + 5] = subR * iMtx.b + subT * iMtx.d + iMtx.ty),
                                    (vertices[offV2 + 6] = vertices[offV2 + 2]),
                                    (vertices[offV2 + 7] = vertices[offV2 + 3]),
                                    (vertices[offV2 + 8] = vertices[offV2 + 4]),
                                    (vertices[offV2 + 9] = vertices[offV2 + 5]),
                                    (vertices[offV2 + 10] = subR * iMtx.a + subB * iMtx.c + iMtx.tx),
                                    (vertices[offV2 + 11] = subR * iMtx.b + subB * iMtx.d + iMtx.ty),
                                    (uvs[offV2] = uvRect.l),
                                    (uvs[offV2 + 1] = uvRect.t),
                                    (uvs[offV2 + 2] = uvRect.l),
                                    (uvs[offV2 + 3] = uvRect.b),
                                    (uvs[offV2 + 4] = uvRect.r),
                                    (uvs[offV2 + 5] = uvRect.t),
                                    (uvs[offV2 + 6] = uvRect.l),
                                    (uvs[offV2 + 7] = uvRect.b),
                                    (uvs[offV2 + 8] = uvRect.r),
                                    (uvs[offV2 + 9] = uvRect.t),
                                    (uvs[offV2 + 10] = uvRect.r),
                                    (uvs[offV2 + 11] = uvRect.b),
                                    (texI[offV1] = texI[offV1 + 1] = texI[offV1 + 2] = texI[offV1 + 3] = texI[offV1 + 4] = texI[offV1 + 5] = texIndex),
                                    (alphas[offV1] = alphas[offV1 + 1] = alphas[offV1 + 2] = alphas[offV1 + 3] = alphas[offV1 + 4] = alphas[offV1 + 5] = item.alpha * concatAlpha),
                                    this.batchCardCount++;
                            }
                        } else this._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);
                }
            }),
            (p._drawBuffers = function (gl) {
                if (!(this.batchCardCount <= 0)) {
                    this.vocalDebug;
                    var shaderProgram = this._activeShader,
                        vertexPositionBuffer = this._vertexPositionBuffer,
                        textureIndexBuffer = this._textureIndexBuffer,
                        uvPositionBuffer = this._uvPositionBuffer,
                        alphaBuffer = this._alphaBuffer;
                    gl.useProgram(shaderProgram),
                        gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer),
                        gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices),
                        gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer),
                        gl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices),
                        gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer),
                        gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs),
                        gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer),
                        gl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas),
                        gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);
                    for (var i = 0; i < this._batchTextureCount; i++) {
                        var texture = this._batchTextures[i];
                        gl.activeTexture(gl.TEXTURE0 + i), gl.bindTexture(gl.TEXTURE_2D, texture), this.setTextureParams(gl, texture.isPOT);
                    }
                    gl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount * StageGL.INDICIES_PER_CARD), this._batchID++;
                }
            }),
            (p._drawCover = function (gl, flipY) {
                this._isDrawing > 0 && this._drawBuffers(gl), this.vocalDebug;
                var shaderProgram = this._activeShader,
                    vertexPositionBuffer = this._vertexPositionBuffer,
                    uvPositionBuffer = this._uvPositionBuffer;
                gl.clear(gl.COLOR_BUFFER_BIT),
                    gl.useProgram(shaderProgram),
                    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer),
                    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                    gl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT),
                    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer),
                    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, !1, 0, 0),
                    gl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY ? StageGL.COVER_UV_FLIP : StageGL.COVER_UV),
                    gl.uniform1i(shaderProgram.samplerUniform, 0),
                    gl.uniform1f(shaderProgram.uprightUniform, flipY ? 0 : 1),
                    gl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);
            }),
            (createjs.StageGL = createjs.promote(StageGL, "Stage"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        function Bitmap(imageOrUri) {
            this.DisplayObject_constructor(),
                "string" == typeof imageOrUri ? ((this.image = document.createElement("img")), (this.image.src = imageOrUri)) : (this.image = imageOrUri),
                (this.sourceRect = null),
                (this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP);
        }
        var p = createjs.extend(Bitmap, createjs.DisplayObject);
        (p.initialize = Bitmap),
            (p.isVisible = function () {
                var image = this.image,
                    hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));
                return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && hasContent);
            }),
            (p.draw = function (ctx, ignoreCache) {
                if (this.DisplayObject_draw(ctx, ignoreCache)) return !0;
                var img = this.image,
                    rect = this.sourceRect;
                if ((img.getImage && (img = img.getImage()), !img)) return !0;
                if (rect) {
                    var x1 = rect.x,
                        y1 = rect.y,
                        x2 = x1 + rect.width,
                        y2 = y1 + rect.height,
                        x = 0,
                        y = 0,
                        w = img.width,
                        h = img.height;
                    x1 < 0 && ((x -= x1), (x1 = 0)), x2 > w && (x2 = w), y1 < 0 && ((y -= y1), (y1 = 0)), y2 > h && (y2 = h), ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);
                } else ctx.drawImage(img, 0, 0);
                return !0;
            }),
            (p.getBounds = function () {
                var rect = this.DisplayObject_getBounds();
                if (rect) return rect;
                var image = this.image,
                    o = this.sourceRect || image;
                return image && (image.naturalWidth || image.getContext || image.readyState >= 2) ? this._rectangle.setValues(0, 0, o.width, o.height) : null;
            }),
            (p.clone = function (node) {
                var image = this.image;
                image && node && (image = image.cloneNode());
                var o = new Bitmap(image);
                return this.sourceRect && (o.sourceRect = this.sourceRect.clone()), this._cloneProps(o), o;
            }),
            (p.toString = function () {
                return "[Bitmap (name=" + this.name + ")]";
            }),
            (createjs.Bitmap = createjs.promote(Bitmap, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Sprite(spriteSheet, frameOrAnimation) {
            this.DisplayObject_constructor(),
                (this.currentFrame = 0),
                (this.currentAnimation = null),
                (this.paused = !0),
                (this.spriteSheet = spriteSheet),
                (this.currentAnimationFrame = 0),
                (this.framerate = 0),
                (this._animation = null),
                (this._currentFrame = null),
                (this._skipAdvance = !1),
                (this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE),
                null != frameOrAnimation && this.gotoAndPlay(frameOrAnimation);
        }
        var p = createjs.extend(Sprite, createjs.DisplayObject);
        (p.initialize = Sprite),
            (p.isVisible = function () {
                var hasContent = this.cacheCanvas || this.spriteSheet.complete;
                return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && hasContent);
            }),
            (p.draw = function (ctx, ignoreCache) {
                if (this.DisplayObject_draw(ctx, ignoreCache)) return !0;
                this._normalizeFrame();
                var o = this.spriteSheet.getFrame(0 | this._currentFrame);
                if (!o) return !1;
                var rect = o.rect;
                return rect.width && rect.height && ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height), !0;
            }),
            (p.play = function () {
                this.paused = !1;
            }),
            (p.stop = function () {
                this.paused = !0;
            }),
            (p.gotoAndPlay = function (frameOrAnimation) {
                (this.paused = !1), (this._skipAdvance = !0), this._goto(frameOrAnimation);
            }),
            (p.gotoAndStop = function (frameOrAnimation) {
                (this.paused = !0), this._goto(frameOrAnimation);
            }),
            (p.advance = function (time) {
                var fps = this.framerate || this.spriteSheet.framerate,
                    t = fps && null != time ? time / (1e3 / fps) : 1;
                this._normalizeFrame(t);
            }),
            (p.getBounds = function () {
                return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);
            }),
            (p.clone = function () {
                return this._cloneProps(new Sprite(this.spriteSheet));
            }),
            (p.toString = function () {
                return "[Sprite (name=" + this.name + ")]";
            }),
            (p._cloneProps = function (o) {
                return (
                    this.DisplayObject__cloneProps(o),
                    (o.currentFrame = this.currentFrame),
                    (o.currentAnimation = this.currentAnimation),
                    (o.paused = this.paused),
                    (o.currentAnimationFrame = this.currentAnimationFrame),
                    (o.framerate = this.framerate),
                    (o._animation = this._animation),
                    (o._currentFrame = this._currentFrame),
                    (o._skipAdvance = this._skipAdvance),
                    o
                );
            }),
            (p._tick = function (evtObj) {
                this.paused || (this._skipAdvance || this.advance(evtObj && evtObj.delta), (this._skipAdvance = !1)), this.DisplayObject__tick(evtObj);
            }),
            (p._normalizeFrame = function (frameDelta) {
                frameDelta = frameDelta || 0;
                var l,
                    animation = this._animation,
                    paused = this.paused,
                    frame = this._currentFrame;
                if (animation) {
                    var speed = animation.speed || 1,
                        animFrame = this.currentAnimationFrame;
                    if (animFrame + frameDelta * speed >= (l = animation.frames.length)) {
                        var next = animation.next;
                        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) return;
                        if (next) return this._goto(next, frameDelta - (l - animFrame) / speed);
                        (this.paused = !0), (animFrame = animation.frames.length - 1);
                    } else animFrame += frameDelta * speed;
                    (this.currentAnimationFrame = animFrame), (this._currentFrame = animation.frames[0 | animFrame]);
                } else if ((frame = this._currentFrame += frameDelta) >= (l = this.spriteSheet.getNumFrames()) && l > 0 && !this._dispatchAnimationEnd(animation, frame, paused, l - 1) && (this._currentFrame -= l) >= l)
                    return this._normalizeFrame();
                (frame = 0 | this._currentFrame), this.currentFrame != frame && ((this.currentFrame = frame), this.dispatchEvent("change"));
            }),
            (p._dispatchAnimationEnd = function (animation, frame, paused, next, end) {
                var name = animation ? animation.name : null;
                if (this.hasEventListener("animationend")) {
                    var evt = new createjs.Event("animationend");
                    (evt.name = name), (evt.next = next), this.dispatchEvent(evt);
                }
                var changed = this._animation != animation || this._currentFrame != frame;
                return changed || paused || !this.paused || ((this.currentAnimationFrame = end), (changed = !0)), changed;
            }),
            (p._goto = function (frameOrAnimation, frame) {
                if (((this.currentAnimationFrame = 0), isNaN(frameOrAnimation))) {
                    var data = this.spriteSheet.getAnimation(frameOrAnimation);
                    data && ((this._animation = data), (this.currentAnimation = frameOrAnimation), this._normalizeFrame(frame));
                } else (this.currentAnimation = this._animation = null), (this._currentFrame = frameOrAnimation), this._normalizeFrame();
            }),
            (createjs.Sprite = createjs.promote(Sprite, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Shape(graphics) {
            this.DisplayObject_constructor(), (this.graphics = graphics || new createjs.Graphics());
        }
        var p = createjs.extend(Shape, createjs.DisplayObject);
        (p.isVisible = function () {
            var hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());
            return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && hasContent);
        }),
            (p.draw = function (ctx, ignoreCache) {
                return !!this.DisplayObject_draw(ctx, ignoreCache) || (this.graphics.draw(ctx, this), !0);
            }),
            (p.clone = function (recursive) {
                var g = recursive && this.graphics ? this.graphics.clone() : this.graphics;
                return this._cloneProps(new Shape(g));
            }),
            (p.toString = function () {
                return "[Shape (name=" + this.name + ")]";
            }),
            (createjs.Shape = createjs.promote(Shape, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Text(text, font, color) {
            this.DisplayObject_constructor(),
                (this.text = text),
                (this.font = font),
                (this.color = color),
                (this.textAlign = "left"),
                (this.textBaseline = "top"),
                (this.maxWidth = null),
                (this.outline = 0),
                (this.lineHeight = 0),
                (this.lineWidth = null);
        }
        var p = createjs.extend(Text, createjs.DisplayObject),
            canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
        canvas.getContext && ((Text._workingContext = canvas.getContext("2d")), (canvas.width = canvas.height = 1)),
            (Text.H_OFFSETS = { start: 0, left: 0, center: -0.5, end: -1, right: -1 }),
            (Text.V_OFFSETS = { top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1 }),
            (p.isVisible = function () {
                var hasContent = this.cacheCanvas || (null != this.text && "" !== this.text);
                return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && hasContent);
            }),
            (p.draw = function (ctx, ignoreCache) {
                if (this.DisplayObject_draw(ctx, ignoreCache)) return !0;
                var col = this.color || "#000";
                return this.outline ? ((ctx.strokeStyle = col), (ctx.lineWidth = 1 * this.outline)) : (ctx.fillStyle = col), this._drawText(this._prepContext(ctx)), !0;
            }),
            (p.getMeasuredWidth = function () {
                return this._getMeasuredWidth(this.text);
            }),
            (p.getMeasuredLineHeight = function () {
                return 1.2 * this._getMeasuredWidth("M");
            }),
            (p.getMeasuredHeight = function () {
                return this._drawText(null, {}).height;
            }),
            (p.getBounds = function () {
                var rect = this.DisplayObject_getBounds();
                if (rect) return rect;
                if (null == this.text || "" === this.text) return null;
                var o = this._drawText(null, {}),
                    w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width,
                    x = w * Text.H_OFFSETS[this.textAlign || "left"],
                    y = (this.lineHeight || this.getMeasuredLineHeight()) * Text.V_OFFSETS[this.textBaseline || "top"];
                return this._rectangle.setValues(x, y, w, o.height);
            }),
            (p.getMetrics = function () {
                var o = { lines: [] };
                return (o.lineHeight = this.lineHeight || this.getMeasuredLineHeight()), (o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || "top"]), this._drawText(null, o, o.lines);
            }),
            (p.clone = function () {
                return this._cloneProps(new Text(this.text, this.font, this.color));
            }),
            (p.toString = function () {
                return "[Text (text=" + (this.text.length > 20 ? this.text.substr(0, 17) + "..." : this.text) + ")]";
            }),
            (p._cloneProps = function (o) {
                return (
                    this.DisplayObject__cloneProps(o),
                    (o.textAlign = this.textAlign),
                    (o.textBaseline = this.textBaseline),
                    (o.maxWidth = this.maxWidth),
                    (o.outline = this.outline),
                    (o.lineHeight = this.lineHeight),
                    (o.lineWidth = this.lineWidth),
                    o
                );
            }),
            (p._prepContext = function (ctx) {
                return (ctx.font = this.font || "10px sans-serif"), (ctx.textAlign = this.textAlign || "left"), (ctx.textBaseline = this.textBaseline || "top"), (ctx.lineJoin = "miter"), (ctx.miterLimit = 2.5), ctx;
            }),
            (p._drawText = function (ctx, o, lines) {
                var paint = !!ctx;
                paint || ((ctx = Text._workingContext).save(), this._prepContext(ctx));
                for (var lineHeight = this.lineHeight || this.getMeasuredLineHeight(), maxW = 0, count = 0, hardLines = String(this.text).split(/(?:\r\n|\r|\n)/), i = 0, l = hardLines.length; i < l; i++) {
                    var str = hardLines[i],
                        w = null;
                    if (null != this.lineWidth && (w = ctx.measureText(str).width) > this.lineWidth) {
                        var words = str.split(/(\s)/);
                        (str = words[0]), (w = ctx.measureText(str).width);
                        for (var j = 1, jl = words.length; j < jl; j += 2) {
                            var wordW = ctx.measureText(words[j] + words[j + 1]).width;
                            w + wordW > this.lineWidth
                                ? (paint && this._drawTextLine(ctx, str, count * lineHeight), lines && lines.push(str), w > maxW && (maxW = w), (str = words[j + 1]), (w = ctx.measureText(str).width), count++)
                                : ((str += words[j] + words[j + 1]), (w += wordW));
                        }
                    }
                    paint && this._drawTextLine(ctx, str, count * lineHeight), lines && lines.push(str), o && null == w && (w = ctx.measureText(str).width), w > maxW && (maxW = w), count++;
                }
                return o && ((o.width = maxW), (o.height = count * lineHeight)), paint || ctx.restore(), o;
            }),
            (p._drawTextLine = function (ctx, text, y) {
                this.outline ? ctx.strokeText(text, 0, y, this.maxWidth || 65535) : ctx.fillText(text, 0, y, this.maxWidth || 65535);
            }),
            (p._getMeasuredWidth = function (text) {
                var ctx = Text._workingContext;
                ctx.save();
                var w = this._prepContext(ctx).measureText(text).width;
                return ctx.restore(), w;
            }),
            (createjs.Text = createjs.promote(Text, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function BitmapText(text, spriteSheet) {
            this.Container_constructor(),
                (this.text = text || ""),
                (this.spriteSheet = spriteSheet),
                (this.lineHeight = 0),
                (this.letterSpacing = 0),
                (this.spaceWidth = 0),
                (this._oldProps = { text: 0, spriteSheet: 0, lineHeight: 0, letterSpacing: 0, spaceWidth: 0 }),
                (this._oldStage = null),
                (this._drawAction = null);
        }
        var p = createjs.extend(BitmapText, createjs.Container);
        (BitmapText.maxPoolSize = 100),
            (BitmapText._spritePool = []),
            (p.draw = function (ctx, ignoreCache) {
                this.DisplayObject_draw(ctx, ignoreCache) || (this._updateState(), this.Container_draw(ctx, ignoreCache));
            }),
            (p.getBounds = function () {
                return this._updateText(), this.Container_getBounds();
            }),
            (p.isVisible = function () {
                var hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);
                return !!(this.visible && this.alpha > 0 && 0 !== this.scaleX && 0 !== this.scaleY && hasContent);
            }),
            (p.clone = function () {
                return this._cloneProps(new BitmapText(this.text, this.spriteSheet));
            }),
            (p.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function () {}),
            (p._updateState = function () {
                this._updateText();
            }),
            (p._cloneProps = function (o) {
                return this.Container__cloneProps(o), (o.lineHeight = this.lineHeight), (o.letterSpacing = this.letterSpacing), (o.spaceWidth = this.spaceWidth), o;
            }),
            (p._getFrameIndex = function (character, spriteSheet) {
                var c,
                    o = spriteSheet.getAnimation(character);
                return o || (character != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null), c && (o = spriteSheet.getAnimation(c))), o && o.frames[0];
            }),
            (p._getFrame = function (character, spriteSheet) {
                var index = this._getFrameIndex(character, spriteSheet);
                return null == index ? index : spriteSheet.getFrame(index);
            }),
            (p._getLineHeight = function (ss) {
                var frame = this._getFrame("1", ss) || this._getFrame("T", ss) || this._getFrame("L", ss) || ss.getFrame(0);
                return frame ? frame.rect.height : 1;
            }),
            (p._getSpaceWidth = function (ss) {
                var frame = this._getFrame("1", ss) || this._getFrame("l", ss) || this._getFrame("e", ss) || this._getFrame("a", ss) || ss.getFrame(0);
                return frame ? frame.rect.width : 1;
            }),
            (p._updateText = function () {
                var sprite,
                    x = 0,
                    y = 0,
                    o = this._oldProps,
                    change = !1,
                    spaceW = this.spaceWidth,
                    lineH = this.lineHeight,
                    ss = this.spriteSheet,
                    pool = BitmapText._spritePool,
                    kids = this.children,
                    childIndex = 0,
                    numKids = kids.length;
                for (var n in o) o[n] != this[n] && ((o[n] = this[n]), (change = !0));
                if (change) {
                    var hasSpace = !!this._getFrame(" ", ss);
                    hasSpace || spaceW || (spaceW = this._getSpaceWidth(ss)), lineH || (lineH = this._getLineHeight(ss));
                    for (var i = 0, l = this.text.length; i < l; i++) {
                        var character = this.text.charAt(i);
                        if (" " != character || hasSpace)
                            if ("\n" != character && "\r" != character) {
                                var index = this._getFrameIndex(character, ss);
                                null != index &&
                                    (childIndex < numKids ? (sprite = kids[childIndex]) : (kids.push((sprite = pool.length ? pool.pop() : new createjs.Sprite())), (sprite.parent = this), numKids++),
                                    (sprite.spriteSheet = ss),
                                    sprite.gotoAndStop(index),
                                    (sprite.x = x),
                                    (sprite.y = y),
                                    childIndex++,
                                    (x += sprite.getBounds().width + this.letterSpacing));
                            } else "\r" == character && "\n" == this.text.charAt(i + 1) && i++, (x = 0), (y += lineH);
                        else x += spaceW;
                    }
                    for (; numKids > childIndex; ) pool.push((sprite = kids.pop())), (sprite.parent = null), numKids--;
                    pool.length > BitmapText.maxPoolSize && (pool.length = BitmapText.maxPoolSize);
                }
            }),
            (createjs.BitmapText = createjs.promote(BitmapText, "Container"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function MovieClip(props) {
            var mode, startPosition, loop, labels;
            this.Container_constructor(),
                !MovieClip.inited && MovieClip.init(),
                props instanceof String || arguments.length > 1
                    ? ((mode = props), (startPosition = arguments[1]), (loop = arguments[2]), (labels = arguments[3]), null == loop && (loop = -1), (props = null))
                    : props && ((mode = props.mode), (startPosition = props.startPosition), (loop = props.loop), (labels = props.labels)),
                props || (props = { labels: labels }),
                (this.mode = mode || MovieClip.INDEPENDENT),
                (this.startPosition = startPosition || 0),
                (this.loop = !0 === loop ? -1 : loop || 0),
                (this.currentFrame = 0),
                (this.paused = props.paused || !1),
                (this.actionsEnabled = !0),
                (this.autoReset = !0),
                (this.frameBounds = this.frameBounds || props.frameBounds),
                (this.framerate = null),
                (props.useTicks = props.paused = !0),
                (this.timeline = new createjs.Timeline(props)),
                (this._synchOffset = 0),
                (this._rawPosition = -1),
                (this._bound_resolveState = this._resolveState.bind(this)),
                (this._t = 0),
                (this._managed = {});
        }
        var p = createjs.extend(MovieClip, createjs.Container);
        (MovieClip.INDEPENDENT = "independent"),
            (MovieClip.SINGLE_FRAME = "single"),
            (MovieClip.SYNCHED = "synched"),
            (MovieClip.inited = !1),
            (MovieClip.init = function () {
                MovieClip.inited || (MovieClipPlugin.install(), (MovieClip.inited = !0));
            }),
            (p._getLabels = function () {
                return this.timeline.getLabels();
            }),
            (p.getLabels = createjs.deprecate(p._getLabels, "MovieClip.getLabels")),
            (p._getCurrentLabel = function () {
                return this.timeline.currentLabel;
            }),
            (p.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, "MovieClip.getCurrentLabel")),
            (p._getDuration = function () {
                return this.timeline.duration;
            }),
            (p.getDuration = createjs.deprecate(p._getDuration, "MovieClip.getDuration"));
        try {
            Object.defineProperties(p, { labels: { get: p._getLabels }, currentLabel: { get: p._getCurrentLabel }, totalFrames: { get: p._getDuration }, duration: { get: p._getDuration } });
        } catch (e) {}
        function MovieClipPlugin() {
            throw "MovieClipPlugin cannot be instantiated.";
        }
        (p.initialize = MovieClip),
            (p.isVisible = function () {
                return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY);
            }),
            (p.draw = function (ctx, ignoreCache) {
                return !!this.DisplayObject_draw(ctx, ignoreCache) || (this._updateState(), this.Container_draw(ctx, ignoreCache), !0);
            }),
            (p.play = function () {
                this.paused = !1;
            }),
            (p.stop = function () {
                this.paused = !0;
            }),
            (p.gotoAndPlay = function (positionOrLabel) {
                (this.paused = !1), this._goto(positionOrLabel);
            }),
            (p.gotoAndStop = function (positionOrLabel) {
                (this.paused = !0), this._goto(positionOrLabel);
            }),
            (p.advance = function (time) {
                var independent = MovieClip.INDEPENDENT;
                if (this.mode === independent) {
                    for (var o = this, fps = o.framerate; (o = o.parent) && null === fps; ) o.mode === independent && (fps = o._framerate);
                    if (((this._framerate = fps), !this.paused)) {
                        var t = null !== fps && -1 !== fps && null !== time ? time / (1e3 / fps) + this._t : 1,
                            frames = 0 | t;
                        for (this._t = t - frames; frames--; ) this._updateTimeline(this._rawPosition + 1, !1);
                    }
                }
            }),
            (p.clone = function () {
                throw "MovieClip cannot be cloned.";
            }),
            (p.toString = function () {
                return "[MovieClip (name=" + this.name + ")]";
            }),
            (p._updateState = function () {
                (-1 !== this._rawPosition && this.mode === MovieClip.INDEPENDENT) || this._updateTimeline(-1);
            }),
            (p._tick = function (evtObj) {
                this.advance(evtObj && evtObj.delta), this.Container__tick(evtObj);
            }),
            (p._goto = function (positionOrLabel) {
                var pos = this.timeline.resolve(positionOrLabel);
                null != pos && ((this._t = 0), this._updateTimeline(pos, !0));
            }),
            (p._reset = function () {
                (this._rawPosition = -1), (this._t = this.currentFrame = 0), (this.paused = !1);
            }),
            (p._updateTimeline = function (rawPosition, jump) {
                var synced = this.mode !== MovieClip.INDEPENDENT,
                    tl = this.timeline;
                synced && (rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset)),
                    rawPosition < 0 && (rawPosition = 0),
                    (this._rawPosition !== rawPosition || synced) && ((this._rawPosition = rawPosition), (tl.loop = this.loop), tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState));
            }),
            (p._renderFirstFrame = function () {
                var tl = this.timeline,
                    pos = tl.rawPosition;
                tl.setPosition(0, !0, !0, this._bound_resolveState), (tl.rawPosition = pos);
            }),
            (p._resolveState = function () {
                var tl = this.timeline;
                for (var n in ((this.currentFrame = tl.position), this._managed)) this._managed[n] = 1;
                for (var tweens = tl.tweens, i = 0, l = tweens.length; i < l; i++) {
                    var tween = tweens[i],
                        target = tween.target;
                    if (target !== this && !tween.passive) {
                        var offset = tween._stepPosition;
                        target instanceof createjs.DisplayObject ? this._addManagedChild(target, offset) : this._setState(target.state, offset);
                    }
                }
                var kids = this.children;
                for (i = kids.length - 1; i >= 0; i--) {
                    var id = kids[i].id;
                    1 === this._managed[id] && (this.removeChildAt(i), delete this._managed[id]);
                }
            }),
            (p._setState = function (state, offset) {
                if (state)
                    for (var i = state.length - 1; i >= 0; i--) {
                        var o = state[i],
                            target = o.t,
                            props = o.p;
                        for (var n in props) target[n] = props[n];
                        this._addManagedChild(target, offset);
                    }
            }),
            (p._addManagedChild = function (child, offset) {
                child._off ||
                    (this.addChildAt(child, 0),
                    child instanceof MovieClip && ((child._synchOffset = offset), child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id] && child._reset()),
                    (this._managed[child.id] = 2));
            }),
            (p._getBounds = function (matrix, ignoreTransform) {
                var bounds = this.DisplayObject_getBounds();
                return (
                    bounds || (this.frameBounds && (bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]))), bounds ? this._transformBounds(bounds, matrix, ignoreTransform) : this.Container__getBounds(matrix, ignoreTransform)
                );
            }),
            (createjs.MovieClip = createjs.promote(MovieClip, "Container")),
            (MovieClipPlugin.priority = 100),
            (MovieClipPlugin.ID = "MovieClip"),
            (MovieClipPlugin.install = function () {
                createjs.Tween._installPlugin(MovieClipPlugin);
            }),
            (MovieClipPlugin.init = function (tween, prop, value) {
                "startPosition" === prop && tween.target instanceof MovieClip && tween._addPlugin(MovieClipPlugin);
            }),
            (MovieClipPlugin.step = function (tween, step, props) {}),
            (MovieClipPlugin.change = function (tween, step, prop, value, ratio, end) {
                if ("startPosition" === prop) return 1 === ratio ? step.props[prop] : step.prev.props[prop];
            });
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SpriteSheetUtils() {
            throw "SpriteSheetUtils cannot be instantiated";
        }
        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
        canvas.getContext && ((SpriteSheetUtils._workingCanvas = canvas), (SpriteSheetUtils._workingContext = canvas.getContext("2d")), (canvas.width = canvas.height = 1)),
            (SpriteSheetUtils.extractFrame = function (spriteSheet, frameOrAnimation) {
                isNaN(frameOrAnimation) && (frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0]);
                var data = spriteSheet.getFrame(frameOrAnimation);
                if (!data) return null;
                var r = data.rect,
                    canvas = SpriteSheetUtils._workingCanvas;
                (canvas.width = r.width), (canvas.height = r.height), SpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);
                var img = document.createElement("img");
                return (img.src = canvas.toDataURL("image/png")), img;
            }),
            (SpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, "SpriteSheetUtils.addFlippedFrames")),
            (SpriteSheetUtils.mergeAlpha = createjs.deprecate(null, "SpriteSheetUtils.mergeAlpha")),
            (SpriteSheetUtils._flip = function (spriteSheet, count, h, v) {
                for (var imgs = spriteSheet._images, canvas = SpriteSheetUtils._workingCanvas, ctx = SpriteSheetUtils._workingContext, il = imgs.length / count, i = 0; i < il; i++) {
                    var src = imgs[i];
                    (src.__tmp = i),
                        ctx.setTransform(1, 0, 0, 1, 0, 0),
                        ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1),
                        (canvas.width = src.width),
                        (canvas.height = src.height),
                        ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0),
                        ctx.drawImage(src, 0, 0);
                    var img = document.createElement("img");
                    (img.src = canvas.toDataURL("image/png")), (img.width = src.width || src.naturalWidth), (img.height = src.height || src.naturalHeight), imgs.push(img);
                }
                var frames = spriteSheet._frames,
                    fl = frames.length / count;
                for (i = 0; i < fl; i++) {
                    var rect = (src = frames[i]).rect.clone(),
                        frame = { image: (img = imgs[src.image.__tmp + il * count]), rect: rect, regX: src.regX, regY: src.regY };
                    h && ((rect.x = (img.width || img.naturalWidth) - rect.x - rect.width), (frame.regX = rect.width - src.regX)),
                        v && ((rect.y = (img.height || img.naturalHeight) - rect.y - rect.height), (frame.regY = rect.height - src.regY)),
                        frames.push(frame);
                }
                var sfx = "_" + (h ? "h" : "") + (v ? "v" : ""),
                    names = spriteSheet._animations,
                    data = spriteSheet._data,
                    al = names.length / count;
                for (i = 0; i < al; i++) {
                    var name = names[i],
                        anim = { name: name + sfx, speed: (src = data[name]).speed, next: src.next, frames: [] };
                    src.next && (anim.next += sfx);
                    for (var j = 0, l = (frames = src.frames).length; j < l; j++) anim.frames.push(frames[j] + fl * count);
                    (data[anim.name] = anim), names.push(anim.name);
                }
            }),
            (createjs.SpriteSheetUtils = SpriteSheetUtils);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SpriteSheetBuilder(framerate) {
            this.EventDispatcher_constructor(),
                (this.maxWidth = 2048),
                (this.maxHeight = 2048),
                (this.spriteSheet = null),
                (this.scale = 1),
                (this.padding = 1),
                (this.timeSlice = 0.3),
                (this.progress = -1),
                (this.framerate = framerate || 0),
                (this._frames = []),
                (this._animations = {}),
                (this._data = null),
                (this._nextFrameIndex = 0),
                (this._index = 0),
                (this._timerID = null),
                (this._scale = 1);
        }
        var p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);
        (SpriteSheetBuilder.ERR_DIMENSIONS = "frame dimensions exceed max spritesheet dimensions"),
            (SpriteSheetBuilder.ERR_RUNNING = "a build is already running"),
            (p.addFrame = function (source, sourceRect, scale, setupFunction, setupData) {
                if (this._data) throw SpriteSheetBuilder.ERR_RUNNING;
                var rect = sourceRect || source.bounds || source.nominalBounds;
                return (
                    !rect && source.getBounds && (rect = source.getBounds()),
                    rect ? ((scale = scale || 1), this._frames.push({ source: source, sourceRect: rect, scale: scale, funct: setupFunction, data: setupData, index: this._frames.length, height: rect.height * scale }) - 1) : null
                );
            }),
            (p.addAnimation = function (name, frames, next, speed) {
                if (this._data) throw SpriteSheetBuilder.ERR_RUNNING;
                this._animations[name] = { frames: frames, next: next, speed: speed };
            }),
            (p.addMovieClip = function (source, sourceRect, scale, setupFunction, setupData, labelFunction) {
                if (this._data) throw SpriteSheetBuilder.ERR_RUNNING;
                var rects = source.frameBounds,
                    rect = sourceRect || source.bounds || source.nominalBounds;
                if ((!rect && source.getBounds && (rect = source.getBounds()), rect || rects)) {
                    var i,
                        l,
                        baseFrameIndex = this._frames.length,
                        duration = source.timeline.duration;
                    for (i = 0; i < duration; i++) {
                        var r = rects && rects[i] ? rects[i] : rect;
                        this.addFrame(source, r, scale, this._setupMovieClipFrame, { i: i, f: setupFunction, d: setupData });
                    }
                    var labels = source.timeline._labels,
                        lbls = [];
                    for (var n in labels) lbls.push({ index: labels[n], label: n });
                    if (lbls.length)
                        for (
                            lbls.sort(function (a, b) {
                                return a.index - b.index;
                            }),
                                i = 0,
                                l = lbls.length;
                            i < l;
                            i++
                        ) {
                            for (var label = lbls[i].label, start = baseFrameIndex + lbls[i].index, end = baseFrameIndex + (i == l - 1 ? duration : lbls[i + 1].index), frames = [], j = start; j < end; j++) frames.push(j);
                            (labelFunction && !(label = labelFunction(label, source, start, end))) || this.addAnimation(label, frames, !0);
                        }
                }
            }),
            (p.build = function () {
                if (this._data) throw SpriteSheetBuilder.ERR_RUNNING;
                for (this._startBuild(); this._drawNext(); );
                return this._endBuild(), this.spriteSheet;
            }),
            (p.buildAsync = function (timeSlice) {
                if (this._data) throw SpriteSheetBuilder.ERR_RUNNING;
                (this.timeSlice = timeSlice), this._startBuild();
                var _this = this;
                this._timerID = setTimeout(function () {
                    _this._run();
                }, 50 - 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)));
            }),
            (p.stopAsync = function () {
                clearTimeout(this._timerID), (this._data = null);
            }),
            (p.clone = function () {
                throw "SpriteSheetBuilder cannot be cloned.";
            }),
            (p.toString = function () {
                return "[SpriteSheetBuilder]";
            }),
            (p._startBuild = function () {
                var pad = this.padding || 0;
                (this.progress = 0), (this.spriteSheet = null), (this._index = 0), (this._scale = this.scale);
                var dataFrames = [];
                this._data = { images: [], frames: dataFrames, framerate: this.framerate, animations: this._animations };
                var frames = this._frames.slice();
                if (
                    (frames.sort(function (a, b) {
                        return a.height <= b.height ? -1 : 1;
                    }),
                    frames[frames.length - 1].height + 2 * pad > this.maxHeight)
                )
                    throw SpriteSheetBuilder.ERR_DIMENSIONS;
                for (var y = 0, x = 0, img = 0; frames.length; ) {
                    var o = this._fillRow(frames, y, img, dataFrames, pad);
                    if ((o.w > x && (x = o.w), (y += o.h), !o.h || !frames.length)) {
                        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
                        (canvas.width = this._getSize(x, this.maxWidth)), (canvas.height = this._getSize(y, this.maxHeight)), (this._data.images[img] = canvas), o.h || ((x = y = 0), img++);
                    }
                }
            }),
            (p._setupMovieClipFrame = function (source, data) {
                var ae = source.actionsEnabled;
                (source.actionsEnabled = !1), source.gotoAndStop(data.i), (source.actionsEnabled = ae), data.f && data.f(source, data.d, data.i);
            }),
            (p._getSize = function (size, max) {
                for (var pow = 4; Math.pow(2, ++pow) < size; );
                return Math.min(max, Math.pow(2, pow));
            }),
            (p._fillRow = function (frames, y, img, dataFrames, pad) {
                for (var w = this.maxWidth, h = this.maxHeight - (y += pad), x = pad, height = 0, i = frames.length - 1; i >= 0; i--) {
                    var frame = frames[i],
                        sc = this._scale * frame.scale,
                        rect = frame.sourceRect,
                        source = frame.source,
                        rx = Math.floor(sc * rect.x - pad),
                        ry = Math.floor(sc * rect.y - pad),
                        rh = Math.ceil(sc * rect.height + 2 * pad),
                        rw = Math.ceil(sc * rect.width + 2 * pad);
                    if (rw > w) throw SpriteSheetBuilder.ERR_DIMENSIONS;
                    rh > h ||
                        x + rw > w ||
                        ((frame.img = img),
                        (frame.rect = new createjs.Rectangle(x, y, rw, rh)),
                        (height = height || rh),
                        frames.splice(i, 1),
                        (dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)]),
                        (x += rw));
                }
                return { w: x, h: height };
            }),
            (p._endBuild = function () {
                (this.spriteSheet = new createjs.SpriteSheet(this._data)), (this._data = null), (this.progress = 1), this.dispatchEvent("complete");
            }),
            (p._run = function () {
                for (var ts = 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)), t = new Date().getTime() + ts, complete = !1; t > new Date().getTime(); )
                    if (!this._drawNext()) {
                        complete = !0;
                        break;
                    }
                if (complete) this._endBuild();
                else {
                    var _this = this;
                    this._timerID = setTimeout(function () {
                        _this._run();
                    }, 50 - ts);
                }
                var p = (this.progress = this._index / this._frames.length);
                if (this.hasEventListener("progress")) {
                    var evt = new createjs.Event("progress");
                    (evt.progress = p), this.dispatchEvent(evt);
                }
            }),
            (p._drawNext = function () {
                var frame = this._frames[this._index],
                    sc = frame.scale * this._scale,
                    rect = frame.rect,
                    sourceRect = frame.sourceRect,
                    ctx = this._data.images[frame.img].getContext("2d");
                return (
                    frame.funct && frame.funct(frame.source, frame.data),
                    ctx.save(),
                    ctx.beginPath(),
                    ctx.rect(rect.x, rect.y, rect.width, rect.height),
                    ctx.clip(),
                    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc)),
                    ctx.scale(sc, sc),
                    frame.source.draw(ctx),
                    ctx.restore(),
                    ++this._index < this._frames.length
                );
            }),
            (createjs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, "EventDispatcher"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function DOMElement(htmlElement) {
            this.DisplayObject_constructor(), "string" == typeof htmlElement && (htmlElement = document.getElementById(htmlElement)), (this.mouseEnabled = !1);
            var style = htmlElement.style;
            (style.position = "absolute"),
                (style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = "0% 0%"),
                (this.htmlElement = htmlElement),
                (this._oldProps = null),
                (this._oldStage = null),
                (this._drawAction = null);
        }
        var p = createjs.extend(DOMElement, createjs.DisplayObject);
        (p.isVisible = function () {
            return null != this.htmlElement;
        }),
            (p.draw = function (ctx, ignoreCache) {
                return !0;
            }),
            (p.cache = function () {}),
            (p.uncache = function () {}),
            (p.updateCache = function () {}),
            (p.hitTest = function () {}),
            (p.localToGlobal = function () {}),
            (p.globalToLocal = function () {}),
            (p.localToLocal = function () {}),
            (p.clone = function () {
                throw "DOMElement cannot be cloned.";
            }),
            (p.toString = function () {
                return "[DOMElement (name=" + this.name + ")]";
            }),
            (p._tick = function (evtObj) {
                var stage = this.stage;
                stage && stage !== this._oldStage && (this._drawAction && stage.off("drawend", this._drawAction), (this._drawAction = stage.on("drawend", this._handleDrawEnd, this)), (this._oldStage = stage)),
                    this.DisplayObject__tick(evtObj);
            }),
            (p._handleDrawEnd = function (evt) {
                var o = this.htmlElement;
                if (o) {
                    var style = o.style,
                        props = this.getConcatenatedDisplayProps(this._props),
                        mtx = props.matrix,
                        visibility = props.visible ? "visible" : "hidden";
                    if ((visibility != style.visibility && (style.visibility = visibility), props.visible)) {
                        var oldProps = this._oldProps,
                            oldMtx = oldProps && oldProps.matrix,
                            n = 1e4;
                        if (!oldMtx || !oldMtx.equals(mtx)) {
                            var str = "matrix(" + ((mtx.a * n) | 0) / n + "," + ((mtx.b * n) | 0) / n + "," + ((mtx.c * n) | 0) / n + "," + ((mtx.d * n) | 0) / n + "," + ((mtx.tx + 0.5) | 0);
                            (style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + "," + ((mtx.ty + 0.5) | 0) + ")"),
                                (style.MozTransform = str + "px," + ((mtx.ty + 0.5) | 0) + "px)"),
                                oldProps || (oldProps = this._oldProps = new createjs.DisplayProps(!0, null)),
                                oldProps.matrix.copy(mtx);
                        }
                        oldProps.alpha != props.alpha && ((style.opacity = "" + ((props.alpha * n) | 0) / n), (oldProps.alpha = props.alpha));
                    }
                }
            }),
            (createjs.DOMElement = createjs.promote(DOMElement, "DisplayObject"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Filter() {
            (this.usesContext = !1), (this._multiPass = null), (this.VTX_SHADER_BODY = null), (this.FRAG_SHADER_BODY = null);
        }
        var p = Filter.prototype;
        (p.getBounds = function (rect) {
            return rect;
        }),
            (p.shaderParamSetup = function (gl, stage, shaderProgram) {}),
            (p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {
                (targetCtx = targetCtx || ctx), null == targetX && (targetX = x), null == targetY && (targetY = y);
                try {
                    var imageData = ctx.getImageData(x, y, width, height);
                } catch (e) {
                    return !1;
                }
                return !!this._applyFilter(imageData) && (targetCtx.putImageData(imageData, targetX, targetY), !0);
            }),
            (p.toString = function () {
                return "[Filter]";
            }),
            (p.clone = function () {
                return new Filter();
            }),
            (p._applyFilter = function (imageData) {
                return !0;
            }),
            (createjs.Filter = Filter);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function BitmapCache() {
            (this.width = void 0),
                (this.height = void 0),
                (this.x = void 0),
                (this.y = void 0),
                (this.scale = 1),
                (this.offX = 0),
                (this.offY = 0),
                (this.cacheID = 0),
                (this._filterOffX = 0),
                (this._filterOffY = 0),
                (this._cacheDataURLID = 0),
                (this._cacheDataURL = null),
                (this._drawWidth = 0),
                (this._drawHeight = 0);
        }
        var p = BitmapCache.prototype;
        (BitmapCache.getFilterBounds = function (target, output) {
            output || (output = new createjs.Rectangle());
            var filters = target.filters,
                filterCount = filters && filters.length;
            if (!!filterCount <= 0) return output;
            for (var i = 0; i < filterCount; i++) {
                var f = filters[i];
                if (f && f.getBounds) {
                    var test = f.getBounds();
                    test && (0 == i ? output.setValues(test.x, test.y, test.width, test.height) : output.extend(test.x, test.y, test.width, test.height));
                }
            }
            return output;
        }),
            (p.toString = function () {
                return "[BitmapCache]";
            }),
            (p.define = function (target, x, y, width, height, scale, options) {
                if (!target) throw "No symbol to cache";
                (this._options = options), (this.target = target), (this.width = width >= 1 ? width : 1), (this.height = height >= 1 ? height : 1), (this.x = x || 0), (this.y = y || 0), (this.scale = scale || 1), this.update();
            }),
            (p.update = function (compositeOperation) {
                if (!this.target) throw "define() must be called before update()";
                var filterBounds = BitmapCache.getFilterBounds(this.target),
                    surface = this.target.cacheCanvas;
                (this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width),
                    (this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height),
                    (surface && this._drawWidth == surface.width && this._drawHeight == surface.height) || this._updateSurface(),
                    (this._filterOffX = filterBounds.x),
                    (this._filterOffY = filterBounds.y),
                    (this.offX = this.x * this.scale + this._filterOffX),
                    (this.offY = this.y * this.scale + this._filterOffY),
                    this._drawToCache(compositeOperation),
                    (this.cacheID = this.cacheID ? this.cacheID + 1 : 1);
            }),
            (p.release = function () {
                if (this._webGLCache)
                    this._webGLCache.isCacheControlled ||
                        (this.__lastRT && (this.__lastRT = void 0),
                        this.__rtA && this._webGLCache._killTextureObject(this.__rtA),
                        this.__rtB && this._webGLCache._killTextureObject(this.__rtB),
                        this.target && this.target.cacheCanvas && this._webGLCache._killTextureObject(this.target.cacheCanvas)),
                        (this._webGLCache = !1);
                else {
                    var stage = this.target.stage;
                    stage instanceof createjs.StageGL && stage.releaseTexture(this.target.cacheCanvas);
                }
                (this.target = this.target.cacheCanvas = null), (this.cacheID = this._cacheDataURLID = this._cacheDataURL = void 0), (this.width = this.height = this.x = this.y = this.offX = this.offY = 0), (this.scale = 1);
            }),
            (p.getCacheDataURL = function () {
                var cacheCanvas = this.target && this.target.cacheCanvas;
                return cacheCanvas ? (this.cacheID != this._cacheDataURLID && ((this._cacheDataURLID = this.cacheID), (this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null)), this._cacheDataURL) : null;
            }),
            (p.draw = function (ctx) {
                return !!this.target && (ctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale), !0);
            }),
            (p._updateSurface = function () {
                if (!this._options || !this._options.useGL)
                    return (
                        (surface = this.target.cacheCanvas) || (surface = this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")),
                        (surface.width = this._drawWidth),
                        void (surface.height = this._drawHeight)
                    );
                if (!this._webGLCache)
                    if ("stage" === this._options.useGL) {
                        if (!this.target.stage || !this.target.stage.isWebGL) {
                            var error = "Cannot use 'stage' for cache because the object's parent stage is ";
                            throw (error += this.target.stage ? "non WebGL." : "not set, please addChild to the correct stage.");
                        }
                        (this.target.cacheCanvas = !0), (this._webGLCache = this.target.stage);
                    } else if ("new" === this._options.useGL)
                        (this.target.cacheCanvas = document.createElement("canvas")),
                            (this._webGLCache = new createjs.StageGL(this.target.cacheCanvas, { antialias: !0, transparent: !0, autoPurge: -1 })),
                            (this._webGLCache.isCacheControlled = !0);
                    else {
                        if (!(this._options.useGL instanceof createjs.StageGL)) throw "Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got " + this._options.useGL;
                        (this.target.cacheCanvas = !0), (this._webGLCache = this._options.useGL), (this._webGLCache.isCacheControlled = !0);
                    }
                var surface = this.target.cacheCanvas,
                    stageGL = this._webGLCache;
                stageGL.isCacheControlled && ((surface.width = this._drawWidth), (surface.height = this._drawHeight), stageGL.updateViewport(this._drawWidth, this._drawHeight)),
                    this.target.filters
                        ? (stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight), stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight))
                        : stageGL.isCacheControlled || stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);
            }),
            (p._drawToCache = function (compositeOperation) {
                var surface = this.target.cacheCanvas,
                    target = this.target,
                    webGL = this._webGLCache;
                if (webGL) webGL.cacheDraw(target, target.filters, this), ((surface = this.target.cacheCanvas).width = this._drawWidth), (surface.height = this._drawHeight);
                else {
                    var ctx = surface.getContext("2d");
                    compositeOperation || ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1),
                        ctx.save(),
                        (ctx.globalCompositeOperation = compositeOperation),
                        ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY),
                        ctx.translate(-this.x, -this.y),
                        target.draw(ctx, !0),
                        ctx.restore(),
                        target.filters && target.filters.length && this._applyFilters(ctx);
                }
                surface._invalid = !0;
            }),
            (p._applyFilters = function (ctx) {
                var data,
                    filters = this.target.filters,
                    w = this._drawWidth,
                    h = this._drawHeight,
                    i = 0,
                    filter = filters[i];
                do {
                    filter.usesContext ? (data && (ctx.putImageData(data, 0, 0), (data = null)), filter.applyFilter(ctx, 0, 0, w, h)) : (data || (data = ctx.getImageData(0, 0, w, h)), filter._applyFilter(data)),
                        (filter = null !== filter._multiPass ? filter._multiPass : filters[++i]);
                } while (filter);
                data && ctx.putImageData(data, 0, 0);
            }),
            (createjs.BitmapCache = BitmapCache);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function BlurFilter(blurX, blurY, quality) {
            this.Filter_constructor(),
                (this._blurX = blurX),
                (this._blurXTable = []),
                (this._lastBlurX = null),
                (this._blurY = blurY),
                (this._blurYTable = []),
                (this._lastBlurY = null),
                this._quality,
                (this._lastQuality = null),
                (this.FRAG_SHADER_TEMPLATE =
                    "uniform float xWeight[{{blurX}}];uniform float yWeight[{{blurY}}];uniform vec2 textureOffset;void main(void) {vec4 color = vec4(0.0);float xAdj = ({{blurX}}.0-1.0)/2.0;float yAdj = ({{blurY}}.0-1.0)/2.0;vec2 sampleOffset;for(int i=0; i<{{blurX}}; i++) {for(int j=0; j<{{blurY}}; j++) {sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);}}gl_FragColor = color.rgba;}"),
                (isNaN(quality) || quality < 1) && (quality = 1),
                this.setQuality(0 | quality);
        }
        var p = createjs.extend(BlurFilter, createjs.Filter);
        (p.getBlurX = function () {
            return this._blurX;
        }),
            (p.getBlurY = function () {
                return this._blurY;
            }),
            (p.setBlurX = function (value) {
                (isNaN(value) || value < 0) && (value = 0), (this._blurX = value);
            }),
            (p.setBlurY = function (value) {
                (isNaN(value) || value < 0) && (value = 0), (this._blurY = value);
            }),
            (p.getQuality = function () {
                return this._quality;
            }),
            (p.setQuality = function (value) {
                (isNaN(value) || value < 0) && (value = 0), (this._quality = 0 | value);
            }),
            (p._getShader = function () {
                var xChange = this._lastBlurX !== this._blurX,
                    yChange = this._lastBlurY !== this._blurY,
                    qChange = this._lastQuality !== this._quality;
                return xChange || yChange || qChange
                    ? ((xChange || qChange) && (this._blurXTable = this._getTable(this._blurX * this._quality)),
                      (yChange || qChange) && (this._blurYTable = this._getTable(this._blurY * this._quality)),
                      this._updateShader(),
                      (this._lastBlurX = this._blurX),
                      (this._lastBlurY = this._blurY),
                      void (this._lastQuality = this._quality))
                    : this._compiledShader;
            }),
            (p._setShader = function () {
                this._compiledShader;
            });
        try {
            Object.defineProperties(p, { blurX: { get: p.getBlurX, set: p.setBlurX }, blurY: { get: p.getBlurY, set: p.setBlurY }, quality: { get: p.getQuality, set: p.setQuality }, _builtShader: { get: p._getShader, set: p._setShader } });
        } catch (e) {}
        (p._getTable = function (spread) {
            if (spread <= 1) return [1];
            for (var result = [], count = Math.ceil(2 * spread), adjust = ((count += count % 2 ? 0 : 1) / 2) | 0, i = -adjust; i <= adjust; i++) {
                var x = (i / adjust) * 4.2;
                result.push((1 / Math.sqrt(2 * Math.PI)) * Math.pow(Math.E, -Math.pow(x, 2) / 4));
            }
            var factor = result.reduce(function (a, b) {
                return a + b;
            });
            return result.map(function (currentValue, index, array) {
                return currentValue / factor;
            });
        }),
            (p._updateShader = function () {
                if (void 0 !== this._blurX && void 0 !== this._blurY) {
                    var result = this.FRAG_SHADER_TEMPLATE;
                    (result = (result = result.replace(/\{\{blurX\}\}/g, this._blurXTable.length.toFixed(0))).replace(/\{\{blurY\}\}/g, this._blurYTable.length.toFixed(0))), (this.FRAG_SHADER_BODY = result);
                }
            }),
            (p.shaderParamSetup = function (gl, stage, shaderProgram) {
                gl.uniform1fv(gl.getUniformLocation(shaderProgram, "xWeight"), this._blurXTable),
                    gl.uniform1fv(gl.getUniformLocation(shaderProgram, "yWeight"), this._blurYTable),
                    gl.uniform2f(gl.getUniformLocation(shaderProgram, "textureOffset"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));
            }),
            (BlurFilter.MUL_TABLE = [
                1,
                171,
                205,
                293,
                57,
                373,
                79,
                137,
                241,
                27,
                391,
                357,
                41,
                19,
                283,
                265,
                497,
                469,
                443,
                421,
                25,
                191,
                365,
                349,
                335,
                161,
                155,
                149,
                9,
                278,
                269,
                261,
                505,
                245,
                475,
                231,
                449,
                437,
                213,
                415,
                405,
                395,
                193,
                377,
                369,
                361,
                353,
                345,
                169,
                331,
                325,
                319,
                313,
                307,
                301,
                37,
                145,
                285,
                281,
                69,
                271,
                267,
                263,
                259,
                509,
                501,
                493,
                243,
                479,
                118,
                465,
                459,
                113,
                446,
                55,
                435,
                429,
                423,
                209,
                413,
                51,
                403,
                199,
                393,
                97,
                3,
                379,
                375,
                371,
                367,
                363,
                359,
                355,
                351,
                347,
                43,
                85,
                337,
                333,
                165,
                327,
                323,
                5,
                317,
                157,
                311,
                77,
                305,
                303,
                75,
                297,
                294,
                73,
                289,
                287,
                71,
                141,
                279,
                277,
                275,
                68,
                135,
                67,
                133,
                33,
                262,
                260,
                129,
                511,
                507,
                503,
                499,
                495,
                491,
                61,
                121,
                481,
                477,
                237,
                235,
                467,
                232,
                115,
                457,
                227,
                451,
                7,
                445,
                221,
                439,
                218,
                433,
                215,
                427,
                425,
                211,
                419,
                417,
                207,
                411,
                409,
                203,
                202,
                401,
                399,
                396,
                197,
                49,
                389,
                387,
                385,
                383,
                95,
                189,
                47,
                187,
                93,
                185,
                23,
                183,
                91,
                181,
                45,
                179,
                89,
                177,
                11,
                175,
                87,
                173,
                345,
                343,
                341,
                339,
                337,
                21,
                167,
                83,
                331,
                329,
                327,
                163,
                81,
                323,
                321,
                319,
                159,
                79,
                315,
                313,
                39,
                155,
                309,
                307,
                153,
                305,
                303,
                151,
                75,
                299,
                149,
                37,
                295,
                147,
                73,
                291,
                145,
                289,
                287,
                143,
                285,
                71,
                141,
                281,
                35,
                279,
                139,
                69,
                275,
                137,
                273,
                17,
                271,
                135,
                269,
                267,
                133,
                265,
                33,
                263,
                131,
                261,
                130,
                259,
                129,
                257,
                1,
            ]),
            (BlurFilter.SHG_TABLE = [
                0,
                9,
                10,
                11,
                9,
                12,
                10,
                11,
                12,
                9,
                13,
                13,
                10,
                9,
                13,
                13,
                14,
                14,
                14,
                14,
                10,
                13,
                14,
                14,
                14,
                13,
                13,
                13,
                9,
                14,
                14,
                14,
                15,
                14,
                15,
                14,
                15,
                15,
                14,
                15,
                15,
                15,
                14,
                15,
                15,
                15,
                15,
                15,
                14,
                15,
                15,
                15,
                15,
                15,
                15,
                12,
                14,
                15,
                15,
                13,
                15,
                15,
                15,
                15,
                16,
                16,
                16,
                15,
                16,
                14,
                16,
                16,
                14,
                16,
                13,
                16,
                16,
                16,
                15,
                16,
                13,
                16,
                15,
                16,
                14,
                9,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                13,
                14,
                16,
                16,
                15,
                16,
                16,
                10,
                16,
                15,
                16,
                14,
                16,
                16,
                14,
                16,
                16,
                14,
                16,
                16,
                14,
                15,
                16,
                16,
                16,
                14,
                15,
                14,
                15,
                13,
                16,
                16,
                15,
                17,
                17,
                17,
                17,
                17,
                17,
                14,
                15,
                17,
                17,
                16,
                16,
                17,
                16,
                15,
                17,
                16,
                17,
                11,
                17,
                16,
                17,
                16,
                17,
                16,
                17,
                17,
                16,
                17,
                17,
                16,
                17,
                17,
                16,
                16,
                17,
                17,
                17,
                16,
                14,
                17,
                17,
                17,
                17,
                15,
                16,
                14,
                16,
                15,
                16,
                13,
                16,
                15,
                16,
                14,
                16,
                15,
                16,
                12,
                16,
                15,
                16,
                17,
                17,
                17,
                17,
                17,
                13,
                16,
                15,
                17,
                17,
                17,
                16,
                15,
                17,
                17,
                17,
                16,
                15,
                17,
                17,
                14,
                16,
                17,
                17,
                16,
                17,
                17,
                16,
                15,
                17,
                16,
                14,
                17,
                16,
                15,
                17,
                16,
                17,
                17,
                16,
                17,
                15,
                16,
                17,
                14,
                17,
                16,
                15,
                17,
                16,
                17,
                13,
                17,
                16,
                17,
                17,
                16,
                17,
                14,
                17,
                16,
                17,
                16,
                17,
                16,
                17,
                9,
            ]),
            (p.getBounds = function (rect) {
                var x = 0 | this.blurX,
                    y = 0 | this.blurY;
                if (x <= 0 && y <= 0) return rect;
                var q = Math.pow(this.quality, 0.2);
                return (rect || new createjs.Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);
            }),
            (p.clone = function () {
                return new BlurFilter(this.blurX, this.blurY, this.quality);
            }),
            (p.toString = function () {
                return "[BlurFilter]";
            }),
            (p._applyFilter = function (imageData) {
                var radiusX = this._blurX >> 1;
                if (isNaN(radiusX) || radiusX < 0) return !1;
                var radiusY = this._blurY >> 1;
                if (isNaN(radiusY) || radiusY < 0) return !1;
                if (0 == radiusX && 0 == radiusY) return !1;
                var iterations = this.quality;
                (isNaN(iterations) || iterations < 1) && (iterations = 1), (iterations |= 0) > 3 && (iterations = 3), iterations < 1 && (iterations = 1);
                var px = imageData.data,
                    x = 0,
                    y = 0,
                    i = 0,
                    p = 0,
                    yp = 0,
                    yi = 0,
                    yw = 0,
                    r = 0,
                    g = 0,
                    b = 0,
                    a = 0,
                    pr = 0,
                    pg = 0,
                    pb = 0,
                    pa = 0,
                    divx = (radiusX + radiusX + 1) | 0,
                    divy = (radiusY + radiusY + 1) | 0,
                    w = 0 | imageData.width,
                    h = 0 | imageData.height,
                    w1 = (w - 1) | 0,
                    h1 = (h - 1) | 0,
                    rxp1 = (radiusX + 1) | 0,
                    ryp1 = (radiusY + 1) | 0,
                    ssx = { r: 0, b: 0, g: 0, a: 0 },
                    sx = ssx;
                for (i = 1; i < divx; i++) sx = sx.n = { r: 0, b: 0, g: 0, a: 0 };
                sx.n = ssx;
                var ssy = { r: 0, b: 0, g: 0, a: 0 },
                    sy = ssy;
                for (i = 1; i < divy; i++) sy = sy.n = { r: 0, b: 0, g: 0, a: 0 };
                sy.n = ssy;
                for (var si = null, mtx = 0 | BlurFilter.MUL_TABLE[radiusX], stx = 0 | BlurFilter.SHG_TABLE[radiusX], mty = 0 | BlurFilter.MUL_TABLE[radiusY], sty = 0 | BlurFilter.SHG_TABLE[radiusY]; iterations-- > 0; ) {
                    yw = yi = 0;
                    var ms = mtx,
                        ss = stx;
                    for (y = h; --y > -1; ) {
                        for (r = rxp1 * (pr = px[0 | yi]), g = rxp1 * (pg = px[(yi + 1) | 0]), b = rxp1 * (pb = px[(yi + 2) | 0]), a = rxp1 * (pa = px[(yi + 3) | 0]), sx = ssx, i = rxp1; --i > -1; )
                            (sx.r = pr), (sx.g = pg), (sx.b = pb), (sx.a = pa), (sx = sx.n);
                        for (i = 1; i < rxp1; i++) (p = (yi + ((w1 < i ? w1 : i) << 2)) | 0), (r += sx.r = px[p]), (g += sx.g = px[p + 1]), (b += sx.b = px[p + 2]), (a += sx.a = px[p + 3]), (sx = sx.n);
                        for (si = ssx, x = 0; x < w; x++)
                            (px[yi++] = (r * ms) >>> ss),
                                (px[yi++] = (g * ms) >>> ss),
                                (px[yi++] = (b * ms) >>> ss),
                                (px[yi++] = (a * ms) >>> ss),
                                (p = (yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2),
                                (r -= si.r - (si.r = px[p])),
                                (g -= si.g - (si.g = px[p + 1])),
                                (b -= si.b - (si.b = px[p + 2])),
                                (a -= si.a - (si.a = px[p + 3])),
                                (si = si.n);
                        yw += w;
                    }
                    for (ms = mty, ss = sty, x = 0; x < w; x++) {
                        for (r = (ryp1 * (pr = px[(yi = (x << 2) | 0)])) | 0, g = (ryp1 * (pg = px[(yi + 1) | 0])) | 0, b = (ryp1 * (pb = px[(yi + 2) | 0])) | 0, a = (ryp1 * (pa = px[(yi + 3) | 0])) | 0, sy = ssy, i = 0; i < ryp1; i++)
                            (sy.r = pr), (sy.g = pg), (sy.b = pb), (sy.a = pa), (sy = sy.n);
                        for (yp = w, i = 1; i <= radiusY; i++) (yi = (yp + x) << 2), (r += sy.r = px[yi]), (g += sy.g = px[yi + 1]), (b += sy.b = px[yi + 2]), (a += sy.a = px[yi + 3]), (sy = sy.n), i < h1 && (yp += w);
                        if (((yi = x), (si = ssy), iterations > 0))
                            for (y = 0; y < h; y++)
                                (px[(p = yi << 2) + 3] = pa = (a * ms) >>> ss),
                                    pa > 0 ? ((px[p] = (r * ms) >>> ss), (px[p + 1] = (g * ms) >>> ss), (px[p + 2] = (b * ms) >>> ss)) : (px[p] = px[p + 1] = px[p + 2] = 0),
                                    (p = (x + ((p = y + ryp1) < h1 ? p : h1) * w) << 2),
                                    (r -= si.r - (si.r = px[p])),
                                    (g -= si.g - (si.g = px[p + 1])),
                                    (b -= si.b - (si.b = px[p + 2])),
                                    (a -= si.a - (si.a = px[p + 3])),
                                    (si = si.n),
                                    (yi += w);
                        else
                            for (y = 0; y < h; y++)
                                (px[(p = yi << 2) + 3] = pa = (a * ms) >>> ss),
                                    pa > 0 ? ((pa = 255 / pa), (px[p] = ((r * ms) >>> ss) * pa), (px[p + 1] = ((g * ms) >>> ss) * pa), (px[p + 2] = ((b * ms) >>> ss) * pa)) : (px[p] = px[p + 1] = px[p + 2] = 0),
                                    (p = (x + ((p = y + ryp1) < h1 ? p : h1) * w) << 2),
                                    (r -= si.r - (si.r = px[p])),
                                    (g -= si.g - (si.g = px[p + 1])),
                                    (b -= si.b - (si.b = px[p + 2])),
                                    (a -= si.a - (si.a = px[p + 3])),
                                    (si = si.n),
                                    (yi += w);
                    }
                }
                return !0;
            }),
            (createjs.BlurFilter = createjs.promote(BlurFilter, "Filter"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function AlphaMapFilter(alphaMap) {
            this.Filter_constructor(),
                (this.alphaMap = alphaMap),
                (this._alphaMap = null),
                (this._mapData = null),
                (this._mapTexture = null),
                (this.FRAG_SHADER_BODY =
                    "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));}");
        }
        var p = createjs.extend(AlphaMapFilter, createjs.Filter);
        (p.shaderParamSetup = function (gl, stage, shaderProgram) {
            this._mapTexture || (this._mapTexture = gl.createTexture()),
                gl.activeTexture(gl.TEXTURE1),
                gl.bindTexture(gl.TEXTURE_2D, this._mapTexture),
                stage.setTextureParams(gl),
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap),
                gl.uniform1i(gl.getUniformLocation(shaderProgram, "uAlphaSampler"), 1);
        }),
            (p.clone = function () {
                var o = new AlphaMapFilter(this.alphaMap);
                return (o._alphaMap = this._alphaMap), (o._mapData = this._mapData), o;
            }),
            (p.toString = function () {
                return "[AlphaMapFilter]";
            }),
            (p._applyFilter = function (imageData) {
                if (!this.alphaMap) return !0;
                if (!this._prepAlphaMap()) return !1;
                for (var data = imageData.data, map = this._mapData, i = 0, l = data.length; i < l; i += 4) data[i + 3] = map[i] || 0;
                return !0;
            }),
            (p._prepAlphaMap = function () {
                if (!this.alphaMap) return !1;
                if (this.alphaMap == this._alphaMap && this._mapData) return !0;
                this._mapData = null;
                var ctx,
                    map = (this._alphaMap = this.alphaMap),
                    canvas = map;
                map instanceof HTMLCanvasElement
                    ? (ctx = canvas.getContext("2d"))
                    : (((canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = map.width), (canvas.height = map.height), (ctx = canvas.getContext("2d")).drawImage(map, 0, 0));
                try {
                    var imgData = ctx.getImageData(0, 0, map.width, map.height);
                } catch (e) {
                    return !1;
                }
                return (this._mapData = imgData.data), !0;
            }),
            (createjs.AlphaMapFilter = createjs.promote(AlphaMapFilter, "Filter"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function AlphaMaskFilter(mask) {
            this.Filter_constructor(),
                (this.mask = mask),
                (this.usesContext = !0),
                (this.FRAG_SHADER_BODY =
                    "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);}");
        }
        var p = createjs.extend(AlphaMaskFilter, createjs.Filter);
        (p.shaderParamSetup = function (gl, stage, shaderProgram) {
            this._mapTexture || (this._mapTexture = gl.createTexture()),
                gl.activeTexture(gl.TEXTURE1),
                gl.bindTexture(gl.TEXTURE_2D, this._mapTexture),
                stage.setTextureParams(gl),
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask),
                gl.uniform1i(gl.getUniformLocation(shaderProgram, "uAlphaSampler"), 1);
        }),
            (p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {
                return (
                    !this.mask ||
                    ((targetCtx = targetCtx || ctx),
                    null == targetX && (targetX = x),
                    null == targetY && (targetY = y),
                    targetCtx.save(),
                    ctx == targetCtx && ((targetCtx.globalCompositeOperation = "destination-in"), targetCtx.drawImage(this.mask, targetX, targetY), targetCtx.restore(), !0))
                );
            }),
            (p.clone = function () {
                return new AlphaMaskFilter(this.mask);
            }),
            (p.toString = function () {
                return "[AlphaMaskFilter]";
            }),
            (createjs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, "Filter"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {
            this.Filter_constructor(),
                (this.redMultiplier = null != redMultiplier ? redMultiplier : 1),
                (this.greenMultiplier = null != greenMultiplier ? greenMultiplier : 1),
                (this.blueMultiplier = null != blueMultiplier ? blueMultiplier : 1),
                (this.alphaMultiplier = null != alphaMultiplier ? alphaMultiplier : 1),
                (this.redOffset = redOffset || 0),
                (this.greenOffset = greenOffset || 0),
                (this.blueOffset = blueOffset || 0),
                (this.alphaOffset = alphaOffset || 0),
                (this.FRAG_SHADER_BODY = "uniform vec4 uColorMultiplier;uniform vec4 uColorOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = (color * uColorMultiplier) + uColorOffset;}");
        }
        var p = createjs.extend(ColorFilter, createjs.Filter);
        (p.shaderParamSetup = function (gl, stage, shaderProgram) {
            gl.uniform4f(gl.getUniformLocation(shaderProgram, "uColorMultiplier"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier),
                gl.uniform4f(gl.getUniformLocation(shaderProgram, "uColorOffset"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);
        }),
            (p.toString = function () {
                return "[ColorFilter]";
            }),
            (p.clone = function () {
                return new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);
            }),
            (p._applyFilter = function (imageData) {
                for (var data = imageData.data, l = data.length, i = 0; i < l; i += 4)
                    (data[i] = data[i] * this.redMultiplier + this.redOffset),
                        (data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset),
                        (data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset),
                        (data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset);
                return !0;
            }),
            (createjs.ColorFilter = createjs.promote(ColorFilter, "Filter"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ColorMatrix(brightness, contrast, saturation, hue) {
            this.setColor(brightness, contrast, saturation, hue);
        }
        var p = ColorMatrix.prototype;
        (ColorMatrix.DELTA_INDEX = [
            0,
            0.01,
            0.02,
            0.04,
            0.05,
            0.06,
            0.07,
            0.08,
            0.1,
            0.11,
            0.12,
            0.14,
            0.15,
            0.16,
            0.17,
            0.18,
            0.2,
            0.21,
            0.22,
            0.24,
            0.25,
            0.27,
            0.28,
            0.3,
            0.32,
            0.34,
            0.36,
            0.38,
            0.4,
            0.42,
            0.44,
            0.46,
            0.48,
            0.5,
            0.53,
            0.56,
            0.59,
            0.62,
            0.65,
            0.68,
            0.71,
            0.74,
            0.77,
            0.8,
            0.83,
            0.86,
            0.89,
            0.92,
            0.95,
            0.98,
            1,
            1.06,
            1.12,
            1.18,
            1.24,
            1.3,
            1.36,
            1.42,
            1.48,
            1.54,
            1.6,
            1.66,
            1.72,
            1.78,
            1.84,
            1.9,
            1.96,
            2,
            2.12,
            2.25,
            2.37,
            2.5,
            2.62,
            2.75,
            2.87,
            3,
            3.2,
            3.4,
            3.6,
            3.8,
            4,
            4.3,
            4.7,
            4.9,
            5,
            5.5,
            6,
            6.5,
            6.8,
            7,
            7.3,
            7.5,
            7.8,
            8,
            8.4,
            8.7,
            9,
            9.4,
            9.6,
            9.8,
            10,
        ]),
            (ColorMatrix.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]),
            (ColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length),
            (p.setColor = function (brightness, contrast, saturation, hue) {
                return this.reset().adjustColor(brightness, contrast, saturation, hue);
            }),
            (p.reset = function () {
                return this.copy(ColorMatrix.IDENTITY_MATRIX);
            }),
            (p.adjustColor = function (brightness, contrast, saturation, hue) {
                return this.adjustHue(hue), this.adjustContrast(contrast), this.adjustBrightness(brightness), this.adjustSaturation(saturation);
            }),
            (p.adjustBrightness = function (value) {
                return 0 == value || isNaN(value) ? this : ((value = this._cleanValue(value, 255)), this._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this);
            }),
            (p.adjustContrast = function (value) {
                return 0 == value || isNaN(value)
                    ? this
                    : ((x =
                          (value = this._cleanValue(value, 100)) < 0
                              ? 127 + (value / 100) * 127
                              : 127 * (x = 0 == (x = value % 1) ? ColorMatrix.DELTA_INDEX[value] : ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[1 + (value << 0)] * x) + 127),
                      this._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]),
                      this);
                var x;
            }),
            (p.adjustSaturation = function (value) {
                if (0 == value || isNaN(value)) return this;
                var x = 1 + ((value = this._cleanValue(value, 100)) > 0 ? (3 * value) / 100 : value / 100);
                return (
                    this._multiplyMatrix([
                        0.3086 * (1 - x) + x,
                        0.6094 * (1 - x),
                        0.082 * (1 - x),
                        0,
                        0,
                        0.3086 * (1 - x),
                        0.6094 * (1 - x) + x,
                        0.082 * (1 - x),
                        0,
                        0,
                        0.3086 * (1 - x),
                        0.6094 * (1 - x),
                        0.082 * (1 - x) + x,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                    ]),
                    this
                );
            }),
            (p.adjustHue = function (value) {
                if (0 == value || isNaN(value)) return this;
                value = (this._cleanValue(value, 180) / 180) * Math.PI;
                var cosVal = Math.cos(value),
                    sinVal = Math.sin(value);
                return (
                    this._multiplyMatrix([
                        0.213 + 0.787 * cosVal + -0.213 * sinVal,
                        0.715 + -0.715 * cosVal + -0.715 * sinVal,
                        0.072 + -0.072 * cosVal + 0.928 * sinVal,
                        0,
                        0,
                        0.213 + -0.213 * cosVal + 0.143 * sinVal,
                        0.715 + cosVal * (1 - 0.715) + 0.14 * sinVal,
                        0.072 + -0.072 * cosVal + -0.283 * sinVal,
                        0,
                        0,
                        0.213 + -0.213 * cosVal + -0.787 * sinVal,
                        0.715 + -0.715 * cosVal + 0.715 * sinVal,
                        0.072 + 0.928 * cosVal + 0.072 * sinVal,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                    ]),
                    this
                );
            }),
            (p.concat = function (matrix) {
                return (matrix = this._fixMatrix(matrix)).length != ColorMatrix.LENGTH ? this : (this._multiplyMatrix(matrix), this);
            }),
            (p.clone = function () {
                return new ColorMatrix().copy(this);
            }),
            (p.toArray = function () {
                for (var arr = [], i = 0, l = ColorMatrix.LENGTH; i < l; i++) arr[i] = this[i];
                return arr;
            }),
            (p.copy = function (matrix) {
                for (var l = ColorMatrix.LENGTH, i = 0; i < l; i++) this[i] = matrix[i];
                return this;
            }),
            (p.toString = function () {
                return "[ColorMatrix]";
            }),
            (p._multiplyMatrix = function (matrix) {
                var i,
                    j,
                    k,
                    col = [];
                for (i = 0; i < 5; i++) {
                    for (j = 0; j < 5; j++) col[j] = this[j + 5 * i];
                    for (j = 0; j < 5; j++) {
                        var val = 0;
                        for (k = 0; k < 5; k++) val += matrix[j + 5 * k] * col[k];
                        this[j + 5 * i] = val;
                    }
                }
            }),
            (p._cleanValue = function (value, limit) {
                return Math.min(limit, Math.max(-limit, value));
            }),
            (p._fixMatrix = function (matrix) {
                return (
                    matrix instanceof ColorMatrix && (matrix = matrix.toArray()),
                    matrix.length < ColorMatrix.LENGTH
                        ? (matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH)))
                        : matrix.length > ColorMatrix.LENGTH && (matrix = matrix.slice(0, ColorMatrix.LENGTH)),
                    matrix
                );
            }),
            (createjs.ColorMatrix = ColorMatrix);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ColorMatrixFilter(matrix) {
            this.Filter_constructor(),
                (this.matrix = matrix),
                (this.FRAG_SHADER_BODY =
                    "uniform mat4 uColorMatrix;uniform vec4 uColorMatrixOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);mat4 m = uColorMatrix;vec4 newColor = vec4(0,0,0,0);newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];gl_FragColor = newColor + uColorMatrixOffset;}");
        }
        var p = createjs.extend(ColorMatrixFilter, createjs.Filter);
        (p.shaderParamSetup = function (gl, stage, shaderProgram) {
            var mat = this.matrix,
                colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);
            gl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, "uColorMatrix"), !1, colorMatrix), gl.uniform4f(gl.getUniformLocation(shaderProgram, "uColorMatrixOffset"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);
        }),
            (p.toString = function () {
                return "[ColorMatrixFilter]";
            }),
            (p.clone = function () {
                return new ColorMatrixFilter(this.matrix);
            }),
            (p._applyFilter = function (imageData) {
                for (
                    var r,
                        g,
                        b,
                        a,
                        data = imageData.data,
                        l = data.length,
                        mtx = this.matrix,
                        m0 = mtx[0],
                        m1 = mtx[1],
                        m2 = mtx[2],
                        m3 = mtx[3],
                        m4 = mtx[4],
                        m5 = mtx[5],
                        m6 = mtx[6],
                        m7 = mtx[7],
                        m8 = mtx[8],
                        m9 = mtx[9],
                        m10 = mtx[10],
                        m11 = mtx[11],
                        m12 = mtx[12],
                        m13 = mtx[13],
                        m14 = mtx[14],
                        m15 = mtx[15],
                        m16 = mtx[16],
                        m17 = mtx[17],
                        m18 = mtx[18],
                        m19 = mtx[19],
                        i = 0;
                    i < l;
                    i += 4
                )
                    (r = data[i]),
                        (g = data[i + 1]),
                        (b = data[i + 2]),
                        (a = data[i + 3]),
                        (data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4),
                        (data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9),
                        (data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14),
                        (data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19);
                return !0;
            }),
            (createjs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, "Filter"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Touch() {
            throw "Touch cannot be instantiated";
        }
        (Touch.isSupported = function () {
            return !!("ontouchstart" in window || (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 0) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 0));
        }),
            (Touch.enable = function (stage, singleTouch, allowDefault) {
                return (
                    !!(stage && stage.canvas && Touch.isSupported()) &&
                    (!!stage.__touch ||
                        ((stage.__touch = { pointers: {}, multitouch: !singleTouch, preventDefault: !allowDefault, count: 0 }),
                        "ontouchstart" in window ? Touch._IOS_enable(stage) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && Touch._IE_enable(stage),
                        !0))
                );
            }),
            (Touch.disable = function (stage) {
                stage && ("ontouchstart" in window ? Touch._IOS_disable(stage) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && Touch._IE_disable(stage), delete stage.__touch);
            }),
            (Touch._IOS_enable = function (stage) {
                var canvas = stage.canvas,
                    f = (stage.__touch.f = function (e) {
                        Touch._IOS_handleEvent(stage, e);
                    });
                canvas.addEventListener("touchstart", f, !1), canvas.addEventListener("touchmove", f, !1), canvas.addEventListener("touchend", f, !1), canvas.addEventListener("touchcancel", f, !1);
            }),
            (Touch._IOS_disable = function (stage) {
                var canvas = stage.canvas;
                if (canvas) {
                    var f = stage.__touch.f;
                    canvas.removeEventListener("touchstart", f, !1), canvas.removeEventListener("touchmove", f, !1), canvas.removeEventListener("touchend", f, !1), canvas.removeEventListener("touchcancel", f, !1);
                }
            }),
            (Touch._IOS_handleEvent = function (stage, e) {
                if (stage) {
                    stage.__touch.preventDefault && e.preventDefault && e.preventDefault();
                    for (var touches = e.changedTouches, type = e.type, i = 0, l = touches.length; i < l; i++) {
                        var touch = touches[i],
                            id = touch.identifier;
                        touch.target == stage.canvas &&
                            ("touchstart" == type
                                ? this._handleStart(stage, id, e, touch.pageX, touch.pageY)
                                : "touchmove" == type
                                ? this._handleMove(stage, id, e, touch.pageX, touch.pageY)
                                : ("touchend" != type && "touchcancel" != type) || this._handleEnd(stage, id, e));
                    }
                }
            }),
            (Touch._IE_enable = function (stage) {
                var canvas = stage.canvas,
                    f = (stage.__touch.f = function (e) {
                        Touch._IE_handleEvent(stage, e);
                    });
                void 0 === window.navigator.pointerEnabled
                    ? (canvas.addEventListener("MSPointerDown", f, !1),
                      window.addEventListener("MSPointerMove", f, !1),
                      window.addEventListener("MSPointerUp", f, !1),
                      window.addEventListener("MSPointerCancel", f, !1),
                      stage.__touch.preventDefault && (canvas.style.msTouchAction = "none"))
                    : (canvas.addEventListener("pointerdown", f, !1),
                      window.addEventListener("pointermove", f, !1),
                      window.addEventListener("pointerup", f, !1),
                      window.addEventListener("pointercancel", f, !1),
                      stage.__touch.preventDefault && (canvas.style.touchAction = "none")),
                    (stage.__touch.activeIDs = {});
            }),
            (Touch._IE_disable = function (stage) {
                var f = stage.__touch.f;
                void 0 === window.navigator.pointerEnabled
                    ? (window.removeEventListener("MSPointerMove", f, !1),
                      window.removeEventListener("MSPointerUp", f, !1),
                      window.removeEventListener("MSPointerCancel", f, !1),
                      stage.canvas && stage.canvas.removeEventListener("MSPointerDown", f, !1))
                    : (window.removeEventListener("pointermove", f, !1),
                      window.removeEventListener("pointerup", f, !1),
                      window.removeEventListener("pointercancel", f, !1),
                      stage.canvas && stage.canvas.removeEventListener("pointerdown", f, !1));
            }),
            (Touch._IE_handleEvent = function (stage, e) {
                if (stage) {
                    stage.__touch.preventDefault && e.preventDefault && e.preventDefault();
                    var type = e.type,
                        id = e.pointerId,
                        ids = stage.__touch.activeIDs;
                    if ("MSPointerDown" == type || "pointerdown" == type) {
                        if (e.srcElement != stage.canvas) return;
                        (ids[id] = !0), this._handleStart(stage, id, e, e.pageX, e.pageY);
                    } else
                        ids[id] &&
                            ("MSPointerMove" == type || "pointermove" == type
                                ? this._handleMove(stage, id, e, e.pageX, e.pageY)
                                : ("MSPointerUp" != type && "MSPointerCancel" != type && "pointerup" != type && "pointercancel" != type) || (delete ids[id], this._handleEnd(stage, id, e)));
                }
            }),
            (Touch._handleStart = function (stage, id, e, x, y) {
                var props = stage.__touch;
                if (props.multitouch || !props.count) {
                    var ids = props.pointers;
                    ids[id] || ((ids[id] = !0), props.count++, stage._handlePointerDown(id, e, x, y));
                }
            }),
            (Touch._handleMove = function (stage, id, e, x, y) {
                stage.__touch.pointers[id] && stage._handlePointerMove(id, e, x, y);
            }),
            (Touch._handleEnd = function (stage, id, e) {
                var props = stage.__touch,
                    ids = props.pointers;
                ids[id] && (props.count--, stage._handlePointerUp(id, e, !0), delete ids[id]);
            }),
            (createjs.Touch = Touch);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        var s = (createjs.EaselJS = createjs.EaselJS || {});
        (s.version = "1.0.0"), (s.buildDate = "Thu, 14 Sep 2017 19:47:53 GMT");
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        var s = (createjs.PreloadJS = createjs.PreloadJS || {});
        (s.version = "1.0.0"), (s.buildDate = "Thu, 14 Sep 2017 19:47:47 GMT");
    })(),
    (this.createjs = this.createjs || {}),
    (createjs.extend = function (subclass, superclass) {
        "use strict";
        function o() {
            this.constructor = subclass;
        }
        return (o.prototype = superclass.prototype), (subclass.prototype = new o());
    }),
    (this.createjs = this.createjs || {}),
    (createjs.promote = function (subclass, prefix) {
        "use strict";
        var subP = subclass.prototype,
            supP = (Object.getPrototypeOf && Object.getPrototypeOf(subP)) || subP.__proto__;
        if (supP) for (var n in ((subP[(prefix += "_") + "constructor"] = supP.constructor), supP)) subP.hasOwnProperty(n) && "function" == typeof supP[n] && (subP[prefix + n] = supP[n]);
        return subclass;
    }),
    (this.createjs = this.createjs || {}),
    (createjs.deprecate = function (fallbackMethod, name) {
        "use strict";
        return function () {
            return console && console.warn, fallbackMethod && fallbackMethod.apply(this, arguments);
        };
    }),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        createjs.proxy = function (method, scope) {
            var aArgs = Array.prototype.slice.call(arguments, 2);
            return function () {
                return method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));
            };
        };
    })(),
    (this.createjs = this.createjs || {}),
    (createjs.indexOf = function (array, searchElement) {
        "use strict";
        for (var i = 0, l = array.length; i < l; i++) if (searchElement === array[i]) return i;
        return -1;
    }),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function Event(type, bubbles, cancelable) {
            (this.type = type),
                (this.target = null),
                (this.currentTarget = null),
                (this.eventPhase = 0),
                (this.bubbles = !!bubbles),
                (this.cancelable = !!cancelable),
                (this.timeStamp = new Date().getTime()),
                (this.defaultPrevented = !1),
                (this.propagationStopped = !1),
                (this.immediatePropagationStopped = !1),
                (this.removed = !1);
        }
        var p = Event.prototype;
        (p.preventDefault = function () {
            this.defaultPrevented = this.cancelable && !0;
        }),
            (p.stopPropagation = function () {
                this.propagationStopped = !0;
            }),
            (p.stopImmediatePropagation = function () {
                this.immediatePropagationStopped = this.propagationStopped = !0;
            }),
            (p.remove = function () {
                this.removed = !0;
            }),
            (p.clone = function () {
                return new Event(this.type, this.bubbles, this.cancelable);
            }),
            (p.set = function (props) {
                for (var n in props) this[n] = props[n];
                return this;
            }),
            (p.toString = function () {
                return "[Event (type=" + this.type + ")]";
            }),
            (createjs.Event = Event);
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ErrorEvent(title, message, data) {
            this.Event_constructor("error"), (this.title = title), (this.message = message), (this.data = data);
        }
        (createjs.extend(ErrorEvent, createjs.Event).clone = function () {
            return new createjs.ErrorEvent(this.title, this.message, this.data);
        }),
            (createjs.ErrorEvent = createjs.promote(ErrorEvent, "Event"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function EventDispatcher() {
            (this._listeners = null), (this._captureListeners = null);
        }
        var p = EventDispatcher.prototype;
        (EventDispatcher.initialize = function (target) {
            (target.addEventListener = p.addEventListener),
                (target.on = p.on),
                (target.removeEventListener = target.off = p.removeEventListener),
                (target.removeAllEventListeners = p.removeAllEventListeners),
                (target.hasEventListener = p.hasEventListener),
                (target.dispatchEvent = p.dispatchEvent),
                (target._dispatchEvent = p._dispatchEvent),
                (target.willTrigger = p.willTrigger);
        }),
            (p.addEventListener = function (type, listener, useCapture) {
                var listeners,
                    arr = (listeners = useCapture ? (this._captureListeners = this._captureListeners || {}) : (this._listeners = this._listeners || {}))[type];
                return arr && this.removeEventListener(type, listener, useCapture), (arr = listeners[type]) ? arr.push(listener) : (listeners[type] = [listener]), listener;
            }),
            (p.on = function (type, listener, scope, once, data, useCapture) {
                return (
                    listener.handleEvent && ((scope = scope || listener), (listener = listener.handleEvent)),
                    (scope = scope || this),
                    this.addEventListener(
                        type,
                        function (evt) {
                            listener.call(scope, evt, data), once && evt.remove();
                        },
                        useCapture
                    )
                );
            }),
            (p.removeEventListener = function (type, listener, useCapture) {
                var listeners = useCapture ? this._captureListeners : this._listeners;
                if (listeners) {
                    var arr = listeners[type];
                    if (arr)
                        for (var i = 0, l = arr.length; i < l; i++)
                            if (arr[i] == listener) {
                                1 == l ? delete listeners[type] : arr.splice(i, 1);
                                break;
                            }
                }
            }),
            (p.off = p.removeEventListener),
            (p.removeAllEventListeners = function (type) {
                type ? (this._listeners && delete this._listeners[type], this._captureListeners && delete this._captureListeners[type]) : (this._listeners = this._captureListeners = null);
            }),
            (p.dispatchEvent = function (eventObj, bubbles, cancelable) {
                if ("string" == typeof eventObj) {
                    var listeners = this._listeners;
                    if (!(bubbles || (listeners && listeners[eventObj]))) return !0;
                    eventObj = new createjs.Event(eventObj, bubbles, cancelable);
                } else eventObj.target && eventObj.clone && (eventObj = eventObj.clone());
                try {
                    eventObj.target = this;
                } catch (e) {}
                if (eventObj.bubbles && this.parent) {
                    for (var top = this, list = [top]; top.parent; ) list.push((top = top.parent));
                    var i,
                        l = list.length;
                    for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) list[i]._dispatchEvent(eventObj, 1 + (0 == i));
                    for (i = 1; i < l && !eventObj.propagationStopped; i++) list[i]._dispatchEvent(eventObj, 3);
                } else this._dispatchEvent(eventObj, 2);
                return !eventObj.defaultPrevented;
            }),
            (p.hasEventListener = function (type) {
                var listeners = this._listeners,
                    captureListeners = this._captureListeners;
                return !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));
            }),
            (p.willTrigger = function (type) {
                for (var o = this; o; ) {
                    if (o.hasEventListener(type)) return !0;
                    o = o.parent;
                }
                return !1;
            }),
            (p.toString = function () {
                return "[EventDispatcher]";
            }),
            (p._dispatchEvent = function (eventObj, eventPhase) {
                var l,
                    arr,
                    listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;
                if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {
                    try {
                        eventObj.currentTarget = this;
                    } catch (e) {}
                    try {
                        eventObj.eventPhase = 0 | eventPhase;
                    } catch (e) {}
                    (eventObj.removed = !1), (arr = arr.slice());
                    for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {
                        var o = arr[i];
                        o.handleEvent ? o.handleEvent(eventObj) : o(eventObj), eventObj.removed && (this.off(eventObj.type, o, 1 == eventPhase), (eventObj.removed = !1));
                    }
                }
                2 === eventPhase && this._dispatchEvent(eventObj, 2.1);
            }),
            (createjs.EventDispatcher = EventDispatcher);
    })(),
    (this.createjs = this.createjs || {}),
    (function (scope) {
        "use strict";
        function ProgressEvent(loaded, total) {
            this.Event_constructor("progress"), (this.loaded = loaded), (this.total = null == total ? 1 : total), (this.progress = 0 == total ? 0 : this.loaded / this.total);
        }
        (createjs.extend(ProgressEvent, createjs.Event).clone = function () {
            return new createjs.ProgressEvent(this.loaded, this.total);
        }),
            (createjs.ProgressEvent = createjs.promote(ProgressEvent, "Event"));
    })(window),
    function () {
        var isLoader = "function" == typeof define && define.amd,
            objectTypes = { function: !0, object: !0 },
            freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
            root = (objectTypes[typeof window] && window) || this,
            freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && "object" == typeof global && global;
        function runInContext(context, exports) {
            context || (context = root.Object()), exports || (exports = root.Object());
            var Number = context.Number || root.Number,
                String = context.String || root.String,
                Object = context.Object || root.Object,
                Date = context.Date || root.Date,
                SyntaxError = context.SyntaxError || root.SyntaxError,
                TypeError = context.TypeError || root.TypeError,
                Math = context.Math || root.Math,
                nativeJSON = context.JSON || root.JSON;
            "object" == typeof nativeJSON && nativeJSON && ((exports.stringify = nativeJSON.stringify), (exports.parse = nativeJSON.parse));
            var isProperty,
                forEach,
                undef,
                objectProto = Object.prototype,
                getClass = objectProto.toString,
                isExtended = new Date(-0xc782b5b800cec);
            try {
                isExtended =
                    -109252 == isExtended.getUTCFullYear() &&
                    0 === isExtended.getUTCMonth() &&
                    1 === isExtended.getUTCDate() &&
                    10 == isExtended.getUTCHours() &&
                    37 == isExtended.getUTCMinutes() &&
                    6 == isExtended.getUTCSeconds() &&
                    708 == isExtended.getUTCMilliseconds();
            } catch (exception) {}
            function has(name) {
                if (has[name] !== undef) return has[name];
                var isSupported;
                if ("bug-string-char-index" == name) isSupported = "a" != "a"[0];
                else if ("json" == name) isSupported = has("json-stringify") && has("json-parse");
                else {
                    var value,
                        serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                    if ("json-stringify" == name) {
                        var stringify = exports.stringify,
                            stringifySupported = "function" == typeof stringify && isExtended;
                        if (stringifySupported) {
                            (value = function () {
                                return 1;
                            }).toJSON = value;
                            try {
                                stringifySupported =
                                    "0" === stringify(0) &&
                                    "0" === stringify(new Number()) &&
                                    '""' == stringify(new String()) &&
                                    stringify(getClass) === undef &&
                                    stringify(undef) === undef &&
                                    stringify() === undef &&
                                    "1" === stringify(value) &&
                                    "[1]" == stringify([value]) &&
                                    "[null]" == stringify([undef]) &&
                                    "null" == stringify(null) &&
                                    "[null,null,null]" == stringify([undef, getClass, null]) &&
                                    stringify({ a: [value, !0, !1, null, "\0\b\n\f\r\t"] }) == serialized &&
                                    "1" === stringify(null, value) &&
                                    "[\n 1,\n 2\n]" == stringify([1, 2], null, 1) &&
                                    '"-271821-04-20T00:00:00.000Z"' == stringify(new Date(-864e13)) &&
                                    '"+275760-09-13T00:00:00.000Z"' == stringify(new Date(864e13)) &&
                                    '"-000001-01-01T00:00:00.000Z"' == stringify(new Date(-621987552e5)) &&
                                    '"1969-12-31T23:59:59.999Z"' == stringify(new Date(-1));
                            } catch (exception) {
                                stringifySupported = !1;
                            }
                        }
                        isSupported = stringifySupported;
                    }
                    if ("json-parse" == name) {
                        var parse = exports.parse;
                        if ("function" == typeof parse)
                            try {
                                if (0 === parse("0") && !parse(!1)) {
                                    var parseSupported = 5 == (value = parse(serialized)).a.length && 1 === value.a[0];
                                    if (parseSupported) {
                                        try {
                                            parseSupported = !parse('"\t"');
                                        } catch (exception) {}
                                        if (parseSupported)
                                            try {
                                                parseSupported = 1 !== parse("01");
                                            } catch (exception) {}
                                        if (parseSupported)
                                            try {
                                                parseSupported = 1 !== parse("1.");
                                            } catch (exception) {}
                                    }
                                }
                            } catch (exception) {
                                parseSupported = !1;
                            }
                        isSupported = parseSupported;
                    }
                }
                return (has[name] = !!isSupported);
            }
            if (!has("json")) {
                var charIndexBuggy = has("bug-string-char-index");
                if (!isExtended)
                    var floor = Math.floor,
                        Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
                        getDay = function (year, month) {
                            return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
                        };
                if (
                    ((isProperty = objectProto.hasOwnProperty) ||
                        (isProperty = function (property) {
                            var constructor,
                                members = {};
                            return (
                                ((members.__proto__ = null), (members.__proto__ = { toString: 1 }), members).toString != getClass
                                    ? (isProperty = function (property) {
                                          var original = this.__proto__,
                                              result = property in ((this.__proto__ = null), this);
                                          return (this.__proto__ = original), result;
                                      })
                                    : ((constructor = members.constructor),
                                      (isProperty = function (property) {
                                          var parent = (this.constructor || constructor).prototype;
                                          return property in this && !(property in parent && this[property] === parent[property]);
                                      })),
                                (members = null),
                                isProperty.call(this, property)
                            );
                        }),
                    (forEach = function (object, callback) {
                        var Properties,
                            members,
                            property,
                            size = 0;
                        for (property in (((Properties = function () {
                            this.valueOf = 0;
                        }).prototype.valueOf = 0),
                        (members = new Properties())))
                            isProperty.call(members, property) && size++;
                        return (
                            (Properties = members = null),
                            size
                                ? (forEach =
                                      2 == size
                                          ? function (object, callback) {
                                                var property,
                                                    members = {},
                                                    isFunction = "[object Function]" == getClass.call(object);
                                                for (property in object) (isFunction && "prototype" == property) || isProperty.call(members, property) || !(members[property] = 1) || !isProperty.call(object, property) || callback(property);
                                            }
                                          : function (object, callback) {
                                                var property,
                                                    isConstructor,
                                                    isFunction = "[object Function]" == getClass.call(object);
                                                for (property in object) (isFunction && "prototype" == property) || !isProperty.call(object, property) || (isConstructor = "constructor" === property) || callback(property);
                                                (isConstructor || isProperty.call(object, (property = "constructor"))) && callback(property);
                                            })
                                : ((members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"]),
                                  (forEach = function (object, callback) {
                                      var property,
                                          length,
                                          isFunction = "[object Function]" == getClass.call(object),
                                          hasProperty = (!isFunction && "function" != typeof object.constructor && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty) || isProperty;
                                      for (property in object) (isFunction && "prototype" == property) || !hasProperty.call(object, property) || callback(property);
                                      for (length = members.length; (property = members[--length]); hasProperty.call(object, property) && callback(property));
                                  })),
                            forEach(object, callback)
                        );
                    }),
                    !has("json-stringify"))
                ) {
                    var Escapes = { 92: "\\\\", 34: '\\"', 8: "\\b", 12: "\\f", 10: "\\n", 13: "\\r", 9: "\\t" },
                        toPaddedString = function (width, value) {
                            return ("000000" + (value || 0)).slice(-width);
                        },
                        quote = function (value) {
                            for (var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10, symbols = useCharIndex && (charIndexBuggy ? value.split("") : value); index < length; index++) {
                                var charCode = value.charCodeAt(index);
                                switch (charCode) {
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 12:
                                    case 13:
                                    case 34:
                                    case 92:
                                        result += Escapes[charCode];
                                        break;
                                    default:
                                        if (charCode < 32) {
                                            result += "\\u00" + toPaddedString(2, charCode.toString(16));
                                            break;
                                        }
                                        result += useCharIndex ? symbols[index] : value.charAt(index);
                                }
                            }
                            return result + '"';
                        },
                        serialize = function (property, object, callback, properties, whitespace, indentation, stack) {
                            var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
                            try {
                                value = object[property];
                            } catch (exception) {}
                            if ("object" == typeof value && value)
                                if ("[object Date]" != (className = getClass.call(value)) || isProperty.call(value, "toJSON"))
                                    "function" == typeof value.toJSON &&
                                        (("[object Number]" != className && "[object String]" != className && "[object Array]" != className) || isProperty.call(value, "toJSON")) &&
                                        (value = value.toJSON(property));
                                else if (value > -1 / 0 && value < 1 / 0) {
                                    if (getDay) {
                                        for (date = floor(value / 864e5), year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);
                                        for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);
                                        (date = 1 + date - getDay(year, month)),
                                            (hours = floor((time = ((value % 864e5) + 864e5) % 864e5) / 36e5) % 24),
                                            (minutes = floor(time / 6e4) % 60),
                                            (seconds = floor(time / 1e3) % 60),
                                            (milliseconds = time % 1e3);
                                    } else
                                        (year = value.getUTCFullYear()),
                                            (month = value.getUTCMonth()),
                                            (date = value.getUTCDate()),
                                            (hours = value.getUTCHours()),
                                            (minutes = value.getUTCMinutes()),
                                            (seconds = value.getUTCSeconds()),
                                            (milliseconds = value.getUTCMilliseconds());
                                    value =
                                        (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +
                                        "-" +
                                        toPaddedString(2, month + 1) +
                                        "-" +
                                        toPaddedString(2, date) +
                                        "T" +
                                        toPaddedString(2, hours) +
                                        ":" +
                                        toPaddedString(2, minutes) +
                                        ":" +
                                        toPaddedString(2, seconds) +
                                        "." +
                                        toPaddedString(3, milliseconds) +
                                        "Z";
                                } else value = null;
                            if ((callback && (value = callback.call(object, property, value)), null === value)) return "null";
                            if ("[object Boolean]" == (className = getClass.call(value))) return "" + value;
                            if ("[object Number]" == className) return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
                            if ("[object String]" == className) return quote("" + value);
                            if ("object" == typeof value) {
                                for (length = stack.length; length--; ) if (stack[length] === value) throw TypeError();
                                if ((stack.push(value), (results = []), (prefix = indentation), (indentation += whitespace), "[object Array]" == className)) {
                                    for (index = 0, length = value.length; index < length; index++)
                                        (element = serialize(index, value, callback, properties, whitespace, indentation, stack)), results.push(element === undef ? "null" : element);
                                    result = results.length ? (whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]") : "[]";
                                } else
                                    forEach(properties || value, function (property) {
                                        var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                                        element !== undef && results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
                                    }),
                                        (result = results.length ? (whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}") : "{}");
                                return stack.pop(), result;
                            }
                        };
                    exports.stringify = function (source, filter, width) {
                        var whitespace, callback, properties, className;
                        if (objectTypes[typeof filter] && filter)
                            if ("[object Function]" == (className = getClass.call(filter))) callback = filter;
                            else if ("[object Array]" == className) {
                                properties = {};
                                for (
                                    var value, index = 0, length = filter.length;
                                    index < length;
                                    value = filter[index++], ("[object String]" == (className = getClass.call(value)) || "[object Number]" == className) && (properties[value] = 1)
                                );
                            }
                        if (width)
                            if ("[object Number]" == (className = getClass.call(width))) {
                                if ((width -= width % 1) > 0) for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");
                            } else "[object String]" == className && (whitespace = width.length <= 10 ? width : width.slice(0, 10));
                        return serialize("", (((value = {})[""] = source), value), callback, properties, whitespace, "", []);
                    };
                }
                if (!has("json-parse")) {
                    var Index,
                        Source,
                        fromCharCode = String.fromCharCode,
                        Unescapes = { 92: "\\", 34: '"', 47: "/", 98: "\b", 116: "\t", 110: "\n", 102: "\f", 114: "\r" },
                        abort = function () {
                            throw ((Index = Source = null), SyntaxError());
                        },
                        lex = function () {
                            for (var value, begin, position, isSigned, charCode, source = Source, length = source.length; Index < length; )
                                switch ((charCode = source.charCodeAt(Index))) {
                                    case 9:
                                    case 10:
                                    case 13:
                                    case 32:
                                        Index++;
                                        break;
                                    case 123:
                                    case 125:
                                    case 91:
                                    case 93:
                                    case 58:
                                    case 44:
                                        return (value = charIndexBuggy ? source.charAt(Index) : source[Index]), Index++, value;
                                    case 34:
                                        for (value = "@", Index++; Index < length; )
                                            if ((charCode = source.charCodeAt(Index)) < 32) abort();
                                            else if (92 == charCode)
                                                switch ((charCode = source.charCodeAt(++Index))) {
                                                    case 92:
                                                    case 34:
                                                    case 47:
                                                    case 98:
                                                    case 116:
                                                    case 110:
                                                    case 102:
                                                    case 114:
                                                        (value += Unescapes[charCode]), Index++;
                                                        break;
                                                    case 117:
                                                        for (begin = ++Index, position = Index + 4; Index < position; Index++)
                                                            ((charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) || (charCode >= 65 && charCode <= 70) || abort();
                                                        value += fromCharCode("0x" + source.slice(begin, Index));
                                                        break;
                                                    default:
                                                        abort();
                                                }
                                            else {
                                                if (34 == charCode) break;
                                                for (charCode = source.charCodeAt(Index), begin = Index; charCode >= 32 && 92 != charCode && 34 != charCode; ) charCode = source.charCodeAt(++Index);
                                                value += source.slice(begin, Index);
                                            }
                                        if (34 == source.charCodeAt(Index)) return Index++, value;
                                        abort();
                                    default:
                                        if (((begin = Index), 45 == charCode && ((isSigned = !0), (charCode = source.charCodeAt(++Index))), charCode >= 48 && charCode <= 57)) {
                                            for (
                                                48 == charCode && (charCode = source.charCodeAt(Index + 1)) >= 48 && charCode <= 57 && abort(), isSigned = !1;
                                                Index < length && (charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57;
                                                Index++
                                            );
                                            if (46 == source.charCodeAt(Index)) {
                                                for (position = ++Index; position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57; position++);
                                                position == Index && abort(), (Index = position);
                                            }
                                            if (101 == (charCode = source.charCodeAt(Index)) || 69 == charCode) {
                                                for (
                                                    (43 != (charCode = source.charCodeAt(++Index)) && 45 != charCode) || Index++, position = Index;
                                                    position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57;
                                                    position++
                                                );
                                                position == Index && abort(), (Index = position);
                                            }
                                            return +source.slice(begin, Index);
                                        }
                                        if ((isSigned && abort(), "true" == source.slice(Index, Index + 4))) return (Index += 4), !0;
                                        if ("false" == source.slice(Index, Index + 5)) return (Index += 5), !1;
                                        if ("null" == source.slice(Index, Index + 4)) return (Index += 4), null;
                                        abort();
                                }
                            return "$";
                        },
                        get = function (value) {
                            var results, hasMembers;
                            if (("$" == value && abort(), "string" == typeof value)) {
                                if ("@" == (charIndexBuggy ? value.charAt(0) : value[0])) return value.slice(1);
                                if ("[" == value) {
                                    for (results = []; "]" != (value = lex()); hasMembers || (hasMembers = !0)) hasMembers && ("," == value ? "]" == (value = lex()) && abort() : abort()), "," == value && abort(), results.push(get(value));
                                    return results;
                                }
                                if ("{" == value) {
                                    for (results = {}; "}" != (value = lex()); hasMembers || (hasMembers = !0))
                                        hasMembers && ("," == value ? "}" == (value = lex()) && abort() : abort()),
                                            ("," != value && "string" == typeof value && "@" == (charIndexBuggy ? value.charAt(0) : value[0]) && ":" == lex()) || abort(),
                                            (results[value.slice(1)] = get(lex()));
                                    return results;
                                }
                                abort();
                            }
                            return value;
                        },
                        update = function (source, property, callback) {
                            var element = walk(source, property, callback);
                            element === undef ? delete source[property] : (source[property] = element);
                        },
                        walk = function (source, property, callback) {
                            var length,
                                value = source[property];
                            if ("object" == typeof value && value)
                                if ("[object Array]" == getClass.call(value)) for (length = value.length; length--; ) update(value, length, callback);
                                else
                                    forEach(value, function (property) {
                                        update(value, property, callback);
                                    });
                            return callback.call(source, property, value);
                        };
                    exports.parse = function (source, callback) {
                        var result, value;
                        return (
                            (Index = 0),
                            (Source = "" + source),
                            (result = get(lex())),
                            "$" != lex() && abort(),
                            (Index = Source = null),
                            callback && "[object Function]" == getClass.call(callback) ? walk((((value = {})[""] = result), value), "", callback) : result
                        );
                    };
                }
            }
            return (exports.runInContext = runInContext), exports;
        }
        if ((!freeGlobal || (freeGlobal.global !== freeGlobal && freeGlobal.window !== freeGlobal && freeGlobal.self !== freeGlobal) || (root = freeGlobal), freeExports && !isLoader)) runInContext(root, freeExports);
        else {
            var nativeJSON = root.JSON,
                previousJSON = root.JSON3,
                isRestored = !1,
                JSON3 = runInContext(
                    root,
                    (root.JSON3 = {
                        noConflict: function () {
                            return isRestored || ((isRestored = !0), (root.JSON = nativeJSON), (root.JSON3 = previousJSON), (nativeJSON = previousJSON = null)), JSON3;
                        },
                    })
                );
            root.JSON = { parse: JSON3.parse, stringify: JSON3.stringify };
        }
        isLoader &&
            define(function () {
                return JSON3;
            });
    }.call(this),
    (function () {
        var s = {
            a: function () {
                return s.el("a");
            },
            svg: function () {
                return s.el("svg");
            },
            object: function () {
                return s.el("object");
            },
            image: function () {
                return s.el("image");
            },
            img: function () {
                return s.el("img");
            },
            style: function () {
                return s.el("style");
            },
            link: function () {
                return s.el("link");
            },
            script: function () {
                return s.el("script");
            },
            audio: function () {
                return s.el("audio");
            },
            video: function () {
                return s.el("video");
            },
            text: function (value) {
                return document.createTextNode(value);
            },
            el: function (name) {
                return document.createElement(name);
            },
        };
        createjs.Elements = s;
    })(),
    (function () {
        var s = {
            ABSOLUTE_PATT: /^(?:\w+:)?\/{2}/i,
            RELATIVE_PATT: /^[./]*?\//i,
            EXTENSION_PATT: /\/?[^/]+\.(\w{1,5})$/i,
            parseURI: function (path) {
                var info = { absolute: !1, relative: !1, protocol: null, hostname: null, port: null, pathname: null, search: null, hash: null, host: null };
                if (null == path) return info;
                var parser = createjs.Elements.a();
                for (var n in ((parser.href = path), info)) n in parser && (info[n] = parser[n]);
                var match,
                    queryIndex = path.indexOf("?");
                return (
                    queryIndex > -1 && (path = path.substr(0, queryIndex)),
                    s.ABSOLUTE_PATT.test(path) ? (info.absolute = !0) : s.RELATIVE_PATT.test(path) && (info.relative = !0),
                    (match = path.match(s.EXTENSION_PATT)) && (info.extension = match[1].toLowerCase()),
                    info
                );
            },
            formatQueryString: function (data, query) {
                if (null == data) throw new Error("You must specify data.");
                var params = [];
                for (var n in data) params.push(n + "=" + escape(data[n]));
                return query && (params = params.concat(query)), params.join("&");
            },
            buildURI: function (src, data) {
                if (null == data) return src;
                var query = [],
                    idx = src.indexOf("?");
                if (-1 != idx) {
                    var q = src.slice(idx + 1);
                    query = query.concat(q.split("&"));
                }
                return -1 != idx ? src.slice(0, idx) + "?" + this.formatQueryString(data, query) : src + "?" + this.formatQueryString(data, query);
            },
            isCrossDomain: function (item) {
                var target = createjs.Elements.a();
                target.href = item.src;
                var host = createjs.Elements.a();
                return (host.href = location.href), "" != target.hostname && (target.port != host.port || target.protocol != host.protocol || target.hostname != host.hostname);
            },
            isLocal: function (item) {
                var target = createjs.Elements.a();
                return (target.href = item.src), "" == target.hostname && "file:" == target.protocol;
            },
        };
        createjs.URLUtils = s;
    })(),
    (function () {
        var s = {
            container: null,
            appendToHead: function (el) {
                s.getHead().appendChild(el);
            },
            appendToBody: function (el) {
                if (null == s.container) {
                    (s.container = document.createElement("div")), (s.container.id = "preloadjs-container");
                    var style = s.container.style;
                    (style.visibility = "hidden"),
                        (style.position = "absolute"),
                        (style.width = s.container.style.height = "10px"),
                        (style.overflow = "hidden"),
                        (style.transform = style.msTransform = style.webkitTransform = style.oTransform = "translate(-10px, -10px)"),
                        s.getBody().appendChild(s.container);
                }
                s.container.appendChild(el);
            },
            getHead: function () {
                return document.head || document.getElementsByTagName("head")[0];
            },
            getBody: function () {
                return document.body || document.getElementsByTagName("body")[0];
            },
            removeChild: function (el) {
                el.parent && el.parent.removeChild(el);
            },
            isImageTag: function (item) {
                return item instanceof HTMLImageElement;
            },
            isAudioTag: function (item) {
                return !!window.HTMLAudioElement && item instanceof HTMLAudioElement;
            },
            isVideoTag: function (item) {
                return !!window.HTMLVideoElement && item instanceof HTMLVideoElement;
            },
        };
        createjs.DomUtils = s;
    })(),
    (function () {
        var s = {
            parseXML: function (text) {
                var xml = null;
                try {
                    if (window.DOMParser) xml = new DOMParser().parseFromString(text, "text/xml");
                } catch (e) {}
                if (!xml)
                    try {
                        ((xml = new ActiveXObject("Microsoft.XMLDOM")).async = !1), xml.loadXML(text);
                    } catch (e) {
                        xml = null;
                    }
                return xml;
            },
            parseJSON: function (value) {
                if (null == value) return null;
                try {
                    return JSON.parse(value);
                } catch (e) {
                    throw e;
                }
            },
        };
        createjs.DataUtils = s;
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        var s = {
            BINARY: "binary",
            CSS: "css",
            FONT: "font",
            FONTCSS: "fontcss",
            IMAGE: "image",
            JAVASCRIPT: "javascript",
            JSON: "json",
            JSONP: "jsonp",
            MANIFEST: "manifest",
            SOUND: "sound",
            VIDEO: "video",
            SPRITESHEET: "spritesheet",
            SVG: "svg",
            TEXT: "text",
            XML: "xml",
        };
        createjs.Types = s;
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        var s = { POST: "POST", GET: "GET" };
        createjs.Methods = s;
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function LoadItem() {
            (this.src = null),
                (this.type = null),
                (this.id = null),
                (this.maintainOrder = !1),
                (this.callback = null),
                (this.data = null),
                (this.method = createjs.Methods.GET),
                (this.values = null),
                (this.headers = null),
                (this.withCredentials = !1),
                (this.mimeType = null),
                (this.crossOrigin = null),
                (this.loadTimeout = s.LOAD_TIMEOUT_DEFAULT);
        }
        var p = (LoadItem.prototype = {}),
            s = LoadItem;
        (s.LOAD_TIMEOUT_DEFAULT = 8e3),
            (s.create = function (value) {
                if ("string" == typeof value) {
                    var item = new LoadItem();
                    return (item.src = value), item;
                }
                if (value instanceof s) return value;
                if (value instanceof Object && value.src) return null == value.loadTimeout && (value.loadTimeout = s.LOAD_TIMEOUT_DEFAULT), value;
                throw new Error("Type not recognized.");
            }),
            (p.set = function (props) {
                for (var n in props) this[n] = props[n];
                return this;
            }),
            (createjs.LoadItem = s);
    })(),
    (function () {
        var s = {
            isBinary: function (type) {
                switch (type) {
                    case createjs.Types.IMAGE:
                    case createjs.Types.BINARY:
                        return !0;
                    default:
                        return !1;
                }
            },
            isText: function (type) {
                switch (type) {
                    case createjs.Types.TEXT:
                    case createjs.Types.JSON:
                    case createjs.Types.MANIFEST:
                    case createjs.Types.XML:
                    case createjs.Types.CSS:
                    case createjs.Types.SVG:
                    case createjs.Types.JAVASCRIPT:
                    case createjs.Types.SPRITESHEET:
                        return !0;
                    default:
                        return !1;
                }
            },
            getTypeByExtension: function (extension) {
                if (null == extension) return createjs.Types.TEXT;
                switch (extension.toLowerCase()) {
                    case "jpeg":
                    case "jpg":
                    case "gif":
                    case "png":
                    case "webp":
                    case "bmp":
                        return createjs.Types.IMAGE;
                    case "ogg":
                    case "mp3":
                    case "webm":
                        return createjs.Types.SOUND;
                    case "mp4":
                    case "webm":
                    case "ts":
                        return createjs.Types.VIDEO;
                    case "json":
                        return createjs.Types.JSON;
                    case "xml":
                        return createjs.Types.XML;
                    case "css":
                        return createjs.Types.CSS;
                    case "js":
                        return createjs.Types.JAVASCRIPT;
                    case "svg":
                        return createjs.Types.SVG;
                    default:
                        return createjs.Types.TEXT;
                }
            },
        };
        createjs.RequestUtils = s;
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function AbstractLoader(loadItem, preferXHR, type) {
            this.EventDispatcher_constructor(),
                (this.loaded = !1),
                (this.canceled = !1),
                (this.progress = 0),
                (this.type = type),
                (this.resultFormatter = null),
                (this._item = loadItem ? createjs.LoadItem.create(loadItem) : null),
                (this._preferXHR = preferXHR),
                (this._result = null),
                (this._rawResult = null),
                (this._loadedItems = null),
                (this._tagSrcAttribute = null),
                (this._tag = null);
        }
        var p = createjs.extend(AbstractLoader, createjs.EventDispatcher),
            s = AbstractLoader;
        try {
            Object.defineProperties(s, {
                POST: {
                    get: createjs.deprecate(function () {
                        return createjs.Methods.POST;
                    }, "AbstractLoader.POST"),
                },
                GET: {
                    get: createjs.deprecate(function () {
                        return createjs.Methods.GET;
                    }, "AbstractLoader.GET"),
                },
                BINARY: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.BINARY;
                    }, "AbstractLoader.BINARY"),
                },
                CSS: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.CSS;
                    }, "AbstractLoader.CSS"),
                },
                FONT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.FONT;
                    }, "AbstractLoader.FONT"),
                },
                FONTCSS: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.FONTCSS;
                    }, "AbstractLoader.FONTCSS"),
                },
                IMAGE: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.IMAGE;
                    }, "AbstractLoader.IMAGE"),
                },
                JAVASCRIPT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JAVASCRIPT;
                    }, "AbstractLoader.JAVASCRIPT"),
                },
                JSON: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JSON;
                    }, "AbstractLoader.JSON"),
                },
                JSONP: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JSONP;
                    }, "AbstractLoader.JSONP"),
                },
                MANIFEST: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.MANIFEST;
                    }, "AbstractLoader.MANIFEST"),
                },
                SOUND: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SOUND;
                    }, "AbstractLoader.SOUND"),
                },
                VIDEO: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.VIDEO;
                    }, "AbstractLoader.VIDEO"),
                },
                SPRITESHEET: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SPRITESHEET;
                    }, "AbstractLoader.SPRITESHEET"),
                },
                SVG: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SVG;
                    }, "AbstractLoader.SVG"),
                },
                TEXT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.TEXT;
                    }, "AbstractLoader.TEXT"),
                },
                XML: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.XML;
                    }, "AbstractLoader.XML"),
                },
            });
        } catch (e) {}
        (p.getItem = function () {
            return this._item;
        }),
            (p.getResult = function (raw) {
                return raw ? this._rawResult : this._result;
            }),
            (p.getTag = function () {
                return this._tag;
            }),
            (p.setTag = function (tag) {
                this._tag = tag;
            }),
            (p.load = function () {
                this._createRequest(),
                    this._request.on("complete", this, this),
                    this._request.on("progress", this, this),
                    this._request.on("loadStart", this, this),
                    this._request.on("abort", this, this),
                    this._request.on("timeout", this, this),
                    this._request.on("error", this, this);
                var evt = new createjs.Event("initialize");
                (evt.loader = this._request), this.dispatchEvent(evt), this._request.load();
            }),
            (p.cancel = function () {
                (this.canceled = !0), this.destroy();
            }),
            (p.destroy = function () {
                this._request && (this._request.removeAllEventListeners(), this._request.destroy()),
                    (this._request = null),
                    (this._item = null),
                    (this._rawResult = null),
                    (this._result = null),
                    (this._loadItems = null),
                    this.removeAllEventListeners();
            }),
            (p.getLoadedItems = function () {
                return this._loadedItems;
            }),
            (p._createRequest = function () {
                this._preferXHR ? (this._request = new createjs.XHRRequest(this._item)) : (this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute));
            }),
            (p._createTag = function (src) {
                return null;
            }),
            (p._sendLoadStart = function () {
                this._isCanceled() || this.dispatchEvent("loadstart");
            }),
            (p._sendProgress = function (value) {
                if (!this._isCanceled()) {
                    var event = null;
                    "number" == typeof value
                        ? ((this.progress = value), (event = new createjs.ProgressEvent(this.progress)))
                        : ((event = value), (this.progress = value.loaded / value.total), (event.progress = this.progress), (isNaN(this.progress) || this.progress == 1 / 0) && (this.progress = 0)),
                        this.hasEventListener("progress") && this.dispatchEvent(event);
                }
            }),
            (p._sendComplete = function () {
                if (!this._isCanceled()) {
                    this.loaded = !0;
                    var event = new createjs.Event("complete");
                    (event.rawResult = this._rawResult), null != this._result && (event.result = this._result), this.dispatchEvent(event);
                }
            }),
            (p._sendError = function (event) {
                !this._isCanceled() && this.hasEventListener("error") && (null == event && (event = new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY")), this.dispatchEvent(event));
            }),
            (p._isCanceled = function () {
                return !(null != window.createjs && !this.canceled);
            }),
            (p.resultFormatter = null),
            (p.handleEvent = function (event) {
                switch (event.type) {
                    case "complete":
                        this._rawResult = event.target._response;
                        var result = this.resultFormatter && this.resultFormatter(this);
                        result instanceof Function ? result.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)) : ((this._result = result || this._rawResult), this._sendComplete());
                        break;
                    case "progress":
                        this._sendProgress(event);
                        break;
                    case "error":
                        this._sendError(event);
                        break;
                    case "loadstart":
                        this._sendLoadStart();
                        break;
                    case "abort":
                    case "timeout":
                        this._isCanceled() || this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_" + event.type.toUpperCase() + "_ERROR"));
                }
            }),
            (p._resultFormatSuccess = function (result) {
                (this._result = result), this._sendComplete();
            }),
            (p._resultFormatFailed = function (event) {
                this._sendError(event);
            }),
            (p.toString = function () {
                return "[PreloadJS AbstractLoader]";
            }),
            (createjs.AbstractLoader = createjs.promote(AbstractLoader, "EventDispatcher"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function AbstractMediaLoader(loadItem, preferXHR, type) {
            this.AbstractLoader_constructor(loadItem, preferXHR, type), (this.resultFormatter = this._formatResult), (this._tagSrcAttribute = "src"), this.on("initialize", this._updateXHR, this);
        }
        var p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);
        (p.load = function () {
            this._tag || (this._tag = this._createTag(this._item.src)), (this._tag.preload = "auto"), this._tag.load(), this.AbstractLoader_load();
        }),
            (p._createTag = function () {}),
            (p._createRequest = function () {
                this._preferXHR ? (this._request = new createjs.XHRRequest(this._item)) : (this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute));
            }),
            (p._updateXHR = function (event) {
                event.loader.setResponseType && event.loader.setResponseType("blob");
            }),
            (p._formatResult = function (loader) {
                if ((this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler), (this._tag.onstalled = null), this._preferXHR)) {
                    var URL = window.URL || window.webkitURL,
                        result = loader.getResult(!0);
                    loader.getTag().src = URL.createObjectURL(result);
                }
                return loader.getTag();
            }),
            (createjs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        var AbstractRequest = function (item) {
                this._item = item;
            },
            p = createjs.extend(AbstractRequest, createjs.EventDispatcher);
        (p.load = function () {}), (p.destroy = function () {}), (p.cancel = function () {}), (createjs.AbstractRequest = createjs.promote(AbstractRequest, "EventDispatcher"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function TagRequest(loadItem, tag, srcAttribute) {
            this.AbstractRequest_constructor(loadItem), (this._tag = tag), (this._tagSrcAttribute = srcAttribute), (this._loadedHandler = createjs.proxy(this._handleTagComplete, this)), (this._addedToDOM = !1);
        }
        var p = createjs.extend(TagRequest, createjs.AbstractRequest);
        (p.load = function () {
            (this._tag.onload = createjs.proxy(this._handleTagComplete, this)), (this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this)), (this._tag.onerror = createjs.proxy(this._handleError, this));
            var evt = new createjs.Event("initialize");
            (evt.loader = this._tag),
                this.dispatchEvent(evt),
                (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout)),
                (this._tag[this._tagSrcAttribute] = this._item.src),
                null == this._tag.parentNode && (createjs.DomUtils.appendToBody(this._tag), (this._addedToDOM = !0));
        }),
            (p.destroy = function () {
                this._clean(), (this._tag = null), this.AbstractRequest_destroy();
            }),
            (p._handleReadyStateChange = function () {
                clearTimeout(this._loadTimeout);
                var tag = this._tag;
                ("loaded" != tag.readyState && "complete" != tag.readyState) || this._handleTagComplete();
            }),
            (p._handleError = function () {
                this._clean(), this.dispatchEvent("error");
            }),
            (p._handleTagComplete = function () {
                (this._rawResult = this._tag), (this._result = (this.resultFormatter && this.resultFormatter(this)) || this._rawResult), this._clean(), this.dispatchEvent("complete");
            }),
            (p._handleTimeout = function () {
                this._clean(), this.dispatchEvent(new createjs.Event("timeout"));
            }),
            (p._clean = function () {
                (this._tag.onload = null), (this._tag.onreadystatechange = null), (this._tag.onerror = null), this._addedToDOM && null != this._tag.parentNode && this._tag.parentNode.removeChild(this._tag), clearTimeout(this._loadTimeout);
            }),
            (p._handleStalled = function () {}),
            (createjs.TagRequest = createjs.promote(TagRequest, "AbstractRequest"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function MediaTagRequest(loadItem, tag, srcAttribute) {
            this.AbstractRequest_constructor(loadItem), (this._tag = tag), (this._tagSrcAttribute = srcAttribute), (this._loadedHandler = createjs.proxy(this._handleTagComplete, this));
        }
        var p = createjs.extend(MediaTagRequest, createjs.TagRequest);
        (p.load = function () {
            var sc = createjs.proxy(this._handleStalled, this);
            this._stalledCallback = sc;
            var pc = createjs.proxy(this._handleProgress, this);
            (this._handleProgress = pc),
                this._tag.addEventListener("stalled", sc),
                this._tag.addEventListener("progress", pc),
                this._tag.addEventListener && this._tag.addEventListener("canplaythrough", this._loadedHandler, !1),
                this.TagRequest_load();
        }),
            (p._handleReadyStateChange = function () {
                clearTimeout(this._loadTimeout);
                var tag = this._tag;
                ("loaded" != tag.readyState && "complete" != tag.readyState) || this._handleTagComplete();
            }),
            (p._handleStalled = function () {}),
            (p._handleProgress = function (event) {
                if (event && !(event.loaded > 0 && 0 == event.total)) {
                    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);
                    this.dispatchEvent(newEvent);
                }
            }),
            (p._clean = function () {
                this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler),
                    this._tag.removeEventListener("stalled", this._stalledCallback),
                    this._tag.removeEventListener("progress", this._progressCallback),
                    this.TagRequest__clean();
            }),
            (createjs.MediaTagRequest = createjs.promote(MediaTagRequest, "TagRequest"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function XHRRequest(item) {
            this.AbstractRequest_constructor(item),
                (this._request = null),
                (this._loadTimeout = null),
                (this._xhrLevel = 1),
                (this._response = null),
                (this._rawResponse = null),
                (this._canceled = !1),
                (this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this)),
                (this._handleProgressProxy = createjs.proxy(this._handleProgress, this)),
                (this._handleAbortProxy = createjs.proxy(this._handleAbort, this)),
                (this._handleErrorProxy = createjs.proxy(this._handleError, this)),
                (this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this)),
                (this._handleLoadProxy = createjs.proxy(this._handleLoad, this)),
                (this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this)),
                this._createXHR(item);
        }
        var p = createjs.extend(XHRRequest, createjs.AbstractRequest);
        (XHRRequest.ACTIVEX_VERSIONS = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.5.0", "Msxml2.XMLHTTP.4.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"]),
            (p.getResult = function (raw) {
                return raw && this._rawResponse ? this._rawResponse : this._response;
            }),
            (p.cancel = function () {
                (this.canceled = !0), this._clean(), this._request.abort();
            }),
            (p.load = function () {
                if (null != this._request) {
                    null != this._request.addEventListener
                        ? (this._request.addEventListener("loadstart", this._handleLoadStartProxy, !1),
                          this._request.addEventListener("progress", this._handleProgressProxy, !1),
                          this._request.addEventListener("abort", this._handleAbortProxy, !1),
                          this._request.addEventListener("error", this._handleErrorProxy, !1),
                          this._request.addEventListener("timeout", this._handleTimeoutProxy, !1),
                          this._request.addEventListener("load", this._handleLoadProxy, !1),
                          this._request.addEventListener("readystatechange", this._handleReadyStateChangeProxy, !1))
                        : ((this._request.onloadstart = this._handleLoadStartProxy),
                          (this._request.onprogress = this._handleProgressProxy),
                          (this._request.onabort = this._handleAbortProxy),
                          (this._request.onerror = this._handleErrorProxy),
                          (this._request.ontimeout = this._handleTimeoutProxy),
                          (this._request.onload = this._handleLoadProxy),
                          (this._request.onreadystatechange = this._handleReadyStateChangeProxy)),
                        1 == this._xhrLevel && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout));
                    try {
                        this._item.values ? this._request.send(createjs.URLUtils.formatQueryString(this._item.values)) : this._request.send();
                    } catch (error) {
                        this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND", null, error));
                    }
                } else this._handleError();
            }),
            (p.setResponseType = function (type) {
                "blob" === type && ((type = window.URL ? "blob" : "arraybuffer"), (this._responseType = type)), (this._request.responseType = type);
            }),
            (p.getAllResponseHeaders = function () {
                return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null;
            }),
            (p.getResponseHeader = function (header) {
                return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(header) : null;
            }),
            (p._handleProgress = function (event) {
                if (event && !(event.loaded > 0 && 0 == event.total)) {
                    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);
                    this.dispatchEvent(newEvent);
                }
            }),
            (p._handleLoadStart = function (event) {
                clearTimeout(this._loadTimeout), this.dispatchEvent("loadstart");
            }),
            (p._handleAbort = function (event) {
                this._clean(), this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED", null, event));
            }),
            (p._handleError = function (event) {
                this._clean(), this.dispatchEvent(new createjs.ErrorEvent(event.message));
            }),
            (p._handleReadyStateChange = function (event) {
                4 == this._request.readyState && this._handleLoad();
            }),
            (p._handleLoad = function (event) {
                if (!this.loaded) {
                    this.loaded = !0;
                    var error = this._checkError();
                    if (error) this._handleError(error);
                    else {
                        if (((this._response = this._getResponse()), "arraybuffer" === this._responseType))
                            try {
                                this._response = new Blob([this._response]);
                            } catch (e) {
                                if (((window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder), "TypeError" === e.name && window.BlobBuilder)) {
                                    var builder = new BlobBuilder();
                                    builder.append(this._response), (this._response = builder.getBlob());
                                }
                            }
                        this._clean(), this.dispatchEvent(new createjs.Event("complete"));
                    }
                }
            }),
            (p._handleTimeout = function (event) {
                this._clean(), this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT", null, event));
            }),
            (p._checkError = function () {
                var status = parseInt(this._request.status);
                return status >= 400 && status <= 599 ? new Error(status) : 0 == status && /^https?:/.test(location.protocol) ? new Error(0) : null;
            }),
            (p._getResponse = function () {
                if (null != this._response) return this._response;
                if (null != this._request.response) return this._request.response;
                try {
                    if (null != this._request.responseText) return this._request.responseText;
                } catch (e) {}
                try {
                    if (null != this._request.responseXML) return this._request.responseXML;
                } catch (e) {}
                return null;
            }),
            (p._createXHR = function (item) {
                var crossdomain = createjs.URLUtils.isCrossDomain(item),
                    headers = {},
                    req = null;
                if (window.XMLHttpRequest) (req = new XMLHttpRequest()), crossdomain && void 0 === req.withCredentials && window.XDomainRequest && (req = new XDomainRequest());
                else {
                    for (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {
                        var axVersion = s.ACTIVEX_VERSIONS[i];
                        try {
                            req = new ActiveXObject(axVersion);
                            break;
                        } catch (e) {}
                    }
                    if (null == req) return !1;
                }
                null == item.mimeType && createjs.RequestUtils.isText(item.type) && (item.mimeType = "text/plain; charset=utf-8"),
                    item.mimeType && req.overrideMimeType && req.overrideMimeType(item.mimeType),
                    (this._xhrLevel = "string" == typeof req.responseType ? 2 : 1);
                var src = null;
                if (
                    ((src = item.method == createjs.Methods.GET ? createjs.URLUtils.buildURI(item.src, item.values) : item.src),
                    req.open(item.method || createjs.Methods.GET, src, !0),
                    crossdomain && req instanceof XMLHttpRequest && 1 == this._xhrLevel && (headers.Origin = location.origin),
                    item.values && item.method == createjs.Methods.POST && (headers["Content-Type"] = "application/x-www-form-urlencoded"),
                    crossdomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest"),
                    item.headers)
                )
                    for (var n in item.headers) headers[n] = item.headers[n];
                for (n in headers) req.setRequestHeader(n, headers[n]);
                return req instanceof XMLHttpRequest && void 0 !== item.withCredentials && (req.withCredentials = item.withCredentials), (this._request = req), !0;
            }),
            (p._clean = function () {
                clearTimeout(this._loadTimeout),
                    null != this._request.removeEventListener
                        ? (this._request.removeEventListener("loadstart", this._handleLoadStartProxy),
                          this._request.removeEventListener("progress", this._handleProgressProxy),
                          this._request.removeEventListener("abort", this._handleAbortProxy),
                          this._request.removeEventListener("error", this._handleErrorProxy),
                          this._request.removeEventListener("timeout", this._handleTimeoutProxy),
                          this._request.removeEventListener("load", this._handleLoadProxy),
                          this._request.removeEventListener("readystatechange", this._handleReadyStateChangeProxy))
                        : ((this._request.onloadstart = null),
                          (this._request.onprogress = null),
                          (this._request.onabort = null),
                          (this._request.onerror = null),
                          (this._request.ontimeout = null),
                          (this._request.onload = null),
                          (this._request.onreadystatechange = null));
            }),
            (p.toString = function () {
                return "[PreloadJS XHRRequest]";
            }),
            (createjs.XHRRequest = createjs.promote(XHRRequest, "AbstractRequest"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function LoadQueue(preferXHR, basePath, crossOrigin) {
            this.AbstractLoader_constructor(),
                (this._plugins = []),
                (this._typeCallbacks = {}),
                (this._extensionCallbacks = {}),
                (this.next = null),
                (this.maintainScriptOrder = !0),
                (this.stopOnError = !1),
                (this._maxConnections = 1),
                (this._availableLoaders = [
                    createjs.FontLoader,
                    createjs.ImageLoader,
                    createjs.JavaScriptLoader,
                    createjs.CSSLoader,
                    createjs.JSONLoader,
                    createjs.JSONPLoader,
                    createjs.SoundLoader,
                    createjs.ManifestLoader,
                    createjs.SpriteSheetLoader,
                    createjs.XMLLoader,
                    createjs.SVGLoader,
                    createjs.BinaryLoader,
                    createjs.VideoLoader,
                    createjs.TextLoader,
                ]),
                (this._defaultLoaderLength = this._availableLoaders.length),
                this.init(preferXHR, basePath, crossOrigin);
        }
        var p = createjs.extend(LoadQueue, createjs.AbstractLoader),
            s = LoadQueue;
        try {
            Object.defineProperties(s, {
                POST: {
                    get: createjs.deprecate(function () {
                        return createjs.Methods.POST;
                    }, "AbstractLoader.POST"),
                },
                GET: {
                    get: createjs.deprecate(function () {
                        return createjs.Methods.GET;
                    }, "AbstractLoader.GET"),
                },
                BINARY: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.BINARY;
                    }, "AbstractLoader.BINARY"),
                },
                CSS: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.CSS;
                    }, "AbstractLoader.CSS"),
                },
                FONT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.FONT;
                    }, "AbstractLoader.FONT"),
                },
                FONTCSS: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.FONTCSS;
                    }, "AbstractLoader.FONTCSS"),
                },
                IMAGE: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.IMAGE;
                    }, "AbstractLoader.IMAGE"),
                },
                JAVASCRIPT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JAVASCRIPT;
                    }, "AbstractLoader.JAVASCRIPT"),
                },
                JSON: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JSON;
                    }, "AbstractLoader.JSON"),
                },
                JSONP: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.JSONP;
                    }, "AbstractLoader.JSONP"),
                },
                MANIFEST: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.MANIFEST;
                    }, "AbstractLoader.MANIFEST"),
                },
                SOUND: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SOUND;
                    }, "AbstractLoader.SOUND"),
                },
                VIDEO: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.VIDEO;
                    }, "AbstractLoader.VIDEO"),
                },
                SPRITESHEET: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SPRITESHEET;
                    }, "AbstractLoader.SPRITESHEET"),
                },
                SVG: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.SVG;
                    }, "AbstractLoader.SVG"),
                },
                TEXT: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.TEXT;
                    }, "AbstractLoader.TEXT"),
                },
                XML: {
                    get: createjs.deprecate(function () {
                        return createjs.Types.XML;
                    }, "AbstractLoader.XML"),
                },
            });
        } catch (e) {}
        (p.init = function (preferXHR, basePath, crossOrigin) {
            (this.preferXHR = !0),
                (this._preferXHR = !0),
                this.setPreferXHR(preferXHR),
                (this._paused = !1),
                (this._basePath = basePath),
                (this._crossOrigin = crossOrigin),
                (this._loadStartWasDispatched = !1),
                (this._currentlyLoadingScript = null),
                (this._currentLoads = []),
                (this._loadQueue = []),
                (this._loadQueueBackup = []),
                (this._loadItemsById = {}),
                (this._loadItemsBySrc = {}),
                (this._loadedResults = {}),
                (this._loadedRawResults = {}),
                (this._numItems = 0),
                (this._numItemsLoaded = 0),
                (this._scriptOrder = []),
                (this._loadedScripts = []),
                (this._lastProgress = NaN);
        }),
            (p.registerLoader = function (loader) {
                if (!loader || !loader.canLoadItem) throw new Error("loader is of an incorrect type.");
                if (-1 != this._availableLoaders.indexOf(loader)) throw new Error("loader already exists.");
                this._availableLoaders.unshift(loader);
            }),
            (p.unregisterLoader = function (loader) {
                var idx = this._availableLoaders.indexOf(loader);
                -1 != idx && idx < this._defaultLoaderLength - 1 && this._availableLoaders.splice(idx, 1);
            }),
            (p.setPreferXHR = function (value) {
                return (this.preferXHR = 0 != value && null != window.XMLHttpRequest), this.preferXHR;
            }),
            (p.removeAll = function () {
                this.remove();
            }),
            (p.remove = function (idsOrUrls) {
                var args = null;
                if (idsOrUrls && !Array.isArray(idsOrUrls)) args = [idsOrUrls];
                else if (idsOrUrls) args = idsOrUrls;
                else if (arguments.length > 0) return;
                var itemsWereRemoved = !1;
                if (args) {
                    for (; args.length; ) {
                        var item = args.pop(),
                            r = this.getResult(item);
                        for (i = this._loadQueue.length - 1; i >= 0; i--)
                            if ((loadItem = this._loadQueue[i].getItem()).id == item || loadItem.src == item) {
                                this._loadQueue.splice(i, 1)[0].cancel();
                                break;
                            }
                        for (i = this._loadQueueBackup.length - 1; i >= 0; i--)
                            if ((loadItem = this._loadQueueBackup[i].getItem()).id == item || loadItem.src == item) {
                                this._loadQueueBackup.splice(i, 1)[0].cancel();
                                break;
                            }
                        if (r) this._disposeItem(this.getItem(item));
                        else
                            for (var i = this._currentLoads.length - 1; i >= 0; i--) {
                                var loadItem = this._currentLoads[i].getItem();
                                if (loadItem.id == item || loadItem.src == item) {
                                    this._currentLoads.splice(i, 1)[0].cancel(), (itemsWereRemoved = !0);
                                    break;
                                }
                            }
                    }
                    itemsWereRemoved && this._loadNext();
                } else {
                    for (var n in (this.close(), this._loadItemsById)) this._disposeItem(this._loadItemsById[n]);
                    this.init(this.preferXHR, this._basePath);
                }
            }),
            (p.reset = function () {
                for (var n in (this.close(), this._loadItemsById)) this._disposeItem(this._loadItemsById[n]);
                for (var a = [], i = 0, l = this._loadQueueBackup.length; i < l; i++) a.push(this._loadQueueBackup[i].getItem());
                this.loadManifest(a, !1);
            }),
            (p.installPlugin = function (plugin) {
                if (null != plugin && null != plugin.getPreloadHandlers) {
                    this._plugins.push(plugin);
                    var map = plugin.getPreloadHandlers();
                    if (((map.scope = plugin), null != map.types)) for (var i = 0, l = map.types.length; i < l; i++) this._typeCallbacks[map.types[i]] = map;
                    if (null != map.extensions) for (i = 0, l = map.extensions.length; i < l; i++) this._extensionCallbacks[map.extensions[i]] = map;
                }
            }),
            (p.setMaxConnections = function (value) {
                (this._maxConnections = value), !this._paused && this._loadQueue.length > 0 && this._loadNext();
            }),
            (p.loadFile = function (file, loadNow, basePath) {
                if (null != file) this._addItem(file, null, basePath), !1 !== loadNow ? this.setPaused(!1) : this.setPaused(!0);
                else {
                    var event = new createjs.ErrorEvent("PRELOAD_NO_FILE");
                    this._sendError(event);
                }
            }),
            (p.loadManifest = function (manifest, loadNow, basePath) {
                var fileList = null,
                    path = null;
                if (Array.isArray(manifest)) {
                    if (0 == manifest.length) {
                        var event = new createjs.ErrorEvent("PRELOAD_MANIFEST_EMPTY");
                        return void this._sendError(event);
                    }
                    fileList = manifest;
                } else if ("string" == typeof manifest) fileList = [{ src: manifest, type: s.MANIFEST }];
                else {
                    if ("object" != typeof manifest) {
                        event = new createjs.ErrorEvent("PRELOAD_MANIFEST_NULL");
                        return void this._sendError(event);
                    }
                    if (void 0 !== manifest.src) {
                        if (null == manifest.type) manifest.type = s.MANIFEST;
                        else if (manifest.type != s.MANIFEST) {
                            var event = new createjs.ErrorEvent("PRELOAD_MANIFEST_TYPE");
                            this._sendError(event);
                        }
                        fileList = [manifest];
                    } else void 0 !== manifest.manifest && ((fileList = manifest.manifest), (path = manifest.path));
                }
                for (var i = 0, l = fileList.length; i < l; i++) this._addItem(fileList[i], path, basePath);
                !1 !== loadNow ? this.setPaused(!1) : this.setPaused(!0);
            }),
            (p.load = function () {
                this.setPaused(!1);
            }),
            (p.getItem = function (value) {
                return this._loadItemsById[value] || this._loadItemsBySrc[value];
            }),
            (p.getResult = function (value, rawResult) {
                var item = this._loadItemsById[value] || this._loadItemsBySrc[value];
                if (null == item) return null;
                var id = item.id;
                return rawResult && this._loadedRawResults[id] ? this._loadedRawResults[id] : this._loadedResults[id];
            }),
            (p.getItems = function (loaded) {
                var arr = [];
                for (var n in this._loadItemsById) {
                    var item = this._loadItemsById[n],
                        result = this.getResult(n);
                    (!0 === loaded && null == result) || arr.push({ item: item, result: result, rawResult: this.getResult(n, !0) });
                }
                return arr;
            }),
            (p.setPaused = function (value) {
                (this._paused = value), this._paused || this._loadNext();
            }),
            (p.close = function () {
                for (; this._currentLoads.length; ) this._currentLoads.pop().cancel();
                (this._scriptOrder.length = 0), (this._loadedScripts.length = 0), (this.loadStartWasDispatched = !1), (this._itemCount = 0), (this._lastProgress = NaN);
            }),
            (p._addItem = function (value, path, basePath) {
                var item = this._createLoadItem(value, path, basePath);
                if (null != item) {
                    var loader = this._createLoader(item);
                    null != loader &&
                        ("plugins" in loader && (loader.plugins = this._plugins),
                        (item._loader = loader),
                        this._loadQueue.push(loader),
                        this._loadQueueBackup.push(loader),
                        this._numItems++,
                        this._updateProgress(),
                        ((this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT) || !0 === item.maintainOrder) && (this._scriptOrder.push(item), this._loadedScripts.push(null)));
                }
            }),
            (p._createLoadItem = function (value, path, basePath) {
                var item = createjs.LoadItem.create(value);
                if (null == item) return null;
                var bp = "",
                    useBasePath = basePath || this._basePath;
                if (item.src instanceof Object) {
                    if (!item.type) return null;
                    if (path) {
                        bp = path;
                        var pathMatch = createjs.URLUtils.parseURI(path);
                        null == useBasePath || pathMatch.absolute || pathMatch.relative || (bp = useBasePath + bp);
                    } else null != useBasePath && (bp = useBasePath);
                } else {
                    var match = createjs.URLUtils.parseURI(item.src);
                    match.extension && (item.ext = match.extension), null == item.type && (item.type = createjs.RequestUtils.getTypeByExtension(item.ext));
                    var autoId = item.src;
                    if (!match.absolute && !match.relative)
                        if (path) {
                            bp = path;
                            pathMatch = createjs.URLUtils.parseURI(path);
                            (autoId = path + autoId), null == useBasePath || pathMatch.absolute || pathMatch.relative || (bp = useBasePath + bp);
                        } else null != useBasePath && (bp = useBasePath);
                    item.src = bp + item.src;
                }
                (item.path = bp), (void 0 !== item.id && null !== item.id && "" !== item.id) || (item.id = autoId);
                var customHandler = this._typeCallbacks[item.type] || this._extensionCallbacks[item.ext];
                if (customHandler) {
                    var result = customHandler.callback.call(customHandler.scope, item, this);
                    if (!1 === result) return null;
                    !0 === result || (null != result && (item._loader = result)), null != (match = createjs.URLUtils.parseURI(item.src)).extension && (item.ext = match.extension);
                }
                return (this._loadItemsById[item.id] = item), (this._loadItemsBySrc[item.src] = item), null == item.crossOrigin && (item.crossOrigin = this._crossOrigin), item;
            }),
            (p._createLoader = function (item) {
                if (null != item._loader) return item._loader;
                for (var preferXHR = this.preferXHR, i = 0; i < this._availableLoaders.length; i++) {
                    var loader = this._availableLoaders[i];
                    if (loader && loader.canLoadItem(item)) return new loader(item, preferXHR);
                }
                return null;
            }),
            (p._loadNext = function () {
                if (!this._paused) {
                    this._loadStartWasDispatched || (this._sendLoadStart(), (this._loadStartWasDispatched = !0)),
                        this._numItems == this._numItemsLoaded ? ((this.loaded = !0), this._sendComplete(), this.next && this.next.load && this.next.load()) : (this.loaded = !1);
                    for (var i = 0; i < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); i++) {
                        var loader = this._loadQueue[i];
                        this._canStartLoad(loader) && (this._loadQueue.splice(i, 1), i--, this._loadItem(loader));
                    }
                }
            }),
            (p._loadItem = function (loader) {
                loader.on("fileload", this._handleFileLoad, this),
                    loader.on("progress", this._handleProgress, this),
                    loader.on("complete", this._handleFileComplete, this),
                    loader.on("error", this._handleError, this),
                    loader.on("fileerror", this._handleFileError, this),
                    this._currentLoads.push(loader),
                    this._sendFileStart(loader.getItem()),
                    loader.load();
            }),
            (p._handleFileLoad = function (event) {
                (event.target = null), this.dispatchEvent(event);
            }),
            (p._handleFileError = function (event) {
                var newEvent = new createjs.ErrorEvent("FILE_LOAD_ERROR", null, event.item);
                this._sendError(newEvent);
            }),
            (p._handleError = function (event) {
                var loader = event.target;
                this._numItemsLoaded++, this._finishOrderedItem(loader, !0), this._updateProgress();
                var newEvent = new createjs.ErrorEvent("FILE_LOAD_ERROR", null, loader.getItem());
                this._sendError(newEvent), this.stopOnError ? this.setPaused(!0) : (this._removeLoadItem(loader), this._cleanLoadItem(loader), this._loadNext());
            }),
            (p._handleFileComplete = function (event) {
                var loader = event.target,
                    item = loader.getItem(),
                    result = loader.getResult();
                this._loadedResults[item.id] = result;
                var rawResult = loader.getResult(!0);
                null != rawResult && rawResult !== result && (this._loadedRawResults[item.id] = rawResult),
                    this._saveLoadedItems(loader),
                    this._removeLoadItem(loader),
                    this._finishOrderedItem(loader) || this._processFinishedLoad(item, loader),
                    this._cleanLoadItem(loader);
            }),
            (p._saveLoadedItems = function (loader) {
                var list = loader.getLoadedItems();
                if (null !== list)
                    for (var i = 0; i < list.length; i++) {
                        var item = list[i].item;
                        (this._loadItemsBySrc[item.src] = item), (this._loadItemsById[item.id] = item), (this._loadedResults[item.id] = list[i].result), (this._loadedRawResults[item.id] = list[i].rawResult);
                    }
            }),
            (p._finishOrderedItem = function (loader, loadFailed) {
                var item = loader.getItem();
                if ((this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT) || item.maintainOrder) {
                    loader instanceof createjs.JavaScriptLoader && (this._currentlyLoadingScript = !1);
                    var index = createjs.indexOf(this._scriptOrder, item);
                    return -1 != index && ((this._loadedScripts[index] = !0 === loadFailed || item), this._checkScriptLoadOrder(), !0);
                }
                return !1;
            }),
            (p._checkScriptLoadOrder = function () {
                for (var l = this._loadedScripts.length, i = 0; i < l; i++) {
                    var item = this._loadedScripts[i];
                    if (null === item) break;
                    if (!0 !== item) {
                        var loadItem = this._loadedResults[item.id];
                        item.type == createjs.Types.JAVASCRIPT && createjs.DomUtils.appendToHead(loadItem);
                        var loader = item._loader;
                        this._processFinishedLoad(item, loader), (this._loadedScripts[i] = !0);
                    }
                }
            }),
            (p._processFinishedLoad = function (item, loader) {
                if ((this._numItemsLoaded++, !this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT)) {
                    var tag = loader.getTag();
                    createjs.DomUtils.appendToHead(tag);
                }
                this._updateProgress(), this._sendFileComplete(item, loader), this._loadNext();
            }),
            (p._canStartLoad = function (loader) {
                if (!this.maintainScriptOrder || loader.preferXHR) return !0;
                var item = loader.getItem();
                if (item.type != createjs.Types.JAVASCRIPT) return !0;
                if (this._currentlyLoadingScript) return !1;
                for (var index = this._scriptOrder.indexOf(item), i = 0; i < index; ) {
                    if (null == this._loadedScripts[i]) return !1;
                    i++;
                }
                return (this._currentlyLoadingScript = !0), !0;
            }),
            (p._removeLoadItem = function (loader) {
                for (var l = this._currentLoads.length, i = 0; i < l; i++)
                    if (this._currentLoads[i] == loader) {
                        this._currentLoads.splice(i, 1);
                        break;
                    }
            }),
            (p._cleanLoadItem = function (loader) {
                var item = loader.getItem();
                item && delete item._loader;
            }),
            (p._handleProgress = function (event) {
                var loader = event.target;
                this._sendFileProgress(loader.getItem(), loader.progress), this._updateProgress();
            }),
            (p._updateProgress = function () {
                var loaded = this._numItemsLoaded / this._numItems,
                    remaining = this._numItems - this._numItemsLoaded;
                if (remaining > 0) {
                    for (var chunk = 0, i = 0, l = this._currentLoads.length; i < l; i++) chunk += this._currentLoads[i].progress;
                    loaded += (chunk / remaining) * (remaining / this._numItems);
                }
                this._lastProgress != loaded && (this._sendProgress(loaded), (this._lastProgress = loaded));
            }),
            (p._disposeItem = function (item) {
                delete this._loadedResults[item.id], delete this._loadedRawResults[item.id], delete this._loadItemsById[item.id], delete this._loadItemsBySrc[item.src];
            }),
            (p._sendFileProgress = function (item, progress) {
                if (!this._isCanceled() && !this._paused && this.hasEventListener("fileprogress")) {
                    var event = new createjs.Event("fileprogress");
                    (event.progress = progress), (event.loaded = progress), (event.total = 1), (event.item = item), this.dispatchEvent(event);
                }
            }),
            (p._sendFileComplete = function (item, loader) {
                if (!this._isCanceled() && !this._paused) {
                    var event = new createjs.Event("fileload");
                    (event.loader = loader),
                        (event.item = item),
                        (event.result = this._loadedResults[item.id]),
                        (event.rawResult = this._loadedRawResults[item.id]),
                        item.completeHandler && item.completeHandler(event),
                        this.hasEventListener("fileload") && this.dispatchEvent(event);
                }
            }),
            (p._sendFileStart = function (item) {
                var event = new createjs.Event("filestart");
                (event.item = item), this.hasEventListener("filestart") && this.dispatchEvent(event);
            }),
            (p.toString = function () {
                return "[PreloadJS LoadQueue]";
            }),
            (createjs.LoadQueue = createjs.promote(LoadQueue, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function TextLoader(loadItem) {
            this.AbstractLoader_constructor(loadItem, !0, createjs.Types.TEXT);
        }
        createjs.extend(TextLoader, createjs.AbstractLoader);
        (TextLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.TEXT;
        }),
            (createjs.TextLoader = createjs.promote(TextLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function BinaryLoader(loadItem) {
            this.AbstractLoader_constructor(loadItem, !0, createjs.Types.BINARY), this.on("initialize", this._updateXHR, this);
        }
        var p = createjs.extend(BinaryLoader, createjs.AbstractLoader);
        (BinaryLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.BINARY;
        }),
            (p._updateXHR = function (event) {
                event.loader.setResponseType("arraybuffer");
            }),
            (createjs.BinaryLoader = createjs.promote(BinaryLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function CSSLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.CSS),
                (this.resultFormatter = this._formatResult),
                (this._tagSrcAttribute = "href"),
                (this._tag = preferXHR ? createjs.Elements.style() : createjs.Elements.link()),
                (this._tag.rel = "stylesheet"),
                (this._tag.type = "text/css");
        }
        var p = createjs.extend(CSSLoader, createjs.AbstractLoader);
        (CSSLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.CSS;
        }),
            (p._formatResult = function (loader) {
                if (this._preferXHR) {
                    var tag = loader.getTag();
                    if (tag.styleSheet) tag.styleSheet.cssText = loader.getResult(!0);
                    else {
                        var textNode = createjs.Elements.text(loader.getResult(!0));
                        tag.appendChild(textNode);
                    }
                } else tag = this._tag;
                return createjs.DomUtils.appendToHead(tag), tag;
            }),
            (createjs.CSSLoader = createjs.promote(CSSLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function FontLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, loadItem.type),
                (this._faces = {}),
                (this._watched = []),
                (this._count = 0),
                (this._watchInterval = null),
                (this._loadTimeout = null),
                (this._injectCSS = void 0 === loadItem.injectCSS || loadItem.injectCSS),
                this.dispatchEvent("initialize");
        }
        var p = createjs.extend(FontLoader, createjs.AbstractLoader);
        (FontLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.FONT || item.type == createjs.Types.FONTCSS;
        }),
            (FontLoader.sampleText = "abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ"),
            (FontLoader._ctx = document.createElement("canvas").getContext("2d")),
            (FontLoader._referenceFonts = ["serif", "monospace"]),
            (FontLoader.WEIGHT_REGEX = /[- ._]*(thin|normal|book|regular|medium|black|heavy|[1-9]00|(?:extra|ultra|semi|demi)?[- ._]*(?:light|bold))[- ._]*/gi),
            (FontLoader.STYLE_REGEX = /[- ._]*(italic|oblique)[- ._]*/gi),
            (FontLoader.FONT_FORMAT = { woff2: "woff2", woff: "woff", ttf: "truetype", otf: "truetype" }),
            (FontLoader.FONT_WEIGHT = {
                thin: 100,
                extralight: 200,
                ultralight: 200,
                light: 300,
                semilight: 300,
                demilight: 300,
                book: "normal",
                regular: "normal",
                semibold: 600,
                demibold: 600,
                extrabold: 800,
                ultrabold: 800,
                black: 900,
                heavy: 900,
            }),
            (FontLoader.WATCH_DURATION = 10),
            (p.load = function () {
                if (this.type == createjs.Types.FONTCSS) {
                    if (!this._watchCSS()) return void this.AbstractLoader_load();
                } else if (this._item.src instanceof Array) this._watchFontArray();
                else {
                    var def = this._defFromSrc(this._item.src);
                    this._watchFont(def), this._injectStyleTag(this._cssFromDef(def));
                }
                (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout)), this.dispatchEvent("loadstart");
            }),
            (p._handleTimeout = function () {
                this._stopWatching(), this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT"));
            }),
            (p._createRequest = function () {
                return this._request;
            }),
            (p.handleEvent = function (event) {
                switch (event.type) {
                    case "complete":
                        (this._rawResult = event.target._response), (this._result = !0), this._parseCSS(this._rawResult);
                        break;
                    case "error":
                        this._stopWatching(), this.AbstractLoader_handleEvent(event);
                }
            }),
            (p._watchCSS = function () {
                var src = this._item.src;
                return (
                    src instanceof HTMLStyleElement && (this._injectCSS && !src.parentNode && (document.head || document.getElementsByTagName("head")[0]).appendChild(src), (this._injectCSS = !1), (src = "\n" + src.textContent)),
                    -1 !== src.search(/\n|\r|@font-face/i) ? (this._parseCSS(src), !0) : ((this._request = new createjs.XHRRequest(this._item)), !1)
                );
            }),
            (p._parseCSS = function (css) {
                for (var regex = /@font-face\s*\{([^}]+)}/g; ; ) {
                    var result = regex.exec(css);
                    if (!result) break;
                    this._watchFont(this._parseFontFace(result[1]));
                }
                this._injectStyleTag(css);
            }),
            (p._watchFontArray = function () {
                for (var def, arr = this._item.src, css = "", i = arr.length - 1; i >= 0; i--) {
                    var o = arr[i];
                    (def = "string" == typeof o ? this._defFromSrc(o) : this._defFromObj(o)), this._watchFont(def), (css += this._cssFromDef(def) + "\n");
                }
                this._injectStyleTag(css);
            }),
            (p._injectStyleTag = function (css) {
                if (this._injectCSS) {
                    var head = document.head || document.getElementsByTagName("head")[0],
                        styleTag = document.createElement("style");
                    (styleTag.type = "text/css"), styleTag.styleSheet ? (styleTag.styleSheet.cssText = css) : styleTag.appendChild(document.createTextNode(css)), head.appendChild(styleTag);
                }
            }),
            (p._parseFontFace = function (str) {
                var family = this._getCSSValue(str, "font-family"),
                    src = this._getCSSValue(str, "src");
                return family && src ? this._defFromObj({ family: family, src: src, style: this._getCSSValue(str, "font-style"), weight: this._getCSSValue(str, "font-weight") }) : null;
            }),
            (p._watchFont = function (def) {
                def && !this._faces[def.id] && ((this._faces[def.id] = def), this._watched.push(def), this._count++, this._calculateReferenceSizes(def), this._startWatching());
            }),
            (p._startWatching = function () {
                null == this._watchInterval && (this._watchInterval = setInterval(createjs.proxy(this._watch, this), FontLoader.WATCH_DURATION));
            }),
            (p._stopWatching = function () {
                clearInterval(this._watchInterval), clearTimeout(this._loadTimeout), (this._watchInterval = null);
            }),
            (p._watch = function () {
                for (var defs = this._watched, refFonts = FontLoader._referenceFonts, l = defs.length, i = l - 1; i >= 0; i--)
                    for (var def = defs[i], refs = def.refs, j = refs.length - 1; j >= 0; j--) {
                        if (this._getTextWidth(def.family + "," + refFonts[j], def.weight, def.style) != refs[j]) {
                            var event = new createjs.Event("fileload");
                            (def.type = "font-family"), (event.item = def), this.dispatchEvent(event), defs.splice(i, 1);
                            break;
                        }
                    }
                if (l !== defs.length) {
                    event = new createjs.ProgressEvent(this._count - defs.length, this._count);
                    this.dispatchEvent(event);
                }
                0 === l && (this._stopWatching(), this._sendComplete());
            }),
            (p._calculateReferenceSizes = function (def) {
                for (var refFonts = FontLoader._referenceFonts, refs = (def.refs = []), i = 0; i < refFonts.length; i++) refs[i] = this._getTextWidth(refFonts[i], def.weight, def.style);
            }),
            (p._defFromSrc = function (src) {
                var index,
                    re = /[- ._]+/g,
                    name = src,
                    ext = null;
                -1 !== (index = name.search(/[?#]/)) && (name = name.substr(0, index)),
                    -1 !== (index = name.lastIndexOf(".")) && ((ext = name.substr(index + 1)), (name = name.substr(0, index))),
                    -1 !== (index = name.lastIndexOf("/")) && (name = name.substr(index + 1));
                var family = name,
                    weight = family.match(FontLoader.WEIGHT_REGEX);
                weight && ((weight = weight[0]), (family = family.replace(weight, "")), (weight = weight.replace(re, "").toLowerCase()));
                var style = name.match(FontLoader.STYLE_REGEX);
                style && ((family = family.replace(style[0], "")), (style = "italic")), (family = family.replace(re, ""));
                var cssSrc = "local('" + name.replace(re, " ") + "'), url('" + src + "')",
                    format = FontLoader.FONT_FORMAT[ext];
                return format && (cssSrc += " format('" + format + "')"), this._defFromObj({ family: family, weight: FontLoader.FONT_WEIGHT[weight] || weight, style: style, src: cssSrc });
            }),
            (p._defFromObj = function (o) {
                var def = { family: o.family, src: o.src, style: o.style || "normal", weight: o.weight || "normal" };
                return (def.id = def.family + ";" + def.style + ";" + def.weight), def;
            }),
            (p._cssFromDef = function (def) {
                return "@font-face {\n\tfont-family: '" + def.family + "';\n\tfont-style: " + def.style + ";\n\tfont-weight: " + def.weight + ";\n\tsrc: " + def.src + ";\n}";
            }),
            (p._getTextWidth = function (family, weight, style) {
                var ctx = FontLoader._ctx;
                return (ctx.font = style + " " + weight + " 72px " + family), ctx.measureText(FontLoader.sampleText).width;
            }),
            (p._getCSSValue = function (str, propName) {
                var result = new RegExp(propName + ":s*([^;}]+?)s*[;}]").exec(str);
                return result && result[1] ? result[1] : null;
            }),
            (createjs.FontLoader = createjs.promote(FontLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ImageLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.IMAGE),
                (this.resultFormatter = this._formatResult),
                (this._tagSrcAttribute = "src"),
                createjs.DomUtils.isImageTag(loadItem) ? (this._tag = loadItem) : createjs.DomUtils.isImageTag(loadItem.src) ? (this._tag = loadItem.src) : createjs.DomUtils.isImageTag(loadItem.tag) && (this._tag = loadItem.tag),
                null != this._tag ? (this._preferXHR = !1) : (this._tag = createjs.Elements.img()),
                this.on("initialize", this._updateXHR, this);
        }
        var p = createjs.extend(ImageLoader, createjs.AbstractLoader);
        (ImageLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.IMAGE;
        }),
            (p.load = function () {
                if ("" != this._tag.src && this._tag.complete) this._sendComplete();
                else {
                    var crossOrigin = this._item.crossOrigin;
                    1 == crossOrigin && (crossOrigin = "Anonymous"), null == crossOrigin || createjs.URLUtils.isLocal(this._item) || (this._tag.crossOrigin = crossOrigin), this.AbstractLoader_load();
                }
            }),
            (p._updateXHR = function (event) {
                (event.loader.mimeType = "text/plain; charset=x-user-defined-binary"), event.loader.setResponseType && event.loader.setResponseType("blob");
            }),
            (p._formatResult = function (loader) {
                return this._formatImage;
            }),
            (p._formatImage = function (successCallback, errorCallback) {
                var tag = this._tag,
                    URL = window.URL || window.webkitURL;
                if (this._preferXHR)
                    if (URL) {
                        var objURL = URL.createObjectURL(this.getResult(!0));
                        (tag.src = objURL), tag.addEventListener("load", this._cleanUpURL, !1), tag.addEventListener("error", this._cleanUpURL, !1);
                    } else tag.src = this._item.src;
                else;
                tag.complete
                    ? successCallback(tag)
                    : ((tag.onload = createjs.proxy(function () {
                          successCallback(this._tag), (tag.onload = tag.onerror = null);
                      }, this)),
                      (tag.onerror = createjs.proxy(function (event) {
                          errorCallback(new createjs.ErrorEvent("IMAGE_FORMAT", null, event)), (tag.onload = tag.onerror = null);
                      }, this)));
            }),
            (p._cleanUpURL = function (event) {
                (window.URL || window.webkitURL).revokeObjectURL(event.target.src);
            }),
            (createjs.ImageLoader = createjs.promote(ImageLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function JavaScriptLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.JAVASCRIPT), (this.resultFormatter = this._formatResult), (this._tagSrcAttribute = "src"), this.setTag(createjs.Elements.script());
        }
        var p = createjs.extend(JavaScriptLoader, createjs.AbstractLoader);
        (JavaScriptLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.JAVASCRIPT;
        }),
            (p._formatResult = function (loader) {
                var tag = loader.getTag();
                return this._preferXHR && (tag.text = loader.getResult(!0)), tag;
            }),
            (createjs.JavaScriptLoader = createjs.promote(JavaScriptLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function JSONLoader(loadItem) {
            this.AbstractLoader_constructor(loadItem, !0, createjs.Types.JSON), (this.resultFormatter = this._formatResult);
        }
        var p = createjs.extend(JSONLoader, createjs.AbstractLoader);
        (JSONLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.JSON;
        }),
            (p._formatResult = function (loader) {
                var json = null;
                try {
                    json = createjs.DataUtils.parseJSON(loader.getResult(!0));
                } catch (e) {
                    var event = new createjs.ErrorEvent("JSON_FORMAT", null, e);
                    return this._sendError(event), e;
                }
                return json;
            }),
            (createjs.JSONLoader = createjs.promote(JSONLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function JSONPLoader(loadItem) {
            this.AbstractLoader_constructor(loadItem, !1, createjs.Types.JSONP), this.setTag(createjs.Elements.script()), (this.getTag().type = "text/javascript");
        }
        var p = createjs.extend(JSONPLoader, createjs.AbstractLoader);
        (JSONPLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.JSONP;
        }),
            (p.cancel = function () {
                this.AbstractLoader_cancel(), this._dispose();
            }),
            (p.load = function () {
                if (null == this._item.callback) throw new Error("callback is required for loading JSONP requests.");
                if (null != window[this._item.callback]) throw new Error("JSONP callback '" + this._item.callback + "' already exists on window. You need to specify a different callback or re-name the current one.");
                (window[this._item.callback] = createjs.proxy(this._handleLoad, this)),
                    createjs.DomUtils.appendToBody(this._tag),
                    (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout)),
                    (this._tag.src = this._item.src);
            }),
            (p._handleLoad = function (data) {
                (this._result = this._rawResult = data), this._sendComplete(), this._dispose();
            }),
            (p._handleTimeout = function () {
                this._dispose(), this.dispatchEvent(new createjs.ErrorEvent("timeout"));
            }),
            (p._dispose = function () {
                createjs.DomUtils.removeChild(this._tag), delete window[this._item.callback], clearTimeout(this._loadTimeout);
            }),
            (createjs.JSONPLoader = createjs.promote(JSONPLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function ManifestLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.MANIFEST), (this.plugins = null), (this._manifestQueue = null);
        }
        var p = createjs.extend(ManifestLoader, createjs.AbstractLoader),
            s = ManifestLoader;
        (s.MANIFEST_PROGRESS = 0.25),
            (s.canLoadItem = function (item) {
                return item.type == createjs.Types.MANIFEST;
            }),
            (p.load = function () {
                this.AbstractLoader_load();
            }),
            (p._createRequest = function () {
                var callback = this._item.callback;
                this._request = null != callback ? new createjs.JSONPLoader(this._item) : new createjs.JSONLoader(this._item);
            }),
            (p.handleEvent = function (event) {
                switch (event.type) {
                    case "complete":
                        return (this._rawResult = event.target.getResult(!0)), (this._result = event.target.getResult()), this._sendProgress(s.MANIFEST_PROGRESS), void this._loadManifest(this._result);
                    case "progress":
                        return (event.loaded *= s.MANIFEST_PROGRESS), (this.progress = event.loaded / event.total), (isNaN(this.progress) || this.progress == 1 / 0) && (this.progress = 0), void this._sendProgress(event);
                }
                this.AbstractLoader_handleEvent(event);
            }),
            (p.destroy = function () {
                this.AbstractLoader_destroy(), this._manifestQueue.close();
            }),
            (p._loadManifest = function (json) {
                if (json && json.manifest) {
                    var queue = (this._manifestQueue = new createjs.LoadQueue(this._preferXHR));
                    queue.on("fileload", this._handleManifestFileLoad, this),
                        queue.on("progress", this._handleManifestProgress, this),
                        queue.on("complete", this._handleManifestComplete, this, !0),
                        queue.on("error", this._handleManifestError, this, !0);
                    for (var i = 0, l = this.plugins.length; i < l; i++) queue.installPlugin(this.plugins[i]);
                    queue.loadManifest(json);
                } else this._sendComplete();
            }),
            (p._handleManifestFileLoad = function (event) {
                (event.target = null), this.dispatchEvent(event);
            }),
            (p._handleManifestComplete = function (event) {
                (this._loadedItems = this._manifestQueue.getItems(!0)), this._sendComplete();
            }),
            (p._handleManifestProgress = function (event) {
                (this.progress = event.progress * (1 - s.MANIFEST_PROGRESS) + s.MANIFEST_PROGRESS), this._sendProgress(this.progress);
            }),
            (p._handleManifestError = function (event) {
                var newEvent = new createjs.Event("fileerror");
                (newEvent.item = event.data), this.dispatchEvent(newEvent);
            }),
            (createjs.ManifestLoader = createjs.promote(ManifestLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SoundLoader(loadItem, preferXHR) {
            this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND),
                createjs.DomUtils.isAudioTag(loadItem)
                    ? (this._tag = loadItem)
                    : createjs.DomUtils.isAudioTag(loadItem.src)
                    ? (this._tag = loadItem)
                    : createjs.DomUtils.isAudioTag(loadItem.tag) && (this._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src),
                null != this._tag && (this._preferXHR = !1);
        }
        var p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);
        (SoundLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.SOUND;
        }),
            (p._createTag = function (src) {
                var tag = createjs.Elements.audio();
                return (tag.autoplay = !1), (tag.preload = "none"), (tag.src = src), tag;
            }),
            (createjs.SoundLoader = createjs.promote(SoundLoader, "AbstractMediaLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function VideoLoader(loadItem, preferXHR) {
            this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.VIDEO),
                createjs.DomUtils.isVideoTag(loadItem) || createjs.DomUtils.isVideoTag(loadItem.src) ? (this.setTag(createjs.DomUtils.isVideoTag(loadItem) ? loadItem : loadItem.src), (this._preferXHR = !1)) : this.setTag(this._createTag());
        }
        var s = VideoLoader;
        (createjs.extend(VideoLoader, createjs.AbstractMediaLoader)._createTag = function () {
            return createjs.Elements.video();
        }),
            (s.canLoadItem = function (item) {
                return item.type == createjs.Types.VIDEO;
            }),
            (createjs.VideoLoader = createjs.promote(VideoLoader, "AbstractMediaLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SpriteSheetLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SPRITESHEET), (this._manifestQueue = null);
        }
        var p = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader),
            s = SpriteSheetLoader;
        (s.SPRITESHEET_PROGRESS = 0.25),
            (s.canLoadItem = function (item) {
                return item.type == createjs.Types.SPRITESHEET;
            }),
            (p.destroy = function () {
                this.AbstractLoader_destroy(), this._manifestQueue.close();
            }),
            (p._createRequest = function () {
                var callback = this._item.callback;
                this._request = null != callback ? new createjs.JSONPLoader(this._item) : new createjs.JSONLoader(this._item);
            }),
            (p.handleEvent = function (event) {
                switch (event.type) {
                    case "complete":
                        return (this._rawResult = event.target.getResult(!0)), (this._result = event.target.getResult()), this._sendProgress(s.SPRITESHEET_PROGRESS), void this._loadManifest(this._result);
                    case "progress":
                        return (event.loaded *= s.SPRITESHEET_PROGRESS), (this.progress = event.loaded / event.total), (isNaN(this.progress) || this.progress == 1 / 0) && (this.progress = 0), void this._sendProgress(event);
                }
                this.AbstractLoader_handleEvent(event);
            }),
            (p._loadManifest = function (json) {
                if (json && json.images) {
                    var queue = (this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin));
                    queue.on("complete", this._handleManifestComplete, this, !0),
                        queue.on("fileload", this._handleManifestFileLoad, this),
                        queue.on("progress", this._handleManifestProgress, this),
                        queue.on("error", this._handleManifestError, this, !0),
                        queue.loadManifest(json.images);
                }
            }),
            (p._handleManifestFileLoad = function (event) {
                var image = event.result;
                if (null != image) {
                    var images = this.getResult().images;
                    images[images.indexOf(event.item.src)] = image;
                }
            }),
            (p._handleManifestComplete = function (event) {
                (this._result = new createjs.SpriteSheet(this._result)), (this._loadedItems = this._manifestQueue.getItems(!0)), this._sendComplete();
            }),
            (p._handleManifestProgress = function (event) {
                (this.progress = event.progress * (1 - s.SPRITESHEET_PROGRESS) + s.SPRITESHEET_PROGRESS), this._sendProgress(this.progress);
            }),
            (p._handleManifestError = function (event) {
                var newEvent = new createjs.Event("fileerror");
                (newEvent.item = event.data), this.dispatchEvent(newEvent);
            }),
            (createjs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function SVGLoader(loadItem, preferXHR) {
            this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SVG),
                (this.resultFormatter = this._formatResult),
                (this._tagSrcAttribute = "data"),
                preferXHR ? this.setTag(createjs.Elements.svg()) : (this.setTag(createjs.Elements.object()), (this.getTag().type = "image/svg+xml"));
        }
        var p = createjs.extend(SVGLoader, createjs.AbstractLoader);
        (SVGLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.SVG;
        }),
            (p._formatResult = function (loader) {
                var xml = createjs.DataUtils.parseXML(loader.getResult(!0)),
                    tag = loader.getTag();
                if ((!this._preferXHR && document.body.contains(tag) && document.body.removeChild(tag), null != xml.documentElement)) {
                    var element = xml.documentElement;
                    return document.importNode && (element = document.importNode(element, !0)), tag.appendChild(element), tag;
                }
                return xml;
            }),
            (createjs.SVGLoader = createjs.promote(SVGLoader, "AbstractLoader"));
    })(),
    (this.createjs = this.createjs || {}),
    (function () {
        "use strict";
        function XMLLoader(loadItem) {
            this.AbstractLoader_constructor(loadItem, !0, createjs.Types.XML), (this.resultFormatter = this._formatResult);
        }
        var p = createjs.extend(XMLLoader, createjs.AbstractLoader);
        (XMLLoader.canLoadItem = function (item) {
            return item.type == createjs.Types.XML;
        }),
            (p._formatResult = function (loader) {
                return createjs.DataUtils.parseXML(loader.getResult(!0));
            }),
            (createjs.XMLLoader = createjs.promote(XMLLoader, "AbstractLoader"));
    })(),
    (function (global, pool, math) {
        var nodecrypto,
            width = 256,
            chunks = 6,
            rngname = "random",
            startdenom = math.pow(width, chunks),
            significance = math.pow(2, 52),
            overflow = 2 * significance,
            mask = width - 1;
        function seedrandom(seed, options, callback) {
            var key = [],
                shortseed = mixkey(
                    (function flatten(obj, depth) {
                        var prop,
                            result = [],
                            typ = typeof obj;
                        if (depth && "object" == typ)
                            for (prop in obj)
                                try {
                                    result.push(flatten(obj[prop], depth - 1));
                                } catch (e) {}
                        return result.length ? result : "string" == typ ? obj : obj + "\0";
                    })(
                        (options = 1 == options ? { entropy: !0 } : options || {}).entropy
                            ? [seed, tostring(pool)]
                            : null == seed
                            ? (function () {
                                  try {
                                      var out;
                                      return nodecrypto && (out = nodecrypto.randomBytes) ? (out = out(width)) : ((out = new Uint8Array(width)), (global.crypto || global.msCrypto).getRandomValues(out)), tostring(out);
                                  } catch (e) {
                                      var browser = global.navigator,
                                          plugins = browser && browser.plugins;
                                      return [+new Date(), global, plugins, global.screen, tostring(pool)];
                                  }
                              })()
                            : seed,
                        3
                    ),
                    key
                ),
                arc4 = new (function (key) {
                    var t,
                        keylen = key.length,
                        me = this,
                        i = 0,
                        j = (me.i = me.j = 0),
                        s = (me.S = []);
                    keylen || (key = [keylen++]);
                    for (; i < width; ) s[i] = i++;
                    for (i = 0; i < width; i++) (s[i] = s[(j = mask & (j + key[i % keylen] + (t = s[i])))]), (s[j] = t);
                    (me.g = function (count) {
                        for (var t, r = 0, i = me.i, j = me.j, s = me.S; count--; ) (t = s[(i = mask & (i + 1))]), (r = r * width + s[mask & ((s[i] = s[(j = mask & (j + t))]) + (s[j] = t))]);
                        return (me.i = i), (me.j = j), r;
                    })(width);
                })(key),
                prng = function () {
                    for (var n = arc4.g(chunks), d = startdenom, x = 0; n < significance; ) (n = (n + x) * width), (d *= width), (x = arc4.g(1));
                    for (; n >= overflow; ) (n /= 2), (d /= 2), (x >>>= 1);
                    return (n + x) / d;
                };
            return (
                (prng.int32 = function () {
                    return 0 | arc4.g(4);
                }),
                (prng.quick = function () {
                    return arc4.g(4) / 4294967296;
                }),
                (prng.double = prng),
                mixkey(tostring(arc4.S), pool),
                (
                    options.pass ||
                    callback ||
                    function (prng, seed, is_math_call, state) {
                        return (
                            state &&
                                (state.S && copy(state, arc4),
                                (prng.state = function () {
                                    return copy(arc4, {});
                                })),
                            is_math_call ? ((math[rngname] = prng), seed) : prng
                        );
                    }
                )(prng, shortseed, "global" in options ? options.global : this == math, options.state)
            );
        }
        function copy(f, t) {
            return (t.i = f.i), (t.j = f.j), (t.S = f.S.slice()), t;
        }
        function mixkey(seed, key) {
            for (var smear, stringseed = seed + "", j = 0; j < stringseed.length; ) key[mask & j] = mask & ((smear ^= 19 * key[mask & j]) + stringseed.charCodeAt(j++));
            return tostring(key);
        }
        function tostring(a) {
            return String.fromCharCode.apply(0, a);
        }
        if ((mixkey(math.random(), pool), "object" == typeof module && module.exports)) {
            module.exports = seedrandom;
            try {
                nodecrypto = require("crypto");
            } catch (ex) {}
        } else
            "function" == typeof define && define.amd
                ? define(function () {
                      return seedrandom;
                  })
                : (math["seed" + rngname] = seedrandom);
    })("undefined" != typeof self ? self : this, [], Math),
    /**!
     * @fileOverview Kickass library to create and place poppers near their reference elements.
     * @version 1.16.0
     * @license
     * Copyright (c) 2016 Federico Zivolo and contributors
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in all
     * copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     * SOFTWARE.
     */
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? (module.exports = factory()) : "function" == typeof define && define.amd ? define(factory) : (global.Popper = factory());
    })(this, function () {
        "use strict";
        var isBrowser = "undefined" != typeof window && "undefined" != typeof document && "undefined" != typeof navigator,
            timeoutDuration = (function () {
                for (var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"], i = 0; i < longerTimeoutBrowsers.length; i += 1) if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) return 1;
                return 0;
            })();
        var debounce =
            isBrowser && window.Promise
                ? function (fn) {
                      var called = !1;
                      return function () {
                          called ||
                              ((called = !0),
                              window.Promise.resolve().then(function () {
                                  (called = !1), fn();
                              }));
                      };
                  }
                : function (fn) {
                      var scheduled = !1;
                      return function () {
                          scheduled ||
                              ((scheduled = !0),
                              setTimeout(function () {
                                  (scheduled = !1), fn();
                              }, timeoutDuration));
                      };
                  };
        function isFunction(functionToCheck) {
            return functionToCheck && "[object Function]" === {}.toString.call(functionToCheck);
        }
        function getStyleComputedProperty(element, property) {
            if (1 !== element.nodeType) return [];
            var css = element.ownerDocument.defaultView.getComputedStyle(element, null);
            return property ? css[property] : css;
        }
        function getParentNode(element) {
            return "HTML" === element.nodeName ? element : element.parentNode || element.host;
        }
        function getScrollParent(element) {
            if (!element) return document.body;
            switch (element.nodeName) {
                case "HTML":
                case "BODY":
                    return element.ownerDocument.body;
                case "#document":
                    return element.body;
            }
            var _getStyleComputedProp = getStyleComputedProperty(element),
                overflow = _getStyleComputedProp.overflow,
                overflowX = _getStyleComputedProp.overflowX,
                overflowY = _getStyleComputedProp.overflowY;
            return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX) ? element : getScrollParent(getParentNode(element));
        }
        function getReferenceNode(reference) {
            return reference && reference.referenceNode ? reference.referenceNode : reference;
        }
        var isIE11 = isBrowser && !(!window.MSInputMethodContext || !document.documentMode),
            isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
        function isIE(version) {
            return 11 === version ? isIE11 : 10 === version ? isIE10 : isIE11 || isIE10;
        }
        function getOffsetParent(element) {
            if (!element) return document.documentElement;
            for (var noOffsetParent = isIE(10) ? document.body : null, offsetParent = element.offsetParent || null; offsetParent === noOffsetParent && element.nextElementSibling; )
                offsetParent = (element = element.nextElementSibling).offsetParent;
            var nodeName = offsetParent && offsetParent.nodeName;
            return nodeName && "BODY" !== nodeName && "HTML" !== nodeName
                ? -1 !== ["TH", "TD", "TABLE"].indexOf(offsetParent.nodeName) && "static" === getStyleComputedProperty(offsetParent, "position")
                    ? getOffsetParent(offsetParent)
                    : offsetParent
                : element
                ? element.ownerDocument.documentElement
                : document.documentElement;
        }
        function getRoot(node) {
            return null !== node.parentNode ? getRoot(node.parentNode) : node;
        }
        function findCommonOffsetParent(element1, element2) {
            if (!(element1 && element1.nodeType && element2 && element2.nodeType)) return document.documentElement;
            var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING,
                start = order ? element1 : element2,
                end = order ? element2 : element1,
                range = document.createRange();
            range.setStart(start, 0), range.setEnd(end, 0);
            var element,
                nodeName,
                commonAncestorContainer = range.commonAncestorContainer;
            if ((element1 !== commonAncestorContainer && element2 !== commonAncestorContainer) || start.contains(end))
                return "BODY" === (nodeName = (element = commonAncestorContainer).nodeName) || ("HTML" !== nodeName && getOffsetParent(element.firstElementChild) !== element)
                    ? getOffsetParent(commonAncestorContainer)
                    : commonAncestorContainer;
            var element1root = getRoot(element1);
            return element1root.host ? findCommonOffsetParent(element1root.host, element2) : findCommonOffsetParent(element1, getRoot(element2).host);
        }
        function getScroll(element) {
            var upperSide = "top" === (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "top") ? "scrollTop" : "scrollLeft",
                nodeName = element.nodeName;
            if ("BODY" === nodeName || "HTML" === nodeName) {
                var html = element.ownerDocument.documentElement;
                return (element.ownerDocument.scrollingElement || html)[upperSide];
            }
            return element[upperSide];
        }
        function getBordersSize(styles, axis) {
            var sideA = "x" === axis ? "Left" : "Top",
                sideB = "Left" === sideA ? "Right" : "Bottom";
            return parseFloat(styles["border" + sideA + "Width"], 10) + parseFloat(styles["border" + sideB + "Width"], 10);
        }
        function getSize(axis, body, html, computedStyle) {
            return Math.max(
                body["offset" + axis],
                body["scroll" + axis],
                html["client" + axis],
                html["offset" + axis],
                html["scroll" + axis],
                isIE(10) ? parseInt(html["offset" + axis]) + parseInt(computedStyle["margin" + ("Height" === axis ? "Top" : "Left")]) + parseInt(computedStyle["margin" + ("Height" === axis ? "Bottom" : "Right")]) : 0
            );
        }
        function getWindowSizes(document) {
            var body = document.body,
                html = document.documentElement,
                computedStyle = isIE(10) && getComputedStyle(html);
            return { height: getSize("Height", body, html, computedStyle), width: getSize("Width", body, html, computedStyle) };
        }
        var classCallCheck = function (instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
            },
            createClass = (function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }
                return function (Constructor, protoProps, staticProps) {
                    return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
                };
            })(),
            defineProperty = function (obj, key, value) {
                return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
            },
            _extends =
                Object.assign ||
                function (target) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = arguments[i];
                        for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                    }
                    return target;
                };
        function getClientRect(offsets) {
            return _extends({}, offsets, { right: offsets.left + offsets.width, bottom: offsets.top + offsets.height });
        }
        function getBoundingClientRect(element) {
            var rect = {};
            try {
                if (isIE(10)) {
                    rect = element.getBoundingClientRect();
                    var scrollTop = getScroll(element, "top"),
                        scrollLeft = getScroll(element, "left");
                    (rect.top += scrollTop), (rect.left += scrollLeft), (rect.bottom += scrollTop), (rect.right += scrollLeft);
                } else rect = element.getBoundingClientRect();
            } catch (e) {}
            var result = { left: rect.left, top: rect.top, width: rect.right - rect.left, height: rect.bottom - rect.top },
                sizes = "HTML" === element.nodeName ? getWindowSizes(element.ownerDocument) : {},
                width = sizes.width || element.clientWidth || result.width,
                height = sizes.height || element.clientHeight || result.height,
                horizScrollbar = element.offsetWidth - width,
                vertScrollbar = element.offsetHeight - height;
            if (horizScrollbar || vertScrollbar) {
                var styles = getStyleComputedProperty(element);
                (horizScrollbar -= getBordersSize(styles, "x")), (vertScrollbar -= getBordersSize(styles, "y")), (result.width -= horizScrollbar), (result.height -= vertScrollbar);
            }
            return getClientRect(result);
        }
        function getOffsetRectRelativeToArbitraryNode(children, parent) {
            var fixedPosition = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                isIE10 = isIE(10),
                isHTML = "HTML" === parent.nodeName,
                childrenRect = getBoundingClientRect(children),
                parentRect = getBoundingClientRect(parent),
                scrollParent = getScrollParent(children),
                styles = getStyleComputedProperty(parent),
                borderTopWidth = parseFloat(styles.borderTopWidth, 10),
                borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);
            fixedPosition && isHTML && ((parentRect.top = Math.max(parentRect.top, 0)), (parentRect.left = Math.max(parentRect.left, 0)));
            var offsets = getClientRect({ top: childrenRect.top - parentRect.top - borderTopWidth, left: childrenRect.left - parentRect.left - borderLeftWidth, width: childrenRect.width, height: childrenRect.height });
            if (((offsets.marginTop = 0), (offsets.marginLeft = 0), !isIE10 && isHTML)) {
                var marginTop = parseFloat(styles.marginTop, 10),
                    marginLeft = parseFloat(styles.marginLeft, 10);
                (offsets.top -= borderTopWidth - marginTop),
                    (offsets.bottom -= borderTopWidth - marginTop),
                    (offsets.left -= borderLeftWidth - marginLeft),
                    (offsets.right -= borderLeftWidth - marginLeft),
                    (offsets.marginTop = marginTop),
                    (offsets.marginLeft = marginLeft);
            }
            return (
                (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && "BODY" !== scrollParent.nodeName) &&
                    (offsets = (function (rect, element) {
                        var subtract = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                            scrollTop = getScroll(element, "top"),
                            scrollLeft = getScroll(element, "left"),
                            modifier = subtract ? -1 : 1;
                        return (rect.top += scrollTop * modifier), (rect.bottom += scrollTop * modifier), (rect.left += scrollLeft * modifier), (rect.right += scrollLeft * modifier), rect;
                    })(offsets, parent)),
                offsets
            );
        }
        function getFixedPositionOffsetParent(element) {
            if (!element || !element.parentElement || isIE()) return document.documentElement;
            for (var el = element.parentElement; el && "none" === getStyleComputedProperty(el, "transform"); ) el = el.parentElement;
            return el || document.documentElement;
        }
        function getBoundaries(popper, reference, padding, boundariesElement) {
            var fixedPosition = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                boundaries = { top: 0, left: 0 },
                offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
            if ("viewport" === boundariesElement)
                boundaries = (function (element) {
                    var excludeScroll = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        html = element.ownerDocument.documentElement,
                        relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html),
                        width = Math.max(html.clientWidth, window.innerWidth || 0),
                        height = Math.max(html.clientHeight, window.innerHeight || 0),
                        scrollTop = excludeScroll ? 0 : getScroll(html),
                        scrollLeft = excludeScroll ? 0 : getScroll(html, "left");
                    return getClientRect({ top: scrollTop - relativeOffset.top + relativeOffset.marginTop, left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft, width: width, height: height });
                })(offsetParent, fixedPosition);
            else {
                var boundariesNode = void 0;
                "scrollParent" === boundariesElement
                    ? "BODY" === (boundariesNode = getScrollParent(getParentNode(reference))).nodeName && (boundariesNode = popper.ownerDocument.documentElement)
                    : (boundariesNode = "window" === boundariesElement ? popper.ownerDocument.documentElement : boundariesElement);
                var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
                if (
                    "HTML" !== boundariesNode.nodeName ||
                    (function isFixed(element) {
                        var nodeName = element.nodeName;
                        if ("BODY" === nodeName || "HTML" === nodeName) return !1;
                        if ("fixed" === getStyleComputedProperty(element, "position")) return !0;
                        var parentNode = getParentNode(element);
                        return !!parentNode && isFixed(parentNode);
                    })(offsetParent)
                )
                    boundaries = offsets;
                else {
                    var _getWindowSizes = getWindowSizes(popper.ownerDocument),
                        height = _getWindowSizes.height,
                        width = _getWindowSizes.width;
                    (boundaries.top += offsets.top - offsets.marginTop), (boundaries.bottom = height + offsets.top), (boundaries.left += offsets.left - offsets.marginLeft), (boundaries.right = width + offsets.left);
                }
            }
            var isPaddingNumber = "number" == typeof (padding = padding || 0);
            return (
                (boundaries.left += isPaddingNumber ? padding : padding.left || 0),
                (boundaries.top += isPaddingNumber ? padding : padding.top || 0),
                (boundaries.right -= isPaddingNumber ? padding : padding.right || 0),
                (boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0),
                boundaries
            );
        }
        function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
            var padding = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
            if (-1 === placement.indexOf("auto")) return placement;
            var boundaries = getBoundaries(popper, reference, padding, boundariesElement),
                rects = {
                    top: { width: boundaries.width, height: refRect.top - boundaries.top },
                    right: { width: boundaries.right - refRect.right, height: boundaries.height },
                    bottom: { width: boundaries.width, height: boundaries.bottom - refRect.bottom },
                    left: { width: refRect.left - boundaries.left, height: boundaries.height },
                },
                sortedAreas = Object.keys(rects)
                    .map(function (key) {
                        return _extends({ key: key }, rects[key], { area: ((_ref = rects[key]), _ref.width * _ref.height) });
                        var _ref;
                    })
                    .sort(function (a, b) {
                        return b.area - a.area;
                    }),
                filteredAreas = sortedAreas.filter(function (_ref2) {
                    var width = _ref2.width,
                        height = _ref2.height;
                    return width >= popper.clientWidth && height >= popper.clientHeight;
                }),
                computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key,
                variation = placement.split("-")[1];
            return computedPlacement + (variation ? "-" + variation : "");
        }
        function getReferenceOffsets(state, popper, reference) {
            var fixedPosition = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
            return getOffsetRectRelativeToArbitraryNode(reference, fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)), fixedPosition);
        }
        function getOuterSizes(element) {
            var styles = element.ownerDocument.defaultView.getComputedStyle(element),
                x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0),
                y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
            return { width: element.offsetWidth + y, height: element.offsetHeight + x };
        }
        function getOppositePlacement(placement) {
            var hash = { left: "right", right: "left", bottom: "top", top: "bottom" };
            return placement.replace(/left|right|bottom|top/g, function (matched) {
                return hash[matched];
            });
        }
        function getPopperOffsets(popper, referenceOffsets, placement) {
            placement = placement.split("-")[0];
            var popperRect = getOuterSizes(popper),
                popperOffsets = { width: popperRect.width, height: popperRect.height },
                isHoriz = -1 !== ["right", "left"].indexOf(placement),
                mainSide = isHoriz ? "top" : "left",
                secondarySide = isHoriz ? "left" : "top",
                measurement = isHoriz ? "height" : "width",
                secondaryMeasurement = isHoriz ? "width" : "height";
            return (
                (popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2),
                (popperOffsets[secondarySide] = placement === secondarySide ? referenceOffsets[secondarySide] - popperRect[secondaryMeasurement] : referenceOffsets[getOppositePlacement(secondarySide)]),
                popperOffsets
            );
        }
        function find(arr, check) {
            return Array.prototype.find ? arr.find(check) : arr.filter(check)[0];
        }
        function runModifiers(modifiers, data, ends) {
            return (
                (void 0 === ends
                    ? modifiers
                    : modifiers.slice(
                          0,
                          (function (arr, prop, value) {
                              if (Array.prototype.findIndex)
                                  return arr.findIndex(function (cur) {
                                      return cur[prop] === value;
                                  });
                              var match = find(arr, function (obj) {
                                  return obj[prop] === value;
                              });
                              return arr.indexOf(match);
                          })(modifiers, "name", ends)
                      )
                ).forEach(function (modifier) {
                    modifier.function;
                    var fn = modifier.function || modifier.fn;
                    modifier.enabled && isFunction(fn) && ((data.offsets.popper = getClientRect(data.offsets.popper)), (data.offsets.reference = getClientRect(data.offsets.reference)), (data = fn(data, modifier)));
                }),
                data
            );
        }
        function isModifierEnabled(modifiers, modifierName) {
            return modifiers.some(function (_ref) {
                var name = _ref.name;
                return _ref.enabled && name === modifierName;
            });
        }
        function getSupportedPropertyName(property) {
            for (var prefixes = [!1, "ms", "Webkit", "Moz", "O"], upperProp = property.charAt(0).toUpperCase() + property.slice(1), i = 0; i < prefixes.length; i++) {
                var prefix = prefixes[i],
                    toCheck = prefix ? "" + prefix + upperProp : property;
                if (void 0 !== document.body.style[toCheck]) return toCheck;
            }
            return null;
        }
        function getWindow(element) {
            var ownerDocument = element.ownerDocument;
            return ownerDocument ? ownerDocument.defaultView : window;
        }
        function setupEventListeners(reference, options, state, updateBound) {
            (state.updateBound = updateBound), getWindow(reference).addEventListener("resize", state.updateBound, { passive: !0 });
            var scrollElement = getScrollParent(reference);
            return (
                (function attachToScrollParents(scrollParent, event, callback, scrollParents) {
                    var isBody = "BODY" === scrollParent.nodeName,
                        target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
                    target.addEventListener(event, callback, { passive: !0 }), isBody || attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents), scrollParents.push(target);
                })(scrollElement, "scroll", state.updateBound, state.scrollParents),
                (state.scrollElement = scrollElement),
                (state.eventsEnabled = !0),
                state
            );
        }
        function disableEventListeners() {
            var reference, state;
            this.state.eventsEnabled &&
                (cancelAnimationFrame(this.scheduleUpdate),
                (this.state =
                    ((reference = this.reference),
                    (state = this.state),
                    getWindow(reference).removeEventListener("resize", state.updateBound),
                    state.scrollParents.forEach(function (target) {
                        target.removeEventListener("scroll", state.updateBound);
                    }),
                    (state.updateBound = null),
                    (state.scrollParents = []),
                    (state.scrollElement = null),
                    (state.eventsEnabled = !1),
                    state)));
        }
        function isNumeric(n) {
            return "" !== n && !isNaN(parseFloat(n)) && isFinite(n);
        }
        function setStyles(element, styles) {
            Object.keys(styles).forEach(function (prop) {
                var unit = "";
                -1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(prop) && isNumeric(styles[prop]) && (unit = "px"), (element.style[prop] = styles[prop] + unit);
            });
        }
        var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
        function isModifierRequired(modifiers, requestingName, requestedName) {
            var requesting = find(modifiers, function (_ref) {
                    return _ref.name === requestingName;
                }),
                isRequired =
                    !!requesting &&
                    modifiers.some(function (modifier) {
                        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
                    });
            if (!isRequired);
            return isRequired;
        }
        var placements = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"],
            validPlacements = placements.slice(3);
        function clockwise(placement) {
            var counter = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                index = validPlacements.indexOf(placement),
                arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
            return counter ? arr.reverse() : arr;
        }
        var BEHAVIORS = { FLIP: "flip", CLOCKWISE: "clockwise", COUNTERCLOCKWISE: "counterclockwise" };
        function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
            var offsets = [0, 0],
                useHeight = -1 !== ["right", "left"].indexOf(basePlacement),
                fragments = offset.split(/(\+|\-)/).map(function (frag) {
                    return frag.trim();
                }),
                divider = fragments.indexOf(
                    find(fragments, function (frag) {
                        return -1 !== frag.search(/,|\s/);
                    })
                );
            fragments[divider] && fragments[divider].indexOf(",");
            var splitRegex = /\s*,\s*|\s+/,
                ops = -1 !== divider ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
            return (
                (ops = ops.map(function (op, index) {
                    var measurement = (1 === index ? !useHeight : useHeight) ? "height" : "width",
                        mergeWithPrevious = !1;
                    return op
                        .reduce(function (a, b) {
                            return "" === a[a.length - 1] && -1 !== ["+", "-"].indexOf(b) ? ((a[a.length - 1] = b), (mergeWithPrevious = !0), a) : mergeWithPrevious ? ((a[a.length - 1] += b), (mergeWithPrevious = !1), a) : a.concat(b);
                        }, [])
                        .map(function (str) {
                            return (function (str, measurement, popperOffsets, referenceOffsets) {
                                var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
                                    value = +split[1],
                                    unit = split[2];
                                if (!value) return str;
                                if (0 === unit.indexOf("%")) {
                                    var element = void 0;
                                    switch (unit) {
                                        case "%p":
                                            element = popperOffsets;
                                            break;
                                        case "%":
                                        case "%r":
                                        default:
                                            element = referenceOffsets;
                                    }
                                    return (getClientRect(element)[measurement] / 100) * value;
                                }
                                if ("vh" === unit || "vw" === unit)
                                    return (("vh" === unit ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) / 100) * value;
                                return value;
                            })(str, measurement, popperOffsets, referenceOffsets);
                        });
                })).forEach(function (op, index) {
                    op.forEach(function (frag, index2) {
                        isNumeric(frag) && (offsets[index] += frag * ("-" === op[index2 - 1] ? -1 : 1));
                    });
                }),
                offsets
            );
        }
        var Defaults = {
                placement: "bottom",
                positionFixed: !1,
                eventsEnabled: !0,
                removeOnDestroy: !1,
                onCreate: function () {},
                onUpdate: function () {},
                modifiers: {
                    shift: {
                        order: 100,
                        enabled: !0,
                        fn: function (data) {
                            var placement = data.placement,
                                basePlacement = placement.split("-")[0],
                                shiftvariation = placement.split("-")[1];
                            if (shiftvariation) {
                                var _data$offsets = data.offsets,
                                    reference = _data$offsets.reference,
                                    popper = _data$offsets.popper,
                                    isVertical = -1 !== ["bottom", "top"].indexOf(basePlacement),
                                    side = isVertical ? "left" : "top",
                                    measurement = isVertical ? "width" : "height",
                                    shiftOffsets = { start: defineProperty({}, side, reference[side]), end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement]) };
                                data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
                            }
                            return data;
                        },
                    },
                    offset: {
                        order: 200,
                        enabled: !0,
                        fn: function (data, _ref) {
                            var offset = _ref.offset,
                                placement = data.placement,
                                _data$offsets = data.offsets,
                                popper = _data$offsets.popper,
                                reference = _data$offsets.reference,
                                basePlacement = placement.split("-")[0],
                                offsets = void 0;
                            return (
                                (offsets = isNumeric(+offset) ? [+offset, 0] : parseOffset(offset, popper, reference, basePlacement)),
                                "left" === basePlacement
                                    ? ((popper.top += offsets[0]), (popper.left -= offsets[1]))
                                    : "right" === basePlacement
                                    ? ((popper.top += offsets[0]), (popper.left += offsets[1]))
                                    : "top" === basePlacement
                                    ? ((popper.left += offsets[0]), (popper.top -= offsets[1]))
                                    : "bottom" === basePlacement && ((popper.left += offsets[0]), (popper.top += offsets[1])),
                                (data.popper = popper),
                                data
                            );
                        },
                        offset: 0,
                    },
                    preventOverflow: {
                        order: 300,
                        enabled: !0,
                        fn: function (data, options) {
                            var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
                            data.instance.reference === boundariesElement && (boundariesElement = getOffsetParent(boundariesElement));
                            var transformProp = getSupportedPropertyName("transform"),
                                popperStyles = data.instance.popper.style,
                                top = popperStyles.top,
                                left = popperStyles.left,
                                transform = popperStyles[transformProp];
                            (popperStyles.top = ""), (popperStyles.left = ""), (popperStyles[transformProp] = "");
                            var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
                            (popperStyles.top = top), (popperStyles.left = left), (popperStyles[transformProp] = transform), (options.boundaries = boundaries);
                            var order = options.priority,
                                popper = data.offsets.popper,
                                check = {
                                    primary: function (placement) {
                                        var value = popper[placement];
                                        return popper[placement] < boundaries[placement] && !options.escapeWithReference && (value = Math.max(popper[placement], boundaries[placement])), defineProperty({}, placement, value);
                                    },
                                    secondary: function (placement) {
                                        var mainSide = "right" === placement ? "left" : "top",
                                            value = popper[mainSide];
                                        return (
                                            popper[placement] > boundaries[placement] && !options.escapeWithReference && (value = Math.min(popper[mainSide], boundaries[placement] - ("right" === placement ? popper.width : popper.height))),
                                            defineProperty({}, mainSide, value)
                                        );
                                    },
                                };
                            return (
                                order.forEach(function (placement) {
                                    var side = -1 !== ["left", "top"].indexOf(placement) ? "primary" : "secondary";
                                    popper = _extends({}, popper, check[side](placement));
                                }),
                                (data.offsets.popper = popper),
                                data
                            );
                        },
                        priority: ["left", "right", "top", "bottom"],
                        padding: 5,
                        boundariesElement: "scrollParent",
                    },
                    keepTogether: {
                        order: 400,
                        enabled: !0,
                        fn: function (data) {
                            var _data$offsets = data.offsets,
                                popper = _data$offsets.popper,
                                reference = _data$offsets.reference,
                                placement = data.placement.split("-")[0],
                                floor = Math.floor,
                                isVertical = -1 !== ["top", "bottom"].indexOf(placement),
                                side = isVertical ? "right" : "bottom",
                                opSide = isVertical ? "left" : "top",
                                measurement = isVertical ? "width" : "height";
                            return (
                                popper[side] < floor(reference[opSide]) && (data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement]),
                                popper[opSide] > floor(reference[side]) && (data.offsets.popper[opSide] = floor(reference[side])),
                                data
                            );
                        },
                    },
                    arrow: {
                        order: 500,
                        enabled: !0,
                        fn: function (data, options) {
                            var _data$offsets$arrow;
                            if (!isModifierRequired(data.instance.modifiers, "arrow", "keepTogether")) return data;
                            var arrowElement = options.element;
                            if ("string" == typeof arrowElement) {
                                if (!(arrowElement = data.instance.popper.querySelector(arrowElement))) return data;
                            } else if (!data.instance.popper.contains(arrowElement)) return data;
                            var placement = data.placement.split("-")[0],
                                _data$offsets = data.offsets,
                                popper = _data$offsets.popper,
                                reference = _data$offsets.reference,
                                isVertical = -1 !== ["left", "right"].indexOf(placement),
                                len = isVertical ? "height" : "width",
                                sideCapitalized = isVertical ? "Top" : "Left",
                                side = sideCapitalized.toLowerCase(),
                                altSide = isVertical ? "left" : "top",
                                opSide = isVertical ? "bottom" : "right",
                                arrowElementSize = getOuterSizes(arrowElement)[len];
                            reference[opSide] - arrowElementSize < popper[side] && (data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize)),
                                reference[side] + arrowElementSize > popper[opSide] && (data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide]),
                                (data.offsets.popper = getClientRect(data.offsets.popper));
                            var center = reference[side] + reference[len] / 2 - arrowElementSize / 2,
                                css = getStyleComputedProperty(data.instance.popper),
                                popperMarginSide = parseFloat(css["margin" + sideCapitalized], 10),
                                popperBorderSide = parseFloat(css["border" + sideCapitalized + "Width"], 10),
                                sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
                            return (
                                (sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0)),
                                (data.arrowElement = arrowElement),
                                (data.offsets.arrow = (defineProperty((_data$offsets$arrow = {}), side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ""), _data$offsets$arrow)),
                                data
                            );
                        },
                        element: "[x-arrow]",
                    },
                    flip: {
                        order: 600,
                        enabled: !0,
                        fn: function (data, options) {
                            if (isModifierEnabled(data.instance.modifiers, "inner")) return data;
                            if (data.flipped && data.placement === data.originalPlacement) return data;
                            var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed),
                                placement = data.placement.split("-")[0],
                                placementOpposite = getOppositePlacement(placement),
                                variation = data.placement.split("-")[1] || "",
                                flipOrder = [];
                            switch (options.behavior) {
                                case BEHAVIORS.FLIP:
                                    flipOrder = [placement, placementOpposite];
                                    break;
                                case BEHAVIORS.CLOCKWISE:
                                    flipOrder = clockwise(placement);
                                    break;
                                case BEHAVIORS.COUNTERCLOCKWISE:
                                    flipOrder = clockwise(placement, !0);
                                    break;
                                default:
                                    flipOrder = options.behavior;
                            }
                            return (
                                flipOrder.forEach(function (step, index) {
                                    if (placement !== step || flipOrder.length === index + 1) return data;
                                    (placement = data.placement.split("-")[0]), (placementOpposite = getOppositePlacement(placement));
                                    var popperOffsets = data.offsets.popper,
                                        refOffsets = data.offsets.reference,
                                        floor = Math.floor,
                                        overlapsRef =
                                            ("left" === placement && floor(popperOffsets.right) > floor(refOffsets.left)) ||
                                            ("right" === placement && floor(popperOffsets.left) < floor(refOffsets.right)) ||
                                            ("top" === placement && floor(popperOffsets.bottom) > floor(refOffsets.top)) ||
                                            ("bottom" === placement && floor(popperOffsets.top) < floor(refOffsets.bottom)),
                                        overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left),
                                        overflowsRight = floor(popperOffsets.right) > floor(boundaries.right),
                                        overflowsTop = floor(popperOffsets.top) < floor(boundaries.top),
                                        overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom),
                                        overflowsBoundaries = ("left" === placement && overflowsLeft) || ("right" === placement && overflowsRight) || ("top" === placement && overflowsTop) || ("bottom" === placement && overflowsBottom),
                                        isVertical = -1 !== ["top", "bottom"].indexOf(placement),
                                        flippedVariationByRef =
                                            !!options.flipVariations &&
                                            ((isVertical && "start" === variation && overflowsLeft) ||
                                                (isVertical && "end" === variation && overflowsRight) ||
                                                (!isVertical && "start" === variation && overflowsTop) ||
                                                (!isVertical && "end" === variation && overflowsBottom)),
                                        flippedVariationByContent =
                                            !!options.flipVariationsByContent &&
                                            ((isVertical && "start" === variation && overflowsRight) ||
                                                (isVertical && "end" === variation && overflowsLeft) ||
                                                (!isVertical && "start" === variation && overflowsBottom) ||
                                                (!isVertical && "end" === variation && overflowsTop)),
                                        flippedVariation = flippedVariationByRef || flippedVariationByContent;
                                    (overlapsRef || overflowsBoundaries || flippedVariation) &&
                                        ((data.flipped = !0),
                                        (overlapsRef || overflowsBoundaries) && (placement = flipOrder[index + 1]),
                                        flippedVariation &&
                                            (variation = (function (variation) {
                                                return "end" === variation ? "start" : "start" === variation ? "end" : variation;
                                            })(variation)),
                                        (data.placement = placement + (variation ? "-" + variation : "")),
                                        (data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement))),
                                        (data = runModifiers(data.instance.modifiers, data, "flip")));
                                }),
                                data
                            );
                        },
                        behavior: "flip",
                        padding: 5,
                        boundariesElement: "viewport",
                        flipVariations: !1,
                        flipVariationsByContent: !1,
                    },
                    inner: {
                        order: 700,
                        enabled: !1,
                        fn: function (data) {
                            var placement = data.placement,
                                basePlacement = placement.split("-")[0],
                                _data$offsets = data.offsets,
                                popper = _data$offsets.popper,
                                reference = _data$offsets.reference,
                                isHoriz = -1 !== ["left", "right"].indexOf(basePlacement),
                                subtractLength = -1 === ["top", "left"].indexOf(basePlacement);
                            return (
                                (popper[isHoriz ? "left" : "top"] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? "width" : "height"] : 0)),
                                (data.placement = getOppositePlacement(placement)),
                                (data.offsets.popper = getClientRect(popper)),
                                data
                            );
                        },
                    },
                    hide: {
                        order: 800,
                        enabled: !0,
                        fn: function (data) {
                            if (!isModifierRequired(data.instance.modifiers, "hide", "preventOverflow")) return data;
                            var refRect = data.offsets.reference,
                                bound = find(data.instance.modifiers, function (modifier) {
                                    return "preventOverflow" === modifier.name;
                                }).boundaries;
                            if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
                                if (!0 === data.hide) return data;
                                (data.hide = !0), (data.attributes["x-out-of-boundaries"] = "");
                            } else {
                                if (!1 === data.hide) return data;
                                (data.hide = !1), (data.attributes["x-out-of-boundaries"] = !1);
                            }
                            return data;
                        },
                    },
                    computeStyle: {
                        order: 850,
                        enabled: !0,
                        fn: function (data, options) {
                            var x = options.x,
                                y = options.y,
                                popper = data.offsets.popper,
                                legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
                                    return "applyStyle" === modifier.name;
                                }).gpuAcceleration,
                                gpuAcceleration = void 0 !== legacyGpuAccelerationOption ? legacyGpuAccelerationOption : options.gpuAcceleration,
                                offsetParent = getOffsetParent(data.instance.popper),
                                offsetParentRect = getBoundingClientRect(offsetParent),
                                styles = { position: popper.position },
                                offsets = (function (data, shouldRound) {
                                    var _data$offsets = data.offsets,
                                        popper = _data$offsets.popper,
                                        reference = _data$offsets.reference,
                                        round = Math.round,
                                        floor = Math.floor,
                                        noRound = function (v) {
                                            return v;
                                        },
                                        referenceWidth = round(reference.width),
                                        popperWidth = round(popper.width),
                                        isVertical = -1 !== ["left", "right"].indexOf(data.placement),
                                        isVariation = -1 !== data.placement.indexOf("-"),
                                        horizontalToInteger = shouldRound ? (isVertical || isVariation || referenceWidth % 2 == popperWidth % 2 ? round : floor) : noRound,
                                        verticalToInteger = shouldRound ? round : noRound;
                                    return {
                                        left: horizontalToInteger(referenceWidth % 2 == 1 && popperWidth % 2 == 1 && !isVariation && shouldRound ? popper.left - 1 : popper.left),
                                        top: verticalToInteger(popper.top),
                                        bottom: verticalToInteger(popper.bottom),
                                        right: horizontalToInteger(popper.right),
                                    };
                                })(data, window.devicePixelRatio < 2 || !isFirefox),
                                sideA = "bottom" === x ? "top" : "bottom",
                                sideB = "right" === y ? "left" : "right",
                                prefixedProperty = getSupportedPropertyName("transform"),
                                left = void 0,
                                top = void 0;
                            if (
                                ((top = "bottom" === sideA ? ("HTML" === offsetParent.nodeName ? -offsetParent.clientHeight + offsets.bottom : -offsetParentRect.height + offsets.bottom) : offsets.top),
                                (left = "right" === sideB ? ("HTML" === offsetParent.nodeName ? -offsetParent.clientWidth + offsets.right : -offsetParentRect.width + offsets.right) : offsets.left),
                                gpuAcceleration && prefixedProperty)
                            )
                                (styles[prefixedProperty] = "translate3d(" + left + "px, " + top + "px, 0)"), (styles[sideA] = 0), (styles[sideB] = 0), (styles.willChange = "transform");
                            else {
                                var invertTop = "bottom" === sideA ? -1 : 1,
                                    invertLeft = "right" === sideB ? -1 : 1;
                                (styles[sideA] = top * invertTop), (styles[sideB] = left * invertLeft), (styles.willChange = sideA + ", " + sideB);
                            }
                            var attributes = { "x-placement": data.placement };
                            return (data.attributes = _extends({}, attributes, data.attributes)), (data.styles = _extends({}, styles, data.styles)), (data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles)), data;
                        },
                        gpuAcceleration: !0,
                        x: "bottom",
                        y: "right",
                    },
                    applyStyle: {
                        order: 900,
                        enabled: !0,
                        fn: function (data) {
                            var element, attributes;
                            return (
                                setStyles(data.instance.popper, data.styles),
                                (element = data.instance.popper),
                                (attributes = data.attributes),
                                Object.keys(attributes).forEach(function (prop) {
                                    !1 !== attributes[prop] ? element.setAttribute(prop, attributes[prop]) : element.removeAttribute(prop);
                                }),
                                data.arrowElement && Object.keys(data.arrowStyles).length && setStyles(data.arrowElement, data.arrowStyles),
                                data
                            );
                        },
                        onLoad: function (reference, popper, options, modifierOptions, state) {
                            var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed),
                                placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
                            return popper.setAttribute("x-placement", placement), setStyles(popper, { position: options.positionFixed ? "fixed" : "absolute" }), options;
                        },
                        gpuAcceleration: void 0,
                    },
                },
            },
            Popper = (function () {
                function Popper(reference, popper) {
                    var _this = this,
                        options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    classCallCheck(this, Popper),
                        (this.scheduleUpdate = function () {
                            return requestAnimationFrame(_this.update);
                        }),
                        (this.update = debounce(this.update.bind(this))),
                        (this.options = _extends({}, Popper.Defaults, options)),
                        (this.state = { isDestroyed: !1, isCreated: !1, scrollParents: [] }),
                        (this.reference = reference && reference.jquery ? reference[0] : reference),
                        (this.popper = popper && popper.jquery ? popper[0] : popper),
                        (this.options.modifiers = {}),
                        Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
                            _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
                        }),
                        (this.modifiers = Object.keys(this.options.modifiers)
                            .map(function (name) {
                                return _extends({ name: name }, _this.options.modifiers[name]);
                            })
                            .sort(function (a, b) {
                                return a.order - b.order;
                            })),
                        this.modifiers.forEach(function (modifierOptions) {
                            modifierOptions.enabled && isFunction(modifierOptions.onLoad) && modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
                        }),
                        this.update();
                    var eventsEnabled = this.options.eventsEnabled;
                    eventsEnabled && this.enableEventListeners(), (this.state.eventsEnabled = eventsEnabled);
                }
                return (
                    createClass(Popper, [
                        {
                            key: "update",
                            value: function () {
                                return function () {
                                    if (!this.state.isDestroyed) {
                                        var data = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: !1, offsets: {} };
                                        (data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed)),
                                            (data.placement = computeAutoPlacement(
                                                this.options.placement,
                                                data.offsets.reference,
                                                this.popper,
                                                this.reference,
                                                this.options.modifiers.flip.boundariesElement,
                                                this.options.modifiers.flip.padding
                                            )),
                                            (data.originalPlacement = data.placement),
                                            (data.positionFixed = this.options.positionFixed),
                                            (data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement)),
                                            (data.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute"),
                                            (data = runModifiers(this.modifiers, data)),
                                            this.state.isCreated ? this.options.onUpdate(data) : ((this.state.isCreated = !0), this.options.onCreate(data));
                                    }
                                }.call(this);
                            },
                        },
                        {
                            key: "destroy",
                            value: function () {
                                return function () {
                                    return (
                                        (this.state.isDestroyed = !0),
                                        isModifierEnabled(this.modifiers, "applyStyle") &&
                                            (this.popper.removeAttribute("x-placement"),
                                            (this.popper.style.position = ""),
                                            (this.popper.style.top = ""),
                                            (this.popper.style.left = ""),
                                            (this.popper.style.right = ""),
                                            (this.popper.style.bottom = ""),
                                            (this.popper.style.willChange = ""),
                                            (this.popper.style[getSupportedPropertyName("transform")] = "")),
                                        this.disableEventListeners(),
                                        this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper),
                                        this
                                    );
                                }.call(this);
                            },
                        },
                        {
                            key: "enableEventListeners",
                            value: function () {
                                return function () {
                                    this.state.eventsEnabled || (this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate));
                                }.call(this);
                            },
                        },
                        {
                            key: "disableEventListeners",
                            value: function () {
                                return disableEventListeners.call(this);
                            },
                        },
                    ]),
                    Popper
                );
            })();
        return (Popper.Utils = ("undefined" != typeof window ? window : global).PopperUtils), (Popper.placements = placements), (Popper.Defaults = Defaults), Popper;
    }),
    /**!
     * @fileOverview Kickass library to create and place poppers near their reference elements.
     * @version 1.3.3
     * @license
     * Copyright (c) 2016 Federico Zivolo and contributors
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in all
     * copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     * SOFTWARE.
     */
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? (module.exports = factory(require("popper.js"))) : "function" == typeof define && define.amd ? define(["popper.js"], factory) : (global.Tooltip = factory(global.Popper));
    })(this, function (Popper) {
        "use strict";
        Popper = Popper && Popper.hasOwnProperty("default") ? Popper.default : Popper;
        var classCallCheck = function (instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
            },
            createClass = (function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }
                return function (Constructor, protoProps, staticProps) {
                    return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
                };
            })(),
            _extends =
                Object.assign ||
                function (target) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = arguments[i];
                        for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                    }
                    return target;
                },
            DEFAULT_OPTIONS = {
                container: !1,
                delay: 0,
                html: !1,
                placement: "top",
                title: "",
                template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                trigger: "hover focus",
                offset: 0,
                arrowSelector: ".tooltip-arrow, .tooltip__arrow",
                innerSelector: ".tooltip-inner, .tooltip__inner",
            },
            Tooltip = (function () {
                function Tooltip(reference, options) {
                    classCallCheck(this, Tooltip), _initialiseProps.call(this), (options = _extends({}, DEFAULT_OPTIONS, options)), reference.jquery && (reference = reference[0]), (this.reference = reference), (this.options = options);
                    var events =
                        "string" == typeof options.trigger
                            ? options.trigger.split(" ").filter(function (trigger) {
                                  return -1 !== ["click", "hover", "focus"].indexOf(trigger);
                              })
                            : [];
                    (this._isOpen = !1), (this._popperOptions = {}), this._setEventListeners(reference, events, options);
                }
                return (
                    createClass(Tooltip, [
                        {
                            key: "_create",
                            value: function (reference, template, title, allowHtml) {
                                var tooltipGenerator = window.document.createElement("div");
                                tooltipGenerator.innerHTML = template.trim();
                                var tooltipNode = tooltipGenerator.childNodes[0];
                                (tooltipNode.id = "tooltip_" + Math.random().toString(36).substr(2, 10)), tooltipNode.setAttribute("aria-hidden", "false");
                                var titleNode = tooltipGenerator.querySelector(this.options.innerSelector);
                                return this._addTitleContent(reference, title, allowHtml, titleNode), tooltipNode;
                            },
                        },
                        {
                            key: "_addTitleContent",
                            value: function (reference, title, allowHtml, titleNode) {
                                var functionToCheck;
                                1 === title.nodeType || 11 === title.nodeType
                                    ? allowHtml && titleNode.appendChild(title)
                                    : (functionToCheck = title) && "[object Function]" === {}.toString.call(functionToCheck)
                                    ? this._addTitleContent(reference, title.call(reference), allowHtml, titleNode)
                                    : allowHtml
                                    ? (titleNode.innerHTML = title)
                                    : (titleNode.textContent = title);
                            },
                        },
                        {
                            key: "_show",
                            value: function (reference, options) {
                                if (this._isOpen && !this._isOpening) return this;
                                if (((this._isOpen = !0), this._tooltipNode)) return (this._tooltipNode.style.visibility = "visible"), this._tooltipNode.setAttribute("aria-hidden", "false"), this.popperInstance.update(), this;
                                var title = reference.getAttribute("title") || options.title;
                                if (!title) return this;
                                var tooltipNode = this._create(reference, options.template, title, options.html);
                                reference.setAttribute("aria-describedby", tooltipNode.id);
                                var container = this._findContainer(options.container, reference);
                                return (
                                    this._append(tooltipNode, container),
                                    (this._popperOptions = _extends({}, options.popperOptions, { placement: options.placement })),
                                    (this._popperOptions.modifiers = _extends({}, this._popperOptions.modifiers, {
                                        arrow: _extends({}, this._popperOptions.modifiers && this._popperOptions.modifiers.arrow, { element: options.arrowSelector }),
                                        offset: _extends({}, this._popperOptions.modifiers && this._popperOptions.modifiers.offset, {
                                            offset: options.offset || (this._popperOptions.modifiers && this._popperOptions.modifiers.offset && this._popperOptions.modifiers.offset.offset) || options.offset,
                                        }),
                                    })),
                                    options.boundariesElement && (this._popperOptions.modifiers.preventOverflow = { boundariesElement: options.boundariesElement }),
                                    (this.popperInstance = new Popper(reference, tooltipNode, this._popperOptions)),
                                    (this._tooltipNode = tooltipNode),
                                    this
                                );
                            },
                        },
                        {
                            key: "_hide",
                            value: function () {
                                return this._isOpen ? ((this._isOpen = !1), (this._tooltipNode.style.visibility = "hidden"), this._tooltipNode.setAttribute("aria-hidden", "true"), this) : this;
                            },
                        },
                        {
                            key: "_dispose",
                            value: function () {
                                var _this = this;
                                return (
                                    this._events.forEach(function (_ref) {
                                        var func = _ref.func,
                                            event = _ref.event;
                                        _this.reference.removeEventListener(event, func);
                                    }),
                                    (this._events = []),
                                    this._tooltipNode &&
                                        (this._hide(), this.popperInstance.destroy(), this.popperInstance.options.removeOnDestroy || (this._tooltipNode.parentNode.removeChild(this._tooltipNode), (this._tooltipNode = null))),
                                    this
                                );
                            },
                        },
                        {
                            key: "_findContainer",
                            value: function (container, reference) {
                                return "string" == typeof container ? (container = window.document.querySelector(container)) : !1 === container && (container = reference.parentNode), container;
                            },
                        },
                        {
                            key: "_append",
                            value: function (tooltipNode, container) {
                                container.appendChild(tooltipNode);
                            },
                        },
                        {
                            key: "_setEventListeners",
                            value: function (reference, events, options) {
                                var _this2 = this,
                                    directEvents = [],
                                    oppositeEvents = [];
                                events.forEach(function (event) {
                                    switch (event) {
                                        case "hover":
                                            directEvents.push("mouseenter"), oppositeEvents.push("mouseleave");
                                            break;
                                        case "focus":
                                            directEvents.push("focus"), oppositeEvents.push("blur");
                                            break;
                                        case "click":
                                            directEvents.push("click"), oppositeEvents.push("click");
                                    }
                                }),
                                    directEvents.forEach(function (event) {
                                        var func = function (evt) {
                                            !0 !== _this2._isOpening && ((evt.usedByTooltip = !0), _this2._scheduleShow(reference, options.delay, options, evt));
                                        };
                                        _this2._events.push({ event: event, func: func }), reference.addEventListener(event, func);
                                    }),
                                    oppositeEvents.forEach(function (event) {
                                        var func = function (evt) {
                                            !0 !== evt.usedByTooltip && _this2._scheduleHide(reference, options.delay, options, evt);
                                        };
                                        _this2._events.push({ event: event, func: func }),
                                            reference.addEventListener(event, func),
                                            "click" === event &&
                                                options.closeOnClickOutside &&
                                                document.addEventListener(
                                                    "mousedown",
                                                    function (e) {
                                                        if (_this2._isOpening) {
                                                            var popper = _this2.popperInstance.popper;
                                                            reference.contains(e.target) || popper.contains(e.target) || func(e);
                                                        }
                                                    },
                                                    !0
                                                );
                                    });
                            },
                        },
                        {
                            key: "_scheduleShow",
                            value: function (reference, delay, options) {
                                var _this3 = this;
                                this._isOpening = !0;
                                var computedDelay = (delay && delay.show) || delay || 0;
                                this._showTimeout = window.setTimeout(function () {
                                    return _this3._show(reference, options);
                                }, computedDelay);
                            },
                        },
                        {
                            key: "_scheduleHide",
                            value: function (reference, delay, options, evt) {
                                var _this4 = this;
                                this._isOpening = !1;
                                var computedDelay = (delay && delay.hide) || delay || 0;
                                window.clearTimeout(this._showTimeout),
                                    window.setTimeout(function () {
                                        if (!1 !== _this4._isOpen && document.body.contains(_this4._tooltipNode)) {
                                            if ("mouseleave" === evt.type) if (_this4._setTooltipNodeEvent(evt, reference, delay, options)) return;
                                            _this4._hide(reference, options);
                                        }
                                    }, computedDelay);
                            },
                        },
                        {
                            key: "_updateTitleContent",
                            value: function (title) {
                                if (void 0 !== this._tooltipNode) {
                                    var titleNode = this._tooltipNode.querySelector(this.options.innerSelector);
                                    this._clearTitleContent(titleNode, this.options.html, this.reference.getAttribute("title") || this.options.title),
                                        this._addTitleContent(this.reference, title, this.options.html, titleNode),
                                        (this.options.title = title),
                                        this.popperInstance.update();
                                } else void 0 !== this.options.title && (this.options.title = title);
                            },
                        },
                        {
                            key: "_clearTitleContent",
                            value: function (titleNode, allowHtml, lastTitle) {
                                1 === lastTitle.nodeType || 11 === lastTitle.nodeType ? allowHtml && titleNode.removeChild(lastTitle) : allowHtml ? (titleNode.innerHTML = "") : (titleNode.textContent = "");
                            },
                        },
                    ]),
                    Tooltip
                );
            })(),
            _initialiseProps = function () {
                var _this5 = this;
                (this.show = function () {
                    return _this5._show(_this5.reference, _this5.options);
                }),
                    (this.hide = function () {
                        return _this5._hide();
                    }),
                    (this.dispose = function () {
                        return _this5._dispose();
                    }),
                    (this.toggle = function () {
                        return _this5._isOpen ? _this5.hide() : _this5.show();
                    }),
                    (this.updateTitleContent = function (title) {
                        return _this5._updateTitleContent(title);
                    }),
                    (this._events = []),
                    (this._setTooltipNodeEvent = function (evt, reference, delay, options) {
                        var relatedreference = evt.relatedreference || evt.toElement || evt.relatedTarget;
                        return (
                            !!_this5._tooltipNode.contains(relatedreference) &&
                            (_this5._tooltipNode.addEventListener(evt.type, function callback(evt2) {
                                var relatedreference2 = evt2.relatedreference || evt2.toElement || evt2.relatedTarget;
                                _this5._tooltipNode.removeEventListener(evt.type, callback), reference.contains(relatedreference2) || _this5._scheduleHide(reference, options.delay, options, evt2);
                            }),
                            !0)
                        );
                    });
            };
        return Tooltip;
    }),
    (function (global, factory) {
        "object" == typeof exports && "undefined" != typeof module
            ? factory(exports, require("jquery"), require("popper.js"))
            : "function" == typeof define && define.amd
            ? define(["exports", "jquery", "popper.js"], factory)
            : factory(((global = global || self).bootstrap = {}), global.jQuery, global.Popper);
    })(this, function (exports, $, Popper) {
        "use strict";
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                (descriptor.enumerable = descriptor.enumerable || !1), (descriptor.configurable = !0), "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
        }
        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : (obj[key] = value), obj;
        }
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly &&
                    (symbols = symbols.filter(function (sym) {
                        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    })),
                    keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread2(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2
                    ? ownKeys(Object(source), !0).forEach(function (key) {
                          _defineProperty(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : ownKeys(Object(source)).forEach(function (key) {
                          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                      });
            }
            return target;
        }
        ($ = $ && $.hasOwnProperty("default") ? $.default : $), (Popper = Popper && Popper.hasOwnProperty("default") ? Popper.default : Popper);
        var TRANSITION_END = "transitionend";
        function transitionEndEmulator(duration) {
            var _this = this,
                called = !1;
            return (
                $(this).one(Util.TRANSITION_END, function () {
                    called = !0;
                }),
                setTimeout(function () {
                    called || Util.triggerTransitionEnd(_this);
                }, duration),
                this
            );
        }
        var Util = {
            TRANSITION_END: "bsTransitionEnd",
            getUID: function (prefix) {
                do {
                    prefix += ~~(1e6 * Math.random());
                } while (document.getElementById(prefix));
                return prefix;
            },
            getSelectorFromElement: function (element) {
                var selector = element.getAttribute("data-target");
                if (!selector || "#" === selector) {
                    var hrefAttr = element.getAttribute("href");
                    selector = hrefAttr && "#" !== hrefAttr ? hrefAttr.trim() : "";
                }
                try {
                    return document.querySelector(selector) ? selector : null;
                } catch (err) {
                    return null;
                }
            },
            getTransitionDurationFromElement: function (element) {
                if (!element) return 0;
                var transitionDuration = $(element).css("transition-duration"),
                    transitionDelay = $(element).css("transition-delay"),
                    floatTransitionDuration = parseFloat(transitionDuration),
                    floatTransitionDelay = parseFloat(transitionDelay);
                return floatTransitionDuration || floatTransitionDelay
                    ? ((transitionDuration = transitionDuration.split(",")[0]), (transitionDelay = transitionDelay.split(",")[0]), 1e3 * (parseFloat(transitionDuration) + parseFloat(transitionDelay)))
                    : 0;
            },
            reflow: function (element) {
                return element.offsetHeight;
            },
            triggerTransitionEnd: function (element) {
                $(element).trigger(TRANSITION_END);
            },
            supportsTransitionEnd: function () {
                return Boolean(TRANSITION_END);
            },
            isElement: function (obj) {
                return (obj[0] || obj).nodeType;
            },
            typeCheckConfig: function (componentName, config, configTypes) {
                for (var property in configTypes)
                    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
                        var expectedTypes = configTypes[property],
                            value = config[property],
                            valueType =
                                value && Util.isElement(value)
                                    ? "element"
                                    : ((obj = value),
                                      {}.toString
                                          .call(obj)
                                          .match(/\s([a-z]+)/i)[1]
                                          .toLowerCase());
                        if (!new RegExp(expectedTypes).test(valueType)) throw new Error(componentName.toUpperCase() + ': Option "' + property + '" provided type "' + valueType + '" but expected type "' + expectedTypes + '".');
                    }
                var obj;
            },
            findShadowRoot: function (element) {
                if (!document.documentElement.attachShadow) return null;
                if ("function" == typeof element.getRootNode) {
                    var root = element.getRootNode();
                    return root instanceof ShadowRoot ? root : null;
                }
                return element instanceof ShadowRoot ? element : element.parentNode ? Util.findShadowRoot(element.parentNode) : null;
            },
            jQueryDetection: function () {
                if (void 0 === $) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
                var version = $.fn.jquery.split(" ")[0].split(".");
                if ((version[0] < 2 && version[1] < 9) || (1 === version[0] && 9 === version[1] && version[2] < 1) || version[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
            },
        };
        Util.jQueryDetection(),
            ($.fn.emulateTransitionEnd = transitionEndEmulator),
            ($.event.special[Util.TRANSITION_END] = {
                bindType: TRANSITION_END,
                delegateType: TRANSITION_END,
                handle: function (event) {
                    if ($(event.target).is(this)) return event.handleObj.handler.apply(this, arguments);
                },
            });
        var JQUERY_NO_CONFLICT = $.fn.alert,
            Event = { CLOSE: "close.bs.alert", CLOSED: "closed.bs.alert", CLICK_DATA_API: "click.bs.alert.data-api" },
            ClassName_ALERT = "alert",
            ClassName_FADE = "fade",
            ClassName_SHOW = "show",
            Alert = (function () {
                function Alert(element) {
                    this._element = element;
                }
                var _proto = Alert.prototype;
                return (
                    (_proto.close = function (element) {
                        var rootElement = this._element;
                        element && (rootElement = this._getRootElement(element)), this._triggerCloseEvent(rootElement).isDefaultPrevented() || this._removeElement(rootElement);
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.alert"), (this._element = null);
                    }),
                    (_proto._getRootElement = function (element) {
                        var selector = Util.getSelectorFromElement(element),
                            parent = !1;
                        return selector && (parent = document.querySelector(selector)), parent || (parent = $(element).closest("." + ClassName_ALERT)[0]), parent;
                    }),
                    (_proto._triggerCloseEvent = function (element) {
                        var closeEvent = $.Event(Event.CLOSE);
                        return $(element).trigger(closeEvent), closeEvent;
                    }),
                    (_proto._removeElement = function (element) {
                        var _this = this;
                        if (($(element).removeClass(ClassName_SHOW), $(element).hasClass(ClassName_FADE))) {
                            var transitionDuration = Util.getTransitionDurationFromElement(element);
                            $(element)
                                .one(Util.TRANSITION_END, function (event) {
                                    return _this._destroyElement(element, event);
                                })
                                .emulateTransitionEnd(transitionDuration);
                        } else this._destroyElement(element);
                    }),
                    (_proto._destroyElement = function (element) {
                        $(element).detach().trigger(Event.CLOSED).remove();
                    }),
                    (Alert._jQueryInterface = function (config) {
                        return this.each(function () {
                            var $element = $(this),
                                data = $element.data("bs.alert");
                            data || ((data = new Alert(this)), $element.data("bs.alert", data)), "close" === config && data[config](this);
                        });
                    }),
                    (Alert._handleDismiss = function (alertInstance) {
                        return function (event) {
                            event && event.preventDefault(), alertInstance.close(this);
                        };
                    }),
                    _createClass(Alert, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                    ]),
                    Alert
                );
            })();
        $(document).on(Event.CLICK_DATA_API, '[data-dismiss="alert"]', Alert._handleDismiss(new Alert())),
            ($.fn.alert = Alert._jQueryInterface),
            ($.fn.alert.Constructor = Alert),
            ($.fn.alert.noConflict = function () {
                return ($.fn.alert = JQUERY_NO_CONFLICT), Alert._jQueryInterface;
            });
        var JQUERY_NO_CONFLICT$1 = $.fn.button,
            ClassName$__ACTIVE = "active",
            ClassName$__BUTTON = "btn",
            ClassName$__FOCUS = "focus",
            Selector$__DATA_TOGGLE_CARROT = '[data-toggle^="button"]',
            Selector$__DATA_TOGGLES = '[data-toggle="buttons"]',
            Selector$__DATA_TOGGLE = '[data-toggle="button"]',
            Selector$__DATA_TOGGLES_BUTTONS = '[data-toggle="buttons"] .btn',
            Selector$__INPUT = 'input:not([type="hidden"])',
            Selector$__ACTIVE = ".active",
            Selector$__BUTTON = ".btn",
            Event$1 = { CLICK_DATA_API: "click.bs.button.data-api", FOCUS_BLUR_DATA_API: "focus.bs.button.data-api blur.bs.button.data-api", LOAD_DATA_API: "load.bs.button.data-api" },
            Button = (function () {
                function Button(element) {
                    this._element = element;
                }
                var _proto = Button.prototype;
                return (
                    (_proto.toggle = function () {
                        var triggerChangeEvent = !0,
                            addAriaPressed = !0,
                            rootElement = $(this._element).closest(Selector$__DATA_TOGGLES)[0];
                        if (rootElement) {
                            var input = this._element.querySelector(Selector$__INPUT);
                            if (input) {
                                if ("radio" === input.type)
                                    if (input.checked && this._element.classList.contains(ClassName$__ACTIVE)) triggerChangeEvent = !1;
                                    else {
                                        var activeElement = rootElement.querySelector(Selector$__ACTIVE);
                                        activeElement && $(activeElement).removeClass(ClassName$__ACTIVE);
                                    }
                                else "checkbox" === input.type ? "LABEL" === this._element.tagName && input.checked === this._element.classList.contains(ClassName$__ACTIVE) && (triggerChangeEvent = !1) : (triggerChangeEvent = !1);
                                triggerChangeEvent && ((input.checked = !this._element.classList.contains(ClassName$__ACTIVE)), $(input).trigger("change")), input.focus(), (addAriaPressed = !1);
                            }
                        }
                        this._element.hasAttribute("disabled") ||
                            this._element.classList.contains("disabled") ||
                            (addAriaPressed && this._element.setAttribute("aria-pressed", !this._element.classList.contains(ClassName$__ACTIVE)), triggerChangeEvent && $(this._element).toggleClass(ClassName$__ACTIVE));
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.button"), (this._element = null);
                    }),
                    (Button._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.button");
                            data || ((data = new Button(this)), $(this).data("bs.button", data)), "toggle" === config && data[config]();
                        });
                    }),
                    _createClass(Button, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                    ]),
                    Button
                );
            })();
        $(document)
            .on(Event$1.CLICK_DATA_API, Selector$__DATA_TOGGLE_CARROT, function (event) {
                var button = event.target;
                if (($(button).hasClass(ClassName$__BUTTON) || (button = $(button).closest(Selector$__BUTTON)[0]), !button || button.hasAttribute("disabled") || button.classList.contains("disabled"))) event.preventDefault();
                else {
                    var inputBtn = button.querySelector(Selector$__INPUT);
                    if (inputBtn && (inputBtn.hasAttribute("disabled") || inputBtn.classList.contains("disabled"))) return void event.preventDefault();
                    Button._jQueryInterface.call($(button), "toggle");
                }
            })
            .on(Event$1.FOCUS_BLUR_DATA_API, Selector$__DATA_TOGGLE_CARROT, function (event) {
                var button = $(event.target).closest(Selector$__BUTTON)[0];
                $(button).toggleClass(ClassName$__FOCUS, /^focus(in)?$/.test(event.type));
            }),
            $(window).on(Event$1.LOAD_DATA_API, function () {
                for (var buttons = [].slice.call(document.querySelectorAll(Selector$__DATA_TOGGLES_BUTTONS)), i = 0, len = buttons.length; i < len; i++) {
                    var button = buttons[i],
                        input = button.querySelector(Selector$__INPUT);
                    input.checked || input.hasAttribute("checked") ? button.classList.add(ClassName$__ACTIVE) : button.classList.remove(ClassName$__ACTIVE);
                }
                for (var _i = 0, _len = (buttons = [].slice.call(document.querySelectorAll(Selector$__DATA_TOGGLE))).length; _i < _len; _i++) {
                    var _button = buttons[_i];
                    "true" === _button.getAttribute("aria-pressed") ? _button.classList.add(ClassName$__ACTIVE) : _button.classList.remove(ClassName$__ACTIVE);
                }
            }),
            ($.fn.button = Button._jQueryInterface),
            ($.fn.button.Constructor = Button),
            ($.fn.button.noConflict = function () {
                return ($.fn.button = JQUERY_NO_CONFLICT$1), Button._jQueryInterface;
            });
        var NAME$2 = "carousel",
            EVENT_KEY$2 = ".bs.carousel",
            JQUERY_NO_CONFLICT$2 = $.fn[NAME$2],
            Default = { interval: 5e3, keyboard: !0, slide: !1, pause: "hover", wrap: !0, touch: !0 },
            DefaultType = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" },
            Direction_NEXT = "next",
            Direction_PREV = "prev",
            Direction_LEFT = "left",
            Direction_RIGHT = "right",
            Event$2 = {
                SLIDE: "slide.bs.carousel",
                SLID: "slid.bs.carousel",
                KEYDOWN: "keydown.bs.carousel",
                MOUSEENTER: "mouseenter.bs.carousel",
                MOUSELEAVE: "mouseleave.bs.carousel",
                TOUCHSTART: "touchstart.bs.carousel",
                TOUCHMOVE: "touchmove.bs.carousel",
                TOUCHEND: "touchend.bs.carousel",
                POINTERDOWN: "pointerdown.bs.carousel",
                POINTERUP: "pointerup.bs.carousel",
                DRAG_START: "dragstart.bs.carousel",
                LOAD_DATA_API: "load.bs.carousel.data-api",
                CLICK_DATA_API: "click.bs.carousel.data-api",
            },
            ClassName$__CAROUSEL = "carousel",
            ClassName$__ACTIVE$0 = "active",
            ClassName$__SLIDE = "slide",
            ClassName$__RIGHT = "carousel-item-right",
            ClassName$__LEFT = "carousel-item-left",
            ClassName$__NEXT = "carousel-item-next",
            ClassName$__PREV = "carousel-item-prev",
            ClassName$__POINTER_EVENT = "pointer-event",
            Selector$2 = {
                ACTIVE: ".active",
                ACTIVE_ITEM: ".active.carousel-item",
                ITEM: ".carousel-item",
                ITEM_IMG: ".carousel-item img",
                NEXT_PREV: ".carousel-item-next, .carousel-item-prev",
                INDICATORS: ".carousel-indicators",
                DATA_SLIDE: "[data-slide], [data-slide-to]",
                DATA_RIDE: '[data-ride="carousel"]',
            },
            PointerType = { TOUCH: "touch", PEN: "pen" },
            Carousel = (function () {
                function Carousel(element, config) {
                    (this._items = null),
                        (this._interval = null),
                        (this._activeElement = null),
                        (this._isPaused = !1),
                        (this._isSliding = !1),
                        (this.touchTimeout = null),
                        (this.touchStartX = 0),
                        (this.touchDeltaX = 0),
                        (this._config = this._getConfig(config)),
                        (this._element = element),
                        (this._indicatorsElement = this._element.querySelector(Selector$2.INDICATORS)),
                        (this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0),
                        (this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent)),
                        this._addEventListeners();
                }
                var _proto = Carousel.prototype;
                return (
                    (_proto.next = function () {
                        this._isSliding || this._slide(Direction_NEXT);
                    }),
                    (_proto.nextWhenVisible = function () {
                        !document.hidden && $(this._element).is(":visible") && "hidden" !== $(this._element).css("visibility") && this.next();
                    }),
                    (_proto.prev = function () {
                        this._isSliding || this._slide(Direction_PREV);
                    }),
                    (_proto.pause = function (event) {
                        event || (this._isPaused = !0), this._element.querySelector(Selector$2.NEXT_PREV) && (Util.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), (this._interval = null);
                    }),
                    (_proto.cycle = function (event) {
                        event || (this._isPaused = !1),
                            this._interval && (clearInterval(this._interval), (this._interval = null)),
                            this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
                    }),
                    (_proto.to = function (index) {
                        var _this = this;
                        this._activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM);
                        var activeIndex = this._getItemIndex(this._activeElement);
                        if (!(index > this._items.length - 1 || index < 0))
                            if (this._isSliding)
                                $(this._element).one(Event$2.SLID, function () {
                                    return _this.to(index);
                                });
                            else {
                                if (activeIndex === index) return this.pause(), void this.cycle();
                                var direction = index > activeIndex ? Direction_NEXT : Direction_PREV;
                                this._slide(direction, this._items[index]);
                            }
                    }),
                    (_proto.dispose = function () {
                        $(this._element).off(EVENT_KEY$2),
                            $.removeData(this._element, "bs.carousel"),
                            (this._items = null),
                            (this._config = null),
                            (this._element = null),
                            (this._interval = null),
                            (this._isPaused = null),
                            (this._isSliding = null),
                            (this._activeElement = null),
                            (this._indicatorsElement = null);
                    }),
                    (_proto._getConfig = function (config) {
                        return (config = _objectSpread2({}, Default, {}, config)), Util.typeCheckConfig(NAME$2, config, DefaultType), config;
                    }),
                    (_proto._handleSwipe = function () {
                        var absDeltax = Math.abs(this.touchDeltaX);
                        if (!(absDeltax <= 40)) {
                            var direction = absDeltax / this.touchDeltaX;
                            (this.touchDeltaX = 0), direction > 0 && this.prev(), direction < 0 && this.next();
                        }
                    }),
                    (_proto._addEventListeners = function () {
                        var _this2 = this;
                        this._config.keyboard &&
                            $(this._element).on(Event$2.KEYDOWN, function (event) {
                                return _this2._keydown(event);
                            }),
                            "hover" === this._config.pause &&
                                $(this._element)
                                    .on(Event$2.MOUSEENTER, function (event) {
                                        return _this2.pause(event);
                                    })
                                    .on(Event$2.MOUSELEAVE, function (event) {
                                        return _this2.cycle(event);
                                    }),
                            this._config.touch && this._addTouchEventListeners();
                    }),
                    (_proto._addTouchEventListeners = function () {
                        var _this3 = this;
                        if (this._touchSupported) {
                            var start = function (event) {
                                    _this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]
                                        ? (_this3.touchStartX = event.originalEvent.clientX)
                                        : _this3._pointerEvent || (_this3.touchStartX = event.originalEvent.touches[0].clientX);
                                },
                                end = function (event) {
                                    _this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()] && (_this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX),
                                        _this3._handleSwipe(),
                                        "hover" === _this3._config.pause &&
                                            (_this3.pause(),
                                            _this3.touchTimeout && clearTimeout(_this3.touchTimeout),
                                            (_this3.touchTimeout = setTimeout(function (event) {
                                                return _this3.cycle(event);
                                            }, 500 + _this3._config.interval)));
                                };
                            $(this._element.querySelectorAll(Selector$2.ITEM_IMG)).on(Event$2.DRAG_START, function (e) {
                                return e.preventDefault();
                            }),
                                this._pointerEvent
                                    ? ($(this._element).on(Event$2.POINTERDOWN, function (event) {
                                          return start(event);
                                      }),
                                      $(this._element).on(Event$2.POINTERUP, function (event) {
                                          return end(event);
                                      }),
                                      this._element.classList.add(ClassName$__POINTER_EVENT))
                                    : ($(this._element).on(Event$2.TOUCHSTART, function (event) {
                                          return start(event);
                                      }),
                                      $(this._element).on(Event$2.TOUCHMOVE, function (event) {
                                          return (function (event) {
                                              event.originalEvent.touches && event.originalEvent.touches.length > 1 ? (_this3.touchDeltaX = 0) : (_this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX);
                                          })(event);
                                      }),
                                      $(this._element).on(Event$2.TOUCHEND, function (event) {
                                          return end(event);
                                      }));
                        }
                    }),
                    (_proto._keydown = function (event) {
                        if (!/input|textarea/i.test(event.target.tagName))
                            switch (event.which) {
                                case 37:
                                    event.preventDefault(), this.prev();
                                    break;
                                case 39:
                                    event.preventDefault(), this.next();
                            }
                    }),
                    (_proto._getItemIndex = function (element) {
                        return (this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector$2.ITEM)) : []), this._items.indexOf(element);
                    }),
                    (_proto._getItemByDirection = function (direction, activeElement) {
                        var isNextDirection = direction === Direction_NEXT,
                            isPrevDirection = direction === Direction_PREV,
                            activeIndex = this._getItemIndex(activeElement),
                            lastItemIndex = this._items.length - 1;
                        if (((isPrevDirection && 0 === activeIndex) || (isNextDirection && activeIndex === lastItemIndex)) && !this._config.wrap) return activeElement;
                        var itemIndex = (activeIndex + (direction === Direction_PREV ? -1 : 1)) % this._items.length;
                        return -1 === itemIndex ? this._items[this._items.length - 1] : this._items[itemIndex];
                    }),
                    (_proto._triggerSlideEvent = function (relatedTarget, eventDirectionName) {
                        var targetIndex = this._getItemIndex(relatedTarget),
                            fromIndex = this._getItemIndex(this._element.querySelector(Selector$2.ACTIVE_ITEM)),
                            slideEvent = $.Event(Event$2.SLIDE, { relatedTarget: relatedTarget, direction: eventDirectionName, from: fromIndex, to: targetIndex });
                        return $(this._element).trigger(slideEvent), slideEvent;
                    }),
                    (_proto._setActiveIndicatorElement = function (element) {
                        if (this._indicatorsElement) {
                            var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector$2.ACTIVE));
                            $(indicators).removeClass(ClassName$__ACTIVE$0);
                            var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];
                            nextIndicator && $(nextIndicator).addClass(ClassName$__ACTIVE$0);
                        }
                    }),
                    (_proto._slide = function (direction, element) {
                        var directionalClassName,
                            orderClassName,
                            eventDirectionName,
                            _this4 = this,
                            activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM),
                            activeElementIndex = this._getItemIndex(activeElement),
                            nextElement = element || (activeElement && this._getItemByDirection(direction, activeElement)),
                            nextElementIndex = this._getItemIndex(nextElement),
                            isCycling = Boolean(this._interval);
                        if (
                            (direction === Direction_NEXT
                                ? ((directionalClassName = ClassName$__LEFT), (orderClassName = ClassName$__NEXT), (eventDirectionName = Direction_LEFT))
                                : ((directionalClassName = ClassName$__RIGHT), (orderClassName = ClassName$__PREV), (eventDirectionName = Direction_RIGHT)),
                            nextElement && $(nextElement).hasClass(ClassName$__ACTIVE$0))
                        )
                            this._isSliding = !1;
                        else if (!this._triggerSlideEvent(nextElement, eventDirectionName).isDefaultPrevented() && activeElement && nextElement) {
                            (this._isSliding = !0), isCycling && this.pause(), this._setActiveIndicatorElement(nextElement);
                            var slidEvent = $.Event(Event$2.SLID, { relatedTarget: nextElement, direction: eventDirectionName, from: activeElementIndex, to: nextElementIndex });
                            if ($(this._element).hasClass(ClassName$__SLIDE)) {
                                $(nextElement).addClass(orderClassName), Util.reflow(nextElement), $(activeElement).addClass(directionalClassName), $(nextElement).addClass(directionalClassName);
                                var nextElementInterval = parseInt(nextElement.getAttribute("data-interval"), 10);
                                nextElementInterval
                                    ? ((this._config.defaultInterval = this._config.defaultInterval || this._config.interval), (this._config.interval = nextElementInterval))
                                    : (this._config.interval = this._config.defaultInterval || this._config.interval);
                                var transitionDuration = Util.getTransitionDurationFromElement(activeElement);
                                $(activeElement)
                                    .one(Util.TRANSITION_END, function () {
                                        $(nextElement)
                                            .removeClass(directionalClassName + " " + orderClassName)
                                            .addClass(ClassName$__ACTIVE$0),
                                            $(activeElement).removeClass(ClassName$__ACTIVE$0 + " " + orderClassName + " " + directionalClassName),
                                            (_this4._isSliding = !1),
                                            setTimeout(function () {
                                                return $(_this4._element).trigger(slidEvent);
                                            }, 0);
                                    })
                                    .emulateTransitionEnd(transitionDuration);
                            } else $(activeElement).removeClass(ClassName$__ACTIVE$0), $(nextElement).addClass(ClassName$__ACTIVE$0), (this._isSliding = !1), $(this._element).trigger(slidEvent);
                            isCycling && this.cycle();
                        }
                    }),
                    (Carousel._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.carousel"),
                                _config = _objectSpread2({}, Default, {}, $(this).data());
                            "object" == typeof config && (_config = _objectSpread2({}, _config, {}, config));
                            var action = "string" == typeof config ? config : _config.slide;
                            if ((data || ((data = new Carousel(this, _config)), $(this).data("bs.carousel", data)), "number" == typeof config)) data.to(config);
                            else if ("string" == typeof action) {
                                if (void 0 === data[action]) throw new TypeError('No method named "' + action + '"');
                                data[action]();
                            } else _config.interval && _config.ride && (data.pause(), data.cycle());
                        });
                    }),
                    (Carousel._dataApiClickHandler = function (event) {
                        var selector = Util.getSelectorFromElement(this);
                        if (selector) {
                            var target = $(selector)[0];
                            if (target && $(target).hasClass(ClassName$__CAROUSEL)) {
                                var config = _objectSpread2({}, $(target).data(), {}, $(this).data()),
                                    slideIndex = this.getAttribute("data-slide-to");
                                slideIndex && (config.interval = !1), Carousel._jQueryInterface.call($(target), config), slideIndex && $(target).data("bs.carousel").to(slideIndex), event.preventDefault();
                            }
                        }
                    }),
                    _createClass(Carousel, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default;
                            },
                        },
                    ]),
                    Carousel
                );
            })();
        $(document).on(Event$2.CLICK_DATA_API, Selector$2.DATA_SLIDE, Carousel._dataApiClickHandler),
            $(window).on(Event$2.LOAD_DATA_API, function () {
                for (var carousels = [].slice.call(document.querySelectorAll(Selector$2.DATA_RIDE)), i = 0, len = carousels.length; i < len; i++) {
                    var $carousel = $(carousels[i]);
                    Carousel._jQueryInterface.call($carousel, $carousel.data());
                }
            }),
            ($.fn[NAME$2] = Carousel._jQueryInterface),
            ($.fn[NAME$2].Constructor = Carousel),
            ($.fn[NAME$2].noConflict = function () {
                return ($.fn[NAME$2] = JQUERY_NO_CONFLICT$2), Carousel._jQueryInterface;
            });
        var NAME$3 = "collapse",
            JQUERY_NO_CONFLICT$3 = $.fn[NAME$3],
            Default$1 = { toggle: !0, parent: "" },
            DefaultType$1 = { toggle: "boolean", parent: "(string|element)" },
            Event$3 = { SHOW: "show.bs.collapse", SHOWN: "shown.bs.collapse", HIDE: "hide.bs.collapse", HIDDEN: "hidden.bs.collapse", CLICK_DATA_API: "click.bs.collapse.data-api" },
            ClassName$__SHOW = "show",
            ClassName$__COLLAPSE = "collapse",
            ClassName$__COLLAPSING = "collapsing",
            ClassName$__COLLAPSED = "collapsed",
            Dimension_WIDTH = "width",
            Dimension_HEIGHT = "height",
            Selector$3 = { ACTIVES: ".show, .collapsing", DATA_TOGGLE: '[data-toggle="collapse"]' },
            Collapse = (function () {
                function Collapse(element, config) {
                    (this._isTransitioning = !1),
                        (this._element = element),
                        (this._config = this._getConfig(config)),
                        (this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + element.id + '"],[data-toggle="collapse"][data-target="#' + element.id + '"]')));
                    for (var toggleList = [].slice.call(document.querySelectorAll(Selector$3.DATA_TOGGLE)), i = 0, len = toggleList.length; i < len; i++) {
                        var elem = toggleList[i],
                            selector = Util.getSelectorFromElement(elem),
                            filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {
                                return foundElem === element;
                            });
                        null !== selector && filterElement.length > 0 && ((this._selector = selector), this._triggerArray.push(elem));
                    }
                    (this._parent = this._config.parent ? this._getParent() : null), this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
                }
                var _proto = Collapse.prototype;
                return (
                    (_proto.toggle = function () {
                        $(this._element).hasClass(ClassName$__SHOW) ? this.hide() : this.show();
                    }),
                    (_proto.show = function () {
                        var actives,
                            activesData,
                            _this = this;
                        if (
                            !this._isTransitioning &&
                            !$(this._element).hasClass(ClassName$__SHOW) &&
                            (this._parent &&
                                0 ===
                                    (actives = [].slice.call(this._parent.querySelectorAll(Selector$3.ACTIVES)).filter(function (elem) {
                                        return "string" == typeof _this._config.parent ? elem.getAttribute("data-parent") === _this._config.parent : elem.classList.contains(ClassName$__COLLAPSE);
                                    })).length &&
                                (actives = null),
                            !(actives && (activesData = $(actives).not(this._selector).data("bs.collapse")) && activesData._isTransitioning))
                        ) {
                            var startEvent = $.Event(Event$3.SHOW);
                            if (($(this._element).trigger(startEvent), !startEvent.isDefaultPrevented())) {
                                actives && (Collapse._jQueryInterface.call($(actives).not(this._selector), "hide"), activesData || $(actives).data("bs.collapse", null));
                                var dimension = this._getDimension();
                                $(this._element).removeClass(ClassName$__COLLAPSE).addClass(ClassName$__COLLAPSING),
                                    (this._element.style[dimension] = 0),
                                    this._triggerArray.length && $(this._triggerArray).removeClass(ClassName$__COLLAPSED).attr("aria-expanded", !0),
                                    this.setTransitioning(!0);
                                var scrollSize = "scroll" + (dimension[0].toUpperCase() + dimension.slice(1)),
                                    transitionDuration = Util.getTransitionDurationFromElement(this._element);
                                $(this._element)
                                    .one(Util.TRANSITION_END, function () {
                                        $(_this._element).removeClass(ClassName$__COLLAPSING).addClass(ClassName$__COLLAPSE).addClass(ClassName$__SHOW),
                                            (_this._element.style[dimension] = ""),
                                            _this.setTransitioning(!1),
                                            $(_this._element).trigger(Event$3.SHOWN);
                                    })
                                    .emulateTransitionEnd(transitionDuration),
                                    (this._element.style[dimension] = this._element[scrollSize] + "px");
                            }
                        }
                    }),
                    (_proto.hide = function () {
                        var _this2 = this;
                        if (!this._isTransitioning && $(this._element).hasClass(ClassName$__SHOW)) {
                            var startEvent = $.Event(Event$3.HIDE);
                            if (($(this._element).trigger(startEvent), !startEvent.isDefaultPrevented())) {
                                var dimension = this._getDimension();
                                (this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px"),
                                    Util.reflow(this._element),
                                    $(this._element).addClass(ClassName$__COLLAPSING).removeClass(ClassName$__COLLAPSE).removeClass(ClassName$__SHOW);
                                var triggerArrayLength = this._triggerArray.length;
                                if (triggerArrayLength > 0)
                                    for (var i = 0; i < triggerArrayLength; i++) {
                                        var trigger = this._triggerArray[i],
                                            selector = Util.getSelectorFromElement(trigger);
                                        if (null !== selector) $([].slice.call(document.querySelectorAll(selector))).hasClass(ClassName$__SHOW) || $(trigger).addClass(ClassName$__COLLAPSED).attr("aria-expanded", !1);
                                    }
                                this.setTransitioning(!0);
                                this._element.style[dimension] = "";
                                var transitionDuration = Util.getTransitionDurationFromElement(this._element);
                                $(this._element)
                                    .one(Util.TRANSITION_END, function () {
                                        _this2.setTransitioning(!1), $(_this2._element).removeClass(ClassName$__COLLAPSING).addClass(ClassName$__COLLAPSE).trigger(Event$3.HIDDEN);
                                    })
                                    .emulateTransitionEnd(transitionDuration);
                            }
                        }
                    }),
                    (_proto.setTransitioning = function (isTransitioning) {
                        this._isTransitioning = isTransitioning;
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.collapse"), (this._config = null), (this._parent = null), (this._element = null), (this._triggerArray = null), (this._isTransitioning = null);
                    }),
                    (_proto._getConfig = function (config) {
                        return ((config = _objectSpread2({}, Default$1, {}, config)).toggle = Boolean(config.toggle)), Util.typeCheckConfig(NAME$3, config, DefaultType$1), config;
                    }),
                    (_proto._getDimension = function () {
                        return $(this._element).hasClass(Dimension_WIDTH) ? Dimension_WIDTH : Dimension_HEIGHT;
                    }),
                    (_proto._getParent = function () {
                        var parent,
                            _this3 = this;
                        Util.isElement(this._config.parent) ? ((parent = this._config.parent), void 0 !== this._config.parent.jquery && (parent = this._config.parent[0])) : (parent = document.querySelector(this._config.parent));
                        var selector = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]',
                            children = [].slice.call(parent.querySelectorAll(selector));
                        return (
                            $(children).each(function (i, element) {
                                _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
                            }),
                            parent
                        );
                    }),
                    (_proto._addAriaAndCollapsedClass = function (element, triggerArray) {
                        var isOpen = $(element).hasClass(ClassName$__SHOW);
                        triggerArray.length && $(triggerArray).toggleClass(ClassName$__COLLAPSED, !isOpen).attr("aria-expanded", isOpen);
                    }),
                    (Collapse._getTargetFromElement = function (element) {
                        var selector = Util.getSelectorFromElement(element);
                        return selector ? document.querySelector(selector) : null;
                    }),
                    (Collapse._jQueryInterface = function (config) {
                        return this.each(function () {
                            var $this = $(this),
                                data = $this.data("bs.collapse"),
                                _config = _objectSpread2({}, Default$1, {}, $this.data(), {}, "object" == typeof config && config ? config : {});
                            if ((!data && _config.toggle && /show|hide/.test(config) && (_config.toggle = !1), data || ((data = new Collapse(this, _config)), $this.data("bs.collapse", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    _createClass(Collapse, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$1;
                            },
                        },
                    ]),
                    Collapse
                );
            })();
        $(document).on(Event$3.CLICK_DATA_API, Selector$3.DATA_TOGGLE, function (event) {
            "A" === event.currentTarget.tagName && event.preventDefault();
            var $trigger = $(this),
                selector = Util.getSelectorFromElement(this),
                selectors = [].slice.call(document.querySelectorAll(selector));
            $(selectors).each(function () {
                var $target = $(this),
                    config = $target.data("bs.collapse") ? "toggle" : $trigger.data();
                Collapse._jQueryInterface.call($target, config);
            });
        }),
            ($.fn[NAME$3] = Collapse._jQueryInterface),
            ($.fn[NAME$3].Constructor = Collapse),
            ($.fn[NAME$3].noConflict = function () {
                return ($.fn[NAME$3] = JQUERY_NO_CONFLICT$3), Collapse._jQueryInterface;
            });
        var NAME$4 = "dropdown",
            JQUERY_NO_CONFLICT$4 = $.fn[NAME$4],
            REGEXP_KEYDOWN = new RegExp("38|40|27"),
            Event$4 = {
                HIDE: "hide.bs.dropdown",
                HIDDEN: "hidden.bs.dropdown",
                SHOW: "show.bs.dropdown",
                SHOWN: "shown.bs.dropdown",
                CLICK: "click.bs.dropdown",
                CLICK_DATA_API: "click.bs.dropdown.data-api",
                KEYDOWN_DATA_API: "keydown.bs.dropdown.data-api",
                KEYUP_DATA_API: "keyup.bs.dropdown.data-api",
            },
            ClassName$__DISABLED = "disabled",
            ClassName$__SHOW$0 = "show",
            ClassName$__DROPUP = "dropup",
            ClassName$__DROPRIGHT = "dropright",
            ClassName$__DROPLEFT = "dropleft",
            ClassName$__MENURIGHT = "dropdown-menu-right",
            ClassName$__POSITION_STATIC = "position-static",
            Selector$__DATA_TOGGLE$0 = '[data-toggle="dropdown"]',
            Selector$__FORM_CHILD = ".dropdown form",
            Selector$__MENU = ".dropdown-menu",
            Selector$__NAVBAR_NAV = ".navbar-nav",
            Selector$__VISIBLE_ITEMS = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
            AttachmentMap_TOP = "top-start",
            AttachmentMap_TOPEND = "top-end",
            AttachmentMap_BOTTOM = "bottom-start",
            AttachmentMap_BOTTOMEND = "bottom-end",
            AttachmentMap_RIGHT = "right-start",
            AttachmentMap_LEFT = "left-start",
            Default$2 = { offset: 0, flip: !0, boundary: "scrollParent", reference: "toggle", display: "dynamic", popperConfig: null },
            DefaultType$2 = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)", reference: "(string|element)", display: "string", popperConfig: "(null|object)" },
            Dropdown = (function () {
                function Dropdown(element, config) {
                    (this._element = element), (this._popper = null), (this._config = this._getConfig(config)), (this._menu = this._getMenuElement()), (this._inNavbar = this._detectNavbar()), this._addEventListeners();
                }
                var _proto = Dropdown.prototype;
                return (
                    (_proto.toggle = function () {
                        if (!this._element.disabled && !$(this._element).hasClass(ClassName$__DISABLED)) {
                            var isActive = $(this._menu).hasClass(ClassName$__SHOW$0);
                            Dropdown._clearMenus(), isActive || this.show(!0);
                        }
                    }),
                    (_proto.show = function (usePopper) {
                        if ((void 0 === usePopper && (usePopper = !1), !(this._element.disabled || $(this._element).hasClass(ClassName$__DISABLED) || $(this._menu).hasClass(ClassName$__SHOW$0)))) {
                            var relatedTarget = { relatedTarget: this._element },
                                showEvent = $.Event(Event$4.SHOW, relatedTarget),
                                parent = Dropdown._getParentFromElement(this._element);
                            if (($(parent).trigger(showEvent), !showEvent.isDefaultPrevented())) {
                                if (!this._inNavbar && usePopper) {
                                    if (void 0 === Popper) throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");
                                    var referenceElement = this._element;
                                    "parent" === this._config.reference
                                        ? (referenceElement = parent)
                                        : Util.isElement(this._config.reference) && ((referenceElement = this._config.reference), void 0 !== this._config.reference.jquery && (referenceElement = this._config.reference[0])),
                                        "scrollParent" !== this._config.boundary && $(parent).addClass(ClassName$__POSITION_STATIC),
                                        (this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig()));
                                }
                                "ontouchstart" in document.documentElement && 0 === $(parent).closest(Selector$__NAVBAR_NAV).length && $(document.body).children().on("mouseover", null, $.noop),
                                    this._element.focus(),
                                    this._element.setAttribute("aria-expanded", !0),
                                    $(this._menu).toggleClass(ClassName$__SHOW$0),
                                    $(parent).toggleClass(ClassName$__SHOW$0).trigger($.Event(Event$4.SHOWN, relatedTarget));
                            }
                        }
                    }),
                    (_proto.hide = function () {
                        if (!this._element.disabled && !$(this._element).hasClass(ClassName$__DISABLED) && $(this._menu).hasClass(ClassName$__SHOW$0)) {
                            var relatedTarget = { relatedTarget: this._element },
                                hideEvent = $.Event(Event$4.HIDE, relatedTarget),
                                parent = Dropdown._getParentFromElement(this._element);
                            $(parent).trigger(hideEvent),
                                hideEvent.isDefaultPrevented() ||
                                    (this._popper && this._popper.destroy(), $(this._menu).toggleClass(ClassName$__SHOW$0), $(parent).toggleClass(ClassName$__SHOW$0).trigger($.Event(Event$4.HIDDEN, relatedTarget)));
                        }
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.dropdown"), $(this._element).off(".bs.dropdown"), (this._element = null), (this._menu = null), null !== this._popper && (this._popper.destroy(), (this._popper = null));
                    }),
                    (_proto.update = function () {
                        (this._inNavbar = this._detectNavbar()), null !== this._popper && this._popper.scheduleUpdate();
                    }),
                    (_proto._addEventListeners = function () {
                        var _this = this;
                        $(this._element).on(Event$4.CLICK, function (event) {
                            event.preventDefault(), event.stopPropagation(), _this.toggle();
                        });
                    }),
                    (_proto._getConfig = function (config) {
                        return (config = _objectSpread2({}, this.constructor.Default, {}, $(this._element).data(), {}, config)), Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType), config;
                    }),
                    (_proto._getMenuElement = function () {
                        if (!this._menu) {
                            var parent = Dropdown._getParentFromElement(this._element);
                            parent && (this._menu = parent.querySelector(Selector$__MENU));
                        }
                        return this._menu;
                    }),
                    (_proto._getPlacement = function () {
                        var $parentDropdown = $(this._element.parentNode),
                            placement = AttachmentMap_BOTTOM;
                        return (
                            $parentDropdown.hasClass(ClassName$__DROPUP)
                                ? ((placement = AttachmentMap_TOP), $(this._menu).hasClass(ClassName$__MENURIGHT) && (placement = AttachmentMap_TOPEND))
                                : $parentDropdown.hasClass(ClassName$__DROPRIGHT)
                                ? (placement = AttachmentMap_RIGHT)
                                : $parentDropdown.hasClass(ClassName$__DROPLEFT)
                                ? (placement = AttachmentMap_LEFT)
                                : $(this._menu).hasClass(ClassName$__MENURIGHT) && (placement = AttachmentMap_BOTTOMEND),
                            placement
                        );
                    }),
                    (_proto._detectNavbar = function () {
                        return $(this._element).closest(".navbar").length > 0;
                    }),
                    (_proto._getOffset = function () {
                        var _this2 = this,
                            offset = {};
                        return (
                            "function" == typeof this._config.offset
                                ? (offset.fn = function (data) {
                                      return (data.offsets = _objectSpread2({}, data.offsets, {}, _this2._config.offset(data.offsets, _this2._element) || {})), data;
                                  })
                                : (offset.offset = this._config.offset),
                            offset
                        );
                    }),
                    (_proto._getPopperConfig = function () {
                        var popperConfig = { placement: this._getPlacement(), modifiers: { offset: this._getOffset(), flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } };
                        return "static" === this._config.display && (popperConfig.modifiers.applyStyle = { enabled: !1 }), _objectSpread2({}, popperConfig, {}, this._config.popperConfig);
                    }),
                    (Dropdown._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.dropdown");
                            if ((data || ((data = new Dropdown(this, "object" == typeof config ? config : null)), $(this).data("bs.dropdown", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    (Dropdown._clearMenus = function (event) {
                        if (!event || (3 !== event.which && ("keyup" !== event.type || 9 === event.which)))
                            for (var toggles = [].slice.call(document.querySelectorAll(Selector$__DATA_TOGGLE$0)), i = 0, len = toggles.length; i < len; i++) {
                                var parent = Dropdown._getParentFromElement(toggles[i]),
                                    context = $(toggles[i]).data("bs.dropdown"),
                                    relatedTarget = { relatedTarget: toggles[i] };
                                if ((event && "click" === event.type && (relatedTarget.clickEvent = event), context)) {
                                    var dropdownMenu = context._menu;
                                    if (
                                        $(parent).hasClass(ClassName$__SHOW$0) &&
                                        !(event && (("click" === event.type && /input|textarea/i.test(event.target.tagName)) || ("keyup" === event.type && 9 === event.which)) && $.contains(parent, event.target))
                                    ) {
                                        var hideEvent = $.Event(Event$4.HIDE, relatedTarget);
                                        $(parent).trigger(hideEvent),
                                            hideEvent.isDefaultPrevented() ||
                                                ("ontouchstart" in document.documentElement && $(document.body).children().off("mouseover", null, $.noop),
                                                toggles[i].setAttribute("aria-expanded", "false"),
                                                context._popper && context._popper.destroy(),
                                                $(dropdownMenu).removeClass(ClassName$__SHOW$0),
                                                $(parent).removeClass(ClassName$__SHOW$0).trigger($.Event(Event$4.HIDDEN, relatedTarget)));
                                    }
                                }
                            }
                    }),
                    (Dropdown._getParentFromElement = function (element) {
                        var parent,
                            selector = Util.getSelectorFromElement(element);
                        return selector && (parent = document.querySelector(selector)), parent || element.parentNode;
                    }),
                    (Dropdown._dataApiKeydownHandler = function (event) {
                        if (
                            (/input|textarea/i.test(event.target.tagName)
                                ? !(32 === event.which || (27 !== event.which && ((40 !== event.which && 38 !== event.which) || $(event.target).closest(Selector$__MENU).length)))
                                : REGEXP_KEYDOWN.test(event.which)) &&
                            (event.preventDefault(), event.stopPropagation(), !this.disabled && !$(this).hasClass(ClassName$__DISABLED))
                        ) {
                            var parent = Dropdown._getParentFromElement(this),
                                isActive = $(parent).hasClass(ClassName$__SHOW$0);
                            if (isActive || 27 !== event.which)
                                if (isActive && (!isActive || (27 !== event.which && 32 !== event.which))) {
                                    var items = [].slice.call(parent.querySelectorAll(Selector$__VISIBLE_ITEMS)).filter(function (item) {
                                        return $(item).is(":visible");
                                    });
                                    if (0 !== items.length) {
                                        var index = items.indexOf(event.target);
                                        38 === event.which && index > 0 && index--, 40 === event.which && index < items.length - 1 && index++, index < 0 && (index = 0), items[index].focus();
                                    }
                                } else {
                                    if (27 === event.which) {
                                        var toggle = parent.querySelector(Selector$__DATA_TOGGLE$0);
                                        $(toggle).trigger("focus");
                                    }
                                    $(this).trigger("click");
                                }
                        }
                    }),
                    _createClass(Dropdown, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$2;
                            },
                        },
                        {
                            key: "DefaultType",
                            get: function () {
                                return DefaultType$2;
                            },
                        },
                    ]),
                    Dropdown
                );
            })();
        $(document)
            .on(Event$4.KEYDOWN_DATA_API, Selector$__DATA_TOGGLE$0, Dropdown._dataApiKeydownHandler)
            .on(Event$4.KEYDOWN_DATA_API, Selector$__MENU, Dropdown._dataApiKeydownHandler)
            .on(Event$4.CLICK_DATA_API + " " + Event$4.KEYUP_DATA_API, Dropdown._clearMenus)
            .on(Event$4.CLICK_DATA_API, Selector$__DATA_TOGGLE$0, function (event) {
                event.preventDefault(), event.stopPropagation(), Dropdown._jQueryInterface.call($(this), "toggle");
            })
            .on(Event$4.CLICK_DATA_API, Selector$__FORM_CHILD, function (e) {
                e.stopPropagation();
            }),
            ($.fn[NAME$4] = Dropdown._jQueryInterface),
            ($.fn[NAME$4].Constructor = Dropdown),
            ($.fn[NAME$4].noConflict = function () {
                return ($.fn[NAME$4] = JQUERY_NO_CONFLICT$4), Dropdown._jQueryInterface;
            });
        var JQUERY_NO_CONFLICT$5 = $.fn.modal,
            Default$3 = { backdrop: !0, keyboard: !0, focus: !0, show: !0 },
            DefaultType$3 = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" },
            Event$5 = {
                HIDE: "hide.bs.modal",
                HIDE_PREVENTED: "hidePrevented.bs.modal",
                HIDDEN: "hidden.bs.modal",
                SHOW: "show.bs.modal",
                SHOWN: "shown.bs.modal",
                FOCUSIN: "focusin.bs.modal",
                RESIZE: "resize.bs.modal",
                CLICK_DISMISS: "click.dismiss.bs.modal",
                KEYDOWN_DISMISS: "keydown.dismiss.bs.modal",
                MOUSEUP_DISMISS: "mouseup.dismiss.bs.modal",
                MOUSEDOWN_DISMISS: "mousedown.dismiss.bs.modal",
                CLICK_DATA_API: "click.bs.modal.data-api",
            },
            ClassName$__SCROLLABLE = "modal-dialog-scrollable",
            ClassName$__SCROLLBAR_MEASURER = "modal-scrollbar-measure",
            ClassName$__BACKDROP = "modal-backdrop",
            ClassName$__OPEN = "modal-open",
            ClassName$__FADE = "fade",
            ClassName$__SHOW$1 = "show",
            ClassName$__STATIC = "modal-static",
            Selector$5 = {
                DIALOG: ".modal-dialog",
                MODAL_BODY: ".modal-body",
                DATA_TOGGLE: '[data-toggle="modal"]',
                DATA_DISMISS: '[data-dismiss="modal"]',
                FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
                STICKY_CONTENT: ".sticky-top",
            },
            Modal = (function () {
                function Modal(element, config) {
                    (this._config = this._getConfig(config)),
                        (this._element = element),
                        (this._dialog = element.querySelector(Selector$5.DIALOG)),
                        (this._backdrop = null),
                        (this._isShown = !1),
                        (this._isBodyOverflowing = !1),
                        (this._ignoreBackdropClick = !1),
                        (this._isTransitioning = !1),
                        (this._scrollbarWidth = 0);
                }
                var _proto = Modal.prototype;
                return (
                    (_proto.toggle = function (relatedTarget) {
                        return this._isShown ? this.hide() : this.show(relatedTarget);
                    }),
                    (_proto.show = function (relatedTarget) {
                        var _this = this;
                        if (!this._isShown && !this._isTransitioning) {
                            $(this._element).hasClass(ClassName$__FADE) && (this._isTransitioning = !0);
                            var showEvent = $.Event(Event$5.SHOW, { relatedTarget: relatedTarget });
                            $(this._element).trigger(showEvent),
                                this._isShown ||
                                    showEvent.isDefaultPrevented() ||
                                    ((this._isShown = !0),
                                    this._checkScrollbar(),
                                    this._setScrollbar(),
                                    this._adjustDialog(),
                                    this._setEscapeEvent(),
                                    this._setResizeEvent(),
                                    $(this._element).on(Event$5.CLICK_DISMISS, Selector$5.DATA_DISMISS, function (event) {
                                        return _this.hide(event);
                                    }),
                                    $(this._dialog).on(Event$5.MOUSEDOWN_DISMISS, function () {
                                        $(_this._element).one(Event$5.MOUSEUP_DISMISS, function (event) {
                                            $(event.target).is(_this._element) && (_this._ignoreBackdropClick = !0);
                                        });
                                    }),
                                    this._showBackdrop(function () {
                                        return _this._showElement(relatedTarget);
                                    }));
                        }
                    }),
                    (_proto.hide = function (event) {
                        var _this2 = this;
                        if ((event && event.preventDefault(), this._isShown && !this._isTransitioning)) {
                            var hideEvent = $.Event(Event$5.HIDE);
                            if (($(this._element).trigger(hideEvent), this._isShown && !hideEvent.isDefaultPrevented())) {
                                this._isShown = !1;
                                var transition = $(this._element).hasClass(ClassName$__FADE);
                                if (
                                    (transition && (this._isTransitioning = !0),
                                    this._setEscapeEvent(),
                                    this._setResizeEvent(),
                                    $(document).off(Event$5.FOCUSIN),
                                    $(this._element).removeClass(ClassName$__SHOW$1),
                                    $(this._element).off(Event$5.CLICK_DISMISS),
                                    $(this._dialog).off(Event$5.MOUSEDOWN_DISMISS),
                                    transition)
                                ) {
                                    var transitionDuration = Util.getTransitionDurationFromElement(this._element);
                                    $(this._element)
                                        .one(Util.TRANSITION_END, function (event) {
                                            return _this2._hideModal(event);
                                        })
                                        .emulateTransitionEnd(transitionDuration);
                                } else this._hideModal();
                            }
                        }
                    }),
                    (_proto.dispose = function () {
                        [window, this._element, this._dialog].forEach(function (htmlElement) {
                            return $(htmlElement).off(".bs.modal");
                        }),
                            $(document).off(Event$5.FOCUSIN),
                            $.removeData(this._element, "bs.modal"),
                            (this._config = null),
                            (this._element = null),
                            (this._dialog = null),
                            (this._backdrop = null),
                            (this._isShown = null),
                            (this._isBodyOverflowing = null),
                            (this._ignoreBackdropClick = null),
                            (this._isTransitioning = null),
                            (this._scrollbarWidth = null);
                    }),
                    (_proto.handleUpdate = function () {
                        this._adjustDialog();
                    }),
                    (_proto._getConfig = function (config) {
                        return (config = _objectSpread2({}, Default$3, {}, config)), Util.typeCheckConfig("modal", config, DefaultType$3), config;
                    }),
                    (_proto._triggerBackdropTransition = function () {
                        var _this3 = this;
                        if ("static" === this._config.backdrop) {
                            var hideEventPrevented = $.Event(Event$5.HIDE_PREVENTED);
                            if (($(this._element).trigger(hideEventPrevented), hideEventPrevented.defaultPrevented)) return;
                            this._element.classList.add(ClassName$__STATIC);
                            var modalTransitionDuration = Util.getTransitionDurationFromElement(this._element);
                            $(this._element)
                                .one(Util.TRANSITION_END, function () {
                                    _this3._element.classList.remove(ClassName$__STATIC);
                                })
                                .emulateTransitionEnd(modalTransitionDuration),
                                this._element.focus();
                        } else this.hide();
                    }),
                    (_proto._showElement = function (relatedTarget) {
                        var _this4 = this,
                            transition = $(this._element).hasClass(ClassName$__FADE),
                            modalBody = this._dialog ? this._dialog.querySelector(Selector$5.MODAL_BODY) : null;
                        (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE) || document.body.appendChild(this._element),
                            (this._element.style.display = "block"),
                            this._element.removeAttribute("aria-hidden"),
                            this._element.setAttribute("aria-modal", !0),
                            $(this._dialog).hasClass(ClassName$__SCROLLABLE) && modalBody ? (modalBody.scrollTop = 0) : (this._element.scrollTop = 0),
                            transition && Util.reflow(this._element),
                            $(this._element).addClass(ClassName$__SHOW$1),
                            this._config.focus && this._enforceFocus();
                        var shownEvent = $.Event(Event$5.SHOWN, { relatedTarget: relatedTarget }),
                            transitionComplete = function () {
                                _this4._config.focus && _this4._element.focus(), (_this4._isTransitioning = !1), $(_this4._element).trigger(shownEvent);
                            };
                        if (transition) {
                            var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);
                            $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
                        } else transitionComplete();
                    }),
                    (_proto._enforceFocus = function () {
                        var _this5 = this;
                        $(document)
                            .off(Event$5.FOCUSIN)
                            .on(Event$5.FOCUSIN, function (event) {
                                document !== event.target && _this5._element !== event.target && 0 === $(_this5._element).has(event.target).length && _this5._element.focus();
                            });
                    }),
                    (_proto._setEscapeEvent = function () {
                        var _this6 = this;
                        this._isShown && this._config.keyboard
                            ? $(this._element).on(Event$5.KEYDOWN_DISMISS, function (event) {
                                  27 === event.which && _this6._triggerBackdropTransition();
                              })
                            : this._isShown || $(this._element).off(Event$5.KEYDOWN_DISMISS);
                    }),
                    (_proto._setResizeEvent = function () {
                        var _this7 = this;
                        this._isShown
                            ? $(window).on(Event$5.RESIZE, function (event) {
                                  return _this7.handleUpdate(event);
                              })
                            : $(window).off(Event$5.RESIZE);
                    }),
                    (_proto._hideModal = function () {
                        var _this8 = this;
                        (this._element.style.display = "none"),
                            this._element.setAttribute("aria-hidden", !0),
                            this._element.removeAttribute("aria-modal"),
                            (this._isTransitioning = !1),
                            this._showBackdrop(function () {
                                $(document.body).removeClass(ClassName$__OPEN), _this8._resetAdjustments(), _this8._resetScrollbar(), $(_this8._element).trigger(Event$5.HIDDEN);
                            });
                    }),
                    (_proto._removeBackdrop = function () {
                        this._backdrop && ($(this._backdrop).remove(), (this._backdrop = null));
                    }),
                    (_proto._showBackdrop = function (callback) {
                        var _this9 = this,
                            animate = $(this._element).hasClass(ClassName$__FADE) ? ClassName$__FADE : "";
                        if (this._isShown && this._config.backdrop) {
                            if (
                                ((this._backdrop = document.createElement("div")),
                                (this._backdrop.className = ClassName$__BACKDROP),
                                animate && this._backdrop.classList.add(animate),
                                $(this._backdrop).appendTo(document.body),
                                $(this._element).on(Event$5.CLICK_DISMISS, function (event) {
                                    _this9._ignoreBackdropClick ? (_this9._ignoreBackdropClick = !1) : event.target === event.currentTarget && _this9._triggerBackdropTransition();
                                }),
                                animate && Util.reflow(this._backdrop),
                                $(this._backdrop).addClass(ClassName$__SHOW$1),
                                !callback)
                            )
                                return;
                            if (!animate) return void callback();
                            var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
                            $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
                        } else if (!this._isShown && this._backdrop) {
                            $(this._backdrop).removeClass(ClassName$__SHOW$1);
                            var callbackRemove = function () {
                                _this9._removeBackdrop(), callback && callback();
                            };
                            if ($(this._element).hasClass(ClassName$__FADE)) {
                                var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
                                $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
                            } else callbackRemove();
                        } else callback && callback();
                    }),
                    (_proto._adjustDialog = function () {
                        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
                        !this._isBodyOverflowing && isModalOverflowing && (this._element.style.paddingLeft = this._scrollbarWidth + "px"),
                            this._isBodyOverflowing && !isModalOverflowing && (this._element.style.paddingRight = this._scrollbarWidth + "px");
                    }),
                    (_proto._resetAdjustments = function () {
                        (this._element.style.paddingLeft = ""), (this._element.style.paddingRight = "");
                    }),
                    (_proto._checkScrollbar = function () {
                        var rect = document.body.getBoundingClientRect();
                        (this._isBodyOverflowing = rect.left + rect.right < window.innerWidth), (this._scrollbarWidth = this._getScrollbarWidth());
                    }),
                    (_proto._setScrollbar = function () {
                        var _this10 = this;
                        if (this._isBodyOverflowing) {
                            var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT)),
                                stickyContent = [].slice.call(document.querySelectorAll(Selector$5.STICKY_CONTENT));
                            $(fixedContent).each(function (index, element) {
                                var actualPadding = element.style.paddingRight,
                                    calculatedPadding = $(element).css("padding-right");
                                $(element)
                                    .data("padding-right", actualPadding)
                                    .css("padding-right", parseFloat(calculatedPadding) + _this10._scrollbarWidth + "px");
                            }),
                                $(stickyContent).each(function (index, element) {
                                    var actualMargin = element.style.marginRight,
                                        calculatedMargin = $(element).css("margin-right");
                                    $(element)
                                        .data("margin-right", actualMargin)
                                        .css("margin-right", parseFloat(calculatedMargin) - _this10._scrollbarWidth + "px");
                                });
                            var actualPadding = document.body.style.paddingRight,
                                calculatedPadding = $(document.body).css("padding-right");
                            $(document.body)
                                .data("padding-right", actualPadding)
                                .css("padding-right", parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
                        }
                        $(document.body).addClass(ClassName$__OPEN);
                    }),
                    (_proto._resetScrollbar = function () {
                        var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT));
                        $(fixedContent).each(function (index, element) {
                            var padding = $(element).data("padding-right");
                            $(element).removeData("padding-right"), (element.style.paddingRight = padding || "");
                        });
                        var elements = [].slice.call(document.querySelectorAll("" + Selector$5.STICKY_CONTENT));
                        $(elements).each(function (index, element) {
                            var margin = $(element).data("margin-right");
                            void 0 !== margin && $(element).css("margin-right", margin).removeData("margin-right");
                        });
                        var padding = $(document.body).data("padding-right");
                        $(document.body).removeData("padding-right"), (document.body.style.paddingRight = padding || "");
                    }),
                    (_proto._getScrollbarWidth = function () {
                        var scrollDiv = document.createElement("div");
                        (scrollDiv.className = ClassName$__SCROLLBAR_MEASURER), document.body.appendChild(scrollDiv);
                        var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
                        return document.body.removeChild(scrollDiv), scrollbarWidth;
                    }),
                    (Modal._jQueryInterface = function (config, relatedTarget) {
                        return this.each(function () {
                            var data = $(this).data("bs.modal"),
                                _config = _objectSpread2({}, Default$3, {}, $(this).data(), {}, "object" == typeof config && config ? config : {});
                            if ((data || ((data = new Modal(this, _config)), $(this).data("bs.modal", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config](relatedTarget);
                            } else _config.show && data.show(relatedTarget);
                        });
                    }),
                    _createClass(Modal, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$3;
                            },
                        },
                    ]),
                    Modal
                );
            })();
        $(document).on(Event$5.CLICK_DATA_API, Selector$5.DATA_TOGGLE, function (event) {
            var target,
                _this11 = this,
                selector = Util.getSelectorFromElement(this);
            selector && (target = document.querySelector(selector));
            var config = $(target).data("bs.modal") ? "toggle" : _objectSpread2({}, $(target).data(), {}, $(this).data());
            ("A" !== this.tagName && "AREA" !== this.tagName) || event.preventDefault();
            var $target = $(target).one(Event$5.SHOW, function (showEvent) {
                showEvent.isDefaultPrevented() ||
                    $target.one(Event$5.HIDDEN, function () {
                        $(_this11).is(":visible") && _this11.focus();
                    });
            });
            Modal._jQueryInterface.call($(target), config, this);
        }),
            ($.fn.modal = Modal._jQueryInterface),
            ($.fn.modal.Constructor = Modal),
            ($.fn.modal.noConflict = function () {
                return ($.fn.modal = JQUERY_NO_CONFLICT$5), Modal._jQueryInterface;
            });
        var uriAttrs = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"],
            DefaultWhitelist = {
                "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
                a: ["target", "href", "title", "rel"],
                area: [],
                b: [],
                br: [],
                col: [],
                code: [],
                div: [],
                em: [],
                hr: [],
                h1: [],
                h2: [],
                h3: [],
                h4: [],
                h5: [],
                h6: [],
                i: [],
                img: ["src", "alt", "title", "width", "height"],
                li: [],
                ol: [],
                p: [],
                pre: [],
                s: [],
                small: [],
                span: [],
                sub: [],
                sup: [],
                strong: [],
                u: [],
                ul: [],
            },
            SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
            DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;
        function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
            if (0 === unsafeHtml.length) return unsafeHtml;
            if (sanitizeFn && "function" == typeof sanitizeFn) return sanitizeFn(unsafeHtml);
            for (
                var createdDocument = new window.DOMParser().parseFromString(unsafeHtml, "text/html"),
                    whitelistKeys = Object.keys(whiteList),
                    elements = [].slice.call(createdDocument.body.querySelectorAll("*")),
                    _loop = function (i, len) {
                        var el = elements[i],
                            elName = el.nodeName.toLowerCase();
                        if (-1 === whitelistKeys.indexOf(el.nodeName.toLowerCase())) return el.parentNode.removeChild(el), "continue";
                        var attributeList = [].slice.call(el.attributes),
                            whitelistedAttributes = [].concat(whiteList["*"] || [], whiteList[elName] || []);
                        attributeList.forEach(function (attr) {
                            (function (attr, allowedAttributeList) {
                                var attrName = attr.nodeName.toLowerCase();
                                if (-1 !== allowedAttributeList.indexOf(attrName)) return -1 === uriAttrs.indexOf(attrName) || Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
                                for (
                                    var regExp = allowedAttributeList.filter(function (attrRegex) {
                                            return attrRegex instanceof RegExp;
                                        }),
                                        i = 0,
                                        l = regExp.length;
                                    i < l;
                                    i++
                                )
                                    if (attrName.match(regExp[i])) return !0;
                                return !1;
                            })(attr, whitelistedAttributes) || el.removeAttribute(attr.nodeName);
                        });
                    },
                    i = 0,
                    len = elements.length;
                i < len;
                i++
            )
                _loop(i);
            return createdDocument.body.innerHTML;
        }
        var NAME$6 = "tooltip",
            JQUERY_NO_CONFLICT$6 = $.fn.tooltip,
            BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)bs-tooltip\\S+", "g"),
            DISALLOWED_ATTRIBUTES = ["sanitize", "whiteList", "sanitizeFn"],
            DefaultType$4 = {
                animation: "boolean",
                template: "string",
                title: "(string|element|function)",
                trigger: "string",
                delay: "(number|object)",
                html: "boolean",
                selector: "(string|boolean)",
                placement: "(string|function)",
                offset: "(number|string|function)",
                container: "(string|element|boolean)",
                fallbackPlacement: "(string|array)",
                boundary: "(string|element)",
                sanitize: "boolean",
                sanitizeFn: "(null|function)",
                whiteList: "object",
                popperConfig: "(null|object)",
            },
            AttachmentMap$1 = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" },
            Default$4 = {
                animation: !0,
                template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
                trigger: "hover focus",
                title: "",
                delay: 0,
                html: !1,
                selector: !1,
                placement: "top",
                offset: 0,
                container: !1,
                fallbackPlacement: "flip",
                boundary: "scrollParent",
                sanitize: !0,
                sanitizeFn: null,
                whiteList: DefaultWhitelist,
                popperConfig: null,
            },
            HoverState_SHOW = "show",
            HoverState_OUT = "out",
            Event$6 = {
                HIDE: "hide.bs.tooltip",
                HIDDEN: "hidden.bs.tooltip",
                SHOW: "show.bs.tooltip",
                SHOWN: "shown.bs.tooltip",
                INSERTED: "inserted.bs.tooltip",
                CLICK: "click.bs.tooltip",
                FOCUSIN: "focusin.bs.tooltip",
                FOCUSOUT: "focusout.bs.tooltip",
                MOUSEENTER: "mouseenter.bs.tooltip",
                MOUSELEAVE: "mouseleave.bs.tooltip",
            },
            ClassName$__FADE$0 = "fade",
            ClassName$__SHOW$2 = "show",
            Selector$__TOOLTIP_INNER = ".tooltip-inner",
            Selector$__ARROW = ".arrow",
            Trigger_HOVER = "hover",
            Trigger_FOCUS = "focus",
            Trigger_CLICK = "click",
            Trigger_MANUAL = "manual",
            Tooltip = (function () {
                function Tooltip(element, config) {
                    if (void 0 === Popper) throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");
                    (this._isEnabled = !0),
                        (this._timeout = 0),
                        (this._hoverState = ""),
                        (this._activeTrigger = {}),
                        (this._popper = null),
                        (this.element = element),
                        (this.config = this._getConfig(config)),
                        (this.tip = null),
                        this._setListeners();
                }
                var _proto = Tooltip.prototype;
                return (
                    (_proto.enable = function () {
                        this._isEnabled = !0;
                    }),
                    (_proto.disable = function () {
                        this._isEnabled = !1;
                    }),
                    (_proto.toggleEnabled = function () {
                        this._isEnabled = !this._isEnabled;
                    }),
                    (_proto.toggle = function (event) {
                        if (this._isEnabled)
                            if (event) {
                                var dataKey = this.constructor.DATA_KEY,
                                    context = $(event.currentTarget).data(dataKey);
                                context || ((context = new this.constructor(event.currentTarget, this._getDelegateConfig())), $(event.currentTarget).data(dataKey, context)),
                                    (context._activeTrigger.click = !context._activeTrigger.click),
                                    context._isWithActiveTrigger() ? context._enter(null, context) : context._leave(null, context);
                            } else {
                                if ($(this.getTipElement()).hasClass(ClassName$__SHOW$2)) return void this._leave(null, this);
                                this._enter(null, this);
                            }
                    }),
                    (_proto.dispose = function () {
                        clearTimeout(this._timeout),
                            $.removeData(this.element, this.constructor.DATA_KEY),
                            $(this.element).off(this.constructor.EVENT_KEY),
                            $(this.element).closest(".modal").off("hide.bs.modal", this._hideModalHandler),
                            this.tip && $(this.tip).remove(),
                            (this._isEnabled = null),
                            (this._timeout = null),
                            (this._hoverState = null),
                            (this._activeTrigger = null),
                            this._popper && this._popper.destroy(),
                            (this._popper = null),
                            (this.element = null),
                            (this.config = null),
                            (this.tip = null);
                    }),
                    (_proto.show = function () {
                        var _this = this;
                        if ("none" === $(this.element).css("display")) throw new Error("Please use show on visible elements");
                        var showEvent = $.Event(this.constructor.Event.SHOW);
                        if (this.isWithContent() && this._isEnabled) {
                            $(this.element).trigger(showEvent);
                            var shadowRoot = Util.findShadowRoot(this.element),
                                isInTheDom = $.contains(null !== shadowRoot ? shadowRoot : this.element.ownerDocument.documentElement, this.element);
                            if (showEvent.isDefaultPrevented() || !isInTheDom) return;
                            var tip = this.getTipElement(),
                                tipId = Util.getUID(this.constructor.NAME);
                            tip.setAttribute("id", tipId), this.element.setAttribute("aria-describedby", tipId), this.setContent(), this.config.animation && $(tip).addClass(ClassName$__FADE$0);
                            var placement = "function" == typeof this.config.placement ? this.config.placement.call(this, tip, this.element) : this.config.placement,
                                attachment = this._getAttachment(placement);
                            this.addAttachmentClass(attachment);
                            var container = this._getContainer();
                            $(tip).data(this.constructor.DATA_KEY, this),
                                $.contains(this.element.ownerDocument.documentElement, this.tip) || $(tip).appendTo(container),
                                $(this.element).trigger(this.constructor.Event.INSERTED),
                                (this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment))),
                                $(tip).addClass(ClassName$__SHOW$2),
                                "ontouchstart" in document.documentElement && $(document.body).children().on("mouseover", null, $.noop);
                            var complete = function () {
                                _this.config.animation && _this._fixTransition();
                                var prevHoverState = _this._hoverState;
                                (_this._hoverState = null), $(_this.element).trigger(_this.constructor.Event.SHOWN), prevHoverState === HoverState_OUT && _this._leave(null, _this);
                            };
                            if ($(this.tip).hasClass(ClassName$__FADE$0)) {
                                var transitionDuration = Util.getTransitionDurationFromElement(this.tip);
                                $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
                            } else complete();
                        }
                    }),
                    (_proto.hide = function (callback) {
                        var _this2 = this,
                            tip = this.getTipElement(),
                            hideEvent = $.Event(this.constructor.Event.HIDE),
                            complete = function () {
                                _this2._hoverState !== HoverState_SHOW && tip.parentNode && tip.parentNode.removeChild(tip),
                                    _this2._cleanTipClass(),
                                    _this2.element.removeAttribute("aria-describedby"),
                                    $(_this2.element).trigger(_this2.constructor.Event.HIDDEN),
                                    null !== _this2._popper && _this2._popper.destroy(),
                                    callback && callback();
                            };
                        if (($(this.element).trigger(hideEvent), !hideEvent.isDefaultPrevented())) {
                            if (
                                ($(tip).removeClass(ClassName$__SHOW$2),
                                "ontouchstart" in document.documentElement && $(document.body).children().off("mouseover", null, $.noop),
                                (this._activeTrigger[Trigger_CLICK] = !1),
                                (this._activeTrigger[Trigger_FOCUS] = !1),
                                (this._activeTrigger[Trigger_HOVER] = !1),
                                $(this.tip).hasClass(ClassName$__FADE$0))
                            ) {
                                var transitionDuration = Util.getTransitionDurationFromElement(tip);
                                $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
                            } else complete();
                            this._hoverState = "";
                        }
                    }),
                    (_proto.update = function () {
                        null !== this._popper && this._popper.scheduleUpdate();
                    }),
                    (_proto.isWithContent = function () {
                        return Boolean(this.getTitle());
                    }),
                    (_proto.addAttachmentClass = function (attachment) {
                        $(this.getTipElement()).addClass("bs-tooltip-" + attachment);
                    }),
                    (_proto.getTipElement = function () {
                        return (this.tip = this.tip || $(this.config.template)[0]), this.tip;
                    }),
                    (_proto.setContent = function () {
                        var tip = this.getTipElement();
                        this.setElementContent($(tip.querySelectorAll(Selector$__TOOLTIP_INNER)), this.getTitle()), $(tip).removeClass(ClassName$__FADE$0 + " " + ClassName$__SHOW$2);
                    }),
                    (_proto.setElementContent = function ($element, content) {
                        "object" != typeof content || (!content.nodeType && !content.jquery)
                            ? this.config.html
                                ? (this.config.sanitize && (content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn)), $element.html(content))
                                : $element.text(content)
                            : this.config.html
                            ? $(content).parent().is($element) || $element.empty().append(content)
                            : $element.text($(content).text());
                    }),
                    (_proto.getTitle = function () {
                        var title = this.element.getAttribute("data-original-title");
                        return title || (title = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), title;
                    }),
                    (_proto._getPopperConfig = function (attachment) {
                        var _this3 = this;
                        return _objectSpread2(
                            {},
                            {
                                placement: attachment,
                                modifiers: { offset: this._getOffset(), flip: { behavior: this.config.fallbackPlacement }, arrow: { element: Selector$__ARROW }, preventOverflow: { boundariesElement: this.config.boundary } },
                                onCreate: function (data) {
                                    data.originalPlacement !== data.placement && _this3._handlePopperPlacementChange(data);
                                },
                                onUpdate: function (data) {
                                    return _this3._handlePopperPlacementChange(data);
                                },
                            },
                            {},
                            this.config.popperConfig
                        );
                    }),
                    (_proto._getOffset = function () {
                        var _this4 = this,
                            offset = {};
                        return (
                            "function" == typeof this.config.offset
                                ? (offset.fn = function (data) {
                                      return (data.offsets = _objectSpread2({}, data.offsets, {}, _this4.config.offset(data.offsets, _this4.element) || {})), data;
                                  })
                                : (offset.offset = this.config.offset),
                            offset
                        );
                    }),
                    (_proto._getContainer = function () {
                        return !1 === this.config.container ? document.body : Util.isElement(this.config.container) ? $(this.config.container) : $(document).find(this.config.container);
                    }),
                    (_proto._getAttachment = function (placement) {
                        return AttachmentMap$1[placement.toUpperCase()];
                    }),
                    (_proto._setListeners = function () {
                        var _this5 = this;
                        this.config.trigger.split(" ").forEach(function (trigger) {
                            if ("click" === trigger)
                                $(_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {
                                    return _this5.toggle(event);
                                });
                            else if (trigger !== Trigger_MANUAL) {
                                var eventIn = trigger === Trigger_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN,
                                    eventOut = trigger === Trigger_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;
                                $(_this5.element)
                                    .on(eventIn, _this5.config.selector, function (event) {
                                        return _this5._enter(event);
                                    })
                                    .on(eventOut, _this5.config.selector, function (event) {
                                        return _this5._leave(event);
                                    });
                            }
                        }),
                            (this._hideModalHandler = function () {
                                _this5.element && _this5.hide();
                            }),
                            $(this.element).closest(".modal").on("hide.bs.modal", this._hideModalHandler),
                            this.config.selector ? (this.config = _objectSpread2({}, this.config, { trigger: "manual", selector: "" })) : this._fixTitle();
                    }),
                    (_proto._fixTitle = function () {
                        var titleType = typeof this.element.getAttribute("data-original-title");
                        (this.element.getAttribute("title") || "string" !== titleType) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
                    }),
                    (_proto._enter = function (event, context) {
                        var dataKey = this.constructor.DATA_KEY;
                        (context = context || $(event.currentTarget).data(dataKey)) || ((context = new this.constructor(event.currentTarget, this._getDelegateConfig())), $(event.currentTarget).data(dataKey, context)),
                            event && (context._activeTrigger["focusin" === event.type ? Trigger_FOCUS : Trigger_HOVER] = !0),
                            $(context.getTipElement()).hasClass(ClassName$__SHOW$2) || context._hoverState === HoverState_SHOW
                                ? (context._hoverState = HoverState_SHOW)
                                : (clearTimeout(context._timeout),
                                  (context._hoverState = HoverState_SHOW),
                                  context.config.delay && context.config.delay.show
                                      ? (context._timeout = setTimeout(function () {
                                            context._hoverState === HoverState_SHOW && context.show();
                                        }, context.config.delay.show))
                                      : context.show());
                    }),
                    (_proto._leave = function (event, context) {
                        var dataKey = this.constructor.DATA_KEY;
                        (context = context || $(event.currentTarget).data(dataKey)) || ((context = new this.constructor(event.currentTarget, this._getDelegateConfig())), $(event.currentTarget).data(dataKey, context)),
                            event && (context._activeTrigger["focusout" === event.type ? Trigger_FOCUS : Trigger_HOVER] = !1),
                            context._isWithActiveTrigger() ||
                                (clearTimeout(context._timeout),
                                (context._hoverState = HoverState_OUT),
                                context.config.delay && context.config.delay.hide
                                    ? (context._timeout = setTimeout(function () {
                                          context._hoverState === HoverState_OUT && context.hide();
                                      }, context.config.delay.hide))
                                    : context.hide());
                    }),
                    (_proto._isWithActiveTrigger = function () {
                        for (var trigger in this._activeTrigger) if (this._activeTrigger[trigger]) return !0;
                        return !1;
                    }),
                    (_proto._getConfig = function (config) {
                        var dataAttributes = $(this.element).data();
                        return (
                            Object.keys(dataAttributes).forEach(function (dataAttr) {
                                -1 !== DISALLOWED_ATTRIBUTES.indexOf(dataAttr) && delete dataAttributes[dataAttr];
                            }),
                            "number" == typeof (config = _objectSpread2({}, this.constructor.Default, {}, dataAttributes, {}, "object" == typeof config && config ? config : {})).delay &&
                                (config.delay = { show: config.delay, hide: config.delay }),
                            "number" == typeof config.title && (config.title = config.title.toString()),
                            "number" == typeof config.content && (config.content = config.content.toString()),
                            Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType),
                            config.sanitize && (config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn)),
                            config
                        );
                    }),
                    (_proto._getDelegateConfig = function () {
                        var config = {};
                        if (this.config) for (var key in this.config) this.constructor.Default[key] !== this.config[key] && (config[key] = this.config[key]);
                        return config;
                    }),
                    (_proto._cleanTipClass = function () {
                        var $tip = $(this.getTipElement()),
                            tabClass = $tip.attr("class").match(BSCLS_PREFIX_REGEX);
                        null !== tabClass && tabClass.length && $tip.removeClass(tabClass.join(""));
                    }),
                    (_proto._handlePopperPlacementChange = function (popperData) {
                        var popperInstance = popperData.instance;
                        (this.tip = popperInstance.popper), this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(popperData.placement));
                    }),
                    (_proto._fixTransition = function () {
                        var tip = this.getTipElement(),
                            initConfigAnimation = this.config.animation;
                        null === tip.getAttribute("x-placement") && ($(tip).removeClass(ClassName$__FADE$0), (this.config.animation = !1), this.hide(), this.show(), (this.config.animation = initConfigAnimation));
                    }),
                    (Tooltip._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.tooltip"),
                                _config = "object" == typeof config && config;
                            if ((data || !/dispose|hide/.test(config)) && (data || ((data = new Tooltip(this, _config)), $(this).data("bs.tooltip", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    _createClass(Tooltip, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$4;
                            },
                        },
                        {
                            key: "NAME",
                            get: function () {
                                return NAME$6;
                            },
                        },
                        {
                            key: "DATA_KEY",
                            get: function () {
                                return "bs.tooltip";
                            },
                        },
                        {
                            key: "Event",
                            get: function () {
                                return Event$6;
                            },
                        },
                        {
                            key: "EVENT_KEY",
                            get: function () {
                                return ".bs.tooltip";
                            },
                        },
                        {
                            key: "DefaultType",
                            get: function () {
                                return DefaultType$4;
                            },
                        },
                    ]),
                    Tooltip
                );
            })();
        ($.fn.tooltip = Tooltip._jQueryInterface),
            ($.fn.tooltip.Constructor = Tooltip),
            ($.fn.tooltip.noConflict = function () {
                return ($.fn.tooltip = JQUERY_NO_CONFLICT$6), Tooltip._jQueryInterface;
            });
        var NAME$7 = "popover",
            JQUERY_NO_CONFLICT$7 = $.fn.popover,
            BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)bs-popover\\S+", "g"),
            Default$5 = _objectSpread2({}, Tooltip.Default, {
                placement: "right",
                trigger: "click",
                content: "",
                template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
            }),
            DefaultType$5 = _objectSpread2({}, Tooltip.DefaultType, { content: "(string|element|function)" }),
            ClassName$__FADE$1 = "fade",
            ClassName$__SHOW$3 = "show",
            Selector$__TITLE = ".popover-header",
            Selector$__CONTENT = ".popover-body",
            Event$7 = {
                HIDE: "hide.bs.popover",
                HIDDEN: "hidden.bs.popover",
                SHOW: "show.bs.popover",
                SHOWN: "shown.bs.popover",
                INSERTED: "inserted.bs.popover",
                CLICK: "click.bs.popover",
                FOCUSIN: "focusin.bs.popover",
                FOCUSOUT: "focusout.bs.popover",
                MOUSEENTER: "mouseenter.bs.popover",
                MOUSELEAVE: "mouseleave.bs.popover",
            },
            Popover = (function (_Tooltip) {
                var subClass, superClass;
                function Popover() {
                    return _Tooltip.apply(this, arguments) || this;
                }
                (superClass = _Tooltip), ((subClass = Popover).prototype = Object.create(superClass.prototype)), (subClass.prototype.constructor = subClass), (subClass.__proto__ = superClass);
                var _proto = Popover.prototype;
                return (
                    (_proto.isWithContent = function () {
                        return this.getTitle() || this._getContent();
                    }),
                    (_proto.addAttachmentClass = function (attachment) {
                        $(this.getTipElement()).addClass("bs-popover-" + attachment);
                    }),
                    (_proto.getTipElement = function () {
                        return (this.tip = this.tip || $(this.config.template)[0]), this.tip;
                    }),
                    (_proto.setContent = function () {
                        var $tip = $(this.getTipElement());
                        this.setElementContent($tip.find(Selector$__TITLE), this.getTitle());
                        var content = this._getContent();
                        "function" == typeof content && (content = content.call(this.element)), this.setElementContent($tip.find(Selector$__CONTENT), content), $tip.removeClass(ClassName$__FADE$1 + " " + ClassName$__SHOW$3);
                    }),
                    (_proto._getContent = function () {
                        return this.element.getAttribute("data-content") || this.config.content;
                    }),
                    (_proto._cleanTipClass = function () {
                        var $tip = $(this.getTipElement()),
                            tabClass = $tip.attr("class").match(BSCLS_PREFIX_REGEX$1);
                        null !== tabClass && tabClass.length > 0 && $tip.removeClass(tabClass.join(""));
                    }),
                    (Popover._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.popover"),
                                _config = "object" == typeof config ? config : null;
                            if ((data || !/dispose|hide/.test(config)) && (data || ((data = new Popover(this, _config)), $(this).data("bs.popover", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    _createClass(Popover, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$5;
                            },
                        },
                        {
                            key: "NAME",
                            get: function () {
                                return NAME$7;
                            },
                        },
                        {
                            key: "DATA_KEY",
                            get: function () {
                                return "bs.popover";
                            },
                        },
                        {
                            key: "Event",
                            get: function () {
                                return Event$7;
                            },
                        },
                        {
                            key: "EVENT_KEY",
                            get: function () {
                                return ".bs.popover";
                            },
                        },
                        {
                            key: "DefaultType",
                            get: function () {
                                return DefaultType$5;
                            },
                        },
                    ]),
                    Popover
                );
            })(Tooltip);
        ($.fn.popover = Popover._jQueryInterface),
            ($.fn.popover.Constructor = Popover),
            ($.fn.popover.noConflict = function () {
                return ($.fn.popover = JQUERY_NO_CONFLICT$7), Popover._jQueryInterface;
            });
        var NAME$8 = "scrollspy",
            JQUERY_NO_CONFLICT$8 = $.fn[NAME$8],
            Default$6 = { offset: 10, method: "auto", target: "" },
            DefaultType$6 = { offset: "number", method: "string", target: "(string|element)" },
            Event$8 = { ACTIVATE: "activate.bs.scrollspy", SCROLL: "scroll.bs.scrollspy", LOAD_DATA_API: "load.bs.scrollspy.data-api" },
            ClassName$__DROPDOWN_ITEM = "dropdown-item",
            ClassName$__ACTIVE$1 = "active",
            Selector$8 = {
                DATA_SPY: '[data-spy="scroll"]',
                ACTIVE: ".active",
                NAV_LIST_GROUP: ".nav, .list-group",
                NAV_LINKS: ".nav-link",
                NAV_ITEMS: ".nav-item",
                LIST_ITEMS: ".list-group-item",
                DROPDOWN: ".dropdown",
                DROPDOWN_ITEMS: ".dropdown-item",
                DROPDOWN_TOGGLE: ".dropdown-toggle",
            },
            OffsetMethod_OFFSET = "offset",
            OffsetMethod_POSITION = "position",
            ScrollSpy = (function () {
                function ScrollSpy(element, config) {
                    var _this = this;
                    (this._element = element),
                        (this._scrollElement = "BODY" === element.tagName ? window : element),
                        (this._config = this._getConfig(config)),
                        (this._selector = this._config.target + " " + Selector$8.NAV_LINKS + "," + this._config.target + " " + Selector$8.LIST_ITEMS + "," + this._config.target + " " + Selector$8.DROPDOWN_ITEMS),
                        (this._offsets = []),
                        (this._targets = []),
                        (this._activeTarget = null),
                        (this._scrollHeight = 0),
                        $(this._scrollElement).on(Event$8.SCROLL, function (event) {
                            return _this._process(event);
                        }),
                        this.refresh(),
                        this._process();
                }
                var _proto = ScrollSpy.prototype;
                return (
                    (_proto.refresh = function () {
                        var _this2 = this,
                            autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod_OFFSET : OffsetMethod_POSITION,
                            offsetMethod = "auto" === this._config.method ? autoMethod : this._config.method,
                            offsetBase = offsetMethod === OffsetMethod_POSITION ? this._getScrollTop() : 0;
                        (this._offsets = []),
                            (this._targets = []),
                            (this._scrollHeight = this._getScrollHeight()),
                            [].slice
                                .call(document.querySelectorAll(this._selector))
                                .map(function (element) {
                                    var target,
                                        targetSelector = Util.getSelectorFromElement(element);
                                    if ((targetSelector && (target = document.querySelector(targetSelector)), target)) {
                                        var targetBCR = target.getBoundingClientRect();
                                        if (targetBCR.width || targetBCR.height) return [$(target)[offsetMethod]().top + offsetBase, targetSelector];
                                    }
                                    return null;
                                })
                                .filter(function (item) {
                                    return item;
                                })
                                .sort(function (a, b) {
                                    return a[0] - b[0];
                                })
                                .forEach(function (item) {
                                    _this2._offsets.push(item[0]), _this2._targets.push(item[1]);
                                });
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.scrollspy"),
                            $(this._scrollElement).off(".bs.scrollspy"),
                            (this._element = null),
                            (this._scrollElement = null),
                            (this._config = null),
                            (this._selector = null),
                            (this._offsets = null),
                            (this._targets = null),
                            (this._activeTarget = null),
                            (this._scrollHeight = null);
                    }),
                    (_proto._getConfig = function (config) {
                        if ("string" != typeof (config = _objectSpread2({}, Default$6, {}, "object" == typeof config && config ? config : {})).target) {
                            var id = $(config.target).attr("id");
                            id || ((id = Util.getUID(NAME$8)), $(config.target).attr("id", id)), (config.target = "#" + id);
                        }
                        return Util.typeCheckConfig(NAME$8, config, DefaultType$6), config;
                    }),
                    (_proto._getScrollTop = function () {
                        return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
                    }),
                    (_proto._getScrollHeight = function () {
                        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
                    }),
                    (_proto._getOffsetHeight = function () {
                        return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
                    }),
                    (_proto._process = function () {
                        var scrollTop = this._getScrollTop() + this._config.offset,
                            scrollHeight = this._getScrollHeight(),
                            maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();
                        if ((this._scrollHeight !== scrollHeight && this.refresh(), scrollTop >= maxScroll)) {
                            var target = this._targets[this._targets.length - 1];
                            this._activeTarget !== target && this._activate(target);
                        } else {
                            if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) return (this._activeTarget = null), void this._clear();
                            for (var i = this._offsets.length; i--; ) {
                                this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (void 0 === this._offsets[i + 1] || scrollTop < this._offsets[i + 1]) && this._activate(this._targets[i]);
                            }
                        }
                    }),
                    (_proto._activate = function (target) {
                        (this._activeTarget = target), this._clear();
                        var queries = this._selector.split(",").map(function (selector) {
                                return selector + '[data-target="' + target + '"],' + selector + '[href="' + target + '"]';
                            }),
                            $link = $([].slice.call(document.querySelectorAll(queries.join(","))));
                        $link.hasClass(ClassName$__DROPDOWN_ITEM)
                            ? ($link.closest(Selector$8.DROPDOWN).find(Selector$8.DROPDOWN_TOGGLE).addClass(ClassName$__ACTIVE$1), $link.addClass(ClassName$__ACTIVE$1))
                            : ($link.addClass(ClassName$__ACTIVE$1),
                              $link
                                  .parents(Selector$8.NAV_LIST_GROUP)
                                  .prev(Selector$8.NAV_LINKS + ", " + Selector$8.LIST_ITEMS)
                                  .addClass(ClassName$__ACTIVE$1),
                              $link.parents(Selector$8.NAV_LIST_GROUP).prev(Selector$8.NAV_ITEMS).children(Selector$8.NAV_LINKS).addClass(ClassName$__ACTIVE$1)),
                            $(this._scrollElement).trigger(Event$8.ACTIVATE, { relatedTarget: target });
                    }),
                    (_proto._clear = function () {
                        [].slice
                            .call(document.querySelectorAll(this._selector))
                            .filter(function (node) {
                                return node.classList.contains(ClassName$__ACTIVE$1);
                            })
                            .forEach(function (node) {
                                return node.classList.remove(ClassName$__ACTIVE$1);
                            });
                    }),
                    (ScrollSpy._jQueryInterface = function (config) {
                        return this.each(function () {
                            var data = $(this).data("bs.scrollspy");
                            if ((data || ((data = new ScrollSpy(this, "object" == typeof config && config)), $(this).data("bs.scrollspy", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    _createClass(ScrollSpy, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$6;
                            },
                        },
                    ]),
                    ScrollSpy
                );
            })();
        $(window).on(Event$8.LOAD_DATA_API, function () {
            for (var scrollSpys = [].slice.call(document.querySelectorAll(Selector$8.DATA_SPY)), i = scrollSpys.length; i--; ) {
                var $spy = $(scrollSpys[i]);
                ScrollSpy._jQueryInterface.call($spy, $spy.data());
            }
        }),
            ($.fn[NAME$8] = ScrollSpy._jQueryInterface),
            ($.fn[NAME$8].Constructor = ScrollSpy),
            ($.fn[NAME$8].noConflict = function () {
                return ($.fn[NAME$8] = JQUERY_NO_CONFLICT$8), ScrollSpy._jQueryInterface;
            });
        var JQUERY_NO_CONFLICT$9 = $.fn.tab,
            Event$9 = { HIDE: "hide.bs.tab", HIDDEN: "hidden.bs.tab", SHOW: "show.bs.tab", SHOWN: "shown.bs.tab", CLICK_DATA_API: "click.bs.tab.data-api" },
            ClassName$__DROPDOWN_MENU$0 = "dropdown-menu",
            ClassName$__ACTIVE$2 = "active",
            ClassName$__DISABLED$0 = "disabled",
            ClassName$__FADE$2 = "fade",
            ClassName$__SHOW$4 = "show",
            Selector$__DROPDOWN = ".dropdown",
            Selector$__NAV_LIST_GROUP = ".nav, .list-group",
            Selector$__ACTIVE$0 = ".active",
            Selector$__ACTIVE_UL = "> li > .active",
            Selector$__DATA_TOGGLE$1 = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
            Selector$__DROPDOWN_TOGGLE = ".dropdown-toggle",
            Selector$__DROPDOWN_ACTIVE_CHILD = "> .dropdown-menu .active",
            Tab = (function () {
                function Tab(element) {
                    this._element = element;
                }
                var _proto = Tab.prototype;
                return (
                    (_proto.show = function () {
                        var _this = this;
                        if (!((this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName$__ACTIVE$2)) || $(this._element).hasClass(ClassName$__DISABLED$0))) {
                            var target,
                                previous,
                                listElement = $(this._element).closest(Selector$__NAV_LIST_GROUP)[0],
                                selector = Util.getSelectorFromElement(this._element);
                            if (listElement) {
                                var itemSelector = "UL" === listElement.nodeName || "OL" === listElement.nodeName ? Selector$__ACTIVE_UL : Selector$__ACTIVE$0;
                                previous = (previous = $.makeArray($(listElement).find(itemSelector)))[previous.length - 1];
                            }
                            var hideEvent = $.Event(Event$9.HIDE, { relatedTarget: this._element }),
                                showEvent = $.Event(Event$9.SHOW, { relatedTarget: previous });
                            if ((previous && $(previous).trigger(hideEvent), $(this._element).trigger(showEvent), !showEvent.isDefaultPrevented() && !hideEvent.isDefaultPrevented())) {
                                selector && (target = document.querySelector(selector)), this._activate(this._element, listElement);
                                var complete = function () {
                                    var hiddenEvent = $.Event(Event$9.HIDDEN, { relatedTarget: _this._element }),
                                        shownEvent = $.Event(Event$9.SHOWN, { relatedTarget: previous });
                                    $(previous).trigger(hiddenEvent), $(_this._element).trigger(shownEvent);
                                };
                                target ? this._activate(target, target.parentNode, complete) : complete();
                            }
                        }
                    }),
                    (_proto.dispose = function () {
                        $.removeData(this._element, "bs.tab"), (this._element = null);
                    }),
                    (_proto._activate = function (element, container, callback) {
                        var _this2 = this,
                            active = (!container || ("UL" !== container.nodeName && "OL" !== container.nodeName) ? $(container).children(Selector$__ACTIVE$0) : $(container).find(Selector$__ACTIVE_UL))[0],
                            isTransitioning = callback && active && $(active).hasClass(ClassName$__FADE$2),
                            complete = function () {
                                return _this2._transitionComplete(element, active, callback);
                            };
                        if (active && isTransitioning) {
                            var transitionDuration = Util.getTransitionDurationFromElement(active);
                            $(active).removeClass(ClassName$__SHOW$4).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
                        } else complete();
                    }),
                    (_proto._transitionComplete = function (element, active, callback) {
                        if (active) {
                            $(active).removeClass(ClassName$__ACTIVE$2);
                            var dropdownChild = $(active.parentNode).find(Selector$__DROPDOWN_ACTIVE_CHILD)[0];
                            dropdownChild && $(dropdownChild).removeClass(ClassName$__ACTIVE$2), "tab" === active.getAttribute("role") && active.setAttribute("aria-selected", !1);
                        }
                        if (
                            ($(element).addClass(ClassName$__ACTIVE$2),
                            "tab" === element.getAttribute("role") && element.setAttribute("aria-selected", !0),
                            Util.reflow(element),
                            element.classList.contains(ClassName$__FADE$2) && element.classList.add(ClassName$__SHOW$4),
                            element.parentNode && $(element.parentNode).hasClass(ClassName$__DROPDOWN_MENU$0))
                        ) {
                            var dropdownElement = $(element).closest(Selector$__DROPDOWN)[0];
                            if (dropdownElement) {
                                var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector$__DROPDOWN_TOGGLE));
                                $(dropdownToggleList).addClass(ClassName$__ACTIVE$2);
                            }
                            element.setAttribute("aria-expanded", !0);
                        }
                        callback && callback();
                    }),
                    (Tab._jQueryInterface = function (config) {
                        return this.each(function () {
                            var $this = $(this),
                                data = $this.data("bs.tab");
                            if ((data || ((data = new Tab(this)), $this.data("bs.tab", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config]();
                            }
                        });
                    }),
                    _createClass(Tab, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                    ]),
                    Tab
                );
            })();
        $(document).on(Event$9.CLICK_DATA_API, Selector$__DATA_TOGGLE$1, function (event) {
            event.preventDefault(), Tab._jQueryInterface.call($(this), "show");
        }),
            ($.fn.tab = Tab._jQueryInterface),
            ($.fn.tab.Constructor = Tab),
            ($.fn.tab.noConflict = function () {
                return ($.fn.tab = JQUERY_NO_CONFLICT$9), Tab._jQueryInterface;
            });
        var JQUERY_NO_CONFLICT$a = $.fn.toast,
            Event$a = { CLICK_DISMISS: "click.dismiss.bs.toast", HIDE: "hide.bs.toast", HIDDEN: "hidden.bs.toast", SHOW: "show.bs.toast", SHOWN: "shown.bs.toast" },
            ClassName$a_FADE = "fade",
            ClassName$a_HIDE = "hide",
            ClassName$a_SHOW = "show",
            ClassName$a_SHOWING = "showing",
            DefaultType$7 = { animation: "boolean", autohide: "boolean", delay: "number" },
            Default$7 = { animation: !0, autohide: !0, delay: 500 },
            Selector$a_DATA_DISMISS = '[data-dismiss="toast"]',
            Toast = (function () {
                function Toast(element, config) {
                    (this._element = element), (this._config = this._getConfig(config)), (this._timeout = null), this._setListeners();
                }
                var _proto = Toast.prototype;
                return (
                    (_proto.show = function () {
                        var _this = this,
                            showEvent = $.Event(Event$a.SHOW);
                        if (($(this._element).trigger(showEvent), !showEvent.isDefaultPrevented())) {
                            this._config.animation && this._element.classList.add(ClassName$a_FADE);
                            var complete = function () {
                                _this._element.classList.remove(ClassName$a_SHOWING),
                                    _this._element.classList.add(ClassName$a_SHOW),
                                    $(_this._element).trigger(Event$a.SHOWN),
                                    _this._config.autohide &&
                                        (_this._timeout = setTimeout(function () {
                                            _this.hide();
                                        }, _this._config.delay));
                            };
                            if ((this._element.classList.remove(ClassName$a_HIDE), Util.reflow(this._element), this._element.classList.add(ClassName$a_SHOWING), this._config.animation)) {
                                var transitionDuration = Util.getTransitionDurationFromElement(this._element);
                                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
                            } else complete();
                        }
                    }),
                    (_proto.hide = function () {
                        if (this._element.classList.contains(ClassName$a_SHOW)) {
                            var hideEvent = $.Event(Event$a.HIDE);
                            $(this._element).trigger(hideEvent), hideEvent.isDefaultPrevented() || this._close();
                        }
                    }),
                    (_proto.dispose = function () {
                        clearTimeout(this._timeout),
                            (this._timeout = null),
                            this._element.classList.contains(ClassName$a_SHOW) && this._element.classList.remove(ClassName$a_SHOW),
                            $(this._element).off(Event$a.CLICK_DISMISS),
                            $.removeData(this._element, "bs.toast"),
                            (this._element = null),
                            (this._config = null);
                    }),
                    (_proto._getConfig = function (config) {
                        return (config = _objectSpread2({}, Default$7, {}, $(this._element).data(), {}, "object" == typeof config && config ? config : {})), Util.typeCheckConfig("toast", config, this.constructor.DefaultType), config;
                    }),
                    (_proto._setListeners = function () {
                        var _this2 = this;
                        $(this._element).on(Event$a.CLICK_DISMISS, Selector$a_DATA_DISMISS, function () {
                            return _this2.hide();
                        });
                    }),
                    (_proto._close = function () {
                        var _this3 = this,
                            complete = function () {
                                _this3._element.classList.add(ClassName$a_HIDE), $(_this3._element).trigger(Event$a.HIDDEN);
                            };
                        if ((this._element.classList.remove(ClassName$a_SHOW), this._config.animation)) {
                            var transitionDuration = Util.getTransitionDurationFromElement(this._element);
                            $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
                        } else complete();
                    }),
                    (Toast._jQueryInterface = function (config) {
                        return this.each(function () {
                            var $element = $(this),
                                data = $element.data("bs.toast");
                            if ((data || ((data = new Toast(this, "object" == typeof config && config)), $element.data("bs.toast", data)), "string" == typeof config)) {
                                if (void 0 === data[config]) throw new TypeError('No method named "' + config + '"');
                                data[config](this);
                            }
                        });
                    }),
                    _createClass(Toast, null, [
                        {
                            key: "VERSION",
                            get: function () {
                                return "4.4.1";
                            },
                        },
                        {
                            key: "DefaultType",
                            get: function () {
                                return DefaultType$7;
                            },
                        },
                        {
                            key: "Default",
                            get: function () {
                                return Default$7;
                            },
                        },
                    ]),
                    Toast
                );
            })();
        ($.fn.toast = Toast._jQueryInterface),
            ($.fn.toast.Constructor = Toast),
            ($.fn.toast.noConflict = function () {
                return ($.fn.toast = JQUERY_NO_CONFLICT$a), Toast._jQueryInterface;
            }),
            (exports.Alert = Alert),
            (exports.Button = Button),
            (exports.Carousel = Carousel),
            (exports.Collapse = Collapse),
            (exports.Dropdown = Dropdown),
            (exports.Modal = Modal),
            (exports.Popover = Popover),
            (exports.Scrollspy = ScrollSpy),
            (exports.Tab = Tab),
            (exports.Toast = Toast),
            (exports.Tooltip = Tooltip),
            (exports.Util = Util),
            Object.defineProperty(exports, "__esModule", { value: !0 });
    });
//# sourceMappingURL=core.min.js.map
